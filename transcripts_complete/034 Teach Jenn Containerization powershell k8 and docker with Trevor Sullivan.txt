Just little value ads. Yay. And hello, hello beautiful humans. Thank you for joining another episode of Teach Gen Tech. I am excited and nervous about today's episode, because I feel like this is something that we all are supposed to know yet is hard to conceptualize So yay, Trevor, for joining us today, please introduce yourself and what you'll be teaching us today. Well, hello, Jen. Thanks for having me on your show. Great job on it. By the way, it looks very professional. I like what you're doing, learning lots of new technology
So yay, Trevor, for joining us today, please introduce yourself and what you'll be teaching us today. Well, hello, Jen. Thanks for having me on your show. Great job on it. By the way, it looks very professional. I like what you're doing, learning lots of new technology Very awesome thing to be doing. But my name is Trevor Sullivan. I've been in the software industry for about 18 and a half years at this point, and held a variety of different roles done consulting, then internal IT
Very awesome thing to be doing. But my name is Trevor Sullivan. I've been in the software industry for about 18 and a half years at this point, and held a variety of different roles done consulting, then internal IT But for the last couple of years, about 2 and a half years now I've been working for a company called CBT Nuggets. We create software training. We also create IT infrastructure training
But for the last couple of years, about 2 and a half years now I've been working for a company called CBT Nuggets. We create software training. We also create IT infrastructure training I myself have taught on a range of topics from AWS to PowerShell to Kubernetes certification training to MySQL database training, GitHub actions automation training, and a whole bunch of fun stuff like that
I myself have taught on a range of topics from AWS to PowerShell to Kubernetes certification training to MySQL database training, GitHub actions automation training, and a whole bunch of fun stuff like that So I'm really passionate about just helping people leverage technology, learning new technologies myself that's part of the fun of it. And yeah, that's kind of what I do. Curiosity, what was the first piece of tech that you learned? That's a good question
So I'm really passionate about just helping people leverage technology, learning new technologies myself that's part of the fun of it. And yeah, that's kind of what I do. Curiosity, what was the first piece of tech that you learned? That's a good question Well, I mean, back in my earliest IT days, back in early 2004, I remember one of the earliest things that I was working with was this program called the Norton Ghost. And anybody who's any old timers are going to laugh at me for using that software or mentioning that name
Well, I mean, back in my earliest IT days, back in early 2004, I remember one of the earliest things that I was working with was this program called the Norton Ghost. And anybody who's any old timers are going to laugh at me for using that software or mentioning that name But Norton Ghost was the imaging product that we used to make replicas of hard drives to replicate desktop computers. So we'd basically make kind of a master image and then copy that to other computers. And that's how we would roll out desktop and laptop systems. Interesting
But Norton Ghost was the imaging product that we used to make replicas of hard drives to replicate desktop computers. So we'd basically make kind of a master image and then copy that to other computers. And that's how we would roll out desktop and laptop systems. Interesting Interesting. I never knew that existed. It's funny to even talk about it. What up, Anthony? OK, interesting. And I know like today we're going more of the like, when do you use Kubernetes and when do you use Docker? And then the cool things PowerShell can do with Kubernetes
Interesting. I never knew that existed. It's funny to even talk about it. What up, Anthony? OK, interesting. And I know like today we're going more of the like, when do you use Kubernetes and when do you use Docker? And then the cool things PowerShell can do with Kubernetes But when did you start working with these products? Let's see, Kubernetes is relatively new to me. I mean, it's been around since I want to say 2014 or 2015, at least in its very early stages when it was still initially a Google project
But when did you start working with these products? Let's see, Kubernetes is relatively new to me. I mean, it's been around since I want to say 2014 or 2015, at least in its very early stages when it was still initially a Google project But I've only been using Kubernetes for probably less than a year at this point. So it's still pretty new to me. But PowerShell I've actually been writing almost since it came out, probably like three to six months after it came out in 2006. I've been writing PowerShell. OK. And hi, Helmi
But I've only been using Kubernetes for probably less than a year at this point. So it's still pretty new to me. But PowerShell I've actually been writing almost since it came out, probably like three to six months after it came out in 2006. I've been writing PowerShell. OK. And hi, Helmi OK. And hi, Helmi. And Anthony was one of the first people on the show and has been a part of this journey. And he said he has a hunch that I'm not going to need to be using Kubernetes any time soon. Docker though is something I'm going to use consistently
OK. And hi, Helmi. And Anthony was one of the first people on the show and has been a part of this journey. And he said he has a hunch that I'm not going to need to be using Kubernetes any time soon. Docker though is something I'm going to use consistently Well, you lead me to my next great question. I feel like it's a great question. What are they? Because I've installed Docker once. And I didn't know what I was doing with it. And I know that I have a used to have like a ton of Docker shirts because a family member used to work there at one point
Well, you lead me to my next great question. I feel like it's a great question. What are they? Because I've installed Docker once. And I didn't know what I was doing with it. And I know that I have a used to have like a ton of Docker shirts because a family member used to work there at one point So this was before I knew what it was. I'm kind of sad because I gave all those shirts away. And I'm like, it's so cool now. But that is, I don't know what they are. Like I know what they are, but I don't know what they are
So this was before I knew what it was. I'm kind of sad because I gave all those shirts away. And I'm like, it's so cool now. But that is, I don't know what they are. Like I know what they are, but I don't know what they are You gave them away? Well, it was in 20, yeah, all the shirts I gave them away in 2017, probably, because I didn't know what Docker was. It was just a cool ship hit like whale thing. That's all I knew of what Docker was
You gave them away? Well, it was in 20, yeah, all the shirts I gave them away in 2017, probably, because I didn't know what Docker was. It was just a cool ship hit like whale thing. That's all I knew of what Docker was With a bunch of containers on its back, you know, what does it have to do with technology? It's all about logistics. That's kind of what I thought. And so containers, before we go through Docker and Kubernetes, what's a container? So I'm probably going to do a terrible job explaining this
With a bunch of containers on its back, you know, what does it have to do with technology? It's all about logistics. That's kind of what I thought. And so containers, before we go through Docker and Kubernetes, what's a container? So I'm probably going to do a terrible job explaining this But the way that I would describe a container is basically a lot. It's a level of isolation. So I like to kind of equate it to a virtual machine, but it's not a separate virtual machine where you have like a virtualized CPU and virtualized memory, virtualized disk, virtualized networking
But the way that I would describe a container is basically a lot. It's a level of isolation. So I like to kind of equate it to a virtual machine, but it's not a separate virtual machine where you have like a virtualized CPU and virtualized memory, virtualized disk, virtualized networking But it does have its own level of isolation. It's just isolating at the process later. So on your Mac OS system, which I believe you're on a MacBook and you run Google Chrome, you run Firefox, you run I term 2, you run different applications on your computer
But it does have its own level of isolation. It's just isolating at the process later. So on your Mac OS system, which I believe you're on a MacBook and you run Google Chrome, you run Firefox, you run I term 2, you run different applications on your computer Well, each of those is a separate process, or in some cases multiple processes. If you look at activity monitor on your Mac, you'll actually see a bunch of different Chrome processes in there, probably for each tab that you have open
Well, each of those is a separate process, or in some cases multiple processes. If you look at activity monitor on your Mac, you'll actually see a bunch of different Chrome processes in there, probably for each tab that you have open And so Docker kind of allows you to isolate programs at the process level rather than at the hardware level, like virtual machines do
And so Docker kind of allows you to isolate programs at the process level rather than at the hardware level, like virtual machines do And so containers use a few different underlying Linux kernel technologies, like what's known as namespaces, Linux namespaces, as well as C groups to control access to the underlying hardware resources
And so containers use a few different underlying Linux kernel technologies, like what's known as namespaces, Linux namespaces, as well as C groups to control access to the underlying hardware resources So what that does is it allows you to kind of isolate a process and say, you're only allowed to use X amount of system resources. And if you try to exceed that, then we're going to basically kill you off
So what that does is it allows you to kind of isolate a process and say, you're only allowed to use X amount of system resources. And if you try to exceed that, then we're going to basically kill you off And you can restart if you want to, but you're not going to be able to exceed this particular limit. And so that can prevent contention for system resources and kind of do fair sharing of resources across a single system, or in the case of Kubernetes, across an entire cluster of resources
And you can restart if you want to, but you're not going to be able to exceed this particular limit. And so that can prevent contention for system resources and kind of do fair sharing of resources across a single system, or in the case of Kubernetes, across an entire cluster of resources So a container is kind of a way to isolate a process and kind of box it into its own little segment of the system and prevent it from kind of stepping on the toes of other processes
So a container is kind of a way to isolate a process and kind of box it into its own little segment of the system and prevent it from kind of stepping on the toes of other processes And that actually works at the file system level too, which is really powerful, because what it lets you do is if you've ever tried to do, you mentioned TypeScript programming, or if you ever tried to install Python or any other runtimes, then you can actually run into a lot of issues when you try to install multiple versions of runtimes
And that actually works at the file system level too, which is really powerful, because what it lets you do is if you've ever tried to do, you mentioned TypeScript programming, or if you ever tried to install Python or any other runtimes, then you can actually run into a lot of issues when you try to install multiple versions of runtimes So if you try to install Python 3.9 and Python 3.10 and Python 3.6 and Python 2.7 all at the same time, then these different versions of different Python runtimes can actually step on each other's toes
So if you try to install Python 3.9 and Python 3.10 and Python 3.6 and Python 2.7 all at the same time, then these different versions of different Python runtimes can actually step on each other's toes But when you use something like Docker or containers, I should say, to isolate the file system, then these different versions of a Python runtime or a PowerShell runtime or a Ruby runtime, they can't step on each other's toes
But when you use something like Docker or containers, I should say, to isolate the file system, then these different versions of a Python runtime or a PowerShell runtime or a Ruby runtime, they can't step on each other's toes And so you don't have that in the Windows world, we always call it DLL hell, where you have different versions of libraries that are kind of mismatched with each other. And this version of Python depends on this version and this version of Python depends on this different version
And so you don't have that in the Windows world, we always call it DLL hell, where you have different versions of libraries that are kind of mismatched with each other. And this version of Python depends on this version and this version of Python depends on this different version And so it really avoids that dependency hell. So yeah, I just went through that on Monday. Oh, with which runtime? I'm thinking about it. Thinking about it. Was it? No, actually, I think it was the Anthony was one wasn't. We were doing a lot. I think it might have even been for node
And so it really avoids that dependency hell. So yeah, I just went through that on Monday. Oh, with which runtime? I'm thinking about it. Thinking about it. Was it? No, actually, I think it was the Anthony was one wasn't. We were doing a lot. I think it might have even been for node I think it was node so I could do the GitHub CLI. Gotcha. And yeah, so node 18 is the newest, but what I was trying to clone and use was on 18 or 16.bla-bla-bla. So it didn't let me do it. And then I tried to re-installing the lower version and it wouldn't let me do it because it had 18 on there
I think it was node so I could do the GitHub CLI. Gotcha. And yeah, so node 18 is the newest, but what I was trying to clone and use was on 18 or 16.bla-bla-bla. So it didn't let me do it. And then I tried to re-installing the lower version and it wouldn't let me do it because it had 18 on there And I was going to get my Mac back soon and it's having its own issues. So if I do randomly disappear, while you were talking, my Mac just shut down all of my screens and then turn them back on. So I'm hoping for the best on this stream. I can still see you. Yes, OK
And I was going to get my Mac back soon and it's having its own issues. So if I do randomly disappear, while you were talking, my Mac just shut down all of my screens and then turn them back on. So I'm hoping for the best on this stream. I can still see you. Yes, OK Yes, OK. And then Anthony just said GitHub CLI is done through HomeBrew probably. Oh, it was node for open sauce, not for GitHub CLI. OK, cool. See, this is why. node for open what? Open sauce, it's an open source repo that be Dougie started. It's actually really cool
Yes, OK. And then Anthony just said GitHub CLI is done through HomeBrew probably. Oh, it was node for open sauce, not for GitHub CLI. OK, cool. See, this is why. node for open what? Open sauce, it's an open source repo that be Dougie started. It's actually really cool I will put it here in the chat here shortly. Do you want me to know if it's a second? It's pretty cool because it's one of the first ones. As I'm learning to use GitHub more, you've talked about GitHub actions. And I'm really excited to hear about that later on
I will put it here in the chat here shortly. Do you want me to know if it's a second? It's pretty cool because it's one of the first ones. As I'm learning to use GitHub more, you've talked about GitHub actions. And I'm really excited to hear about that later on I've learned a little bit about it, but we were talking with open sauce on Monday because of hacktoberfest and contributing to open source. So now, if I was hearing you correctly with the explanation of a container, I like how you mentioned it's different than a virtual machine
I've learned a little bit about it, but we were talking with open sauce on Monday because of hacktoberfest and contributing to open source. So now, if I was hearing you correctly with the explanation of a container, I like how you mentioned it's different than a virtual machine And then if I heard right, the container has a specific size limit? Yeah, you can limit resources like CPU and memory so that it can't chew up all the CPUs on your system and break everything else, basically. Yeah. OK
And then if I heard right, the container has a specific size limit? Yeah, you can limit resources like CPU and memory so that it can't chew up all the CPUs on your system and break everything else, basically. Yeah. OK Yeah. OK. And that's a feature in the Linux kernel called C Groups, I believe, or is it ULIMITS? I can't remember. I think it's C Groups. Yeah, C Groups allow you to allocate resources such as CPU time, system memory, network bandwidth, or combinations of these resources
Yeah. OK. And that's a feature in the Linux kernel called C Groups, I believe, or is it ULIMITS? I can't remember. I think it's C Groups. Yeah, C Groups allow you to allocate resources such as CPU time, system memory, network bandwidth, or combinations of these resources So yeah, that's like a Linux kernel feature that's been implemented by container runtimes like Docker or container D. Are there more than just Docker and Kubernetes? Those are the only ones I've really heard of. Yeah, there are actually other tools out there. So there's container D
So yeah, that's like a Linux kernel feature that's been implemented by container runtimes like Docker or container D. Are there more than just Docker and Kubernetes? Those are the only ones I've really heard of. Yeah, there are actually other tools out there. So there's container D Container D is a runtime. And Kubernetes actually shifted from using Docker under the covers to actually create and destroy containers to using container D relatively recently. They made that switch, I believe, and 1. Can't remember if it was 1.24
Container D is a runtime. And Kubernetes actually shifted from using Docker under the covers to actually create and destroy containers to using container D relatively recently. They made that switch, I believe, and 1. Can't remember if it was 1.2424. But yeah, they switched over to using container D instead of Docker now. I guess probably due to licensing reasons or something like that. But then there's also podman. Podman is another container tool that you can install
24. But yeah, they switched over to using container D instead of Docker now. I guess probably due to licensing reasons or something like that. But then there's also podman. Podman is another container tool that you can install There's a CLI tool that you can install to spin up containers on your local machine. But I don't think podman really has any clustering capabilities, like what Kubernetes or Docker swarm do. Gotcha. I'm also googling over here. And I just saw Anthony's comment
There's a CLI tool that you can install to spin up containers on your local machine. But I don't think podman really has any clustering capabilities, like what Kubernetes or Docker swarm do. Gotcha. I'm also googling over here. And I just saw Anthony's comment These used to be a full on industry wide war over Kubernetes versus alternatives. And Kubernetes richly slaughtered all the competition. OK. OK. Very true. In fact, I remember attending Dr. Khan, where I met your family member, back in, I think, 2016
These used to be a full on industry wide war over Kubernetes versus alternatives. And Kubernetes richly slaughtered all the competition. OK. OK. Very true. In fact, I remember attending Dr. Khan, where I met your family member, back in, I think, 2016 And there was a pretty big war going on between a patchy mesosphere, I think, was another project. And then there were some other orchestrators out there. I can't even remember what they were called. But yeah, that does ring a bell. There was a little competition. Interesting. OK. So
And there was a pretty big war going on between a patchy mesosphere, I think, was another project. And then there were some other orchestrators out there. I can't even remember what they were called. But yeah, that does ring a bell. There was a little competition. Interesting. OK. So OK. So. You don't have to be about them anymore. Yeah. And I containers like Docker is what I just Googled. And it is coming up with quite a few other ones, as well as like, is Kubernetes the same as Docker? And it is definitely supported what you were just saying
OK. So. You don't have to be about them anymore. Yeah. And I containers like Docker is what I just Googled. And it is coming up with quite a few other ones, as well as like, is Kubernetes the same as Docker? And it is definitely supported what you were just saying Like a Kubernetes or Docker is like a single container. And Kubernetes is a system for operating containerized applications at scale. That the words make sense. And I take that as like Docker is like, I was actually showing. My friend is not technical whatsoever
Like a Kubernetes or Docker is like a single container. And Kubernetes is a system for operating containerized applications at scale. That the words make sense. And I take that as like Docker is like, I was actually showing. My friend is not technical whatsoever So I'm trying to like show her what I'm talking about today. And this was my explanation. I'm going to use it with pens. Pents. They're fun. So this is like Docker
So I'm trying to like show her what I'm talking about today. And this was my explanation. I'm going to use it with pens. Pents. They're fun. So this is like Docker And you can have like separate containers at Docker, but they're all none of them are going to go together where Kubernetes is like, they're all together. And if I remember right, if one fails, one of the other containers will help it
And you can have like separate containers at Docker, but they're all none of them are going to go together where Kubernetes is like, they're all together. And if I remember right, if one fails, one of the other containers will help it Is that accurate? You can load balance network traffic across containers, for sure, in Kubernetes. That's actually a big value of Kubernetes is that's load balancing capabilities. So yeah, if one pod fails, then another application pod can kind of take over and serve requests for that application
Is that accurate? You can load balance network traffic across containers, for sure, in Kubernetes. That's actually a big value of Kubernetes is that's load balancing capabilities. So yeah, if one pod fails, then another application pod can kind of take over and serve requests for that application We generally refer to that as high availability. So rather than just having a single instance of an application that could fail and cause an outage for all of the users of that application, we could have 10 instances of that application
We generally refer to that as high availability. So rather than just having a single instance of an application that could fail and cause an outage for all of the users of that application, we could have 10 instances of that application And then when a user tries to hit that application, they get routed to one of those 10 instances of the application. And we refer to that as kind of load balancing traffic across multiple instances of the app. So that could be a database server that you're doing load balancing across
And then when a user tries to hit that application, they get routed to one of those 10 instances of the application. And we refer to that as kind of load balancing traffic across multiple instances of the app. So that could be a database server that you're doing load balancing across You could have a client application that's hitting different instances of a database server. If you have replicas of a database, you could also have it be a web application. So if you have a web application, maybe you have three or four containers running that same exact code
You could have a client application that's hitting different instances of a database server. If you have replicas of a database, you could also have it be a web application. So if you have a web application, maybe you have three or four containers running that same exact code And then when a user tries to go to teachgentech.com, they hit maybe container number one. And then another user comes in and they hit container number four. And then another user comes in, they hit container number two
And then when a user tries to go to teachgentech.com, they hit maybe container number one. And then another user comes in and they hit container number four. And then another user comes in, they hit container number two So yeah, load balancing and high availability is a big value of using Kubernetes, for sure. And OK, that's starting to make a lot of sense. And I liked what Anthony added in. Like Kubernetes is like a bunch of Docker containers speaking to each other
So yeah, load balancing and high availability is a big value of using Kubernetes, for sure. And OK, that's starting to make a lot of sense. And I liked what Anthony added in. Like Kubernetes is like a bunch of Docker containers speaking to each other And so I guess that really does lead to the next question of what would you use a Docker container for and what would you use Kubernetes for? I think that's the other piece. Learning what they do, but having a real life example of what they do
And so I guess that really does lead to the next question of what would you use a Docker container for and what would you use Kubernetes for? I think that's the other piece. Learning what they do, but having a real life example of what they do So in the real world, Docker, generally speaking, I would say is used more as a local development tool
So in the real world, Docker, generally speaking, I would say is used more as a local development tool So if you do want to install Docker on your Macbook or if I want to install Docker on my Windows machine or maybe install it on the Linux host somewhere, I can use the Docker CLI to manage containers on each of those systems individually
So if you do want to install Docker on your Macbook or if I want to install Docker on my Windows machine or maybe install it on the Linux host somewhere, I can use the Docker CLI to manage containers on each of those systems individually Now Docker does have a clustering mode where I can create a cluster of Linux virtual machines and join them all together into what's known as a swarm cluster, which has a little bit of overlap with Kubernetes. But when it comes to clustering capabilities, Kubernetes is much more powerful
Now Docker does have a clustering mode where I can create a cluster of Linux virtual machines and join them all together into what's known as a swarm cluster, which has a little bit of overlap with Kubernetes. But when it comes to clustering capabilities, Kubernetes is much more powerful I would say then Docker swarm. If your needs are very basic for clustering, then the Docker swarm cluster might be enough. But Kubernetes is really where the industry is headed for kind of large-scale container management
I would say then Docker swarm. If your needs are very basic for clustering, then the Docker swarm cluster might be enough. But Kubernetes is really where the industry is headed for kind of large-scale container management So the reason that you would use Kubernetes is if you're deploying production grade applications that you need to deploy in the cloud and have shared access to
So the reason that you would use Kubernetes is if you're deploying production grade applications that you need to deploy in the cloud and have shared access to So Kubernetes has shared a permissions model called role-based access control that allows multiple users to have permission to manage different resources. Kubernetes also has this logical concept called a name space. It's not the same as a kernel name space
So Kubernetes has shared a permissions model called role-based access control that allows multiple users to have permission to manage different resources. Kubernetes also has this logical concept called a name space. It's not the same as a kernel name space So there's some ambiguity that you kind of have to get familiar with. So there's Linux kernel name spaces, which is a feature that containers use. But then Kubernetes itself has this concept called a name space, which is also a term used in software development
So there's some ambiguity that you kind of have to get familiar with. So there's Linux kernel name spaces, which is a feature that containers use. But then Kubernetes itself has this concept called a name space, which is also a term used in software development But it basically just allows you to carve out a piece of the cluster and say, OK, you, Jen, have access to this name space. Trevor, you have access to this name space over here
But it basically just allows you to carve out a piece of the cluster and say, OK, you, Jen, have access to this name space. Trevor, you have access to this name space over here And any resources that I create in Kubernetes in each of those name spaces is going to be permissioned based on who has access to each of those name spaces. So that's a capability that exists in Kubernetes, but does not exist in Docker swarm
And any resources that I create in Kubernetes in each of those name spaces is going to be permissioned based on who has access to each of those name spaces. So that's a capability that exists in Kubernetes, but does not exist in Docker swarm So that kind of is why I'm suggesting that Kubernetes is more used for production grade deployments, whereas Docker is used generally speaking more for localized one-off containerizations
So that kind of is why I'm suggesting that Kubernetes is more used for production grade deployments, whereas Docker is used generally speaking more for localized one-off containerizations Anthony said he doesn't know if he should run Docker containers in prod all the time now, because so many services have been made really easy. I mean, you certainly can use Docker in production. There's nothing preventing you from doing that
Anthony said he doesn't know if he should run Docker containers in prod all the time now, because so many services have been made really easy. I mean, you certainly can use Docker in production. There's nothing preventing you from doing that It just kind of goes back to things like the load balancing capabilities of Kubernetes that make it a lot more powerful, a lot more robust, I would say
It just kind of goes back to things like the load balancing capabilities of Kubernetes that make it a lot more powerful, a lot more robust, I would say But I mean, there's nothing preventing you from spinning up a Docker swarm cluster and running multiple containers, doing load balancing on Docker swarm. I know it supports that. But again, Kubernetes is just a much more flexible solution
But I mean, there's nothing preventing you from spinning up a Docker swarm cluster and running multiple containers, doing load balancing on Docker swarm. I know it supports that. But again, Kubernetes is just a much more flexible solution So if you need to add on kind of bolts on capabilities in Kubernetes, which you pretty much have to make it really useful, it's just going to give you a lot more capabilities than what Docker swarm would. OK. And I know my first intro to Kubernetes was really through Denver startup week
So if you need to add on kind of bolts on capabilities in Kubernetes, which you pretty much have to make it really useful, it's just going to give you a lot more capabilities than what Docker swarm would. OK. And I know my first intro to Kubernetes was really through Denver startup week And there was a company that came to present. And they basically will help a business launch their cluster with all the applications that they need for it
And there was a company that came to present. And they basically will help a business launch their cluster with all the applications that they need for it And I think just where my head goes with that is would you ever put those same type of applications in a Docker container? And then also how do you choose between all of the options in Kubernetes
And I think just where my head goes with that is would you ever put those same type of applications in a Docker container? And then also how do you choose between all of the options in Kubernetes So if I understand your question correctly, you're asking, how do I determine if I should or shouldn't run an application in a container? Yes
So if I understand your question correctly, you're asking, how do I determine if I should or shouldn't run an application in a container? Yes That's a good way of saying. I just want to make sure I understood that properly. So containers are generally used for server side applications. So this is things like web servers, database servers, background processing tasks
That's a good way of saying. I just want to make sure I understood that properly. So containers are generally used for server side applications. So this is things like web servers, database servers, background processing tasks So if you think about a platform like YouTube, for example, if you go to YouTube and you record a video, you upload that video to YouTube, and then YouTube does some back end processing on your video before they actually publish it
So if you think about a platform like YouTube, for example, if you go to YouTube and you record a video, you upload that video to YouTube, and then YouTube does some back end processing on your video before they actually publish it That shows you right in the YouTube studio there that it's running some processing tasks. And it takes a while for that to happen, depending on how long your video is or things like that. But those kind of background processing tasks could be theoretically running containers
That shows you right in the YouTube studio there that it's running some processing tasks. And it takes a while for that to happen, depending on how long your video is or things like that. But those kind of background processing tasks could be theoretically running containers Obviously, I don't know how YouTube is implemented that functionality. But I'd be very surprised if they were not using containers on the back end to process those videos with some utility, like FFMPEG, for example, which is a Swiss Army knife utility to process videos into different formats
Obviously, I don't know how YouTube is implemented that functionality. But I'd be very surprised if they were not using containers on the back end to process those videos with some utility, like FFMPEG, for example, which is a Swiss Army knife utility to process videos into different formats But my point is that generally speaking, containers are used for server side applications that are running on the back end. Now, there are some advanced ways that you can actually run graphical applications like Firefox or Chrome or Draw
But my point is that generally speaking, containers are used for server side applications that are running on the back end. Now, there are some advanced ways that you can actually run graphical applications like Firefox or Chrome or Drawio, which I just kind of, we were talking about prior to launching the live stream, you can technically run a graphical application inside of a container, and then you can connect an X server to that application that's running in the container
io, which I just kind of, we were talking about prior to launching the live stream, you can technically run a graphical application inside of a container, and then you can connect an X server to that application that's running in the container So you can achieve the benefits of isolation of applications that are graphical in containers. But that's a little bit more of an advanced use case. And it's not generally speaking what people are doing with container-based applications
So you can achieve the benefits of isolation of applications that are graphical in containers. But that's a little bit more of an advanced use case. And it's not generally speaking what people are doing with container-based applications So generally speaking, you wouldn't really want to run Firefox in a container because if you download a file with Firefox and you download it inside of the container, well now that file exists inside of the containers file system and you on your Mac desktop need to have access to whatever that file is that you downloaded
So generally speaking, you wouldn't really want to run Firefox in a container because if you download a file with Firefox and you download it inside of the container, well now that file exists inside of the containers file system and you on your Mac desktop need to have access to whatever that file is that you downloaded So you'd have to go into the container to get the file and that just kind of complicates things. But it is possible technically to do those kinds of things. All right. So I think I'm starting to see it all
So you'd have to go into the container to get the file and that just kind of complicates things. But it is possible technically to do those kinds of things. All right. So I think I'm starting to see it all But where do we get started in getting Kubernetes or Docker? And we got a question from a rivet. Why is it better or is it better to run back on a Docker container, Kubernetes stir instead of, say, of EC2 instance? So an EC2 instance is basically just AWS's terminology for a virtual machine
But where do we get started in getting Kubernetes or Docker? And we got a question from a rivet. Why is it better or is it better to run back on a Docker container, Kubernetes stir instead of, say, of EC2 instance? So an EC2 instance is basically just AWS's terminology for a virtual machine So you can spin up a Linux virtual machine anywhere. You can use AWS. You can use Azure. You can use Google Cloud. You can use Linux. You can use digital ocean
So you can spin up a Linux virtual machine anywhere. You can use AWS. You can use Azure. You can use Google Cloud. You can use Linux. You can use digital ocean You can even spin up virtual machines running Linux locally on your Dev Desktop using things like VMware Workstation or virtual box or other hypervisors like that
You can even spin up virtual machines running Linux locally on your Dev Desktop using things like VMware Workstation or virtual box or other hypervisors like that So basically, I think what the question is kind of boiling down to those is like, why would I want to run a container-based application on, let's say, a managed Kubernetes service rather than self-managing a virtual machine. So you as a developer can go out to a cloud platform like AWS
So basically, I think what the question is kind of boiling down to those is like, why would I want to run a container-based application on, let's say, a managed Kubernetes service rather than self-managing a virtual machine. So you as a developer can go out to a cloud platform like AWS You can spin up a Linux virtual machine. You can install Kubernetes on that virtual machine. And that's what we would consider to be a self-managed cluster
You can spin up a Linux virtual machine. You can install Kubernetes on that virtual machine. And that's what we would consider to be a self-managed cluster But you can also go out to these cloud providers and all the cloud providers that I just mentioned all provide managed Kubernetes distributions. So you can basically go out to the cloud provider and instead of saying create a Linux virtual machine, you can say create a Kubernetes cluster
But you can also go out to these cloud providers and all the cloud providers that I just mentioned all provide managed Kubernetes distributions. So you can basically go out to the cloud provider and instead of saying create a Linux virtual machine, you can say create a Kubernetes cluster And so rather than using SSH to go into that Linux virtual machine and installing Kubernetes yourself, you're basically just spinning up a pre-built Kubernetes cluster from that cloud provider
And so rather than using SSH to go into that Linux virtual machine and installing Kubernetes yourself, you're basically just spinning up a pre-built Kubernetes cluster from that cloud provider And then you're able to use CUB control, which is kind of your client utility to manage Kubernetes, to talk directly to this managed cluster rather than having to self-install and self-manage that cluster. So I think that's kind of where that question was going towards
And then you're able to use CUB control, which is kind of your client utility to manage Kubernetes, to talk directly to this managed cluster rather than having to self-install and self-manage that cluster. So I think that's kind of where that question was going towards And it's kind of a loaded question because there's not a right answer for anybody. Some people might be able to get away with using a managed Kubernetes distribution
And it's kind of a loaded question because there's not a right answer for anybody. Some people might be able to get away with using a managed Kubernetes distribution However, when you use a managed Kubernetes distribution from a cloud provider, it does prevent you from configuring certain back-end components of Kubernetes like the API server, the controller manager, and the scheduler. Those are the three critical components of the Kubernetes master nodes
However, when you use a managed Kubernetes distribution from a cloud provider, it does prevent you from configuring certain back-end components of Kubernetes like the API server, the controller manager, and the scheduler. Those are the three critical components of the Kubernetes master nodes And when you use one of these managed cloud distributions of Kubernetes, they prevent you from configuring those components. They manage all that stuff for you
And when you use one of these managed cloud distributions of Kubernetes, they prevent you from configuring those components. They manage all that stuff for you So if you have an advanced use case where you do need to configure some of those back-end Kubernetes master node components, then a cloud managed distribution of Kubernetes would not be right for you. Instead, you'd want to look to a self-managed distribution of Kubernetes. Rivet did that help
So if you have an advanced use case where you do need to configure some of those back-end Kubernetes master node components, then a cloud managed distribution of Kubernetes would not be right for you. Instead, you'd want to look to a self-managed distribution of Kubernetes. Rivet did that help And in the meantime, Homi said before he understood that to think Docker containers as a mini PC, that only does one thing in one process. Kubernetes is a computer that joins controls as a bunch of mini PCs, very general. Yeah. All right
And in the meantime, Homi said before he understood that to think Docker containers as a mini PC, that only does one thing in one process. Kubernetes is a computer that joins controls as a bunch of mini PCs, very general. Yeah. All right Yeah. All right. Anyway, you want to think about it that makes it easier for you is totally fine. But yeah, I mean, that's not a bad way to think about it. I was like, I was going with pens earlier. It was when I was pointing to my friend, it was spices
Yeah. All right. Anyway, you want to think about it that makes it easier for you is totally fine. But yeah, I mean, that's not a bad way to think about it. I was like, I was going with pens earlier. It was when I was pointing to my friend, it was spices So maybe a better wording is why a container versus a VM. Great. So that is a very good question. So as far as containers versus virtual machine go containers, do not spin up a virtual machine. There is no separate kernel
So maybe a better wording is why a container versus a VM. Great. So that is a very good question. So as far as containers versus virtual machine go containers, do not spin up a virtual machine. There is no separate kernel Like there's no operating system kernel that gets spun up for each container that gets created. Rather, when you create a container using Docker or container D or pod man or whatever, then what happens is that these namespaces get created inside of the Linux kernel
Like there's no operating system kernel that gets spun up for each container that gets created. Rather, when you create a container using Docker or container D or pod man or whatever, then what happens is that these namespaces get created inside of the Linux kernel And each process can only see certain parts of the system based on what's exposed to it through these kernel namespaces
And each process can only see certain parts of the system based on what's exposed to it through these kernel namespaces So rather than having in a full virtual machine environment, if I create an EC2 instance on AWS or if I create a Linux virtual machine on digital ocean, that's giving me an entire virtual machine with its own separate Linux kernel. And I can install different versions of the kernel
So rather than having in a full virtual machine environment, if I create an EC2 instance on AWS or if I create a Linux virtual machine on digital ocean, that's giving me an entire virtual machine with its own separate Linux kernel. And I can install different versions of the kernel I can load modules into the kernel if I want to, because I control that kernel. But if I create a container, I don't have my own separate kernel that I can manage. It's actually a process level of isolation that's happening
I can load modules into the kernel if I want to, because I control that kernel. But if I create a container, I don't have my own separate kernel that I can manage. It's actually a process level of isolation that's happening So in terms of why you would want one versus the other, it kind of boils back to why would you want a single physical server that I can create multiple virtual machines on, right? Because you get better density
So in terms of why you would want one versus the other, it kind of boils back to why would you want a single physical server that I can create multiple virtual machines on, right? Because you get better density You get better, more efficient utilization of that single physical server by creating 10 or 20 or 30 virtual machines on that single physical server, right
You get better, more efficient utilization of that single physical server by creating 10 or 20 or 30 virtual machines on that single physical server, right Because if I take a single physical server, and I install an operating system on it, and then I run just one application on that physical server, I'm probably wasting 95 to 99% of that server's capacity, because unless you're running some really heavy application, you're probably not going to be utilizing all the CPUs and all the memory and all the disk of that server
Because if I take a single physical server, and I install an operating system on it, and then I run just one application on that physical server, I'm probably wasting 95 to 99% of that server's capacity, because unless you're running some really heavy application, you're probably not going to be utilizing all the CPUs and all the memory and all the disk of that server So the way that we achieve better efficiency is by running additional virtual machines on the same physical server. Well, apply that same concept of density and efficiency to the process level
So the way that we achieve better efficiency is by running additional virtual machines on the same physical server. Well, apply that same concept of density and efficiency to the process level If I spin up a Linux virtual machine, but I only install one application on it, then I'm probably wasting 99% of the resources of that single Linux virtual machine
If I spin up a Linux virtual machine, but I only install one application on it, then I'm probably wasting 99% of the resources of that single Linux virtual machine So what I can do is I can spin up more applications on the same server, on the same Linux instance, and I'm getting better efficient utilization of the resources on that system, rather than just wasting 99% of its capabilities
So what I can do is I can spin up more applications on the same server, on the same Linux instance, and I'm getting better efficient utilization of the resources on that system, rather than just wasting 99% of its capabilities In theory, is starting to make sense, but I feel like this is all of tech of like, it makes sense, but then it's also very, very confusing at the same time. And I don't know, I didn't know that this happens before, you know, starting to teach Gentech a few months ago
In theory, is starting to make sense, but I feel like this is all of tech of like, it makes sense, but then it's also very, very confusing at the same time. And I don't know, I didn't know that this happens before, you know, starting to teach Gentech a few months ago So I think just like picking back, picking back off of what Rivet said of, and glad that it helped Rivet, yay, would be something of how, words Gen, how do we go about like, I've seen a bit about like, installing virtual machines and that kind of thing
So I think just like picking back, picking back off of what Rivet said of, and glad that it helped Rivet, yay, would be something of how, words Gen, how do we go about like, I've seen a bit about like, installing virtual machines and that kind of thing Now yet, using Docker Kubernetes is very different. And you and I talked about pre-show a bit about doing, and if I'm paraphrasing this properly, it's like doing a local install of Kubernetes or using a cloud Kubernetes
Now yet, using Docker Kubernetes is very different. And you and I talked about pre-show a bit about doing, and if I'm paraphrasing this properly, it's like doing a local install of Kubernetes or using a cloud Kubernetes First question is Docker the same where you can do a local versus a cloud, and for both, when would we use them, and can we go through those examples? You mean, yeah, certainly we can go through those examples
First question is Docker the same where you can do a local versus a cloud, and for both, when would we use them, and can we go through those examples? You mean, yeah, certainly we can go through those examples Generally speaking, Docker does not, most cloud providers don't provide like a managed Docker swarm cluster type of thing like they do with Kubernetes. The cloud industry has kind of standardized on Kubernetes as a container orchestrator
Generally speaking, Docker does not, most cloud providers don't provide like a managed Docker swarm cluster type of thing like they do with Kubernetes. The cloud industry has kind of standardized on Kubernetes as a container orchestrator So that's why if you go to AWS or Google Cloud, you're not going to see an option in their cloud platform in their portfolio of services to like create a Docker swarm cluster
So that's why if you go to AWS or Google Cloud, you're not going to see an option in their cloud platform in their portfolio of services to like create a Docker swarm cluster Now you can create your own Linux virtual machines, and then you can install Docker on all of them and run the commands to create a swarm cluster and then join all those machines to a swarm cluster
Now you can create your own Linux virtual machines, and then you can install Docker on all of them and run the commands to create a swarm cluster and then join all those machines to a swarm cluster But those cloud providers are not going to provide that same kind of managed service for a Docker swarm cluster like they do with Kubernetes. But you can install Docker on a virtual machine. You can install Kubernetes on a virtual machine
But those cloud providers are not going to provide that same kind of managed service for a Docker swarm cluster like they do with Kubernetes. But you can install Docker on a virtual machine. You can install Kubernetes on a virtual machine If you control the virtual machine itself or multiple virtual machines, then you can create your own clusters, configure your own clusters, however you want to
If you control the virtual machine itself or multiple virtual machines, then you can create your own clusters, configure your own clusters, however you want to Now one of the things that we had talked about a couple of days ago or I guess last week maybe when we initially got in touch was that there's a bunch of different Kubernetes distributions out there
Now one of the things that we had talked about a couple of days ago or I guess last week maybe when we initially got in touch was that there's a bunch of different Kubernetes distributions out there So if you do want to run Kubernetes yourself on your own Linux virtual machine, like on your laptop or on my Windows 11 developer workstation here, if I want to install Kubernetes on my own local Linux virtual machines, there's a lot of different Kubernetes distributions and tools that you can use to actually instantiate a Kubernetes cluster
So if you do want to run Kubernetes yourself on your own Linux virtual machine, like on your laptop or on my Windows 11 developer workstation here, if I want to install Kubernetes on my own local Linux virtual machines, there's a lot of different Kubernetes distributions and tools that you can use to actually instantiate a Kubernetes cluster My personal favorite that I actually use in a lot of my training for CBT nuggets on Kubernetes is called K3S. So if you go to k3s.io, it's a very well-supported distribution of Kubernetes from Rancher Labs that allows you to rapidly spin up a cluster. It's just a single binary
My personal favorite that I actually use in a lot of my training for CBT nuggets on Kubernetes is called K3S. So if you go to k3s.io, it's a very well-supported distribution of Kubernetes from Rancher Labs that allows you to rapidly spin up a cluster. It's just a single binary So you literally just download K3S itself and then it contains all the different components of Kubernetes
So you literally just download K3S itself and then it contains all the different components of Kubernetes And it also gives you a lot of control over passing in different configuration options to each of those components that I discussed previously, the Kubernetes scheduler, the API server, and the controller manager. And so you can customize the logging paths, where to spit out log files
And it also gives you a lot of control over passing in different configuration options to each of those components that I discussed previously, the Kubernetes scheduler, the API server, and the controller manager. And so you can customize the logging paths, where to spit out log files You can enable audit logging on the API server if you want to, which is a little bit more of an advanced security feature. And it gives you just that full control, but it also gives you that simplicity because it is just so easy to spin up a cluster
You can enable audit logging on the API server if you want to, which is a little bit more of an advanced security feature. And it gives you just that full control, but it also gives you that simplicity because it is just so easy to spin up a cluster But if you want to, you could also use more official utilities. Like the official utility to create a cluster is pretty complicated. So I wouldn't recommend it to newbies, but it's called Kube ADM, short for, I think, Kube Administrator or something like that
But if you want to, you could also use more official utilities. Like the official utility to create a cluster is pretty complicated. So I wouldn't recommend it to newbies, but it's called Kube ADM, short for, I think, Kube Administrator or something like that But it's basically the command line tool that you use officially from the Kubernetes project to create and configure a cluster of Kubernetes nodes. Much harder to use, but it also does give you a lot more flexibility. And it is also the official tool from the Kubernetes team
But it's basically the command line tool that you use officially from the Kubernetes project to create and configure a cluster of Kubernetes nodes. Much harder to use, but it also does give you a lot more flexibility. And it is also the official tool from the Kubernetes team So that's kind of like the best way to go if you're looking for the most raw experience. I'm letting that soak in because it's the K3S.IO, I believe. I'm taking a look there just to see if they also have a very, very bright website. I think my screen will let me make friends. We'll find out
So that's kind of like the best way to go if you're looking for the most raw experience. I'm letting that soak in because it's the K3S.IO, I believe. I'm taking a look there just to see if they also have a very, very bright website. I think my screen will let me make friends. We'll find out We'll find out. Give me just a second. And we'll see if my computer, OK, cool. So I'm taking a look at it. And I feel like Ben, he's not here, but he makes me think about accessibility and doing the contrast. And I'm like, I can barely read the white on the yellow. And it's so funny
We'll find out. Give me just a second. And we'll see if my computer, OK, cool. So I'm taking a look at it. And I feel like Ben, he's not here, but he makes me think about accessibility and doing the contrast. And I'm like, I can barely read the white on the yellow. And it's so funny And it's so funny. He's like, always in the back of my head. So OK, cool. You run this and you got it. It's literally that easy. Cool. So we got that going for us. So I'm not going to do it just yet. But this is like one place we could start
And it's so funny. He's like, always in the back of my head. So OK, cool. You run this and you got it. It's literally that easy. Cool. So we got that going for us. So I'm not going to do it just yet. But this is like one place we could start Or you said that we could start with digital ocean, right? So digital ocean is the kind of, I always like to think in the cloud world, there's like the big three cloud vendors, Microsoft Azure, Amazon Web Services, and Google Cloud Platform, GCP
Or you said that we could start with digital ocean, right? So digital ocean is the kind of, I always like to think in the cloud world, there's like the big three cloud vendors, Microsoft Azure, Amazon Web Services, and Google Cloud Platform, GCP But then there's a lot of smaller cloud vendors out there. Digital ocean is one of those. They're actually a publicly traded corporation. So they are pretty large. But then there's also some others like Linode. I use Linode pretty heavily. And these smaller cloud providers have a lot of benefits
But then there's a lot of smaller cloud vendors out there. Digital ocean is one of those. They're actually a publicly traded corporation. So they are pretty large. But then there's also some others like Linode. I use Linode pretty heavily. And these smaller cloud providers have a lot of benefits Number one is they're easy to use because they don't have the massive portfolio of services that some of the major cloud vendors have. So it's a lot more straightforward of a platform to use for people who are new to cloud. And also they're pricing
Number one is they're easy to use because they don't have the massive portfolio of services that some of the major cloud vendors have. So it's a lot more straightforward of a platform to use for people who are new to cloud. And also they're pricing One of the things I love about them is that they're pricing is a lot more straightforward. If you get deep into the pricing of the major cloud vendors, especially like Amazon Web Services, their pricing is so complicated to figure out that it can really cause your head to kind of spin
One of the things I love about them is that they're pricing is a lot more straightforward. If you get deep into the pricing of the major cloud vendors, especially like Amazon Web Services, their pricing is so complicated to figure out that it can really cause your head to kind of spin So what I like about Digital Ocean or Linode for that matter or Vulture is that they have simple platforms. It's like here's your virtual machine infrastructure, here's your Kubernetes clusters, here's your managed databases, but that's it. And their pricing is very straightforward
So what I like about Digital Ocean or Linode for that matter or Vulture is that they have simple platforms. It's like here's your virtual machine infrastructure, here's your Kubernetes clusters, here's your managed databases, but that's it. And their pricing is very straightforward It's very competitive pricing as well. So they're not trying to screw you over. So it's actually a very pleasant experience. Yeah, and I totally didn't set this up beforehand to do the account
It's very competitive pricing as well. So they're not trying to screw you over. So it's actually a very pleasant experience. Yeah, and I totally didn't set this up beforehand to do the account So do you have one on Digital Ocean that we could check out? Yeah, I spun up one actually on the Linode platform. So if you want to share my screen, you're more than welcome to. Sweet. So I've created a Linux virtual machine here
So do you have one on Digital Ocean that we could check out? Yeah, I spun up one actually on the Linode platform. So if you want to share my screen, you're more than welcome to. Sweet. So I've created a Linux virtual machine here It just has two CPU cores and four gigabytes of memory and a little bit of storage here. It's plenty for doing a basic cluster here. It just gives you a public IP address here. And then you associate an SSH key just to authenticate to the cluster. So I can connect to this cluster from any machine
It just has two CPU cores and four gigabytes of memory and a little bit of storage here. It's plenty for doing a basic cluster here. It just gives you a public IP address here. And then you associate an SSH key just to authenticate to the cluster. So I can connect to this cluster from any machine I could do it from Jens machine if I wanted to. I could do it from my Windows machine here. Or I could, if I was running Linux locally, obviously every operating system these days has SSH built into it
I could do it from Jens machine if I wanted to. I could do it from my Windows machine here. Or I could, if I was running Linux locally, obviously every operating system these days has SSH built into it So if I just run SSH root at IP address, I should get automatically logged in here once I confirm the host key. And boom, now I have my own Linux virtual machine running up in the cloud
So if I just run SSH root at IP address, I should get automatically logged in here once I confirm the host key. And boom, now I have my own Linux virtual machine running up in the cloud And if I wanted to, I could destroy that Linux virtual machine, create a brand new one, start from scratch again, and I'm good to go
And if I wanted to, I could destroy that Linux virtual machine, create a brand new one, start from scratch again, and I'm good to go Now the Linux distribution that I have installed on this machine, so when I created this Linode machine here, I chose the Ubuntu Linux distribution, which is extremely popular. It's from canonical. They make awesome software Ubuntu has been around for a very long time
Now the Linux distribution that I have installed on this machine, so when I created this Linode machine here, I chose the Ubuntu Linux distribution, which is extremely popular. It's from canonical. They make awesome software Ubuntu has been around for a very long time I typically use the LTS, the long-term support version of it, just because it's more stable than the interim releases that they have. So like these 21.10, 21.04, those are kind of interim releases of Ubuntu Linux
I typically use the LTS, the long-term support version of it, just because it's more stable than the interim releases that they have. So like these 21.10, 21.04, those are kind of interim releases of Ubuntu Linux So I tend to stick with the long-term support versions of it, just for that stability. But there are, as you probably know, tons of Linux distributions out there, Debian Linux is actually what the Ubuntu is based on. So if you want a more core Debian experience, you can just use that
So I tend to stick with the long-term support versions of it, just for that stability. But there are, as you probably know, tons of Linux distributions out there, Debian Linux is actually what the Ubuntu is based on. So if you want a more core Debian experience, you can just use that You can use Fedora Linux if you want to, and a bunch of other ones out there. But I typically just stick with Ubuntu. And so I've got Ubuntu Linux running on this machine here. If I run this UNAME-8 command, actually, let me do LSP release, dash dash all. You can see I am running Ubuntu 22.04 here
You can use Fedora Linux if you want to, and a bunch of other ones out there. But I typically just stick with Ubuntu. And so I've got Ubuntu Linux running on this machine here. If I run this UNAME-8 command, actually, let me do LSP release, dash dash all. You can see I am running Ubuntu 22.04 here04 here. So this command here is what I can use to verify which distribution of Ubuntu I'm running here. So at this point, I've got a Linux virtual machine, and I can do whatever I want with it. I could install Docker on it. I could install Kubernetes
04 here. So this command here is what I can use to verify which distribution of Ubuntu I'm running here. So at this point, I've got a Linux virtual machine, and I can do whatever I want with it. I could install Docker on it. I could install Kubernetes I could use podman, like we talked about, container D. It's really up to you what you want to do with this machine
I could use podman, like we talked about, container D. It's really up to you what you want to do with this machine What are some examples of what someone might put on the machine? Is there something we can look up or put on there that is a project that someone may be working on or an application someone may be working on to see how that's installed
What are some examples of what someone might put on the machine? Is there something we can look up or put on there that is a project that someone may be working on or an application someone may be working on to see how that's installed Oh my gosh, there are tons of applications out there that you could spin up trying to think of some, for example, have you heard of Neo4j? No
Oh my gosh, there are tons of applications out there that you could spin up trying to think of some, for example, have you heard of Neo4j? No So Neo4j is freaking awesome. Actually, it's this concept known as a graph database engine, where you have these nodes that represent things and then relationships, which are just lines that represent a relationship between two different things
So Neo4j is freaking awesome. Actually, it's this concept known as a graph database engine, where you have these nodes that represent things and then relationships, which are just lines that represent a relationship between two different things So graph databases are really cool just because they're so simple to understand for humans. Just because our world is based on graphs, it's like you have on a map, you have different addresses. Those are places, right? We have businesses, those are things, those are nodes
So graph databases are really cool just because they're so simple to understand for humans. Just because our world is based on graphs, it's like you have on a map, you have different addresses. Those are places, right? We have businesses, those are things, those are nodes And we have relationships like Gen, visited Starbucks or Trevor visited his house or whatever. And so graph databases are a really nice way to think about data in the real world
And we have relationships like Gen, visited Starbucks or Trevor visited his house or whatever. And so graph databases are a really nice way to think about data in the real world Neo4j is a company that creates their product, which is Neo4j, and Neo4j is a graph database engine that you can deploy very easily inside of containers
Neo4j is a company that creates their product, which is Neo4j, and Neo4j is a graph database engine that you can deploy very easily inside of containers And one of the nice things about Neo4j is that it has a web interface that you can log into to actually create data in your own graph database and query data from your graph database once you've inserted it. So one of the things I like to kind of play around with sometimes is Neo4j
And one of the nice things about Neo4j is that it has a web interface that you can log into to actually create data in your own graph database and query data from your graph database once you've inserted it. So one of the things I like to kind of play around with sometimes is Neo4j And so if we wanted to install Neo4j, one of the easiest ways to do that would be to install the Docker runtime on our Linux VM and then just spin up a container using Docker that runs this Neo4j application. So if we head out to, do you wanna do that now? Sure
And so if we wanted to install Neo4j, one of the easiest ways to do that would be to install the Docker runtime on our Linux VM and then just spin up a container using Docker that runs this Neo4j application. So if we head out to, do you wanna do that now? Sure Okay, so if we head out to the Docker hub, this is kind of a container registry that allows us to find different applications
Okay, so if we head out to the Docker hub, this is kind of a container registry that allows us to find different applications And so if you search for, you know, Neo4j or search for MySQL, which is a relational database engine, or if I search for AppRite, which is this like low code runtime that's really interesting
And so if you search for, you know, Neo4j or search for MySQL, which is a relational database engine, or if I search for AppRite, which is this like low code runtime that's really interesting I mean, there's just so many different applications out here that are just pre-packaged as container images. But anyways, we've got this official Neo4j image here. And we can very easily spin up an instance of Neo4j by using this command right down here
I mean, there's just so many different applications out here that are just pre-packaged as container images. But anyways, we've got this official Neo4j image here. And we can very easily spin up an instance of Neo4j by using this command right down here But of course, we need to have Docker installed first on this VM. So because I'm on Ubuntu Linux here, Ubuntu Linux has a package manager that you use to install different software packages called App. So I can just run App and then update here
But of course, we need to have Docker installed first on this VM. So because I'm on Ubuntu Linux here, Ubuntu Linux has a package manager that you use to install different software packages called App. So I can just run App and then update here And this will just grab some metadata about all the different packages that are available. I'm not actually installing anything here, but it's just gonna grab some metadata for the App Package Manager. And then I can run App install, Docker.io. And Docker
And this will just grab some metadata about all the different packages that are available. I'm not actually installing anything here, but it's just gonna grab some metadata for the App Package Manager. And then I can run App install, Docker.io. And Dockerio. And Docker.io is the name of the package to install the Docker engine just locally on this Linux VM here
io. And Docker.io is the name of the package to install the Docker engine just locally on this Linux VM here And once I've got the Docker package installed, I can immediately start spinning up containers or if you wanted to go down the route of spinning up the Docker Swarm cluster, I could actually create additional Linux VMs and then kind of combine them all into a single Docker Swarm cluster
And once I've got the Docker package installed, I can immediately start spinning up containers or if you wanted to go down the route of spinning up the Docker Swarm cluster, I could actually create additional Linux VMs and then kind of combine them all into a single Docker Swarm cluster But as we kind of talked about before, using Docker locally is one of the more common use cases of it. I guess I'll kind of pause there and see if you wanna interject, Jen
But as we kind of talked about before, using Docker locally is one of the more common use cases of it. I guess I'll kind of pause there and see if you wanna interject, Jen No, I think it's at the point where there is, a lot of it is going over my head, but I'm still like absorbing it in the fact of piecing it all together with context, but also learning where I may dig in later on and ask questions
No, I think it's at the point where there is, a lot of it is going over my head, but I'm still like absorbing it in the fact of piecing it all together with context, but also learning where I may dig in later on and ask questions So I say at the moment, continue, because I'm following along, it's just like, if somebody were to ask me about it, I'd be like, oh, but it's sticking enough conceptually. Once you do it a few times yourself, you're gonna just, you're gonna keep going
So I say at the moment, continue, because I'm following along, it's just like, if somebody were to ask me about it, I'd be like, oh, but it's sticking enough conceptually. Once you do it a few times yourself, you're gonna just, you're gonna keep going You're gonna create a few containers and you're gonna be like, oh my gosh, I wanna spin up this application or that application
You're gonna create a few containers and you're gonna be like, oh my gosh, I wanna spin up this application or that application And I've actually been documenting a bunch of, are you familiar with the awesome repositories out there on GitHub, like awesome machine learning or awesome databases or anything like that? No, but I feel like I definitely should. I mean, there's a bunch of different repos out there
And I've actually been documenting a bunch of, are you familiar with the awesome repositories out there on GitHub, like awesome machine learning or awesome databases or anything like that? No, but I feel like I definitely should. I mean, there's a bunch of different repos out there If you just search for like awesome GitHub, I don't know, databases. Like people create these lists basically of like awesome database engines, right? And sometimes they're not always up to date
If you just search for like awesome GitHub, I don't know, databases. Like people create these lists basically of like awesome database engines, right? And sometimes they're not always up to date Like this one's kind of outdated by a couple of years here, but there's, you know, there's just these huge lists of different awesome topics. Anyways, I wanted to have control over my own list so that I didn't have to like wait for somebody to merge my suggestions
Like this one's kind of outdated by a couple of years here, but there's, you know, there's just these huge lists of different awesome topics. Anyways, I wanted to have control over my own list so that I didn't have to like wait for somebody to merge my suggestions I created this awesome Trevor repository here. And I've listed out just a ton of different software packages. Some of them are like libraries that you can load into programming languages, like down here towards the bottom. Like PowerShell modules or
I created this awesome Trevor repository here. And I've listed out just a ton of different software packages. Some of them are like libraries that you can load into programming languages, like down here towards the bottom. Like PowerShell modules orNET modules or JavaScript modules for different purposes. But then I've also got like a bunch of applications that you can install oftentimes using Docker here. Like database engines, for example, like Neo4j is right there, or re-think DB. Or in FluxDB, which is another one of my favorites
NET modules or JavaScript modules for different purposes. But then I've also got like a bunch of applications that you can install oftentimes using Docker here. Like database engines, for example, like Neo4j is right there, or re-think DB. Or in FluxDB, which is another one of my favorites I don't know why I didn't think of that earlier because I love in FluxDB. It's a time series database engine for like metrics storage
I don't know why I didn't think of that earlier because I love in FluxDB. It's a time series database engine for like metrics storage Where was I going with this? I'm not 100% but I just saw a Ramon's question of wait, what's a swarm cluster? And I think a swarm cluster is where Docker can link multiple containers together. Kind of like Kubernetes, but it does it with Docker and they call it a swarm cluster. Yep, yep
Where was I going with this? I'm not 100% but I just saw a Ramon's question of wait, what's a swarm cluster? And I think a swarm cluster is where Docker can link multiple containers together. Kind of like Kubernetes, but it does it with Docker and they call it a swarm cluster. Yep, yep Yep, yep. You spin up a bunch of Linux VMs and you mash them all together inside of a single cluster. And then when you create a container, that container could get created on any one of those nodes in the cluster. And it's actually like really, really easy to set up. It only takes like a minute
Yep, yep. You spin up a bunch of Linux VMs and you mash them all together inside of a single cluster. And then when you create a container, that container could get created on any one of those nodes in the cluster. And it's actually like really, really easy to set up. It only takes like a minute Okay. Anyways, these are a bunch of different applications that you can like learn about for different purposes. Okay. But Neo4j is in there. Anyways, I think I was getting it off on kind of a tangent there. I don't know why I mentioned that. But. The awesome Trevor project
Okay. Anyways, these are a bunch of different applications that you can like learn about for different purposes. Okay. But Neo4j is in there. Anyways, I think I was getting it off on kind of a tangent there. I don't know why I mentioned that. But. The awesome Trevor project Yeah, it's just where I document a bunch of cool software, mostly open source that I come across. Okay. If you're looking for like container tools, I don't know why I haven't put podman is not in here yet
Yeah, it's just where I document a bunch of cool software, mostly open source that I come across. Okay. If you're looking for like container tools, I don't know why I haven't put podman is not in here yet But if you're looking for like Kubernetes stuff, I have a bunch of like Kubernetes things down here for different purposes. So yeah, just kind of my personal documentation repository. And I believe Ramon, I think you said that you do some of this kind of stuff at work
But if you're looking for like Kubernetes stuff, I have a bunch of like Kubernetes things down here for different purposes. So yeah, just kind of my personal documentation repository. And I believe Ramon, I think you said that you do some of this kind of stuff at work Is there any questions that you have that you'd be curious about other than the cluster one or the swarm cluster? And yes, by Anthony, have a wonderful day. Cause I know we've covered quite a bit today. And I have so many, so many things that I'm going to end up asking about later on
Is there any questions that you have that you'd be curious about other than the cluster one or the swarm cluster? And yes, by Anthony, have a wonderful day. Cause I know we've covered quite a bit today. And I have so many, so many things that I'm going to end up asking about later on After I let it noodle for a bit. What are some resources you would suggest for newbies to use? Would you just say like going to a layout and using their docs or is there something else that like you have the training that you do with certifications as well, right? Mm hmm
After I let it noodle for a bit. What are some resources you would suggest for newbies to use? Would you just say like going to a layout and using their docs or is there something else that like you have the training that you do with certifications as well, right? Mm hmm Yeah, I built a lot of certification and kind of what I consider like practical training, here's what you need to know to get certified. But then like what are the things certifications don't always cover all scenarios, right? They kind of focus on very specific topics
Yeah, I built a lot of certification and kind of what I consider like practical training, here's what you need to know to get certified. But then like what are the things certifications don't always cover all scenarios, right? They kind of focus on very specific topics So in the case of like AWS training, they're only going to test you on like AWS stuff, right? They're not going to necessarily test you on kind of all this other software that you need to know about as a developer
So in the case of like AWS training, they're only going to test you on like AWS stuff, right? They're not going to necessarily test you on kind of all this other software that you need to know about as a developer And so I a lot of the training that I build, I try to think of like what are the things? What are the tools that people actually use in real life? And build training around those types of topics. Like GitHub actions, for example, there is no GitHub actions certification that I know of
And so I a lot of the training that I build, I try to think of like what are the things? What are the tools that people actually use in real life? And build training around those types of topics. Like GitHub actions, for example, there is no GitHub actions certification that I know of But I still build training on GitHub actions because that's a tool that people use in real life. Very powerful
But I still build training on GitHub actions because that's a tool that people use in real life. Very powerful I mean, I think that and I know that we've been talking very high level today and mostly through theory, but something that we met that talked about offline was like how power cell can help with a lot of this content and now learning a bit more about it, would it mainly only help with things in Kubernetes or could it help with things in Docker as well
I mean, I think that and I know that we've been talking very high level today and mostly through theory, but something that we met that talked about offline was like how power cell can help with a lot of this content and now learning a bit more about it, would it mainly only help with things in Kubernetes or could it help with things in Docker as well Well, talk about opening up a can of worms
Well, talk about opening up a can of worms I could talk about power show for months. Like I mentioned, I mean, I've been doing power show since 2006 when it came out. And so power show is a cross platform
I could talk about power show for months. Like I mentioned, I mean, I've been doing power show since 2006 when it came out. And so power show is a cross platform A lot of people still don't realize this, but in 2016, so now six years ago, Microsoft open source to power shell and made it across platform automation language
A lot of people still don't realize this, but in 2016, so now six years ago, Microsoft open source to power shell and made it across platform automation language So all the same types of things that you would do with Python or Ruby or Java programming languages, pretty much you can do with power shell. So it's an automation language that allows you to plug into lots of different platforms. You can use it to call REST APIs to do cloud provisioning
So all the same types of things that you would do with Python or Ruby or Java programming languages, pretty much you can do with power shell. So it's an automation language that allows you to plug into lots of different platforms. You can use it to call REST APIs to do cloud provisioning You can use power shell like with bash scripts where you just call out to different executables to run different CLI commands in succession. If you want to, power shell does support multi-threading too
You can use power shell like with bash scripts where you just call out to different executables to run different CLI commands in succession. If you want to, power shell does support multi-threading too So if you want to spin up multiple parallel instances of work that need to be done, you can use power shell to accomplish that as well. But it's really just a general purpose programming language that you can use to write scripts
So if you want to spin up multiple parallel instances of work that need to be done, you can use power shell to accomplish that as well. But it's really just a general purpose programming language that you can use to write scripts And you can also use power shell interactively to just run like one off commands, like delete this file or create this file or whatever. So it works great for both of those. And you may have noticed I actually use power shell here on my local machine as my primary shell
And you can also use power shell interactively to just run like one off commands, like delete this file or create this file or whatever. So it works great for both of those. And you may have noticed I actually use power shell here on my local machine as my primary shell Sorry, my machine's being kind of slow here. But yeah, I just use power shell locally here to run commands like get child item to list files on my file system. Or if I go to my get directory here, take a look at some of the different folders I've created. So I can use this to run various commands
Sorry, my machine's being kind of slow here. But yeah, I just use power shell locally here to run commands like get child item to list files on my file system. Or if I go to my get directory here, take a look at some of the different folders I've created. So I can use this to run various commands I could run, you know, the dilution commands. I could run Kubernetes commands with CubeControl. So power shell works great for that interactive use, but it also works great to do like actual scripting, programming type of tasks too
I could run, you know, the dilution commands. I could run Kubernetes commands with CubeControl. So power shell works great for that interactive use, but it also works great to do like actual scripting, programming type of tasks too I'm letting it set in, because I think at this point, I'm like, this is my brain hurts. In the fact because it is a lot to go through, but also working on putting it into real life action. And I think that's something that I'm struggling with
I'm letting it set in, because I think at this point, I'm like, this is my brain hurts. In the fact because it is a lot to go through, but also working on putting it into real life action. And I think that's something that I'm struggling with But I mean, I do that on everything of like, when would I actually use this and in my own processes? But I, at least the way when you said power shell, the first thing I was thinking was in Python being able to program lights
But I mean, I do that on everything of like, when would I actually use this and in my own processes? But I, at least the way when you said power shell, the first thing I was thinking was in Python being able to program lights And I'm like, oh, so can you program lights with power shell? That's where my mind went. But I think just also this gave me a lot of thoughts around specific questions I would have here. Like I need a noodle on it to like figure out what the questions fully are
And I'm like, oh, so can you program lights with power shell? That's where my mind went. But I think just also this gave me a lot of thoughts around specific questions I would have here. Like I need a noodle on it to like figure out what the questions fully are But this high level overview was really helpful to get an idea then dig into each of them very separately. So I greatly appreciate that. And is there anything that you think we needed to cover today that we haven't? Not really
But this high level overview was really helpful to get an idea then dig into each of them very separately. So I greatly appreciate that. And is there anything that you think we needed to cover today that we haven't? Not really I mean, it's just you gotta spend time kind of hands on with the technology. I always encourage people, you know, get hands on time with it because the more hands on time you spend with the technology, the more it's gonna make sense
I mean, it's just you gotta spend time kind of hands on with the technology. I always encourage people, you know, get hands on time with it because the more hands on time you spend with the technology, the more it's gonna make sense The more it's gonna kind of jostle your mind and think about all the possibilities of things you could build. So like the other day you learned about TypeScript
The more it's gonna kind of jostle your mind and think about all the possibilities of things you could build. So like the other day you learned about TypeScript It's like, okay, well, I can use TypeScript to build web applications, okay? What kind of application would I want to build? Do I want to build gens to do tracker? So I can track all my work that I need to do
It's like, okay, well, I can use TypeScript to build web applications, okay? What kind of application would I want to build? Do I want to build gens to do tracker? So I can track all my work that I need to do Do I want to build a dealerships car inventory tracker so that I can help a car dealership, you know, track inventory and sell cars or, I mean, just think of different use cases for what you want to do and then go out and try to build it
Do I want to build a dealerships car inventory tracker so that I can help a car dealership, you know, track inventory and sell cars or, I mean, just think of different use cases for what you want to do and then go out and try to build it And as you run into challenges, that's going to prompt you for solving very specific problems. It's like, how do I use TypeScript to connect to a database? Okay, let's go research that
And as you run into challenges, that's going to prompt you for solving very specific problems. It's like, how do I use TypeScript to connect to a database? Okay, let's go research that Okay, how do I use TypeScript to, you know, build a front end to a web application or build an API backend? Okay, I'm gonna go research that topic
Okay, how do I use TypeScript to, you know, build a front end to a web application or build an API backend? Okay, I'm gonna go research that topic So the more purpose driven that you can be about doing your research and the more experimentation that you do, the better your development journey is gonna be and the less abstract things are gonna feel. Yeah. Yeah
So the more purpose driven that you can be about doing your research and the more experimentation that you do, the better your development journey is gonna be and the less abstract things are gonna feel. Yeah. Yeah And I appreciate that because I feel like one thing that I've enjoyed about the show is being able to learn about it abstractly to at least kind of understand where I would for your example, like creating type using TypeScript to create a to-do list, like learning about an abstractly will then kind of give me ideas of where to go with it instead of just not knowing what it did altogether
And I appreciate that because I feel like one thing that I've enjoyed about the show is being able to learn about it abstractly to at least kind of understand where I would for your example, like creating type using TypeScript to create a to-do list, like learning about an abstractly will then kind of give me ideas of where to go with it instead of just not knowing what it did altogether And to the beautiful humans watching today and I saw that Ramon also had to go, so by Ramon, you didn't see that, but by Ramon
And to the beautiful humans watching today and I saw that Ramon also had to go, so by Ramon, you didn't see that, but by Ramon Anyone else have any questions be for we end our stream today? Rivet, I know if you're still here, if you had a good questions earlier, so please let us know if you have any questions or hit us both up on the twitters and that's our names there
Anyone else have any questions be for we end our stream today? Rivet, I know if you're still here, if you had a good questions earlier, so please let us know if you have any questions or hit us both up on the twitters and that's our names there Ha, give you guys just a minute and yeah, it's definitely a lot, but it's like a good amount of a lot. I think it's hard to explain. Ooh, I've been excited about all sorts of technology, so I mean, I get it
Ha, give you guys just a minute and yeah, it's definitely a lot, but it's like a good amount of a lot. I think it's hard to explain. Ooh, I've been excited about all sorts of technology, so I mean, I get it Homie said, if he used NextJS and Docker, that would you lose some of the NextJS features as opposed to deploying it on for sale. You know, NextJS is a really powerful framework and I really like NextJS
Homie said, if he used NextJS and Docker, that would you lose some of the NextJS features as opposed to deploying it on for sale. You know, NextJS is a really powerful framework and I really like NextJS I'm not an expert with it by any stretch of the imagination, but I'm not familiar enough with the versatile platform to know if they have special integrations with NextJS that you would lose if you spun it up on Docker or just installed it directly on a Linux VM without using containers
I'm not an expert with it by any stretch of the imagination, but I'm not familiar enough with the versatile platform to know if they have special integrations with NextJS that you would lose if you spun it up on Docker or just installed it directly on a Linux VM without using containers I do know that using NextJS as a web framework and API framework to build applications is extremely powerful regardless of where you run it, but I don't know enough about the versatile platform specifically to say if you would lose functionality
I do know that using NextJS as a web framework and API framework to build applications is extremely powerful regardless of where you run it, but I don't know enough about the versatile platform specifically to say if you would lose functionality That's a curious question, Homie, and I appreciate it, because I know Versel created NextJS, right? So I'm curious to if without using Versel, if it would cause issues. We should try to get some of that. I think the way that I would approach. Oh, go ahead
That's a curious question, Homie, and I appreciate it, because I know Versel created NextJS, right? So I'm curious to if without using Versel, if it would cause issues. We should try to get some of that. I think the way that I would approach. Oh, go ahead Oh, go ahead. I was just going to say the way that I would approach that question is think about what functionality do you need? So like start by developing NextJS locally, right? That's typical where you start with building applications
Oh, go ahead. I was just going to say the way that I would approach that question is think about what functionality do you need? So like start by developing NextJS locally, right? That's typical where you start with building applications So start building your application locally and then if there's a feature that you think you're missing, then go research that and see if it's specific to Versel, but personally, any time that I find a platform that's going to add some special feature that's not available in other platforms, I tend to shy away from that because I don't like to get locked into a platform
So start building your application locally and then if there's a feature that you think you're missing, then go research that and see if it's specific to Versel, but personally, any time that I find a platform that's going to add some special feature that's not available in other platforms, I tend to shy away from that because I don't like to get locked into a platform Like I want to use NextJS to build an app, but I don't want to be locked into just deploying it on Versel. I want to deploy it on DigitalOcean or Linode or AWS or Azure or something like that. I want to have that flexibility and choice
Like I want to use NextJS to build an app, but I don't want to be locked into just deploying it on Versel. I want to deploy it on DigitalOcean or Linode or AWS or Azure or something like that. I want to have that flexibility and choice So any time that you find something that kind of locks you into a specific direction, that's usually a red flag to me, and I probably would not personally want to take a dependency on whatever that feature is. Homey, I feel like we need to tweet them and ask them. I'll do that. Good idea
So any time that you find something that kind of locks you into a specific direction, that's usually a red flag to me, and I probably would not personally want to take a dependency on whatever that feature is. Homey, I feel like we need to tweet them and ask them. I'll do that. Good idea Good idea. We can do that after this, but yes. Needs based decision making. Thank you. Yes, thank you, Homey. Great question. And awesome. It looks like we walked away with a lot of deducesless, at least for myself, of breaking down a lot of what I was learning to ask the questions
Good idea. We can do that after this, but yes. Needs based decision making. Thank you. Yes, thank you, Homey. Great question. And awesome. It looks like we walked away with a lot of deducesless, at least for myself, of breaking down a lot of what I was learning to ask the questions Because today I was just more like observing it because I was like, I kind of get it, don't get it. And that's one of the things I think is awesome with these show in these videos is I at least know what to go look for instead of just not knowing what I don't know
Because today I was just more like observing it because I was like, I kind of get it, don't get it. And that's one of the things I think is awesome with these show in these videos is I at least know what to go look for instead of just not knowing what I don't know Once you use doctor, I'm telling you, you're going to use it like every day. Like I use doctor every day. I also use Kubernetes every day mainly because I'm building training on it. But I do have a cluster running on a Linux machine at home too
Once you use doctor, I'm telling you, you're going to use it like every day. Like I use doctor every day. I also use Kubernetes every day mainly because I'm building training on it. But I do have a cluster running on a Linux machine at home too And it's just like, I'm always like, OK, I need to use doctor to run this task or whatever
And it's just like, I'm always like, OK, I need to use doctor to run this task or whatever In fact, to give you a practical application of something that I actually use at home like in production at home is I just have a little, you know, a Raspberry Pi is, it's like a, I don't have one handy right now. But there's just these little like micro single board computers
In fact, to give you a practical application of something that I actually use at home like in production at home is I just have a little, you know, a Raspberry Pi is, it's like a, I don't have one handy right now. But there's just these little like micro single board computers And I've got a bunch of them because they're dirt cheap to buy. But you can run different applications like InfluxDB on them. And so I use doctor to run this InfluxDB web application. And if you want, I can actually show you what it looks like. But it's really cool
And I've got a bunch of them because they're dirt cheap to buy. But you can run different applications like InfluxDB on them. And so I use doctor to run this InfluxDB web application. And if you want, I can actually show you what it looks like. But it's really cool Basically, just allows you to store metrics and graph metrics. Uh oh. Maybe, maybe. Is it going to load? Here, I'll go back to us and then. That's good. There we go. Cool. OK, there we go. So this is InfluxDB
Basically, just allows you to store metrics and graph metrics. Uh oh. Maybe, maybe. Is it going to load? Here, I'll go back to us and then. That's good. There we go. Cool. OK, there we go. So this is InfluxDB Again, basically a single command to launch it just like we had with Neo4j or any other container-based application. But what you can do is you can create these buckets where you can store metrics inside of
Again, basically a single command to launch it just like we had with Neo4j or any other container-based application. But what you can do is you can create these buckets where you can store metrics inside of And so I've got this dashboard right over here that I've created that has, you know, like weather data. It's got performance data. So it's like pingingtreversolivan.net to see how long it takes to load
And so I've got this dashboard right over here that I've created that has, you know, like weather data. It's got performance data. So it's like pingingtreversolivan.net to see how long it takes to load So I can see, you know, how long it takes to perform DNS queries or how long it takes to access a website or what ping times I have to different devices on my network
So I can see, you know, how long it takes to perform DNS queries or how long it takes to access a website or what ping times I have to different devices on my network And so this is just a kind of a way to let gather data and then graph that data and put it into a meaningful format that you can consume personally. And InfluxDB is open source. You can free. You can run it yourself
And so this is just a kind of a way to let gather data and then graph that data and put it into a meaningful format that you can consume personally. And InfluxDB is open source. You can free. You can run it yourself And then there's a this agent called telegraph that I also run on the same machine as InfluxDB itself. And that telegraph agent is what's actually gathering the metrics and then sending them to InfluxDB here
And then there's a this agent called telegraph that I also run on the same machine as InfluxDB itself. And that telegraph agent is what's actually gathering the metrics and then sending them to InfluxDB here And then InfluxDB has what has this web interface that allows me to actually graph the metrics and kind of make sense of things. So I can add, you know, cells here. I can run queries against different bits of data
And then InfluxDB has what has this web interface that allows me to actually graph the metrics and kind of make sense of things. So I can add, you know, cells here. I can run queries against different bits of data If I want SNMP data from network devices, I can grab that and build a graph around it and then add that to my dashboard here. Here it is. So it's just really cool. It allows you to kind of graph data. That's fun. Yeah. And it's colorful and it just looks really nice and it's just so easy to use
If I want SNMP data from network devices, I can grab that and build a graph around it and then add that to my dashboard here. Here it is. So it's just really cool. It allows you to kind of graph data. That's fun. Yeah. And it's colorful and it just looks really nice and it's just so easy to use Like I love software that's easy to use. And InfluxDB is easy to use. I dig it. I dig it. And homee coder says sick dashboard. Thank you. You can build your own very easily with Docker and InfluxDB and telegraph. So that was Docker and FluxDB and what was the other one? Telegraph, TLEGR8F
Like I love software that's easy to use. And InfluxDB is easy to use. I dig it. I dig it. And homee coder says sick dashboard. Thank you. You can build your own very easily with Docker and InfluxDB and telegraph. So that was Docker and FluxDB and what was the other one? Telegraph, TLEGR8F So in the company called InfluxData that makes InfluxDB, they also make that telegraph agent, which is also open source software. And it's got all these different plugins
So in the company called InfluxData that makes InfluxDB, they also make that telegraph agent, which is also open source software. And it's got all these different plugins And I've actually got some training at CBT Nuggets that talks about how to configure telegraph, to monitor network devices and basically all the stuff that we're kind of looking at here and understand how to gather data and then send it to a database like InfluxDB
And I've actually got some training at CBT Nuggets that talks about how to configure telegraph, to monitor network devices and basically all the stuff that we're kind of looking at here and understand how to gather data and then send it to a database like InfluxDB But it also supports a lot of different output plugins. So InfluxDB is just one of the targets that's supported by telegraph
But it also supports a lot of different output plugins. So InfluxDB is just one of the targets that's supported by telegraph But if you wanted to use a different database engine besides InfluxDB, you could use, there's a whole bunch of different database engines out there that you can store data in besides InfluxDB. There's like TIDB, there's time scale DB
But if you wanted to use a different database engine besides InfluxDB, you could use, there's a whole bunch of different database engines out there that you can store data in besides InfluxDB. There's like TIDB, there's time scale DB Yeah, there's a whole bunch of different database engines out there that store metrics. Interesting. Interesting. So again, lots of homework to look into. I'm enjoying it. And thank you again for hanging out with us today Trevor. I know we all appreciate it
Yeah, there's a whole bunch of different database engines out there that store metrics. Interesting. Interesting. So again, lots of homework to look into. I'm enjoying it. And thank you again for hanging out with us today Trevor. I know we all appreciate it And y'all, if you have questions, of course, hit us up on YouTube or go hit Trevor up on Twitter and Rivet says, oh, yay! This was a great one. Rivet's a big burning question that they've been carrying around since they first heard of Docker got answered. So yay! Awesome. Awesome. Awesome
And y'all, if you have questions, of course, hit us up on YouTube or go hit Trevor up on Twitter and Rivet says, oh, yay! This was a great one. Rivet's a big burning question that they've been carrying around since they first heard of Docker got answered. So yay! Awesome. Awesome. Awesome Awesome. Awesome. And for everybody, make sure that you follow us on Twitch, have more guests like Trevor and possibly Trevor again, if we can convince them, we'll see. And thank you everyone. Bye. Thank you.
Awesome. Awesome. And for everybody, make sure that you follow us on Twitch, have more guests like Trevor and possibly Trevor again, if we can convince them, we'll see. And thank you everyone. Bye. Thank you.