Hello, hello beautiful humans welcome back to another episode of Teach and Tech and hey we are finally finally mostly because of me going back and doing learning touch with Josh Goldberg All right so it's been a hot minute since we have been streaming like oh gosh has it really been two months? Two months? Yeah it was like mid-November, you were taking it
All right so it's been a hot minute since we have been streaming like oh gosh has it really been two months? Two months? Yeah it was like mid-November, you were taking it Yeah and there's been a lot of learning since then at least on my side I mean you already know all of the text script you wrote a book so I'm like hey you know you know a lot of this coding stuff
Yeah and there's been a lot of learning since then at least on my side I mean you already know all of the text script you wrote a book so I'm like hey you know you know a lot of this coding stuff I feel like there's been a really really big shift for myself which was learning that I aid don't do things offline very well at all
I feel like there's been a really really big shift for myself which was learning that I aid don't do things offline very well at all Like if I have homework I'm not always as keen to do it if you know I'm not streaming which isn't a great feature of myself but you know it's a thing at least I've learned and the other part is learning how and I put a lot of thought in this because we're going to be starting the Python screen back again as well is how are we going to structure this to make it consumable and for myself that had a lot to do with how we approach this and really making sure that we break it down because I went through an experience where I was kind of shut down and I was like I'm never doing this and I hate that other people have been shut down and they may not know how to build the same relationships like I have or always feel like they want to reach out to other people so that being said you are an expert in this field and I'm curious before we dive into like setting up everything for learning types grouped itself can you introduce yourself a bit more and also tell us like what would you tell a newbie and how would you tell newbies to maybe approach this because I know that not everyone is like up and everybody else's grill okay hi talk to me because and shout out to Ben thank you again for another subscription yeah Ben who okay Josh all you know cool hi everyone good to be back good questions I'd say it's hard to get intent across correctly on the web and also some people aren't accustomed to that so sometimes a very reasonable help request is incorrectly received as a I haven't done any work please tell me everything request and I think it's it's on the person who is more knowledgeable in the area to try to assume like okay that's probably not what they're asking like maybe I should be evaluates like what they're actually asking which is my fancy way of saying I think you someone getting shut down for asking for help is a bad thing I don't like that um that is a great point that is a great point because I know for myself a lot of it has to do with not necessarily knowing how to ask the question and which it may seem like I'm not that I didn't do the homework but a lot of times it's me going hey I don't know how to google this because I don't know the terms but could you just like I don't need you to do the work I don't need you to necessarily like you know explain the entire thing but for example I spent like three hours trying to update my terminal like to my my home directory it's like four hours and I'm like trying all this stuff and I'm like lots of Googles and I'm looking for it on an app called hyper and I'm looking at it for like macOS and so I finally was like okay I'm gonna ask my dnd smarties because they know what's going on and there in this world and uh and the reply from Roy was I'm pretty sure you're using uh is it called a do you say it all ed as ish zsh is like I think you're using that and not bash he's like just try these two things to ensure you're using those and um then you're uh and then you should be able to google it he solved five minutes worth of knowledge like it took him probably two minutes to reply to this the three hours it took him me googling it and not getting anywhere and he was able to see that I was just incorrectly trying to google it because I don't know it and that's I think one of the hardest things to your point that people are like yo why are like why are they asking and it seems really overbearing like they're not doing the homework and hello homie happy to see you um so how do you would you suggest newbies to maybe show that they're doing more of the work or also to people being asked that to be a bit more I guess kinder or empathetic when answering the questions to not be like yo where you haven't done shit so I'm not gonna answer you those are two very good questions for the first question for newbies to show off that they've that show off to show that they've done the work it it might help you to give the high levels summary of what you've looked at so far and how much time you spent um in in the case you just described of I can never remember how I like to pronounce this let's say zsh um or bash say okay I've been trying to do this whatever upgrade bash um I've googled around these types of phrases I have tried switching apps I mod whatever macro windows xyz Linux and it's still not working here's how it's not working could could you please help me um so especially when I worked at a corporate job and had people coming to me for help I would always ask first what is the stuff you've done already because I don't want to assume they've done nothing I just I just want to know what they've done so I don't repeat myself and also I've found for myself especially and anecdotally from other people having to say what I have done so far oftentimes makes me realize oh wait I haven't done this particular thing that I know I probably should now that I'm thinking about it so it's both helpful for the person you're asking for help it depends helpful for you as the person asking how does that all sound yeah and that totally makes sense and uh something that homie said uh googling is hard when you don't know exactly what to google a hundred percent like I was googling mac stuff and yet or hyper stuff and to be honest I I thought I was googling mac but it might not have been but it didn't occur to me that there was something else like bash versus uh zsh like I knew there were two things but I figured it would just like no google doesn't know you have to break it down and I think that's a really good call out of how to tell someone when you're asking for help but also how to reply when someone was asking for help of just what have you done so far um I say that because with my experience that I went through recently I did put I was really stuck on an image and I put hey I tried this article but I'm still really stuck and I don't know why I'm stuck on this I've been replying back with the article that I already described that's just disrespectful that's not helpful and I I bring this up because I really want teach chiantep show to become accessible for everyone and make it so that way people can learn and aren't like scared of asking these questions and also for people to really learn that it's yes it can be very scary and frustrating and uh to be able to go and get into tech but it is very very there are so many dope humans that want to be able to help it is very time consuming to help one on one so how do we start changing these conversations from you know the very beginning and what up dev dev is joining us from youtube we're also streaming on twitch which is where a lot of the crowd is at if you want to join us I will I will figure out how to you know link my twitch I can do that um and then also uh Ben brings up a great point of that uh of accessibility or a great yes um I did say accessibility because I think it's so important of not only like you know captions which by the way y'all on our youtube um on miss kmundays uh oh I'm clicking thanks on miss kmundays with lora we are talking about obs and Ramon has been joining us to talk about doing live captioning which I think is really great and something that would be so helpful stream yard doesn't have that as of right now but anyway with that side note over um let's move on to so we have this really cool book and this cool project that we're going to be doing together uh of going through your book and learning some things about that's great which I'm very excited about and I'm not gonna have us go through the entire book again of like with chapters over there or anything like that yet because these are all we went through it a few months ago and what I really want to do is set up a repo in get hub that has the readme talking people through it and why talk about why readmeas are so important and then work backwards of hey so we're gonna try chapter one's project see what we can learn do without knowing anything about it and then kind of pick apart the chapter from there because something that I've learned in my own learning is without live application it's very very hard for me to learn the fundamentals if I don't know where they go which is very frustrating because this is why people tell me I get why they responded it would help if you learn the code I know what what I want to do to learn to grow I just am not great at learning the fundamentals I like doing big really difficult things first so how does that sound to you that sounds great I think whatever way you approach it whatever direction you come from whether you're going from the foundations and applying them to the code or using the code as a way to figure out what foundations you need it's these are all very valid good ways of learning so I personally am opposite from you I try to do foundations and then apply to code when I'm learning a new language and I'm really excited I think this is a good matchup that where each coming at it from a different direction and yes everyone my dog is being really annoying again today so I will be randomly trying to stop her from licking her paws and yes this is a conversation that Josh and I had a while back as well because every other Friday is learning TypeScript every opposite Friday is learning Python with automate the more and stuff and a lot of people would say don't learn two languages at once yet learning two languages at once have really been helpful because then I can actually understand what the differences are what's something that's in JavaScript or TypeScript or something like that compared to Python and when people talk about them so it's again this is all for somebody your own learning practice the way you learn I am curious for everybody listening watching or if you're watching afterwards I will love to see this in the comments how did y'all learn did you go fundamentals first did you just say hey I want to build a website so I'm going to just go figure it out as I go how did you learn to code and okay well we get that set up I am going to get our all right so teach shantak has an org now in github is very very exciting and what new as of like earlier this week and I will link that down here for us oh that's such a good wine I have coffee said I had to look at that for a second I'm like there's letters and words and I'm like I know what this says 80s computer bought at a garage cell and started playing I love that and dev said learned by practice first fundamentals later all right a gig it a gig it okay so I'm not going to go too much into like github and things like that because those are yes if you want to learn more we can do more videos on this this is something we've done before and it's always a balance of when making content if anybody's curious about this of how rudimentary you go like how begin or friendly do you go because if you don't build upon it then people aren't going to be learning with you if you go back to the very beginning every time so I will link that one really quick of just some fundamentals of github that I did with rezel who is github want to github develop developer advocates see if I can talk developer advocates hmm and this was when I was a baby learner myself because I am pretty sure this was my third or fourth string but you can also see what the differences are since I first started all right so we're gonna go into teach shantak and create a new repo maybe yay and we're gonna call it learning typescript curiosity do does any I don't know if it does this but does anyone I do do camel casing on this does github actually see camel casing I tend to do like uppercase letter first in languages that tend to do that or for like for some projects and it in it will like know that that's the normal canonical URL but it'll still work if you do the lower case so I've always been kind of nervous about that of like in what case will it not work okay okay oh I didn't even know that had a name github saves capitalizations Ben prefers keba case so learning typescript so the dashes kebab because it looks like a kebab or the letters of the little whatever vegetables on your stick I didn't know that was a thing okay makes me hungry every time that's the only reason I wouldn't want it and yeah I still do it a lot plus one think about case also plus one to Ben as a human yes yes all right and okay something that I just I'm curious about for everyone of some people have told me like you always out to get ignore some people have been like nah you don't really need to add a get ignore like what's everybody's preference on this privilege of being an audio live person I can go first I normally add a get ignore if there's anything that I know the repose gonna build that I don't wants checked in like if I'm doing typescripts ts files become js files but you don't really need to check those js files in so that but if I'm just doing like a markdown repotes like a bunch of markdown or text documents hey okay so would we just do js files or tight like would we leave the js files or would we leave the typecript files you'd leave the typecript files those are the source code and then they're built outputs which in this case are js files so if they have a typescript option in there that would be nice but I don't know how they don't oh well hey um we used to talk to get hub about that mr type script I'll get right on it I'll use all my high-level network connections in the industry to affect this change because that is something I can definitely do at the stage of my career okay um we'll leave a blank for now I'm gonna lose leave the license link for now we can talk about that another time and um coffee uh said maybe depends on tooling like if I'm gonna use an IDE that will jump will have junk I don't want in the repo good point and then also uh I think maybe I'd spin up a repo and then and add and get ignored later that's what I've been doing a lot of is adding a lot of this post because I'm just like I just need this to go right now and I don't want to think about all of that because I just uh want to get going uh what what oh homie coder are we good what what are we good about we're not good about for those who don't know homie is like one of the dopest people I've ever met um or talk to do you say met if you haven't met them in person I don't I don't know Josh have we met or have we um oh oh both of the chat thing I'm guessing there's like a misclick I don't know if we've met if like if what we have if this constant two this meeting I know people say it nice to e-meat you in emails which I've always been like yeah um as a phrase oh uh yeah thank you um so as a total side note um I feel very very fortunate to have people especially those who are streamers but also um um those who know how to deal with meanies or creepers and so Ben and homie are both moderators and they were messing with the you know cool chat features that I barely guessed your day was the first time I had a block someone and it took me like seven tries to try to like figure out how to block them um as much as I so moderators are the best and also to get back to what you were saying I think that uh I don't know especially when you talk to someone a lot like I'd be like I feel like a know them because I talk to them a lot we just like literally haven't met in person anyway enough of that so I'm gonna set up this read me to start with and this is probably my favorite part about markdown is it is very very friendly at just drag and dropping images because I and it does everything for it and tada look our faces are on it coffee yeah it was all you coffee you know wait it would it be if people didn't get enough coffee maybe something was wrong and anybody yeah okay you know I I like my cheesy puns so biggest things that we are going to do learning and y'all can totally make one of my types grip that may take me like seven times to figure out learning guide script made huge gold bird it's gold gold bird I'm not gonna lie I have actually like had to go and I might even do this um right now of going and looking and seeing how you spell your last name because I'm like is it goldberg is it gold burg with a you is it like I second guess myself every single time when trying to figure out um what to say I'll give you a tip that you will never forget that will help you spell it is like ice burg but gold which is I'm told so stupid of a tip that people remember it or you're a golden iceberg that okay so learning typescript and the biggest things we're going to do is and for those who don't know you can go back and forth from edit file over to preview to see how it's looking and one thing that I just really want to link here are put here are all of the links that we use on a regular basis which is going to be do you need me get me is the website which I'm trying to think of how to put this that's what I was thinking about when he said Ben saying uh Josh Goldberg over here like I'm gonna sink the Titanic but gold yes yes I dig this I dig this all right so we will um feel like I just want to link the but there's the starters the books right do projects I'm gonna clean it up in a second y'all before you yell at me about my markdown and then what would you call this the page like a chapter landing page I never really figured that out yeah because I feel like this is a big reason that I want to make put these as separate links in there is because the one that I just used before this was where we're looking at the projects um but if we're at the homepage I may not scroll down that is just something that I know that I may not do so I want to link the projects and uh have that but this other one is just so helpful of like just like notes with the projects maybe notes or summaries learning modules learning module makes me think of the way code academy organizes thing which is like lessons inside courses inside modules inside paths which is also a reasonable way of doing things but yeah I like summaries modules problems how about I'll put the link as summaries and then when I break it down into each of them later on or next stream who knows um I will put modules so we'll we'll do a little bit of both um everyone organizes a path module course hub etc
Like if I have homework I'm not always as keen to do it if you know I'm not streaming which isn't a great feature of myself but you know it's a thing at least I've learned and the other part is learning how and I put a lot of thought in this because we're going to be starting the Python screen back again as well is how are we going to structure this to make it consumable and for myself that had a lot to do with how we approach this and really making sure that we break it down because I went through an experience where I was kind of shut down and I was like I'm never doing this and I hate that other people have been shut down and they may not know how to build the same relationships like I have or always feel like they want to reach out to other people so that being said you are an expert in this field and I'm curious before we dive into like setting up everything for learning types grouped itself can you introduce yourself a bit more and also tell us like what would you tell a newbie and how would you tell newbies to maybe approach this because I know that not everyone is like up and everybody else's grill okay hi talk to me because and shout out to Ben thank you again for another subscription yeah Ben who okay Josh all you know cool hi everyone good to be back good questions I'd say it's hard to get intent across correctly on the web and also some people aren't accustomed to that so sometimes a very reasonable help request is incorrectly received as a I haven't done any work please tell me everything request and I think it's it's on the person who is more knowledgeable in the area to try to assume like okay that's probably not what they're asking like maybe I should be evaluates like what they're actually asking which is my fancy way of saying I think you someone getting shut down for asking for help is a bad thing I don't like that um that is a great point that is a great point because I know for myself a lot of it has to do with not necessarily knowing how to ask the question and which it may seem like I'm not that I didn't do the homework but a lot of times it's me going hey I don't know how to google this because I don't know the terms but could you just like I don't need you to do the work I don't need you to necessarily like you know explain the entire thing but for example I spent like three hours trying to update my terminal like to my my home directory it's like four hours and I'm like trying all this stuff and I'm like lots of Googles and I'm looking for it on an app called hyper and I'm looking at it for like macOS and so I finally was like okay I'm gonna ask my dnd smarties because they know what's going on and there in this world and uh and the reply from Roy was I'm pretty sure you're using uh is it called a do you say it all ed as ish zsh is like I think you're using that and not bash he's like just try these two things to ensure you're using those and um then you're uh and then you should be able to google it he solved five minutes worth of knowledge like it took him probably two minutes to reply to this the three hours it took him me googling it and not getting anywhere and he was able to see that I was just incorrectly trying to google it because I don't know it and that's I think one of the hardest things to your point that people are like yo why are like why are they asking and it seems really overbearing like they're not doing the homework and hello homie happy to see you um so how do you would you suggest newbies to maybe show that they're doing more of the work or also to people being asked that to be a bit more I guess kinder or empathetic when answering the questions to not be like yo where you haven't done shit so I'm not gonna answer you those are two very good questions for the first question for newbies to show off that they've that show off to show that they've done the work it it might help you to give the high levels summary of what you've looked at so far and how much time you spent um in in the case you just described of I can never remember how I like to pronounce this let's say zsh um or bash say okay I've been trying to do this whatever upgrade bash um I've googled around these types of phrases I have tried switching apps I mod whatever macro windows xyz Linux and it's still not working here's how it's not working could could you please help me um so especially when I worked at a corporate job and had people coming to me for help I would always ask first what is the stuff you've done already because I don't want to assume they've done nothing I just I just want to know what they've done so I don't repeat myself and also I've found for myself especially and anecdotally from other people having to say what I have done so far oftentimes makes me realize oh wait I haven't done this particular thing that I know I probably should now that I'm thinking about it so it's both helpful for the person you're asking for help it depends helpful for you as the person asking how does that all sound yeah and that totally makes sense and uh something that homie said uh googling is hard when you don't know exactly what to google a hundred percent like I was googling mac stuff and yet or hyper stuff and to be honest I I thought I was googling mac but it might not have been but it didn't occur to me that there was something else like bash versus uh zsh like I knew there were two things but I figured it would just like no google doesn't know you have to break it down and I think that's a really good call out of how to tell someone when you're asking for help but also how to reply when someone was asking for help of just what have you done so far um I say that because with my experience that I went through recently I did put I was really stuck on an image and I put hey I tried this article but I'm still really stuck and I don't know why I'm stuck on this I've been replying back with the article that I already described that's just disrespectful that's not helpful and I I bring this up because I really want teach chiantep show to become accessible for everyone and make it so that way people can learn and aren't like scared of asking these questions and also for people to really learn that it's yes it can be very scary and frustrating and uh to be able to go and get into tech but it is very very there are so many dope humans that want to be able to help it is very time consuming to help one on one so how do we start changing these conversations from you know the very beginning and what up dev dev is joining us from youtube we're also streaming on twitch which is where a lot of the crowd is at if you want to join us I will I will figure out how to you know link my twitch I can do that um and then also uh Ben brings up a great point of that uh of accessibility or a great yes um I did say accessibility because I think it's so important of not only like you know captions which by the way y'all on our youtube um on miss kmundays uh oh I'm clicking thanks on miss kmundays with lora we are talking about obs and Ramon has been joining us to talk about doing live captioning which I think is really great and something that would be so helpful stream yard doesn't have that as of right now but anyway with that side note over um let's move on to so we have this really cool book and this cool project that we're going to be doing together uh of going through your book and learning some things about that's great which I'm very excited about and I'm not gonna have us go through the entire book again of like with chapters over there or anything like that yet because these are all we went through it a few months ago and what I really want to do is set up a repo in get hub that has the readme talking people through it and why talk about why readmeas are so important and then work backwards of hey so we're gonna try chapter one's project see what we can learn do without knowing anything about it and then kind of pick apart the chapter from there because something that I've learned in my own learning is without live application it's very very hard for me to learn the fundamentals if I don't know where they go which is very frustrating because this is why people tell me I get why they responded it would help if you learn the code I know what what I want to do to learn to grow I just am not great at learning the fundamentals I like doing big really difficult things first so how does that sound to you that sounds great I think whatever way you approach it whatever direction you come from whether you're going from the foundations and applying them to the code or using the code as a way to figure out what foundations you need it's these are all very valid good ways of learning so I personally am opposite from you I try to do foundations and then apply to code when I'm learning a new language and I'm really excited I think this is a good matchup that where each coming at it from a different direction and yes everyone my dog is being really annoying again today so I will be randomly trying to stop her from licking her paws and yes this is a conversation that Josh and I had a while back as well because every other Friday is learning TypeScript every opposite Friday is learning Python with automate the more and stuff and a lot of people would say don't learn two languages at once yet learning two languages at once have really been helpful because then I can actually understand what the differences are what's something that's in JavaScript or TypeScript or something like that compared to Python and when people talk about them so it's again this is all for somebody your own learning practice the way you learn I am curious for everybody listening watching or if you're watching afterwards I will love to see this in the comments how did y'all learn did you go fundamentals first did you just say hey I want to build a website so I'm going to just go figure it out as I go how did you learn to code and okay well we get that set up I am going to get our all right so teach shantak has an org now in github is very very exciting and what new as of like earlier this week and I will link that down here for us oh that's such a good wine I have coffee said I had to look at that for a second I'm like there's letters and words and I'm like I know what this says 80s computer bought at a garage cell and started playing I love that and dev said learned by practice first fundamentals later all right a gig it a gig it okay so I'm not going to go too much into like github and things like that because those are yes if you want to learn more we can do more videos on this this is something we've done before and it's always a balance of when making content if anybody's curious about this of how rudimentary you go like how begin or friendly do you go because if you don't build upon it then people aren't going to be learning with you if you go back to the very beginning every time so I will link that one really quick of just some fundamentals of github that I did with rezel who is github want to github develop developer advocates see if I can talk developer advocates hmm and this was when I was a baby learner myself because I am pretty sure this was my third or fourth string but you can also see what the differences are since I first started all right so we're gonna go into teach shantak and create a new repo maybe yay and we're gonna call it learning typescript curiosity do does any I don't know if it does this but does anyone I do do camel casing on this does github actually see camel casing I tend to do like uppercase letter first in languages that tend to do that or for like for some projects and it in it will like know that that's the normal canonical URL but it'll still work if you do the lower case so I've always been kind of nervous about that of like in what case will it not work okay okay oh I didn't even know that had a name github saves capitalizations Ben prefers keba case so learning typescript so the dashes kebab because it looks like a kebab or the letters of the little whatever vegetables on your stick I didn't know that was a thing okay makes me hungry every time that's the only reason I wouldn't want it and yeah I still do it a lot plus one think about case also plus one to Ben as a human yes yes all right and okay something that I just I'm curious about for everyone of some people have told me like you always out to get ignore some people have been like nah you don't really need to add a get ignore like what's everybody's preference on this privilege of being an audio live person I can go first I normally add a get ignore if there's anything that I know the repose gonna build that I don't wants checked in like if I'm doing typescripts ts files become js files but you don't really need to check those js files in so that but if I'm just doing like a markdown repotes like a bunch of markdown or text documents hey okay so would we just do js files or tight like would we leave the js files or would we leave the typecript files you'd leave the typecript files those are the source code and then they're built outputs which in this case are js files so if they have a typescript option in there that would be nice but I don't know how they don't oh well hey um we used to talk to get hub about that mr type script I'll get right on it I'll use all my high-level network connections in the industry to affect this change because that is something I can definitely do at the stage of my career okay um we'll leave a blank for now I'm gonna lose leave the license link for now we can talk about that another time and um coffee uh said maybe depends on tooling like if I'm gonna use an IDE that will jump will have junk I don't want in the repo good point and then also uh I think maybe I'd spin up a repo and then and add and get ignored later that's what I've been doing a lot of is adding a lot of this post because I'm just like I just need this to go right now and I don't want to think about all of that because I just uh want to get going uh what what oh homie coder are we good what what are we good about we're not good about for those who don't know homie is like one of the dopest people I've ever met um or talk to do you say met if you haven't met them in person I don't I don't know Josh have we met or have we um oh oh both of the chat thing I'm guessing there's like a misclick I don't know if we've met if like if what we have if this constant two this meeting I know people say it nice to e-meat you in emails which I've always been like yeah um as a phrase oh uh yeah thank you um so as a total side note um I feel very very fortunate to have people especially those who are streamers but also um um those who know how to deal with meanies or creepers and so Ben and homie are both moderators and they were messing with the you know cool chat features that I barely guessed your day was the first time I had a block someone and it took me like seven tries to try to like figure out how to block them um as much as I so moderators are the best and also to get back to what you were saying I think that uh I don't know especially when you talk to someone a lot like I'd be like I feel like a know them because I talk to them a lot we just like literally haven't met in person anyway enough of that so I'm gonna set up this read me to start with and this is probably my favorite part about markdown is it is very very friendly at just drag and dropping images because I and it does everything for it and tada look our faces are on it coffee yeah it was all you coffee you know wait it would it be if people didn't get enough coffee maybe something was wrong and anybody yeah okay you know I I like my cheesy puns so biggest things that we are going to do learning and y'all can totally make one of my types grip that may take me like seven times to figure out learning guide script made huge gold bird it's gold gold bird I'm not gonna lie I have actually like had to go and I might even do this um right now of going and looking and seeing how you spell your last name because I'm like is it goldberg is it gold burg with a you is it like I second guess myself every single time when trying to figure out um what to say I'll give you a tip that you will never forget that will help you spell it is like ice burg but gold which is I'm told so stupid of a tip that people remember it or you're a golden iceberg that okay so learning typescript and the biggest things we're going to do is and for those who don't know you can go back and forth from edit file over to preview to see how it's looking and one thing that I just really want to link here are put here are all of the links that we use on a regular basis which is going to be do you need me get me is the website which I'm trying to think of how to put this that's what I was thinking about when he said Ben saying uh Josh Goldberg over here like I'm gonna sink the Titanic but gold yes yes I dig this I dig this all right so we will um feel like I just want to link the but there's the starters the books right do projects I'm gonna clean it up in a second y'all before you yell at me about my markdown and then what would you call this the page like a chapter landing page I never really figured that out yeah because I feel like this is a big reason that I want to make put these as separate links in there is because the one that I just used before this was where we're looking at the projects um but if we're at the homepage I may not scroll down that is just something that I know that I may not do so I want to link the projects and uh have that but this other one is just so helpful of like just like notes with the projects maybe notes or summaries learning modules learning module makes me think of the way code academy organizes thing which is like lessons inside courses inside modules inside paths which is also a reasonable way of doing things but yeah I like summaries modules problems how about I'll put the link as summaries and then when I break it down into each of them later on or next stream who knows um I will put modules so we'll we'll do a little bit of both um everyone organizes a path module course hub etc it's fun oh it's true I have done multiple companies and everybody does it differently and you have to like noteate which one like what the string or path is big downs I'm just putting that there so I remember put it there so I am curious and this is me being like I've been coding for like six months to those who code like daily and it paid to do this of do you go through and say like do this where you're like I'm just gonna link it all and then go back and actually make it work or do you make sure that you're putting in the links properly about like while you're doing it I personally I think it's more efficient to do what you were doing just like put all this stuff there and then later on fix it up because you never know what you're gonna end up removing or changing so you know figure out what you want to then make it nice and tidy that's how I code I like get get the logic to be generally what I think will work and then I like go through with a you know an actual I first screwed me and fix it up
it's fun oh it's true I have done multiple companies and everybody does it differently and you have to like noteate which one like what the string or path is big downs I'm just putting that there so I remember put it there so I am curious and this is me being like I've been coding for like six months to those who code like daily and it paid to do this of do you go through and say like do this where you're like I'm just gonna link it all and then go back and actually make it work or do you make sure that you're putting in the links properly about like while you're doing it I personally I think it's more efficient to do what you were doing just like put all this stuff there and then later on fix it up because you never know what you're gonna end up removing or changing so you know figure out what you want to then make it nice and tidy that's how I code I like get get the logic to be generally what I think will work and then I like go through with a you know an actual I first screwed me and fix it up Fair enough that is actually something that I recently just like hmm what am I trying to say y'all make sure you save stuff and actually upload it to wherever you're using like get hub because if you don't do that and you just keep doing stuff and saving it then um he might end up undoing something important that you did because you didn't upload it and I might have done that this last week it was not pretty I was very frustrated and I feel like that's just like you know a path you must take okay cool yay we at least can commend changes okay I want to go here I want to go here and cubby and and the going hyper yay can y'all see my terminal or hyper well enough or do you need me to make it bigger okay so oh I'm just going to shamelessly plug this because I'm very proud of it it is also the first tech writing thing I did and Laura helped me a ton with just making it even more proper of how to obtain your home directory or like what you want to use there because this helped so much on realizing and not putting stuff in my desktop or in my user folder and actually putting them in my code folder so voila I get to open it yay and cd learning types grid fantastic code this is one thing I haven't gotten fixed yet we tried we tried on a stream Laura and I tried and I'm just not determined enough to get there so I'll just go magically turn it on yay it's installed for a minute fantastic we have made progress now if I want to do the chapter is like we were talking about because we are going to do from JavaScript to TypeScript is chapter one and yes like we have and let me link this to everyone really quick so that way you can look it up yourself is it's talking about you know just the overall we did go through this in a previous stream so not going too deep into this but a brief history of JavaScript the pitfalls what TypeScript is as a programming language and it was really fun to ask Josh these in details of a programming language a type checker a compiler and a language service I will at some point get those like probably chopped out of the first one and create a video based on those because I thought those were really good and explanations of them because it was always like I don't think I ever thought of beforehand what a language service was or a compiler and we really broke it down in that stream and then TypeScript advantages freedom through a restriction feel like this is a very good one and really talks about the type of person when you're like learning of you know I like to try to break everything and then learn it instead of having restriction learning the rules and then breaking it so we're going to try learning the rules and doing things better and faster and then just getting started with everything now we have the type of leader so do do do do do go on over here to be able to get it to store locally and have all of the projects quick question and this is me not knowing get hub actions well enough would you is this something that if I add the repo with words Gen words can I add this within the learning Python repo cloning and to side the learning pie art learning Python learning type script repo and still be able to go into that folder and get it to load even though they are both get repos you could try okay I don't know it's a good question because I feel like this would be a little easier for people to do then if I just like copy and paste things over I just want them to be able to access it a little easier than trying to remember like where did Gen do all this stuff yeah let's find out so we're in learning type script let's paste oh did I just hit copy to you how you trying to did you mean like get clone paste yeah I think you just pasted yeah what did I didn't copy the entire thing for the clone yeah it just copies the URL oh that's weird so why did this one copy the get hub repo clone when this one only copied the URL were you in get hub CLI when you copied like a little subsection huh that was just right here see yeah that one's in get hub CLI oh then why didn't this one go to get hub CLI oh because I didn't manually like move this one earlier it was just on it already in thresting oh that's a good call coffee coffee just called out first off that I was just facing the URL 100% and then offy also wow words Gen maybe the clone does something they haven't clicked it before I use the get hub CLI quite a bit and I love that we are doing this live even though I felt completely silly that I didn't realize that it was that on it definitely is small things like this that can really frustrate people being me I can get really frustrated when I don't notice those small things that make a huge difference like it probably could have taken me like an hour to do that so good hey we got projects yay bye all right so to hopefully make this a little easier on all of us we're going to put these side by side help me make them big enough if for maybe another time there's a really good app called rectangle for Mac that gives you really nice keyboard shortcuts and like snapping behaviors you can like drag and drop a window to the left side of the screen and it'll snap to 50% of your screen with oh that is I thought I closed a different one but apparently I didn't and that is phenomenal um what is it called rectangle I am a big believer that although I have a bunch of Macs and like use Macs for developments because I have to I really like the windows desktop interface a lot more yes I yes yes I'm going to add this to my tutorial list y'all really quick because this is something as as funny as it's me sound I had to put in my to do list yesterday to reply to a lot of you because I was like I haven't replied to homey I didn't reply to me oh my god so I'm just gonna put in my to do list so that way I remember later yay and that's actually really exciting the way at least you it sounds like it would work because especially while streaming it can be really annoying to have to like manually do all of this yeah okay so we and y'all if you didn't see it this is already what I'm doing is uh I just went with step one and was like oh okay let's do this without reading all of the steps or directions so we're now gonna read the directions and see if this is what I missed so sweet we went to the project um okay um and Ben is saying that there are there's a few uh window manager apps in the rectate rectangle camp uh def get at least one of them I feel like this will like save my life I'm so excited about it because especially if I'm doing stuff from my laptop it's so frustrating okay so we need to go oh so we didn't even really need VS code oh this is exciting um something that we were talking about and I know not everybody was on this stream yesterday with distribute aid what is a jest a jest is JavaScript testing it's a library that you can run that runs your code tests and then lets you know how many tests passed or failed is that sound reasonable yeah uh that is something that I think um when we were streaming yesterday they the dog and I were just not getting along at all she was barking at everything so it was a lot of me going on mute a lot um but they brought up I don't even know if this is it no a website that also explained a lot of it to you maybe it was this now I'll look it up later but uh that's a guess you all my chair just broke well something broke and now it's a wobbly oh that's it that's entertaining all right well I'm still here so we're good so back to this one all right so in this we are going to copy but we first need to go into learning types get script projects so you've done things slightly different from the command which is fine just it's going to be slightly different words you cloned it into a folder named projects instead of a folder named learning types your projects so you can either just go to the projects folder or rename the folder to learning types give projects learning types go projects and I'm not going to lie when it comes to this stuff a lot of times I I don't know if it's called cheating or just doing things differently I'll actually just go edit it here instead and a big reason I do that is this for folder structure it still makes a lot more sense when I'm looking at it this way then folder structure going through terminal so that's comfortable I do the same named learning types good projects in kapap case happy lunchtime everyone on the east coast so that way we can actually go through the directions the way you have it said so yay all right and then npm i is that installing something yeah that's something I stand for I was like I know npm does installing a lot of things but oh I should fix that securely thing make it stop yelling about that well let's run the the audit fix yay is the code on the terminal vs code right now wait I'm not sure if I know what you mean by that question coffee this one I'm currently using hyper as my terminal right now if that helps I ended up somewhat watching um james quick like set up for terminal to make it look prettier so this is what I ended up with and what up she be thank you for the follow and yes we are like having fun having Josh breakdown typescript to very very beginner friendly i think is a lot of fun um all right so we fix the vulnerabilities we are going to cd into this is really fun to copy and paste in one terminal run the typescript compiler via the tsc script within whatever step you're working on for example start the typescript compiler on the first step and watch mode so basically at this point i'm going to be honest and i i love that we're doing this at the beginning i'm following directions but i have no idea exactly what we're doing i mean i'll see you on how i should improve the site to explain this better ones no not necessarily i'm saying that it we're doing it backwards like remember how i said i wanted to do the you know the problems or you know the the test before actually studying sure so this is me going hey what is this i want to see if i can figure it out um i would say yeah it probably does assume knowledge of npm i or npm um but this is a big thing and why i asked Josh if we could do this is typescript is so commonly talked about when talking about java script that i feel like a lot of beginners are like hey i want to learn typescript and we're a lot of people previously we're like yo you got to have very solid java script knowledge to learn typescript and so i'm going through it as i got some JavaScript knowledge a smidge a smidge so i'm going to see if i can figure it out and that i think is definitely not what typescript in general is normally the audience it gears towards but also if we were to put some in between things what would they be and i think npm is a caveat that we could put here i'd like if you want to learn more about npm and i have a really fun um air that i need to read we know i think this is a recent bug in this site where i shouldn't have been asking you to run that um command so i'm just going to say you can skip that i'm going to i'm going to fix that now on the website so just ignore the thing the mpm run tsa you can command c out of this boy about it thank you for uh beta testing for me post release yes is anybody needs me to beta test instructions i'm here for it i love learning i also am really great at not using things the way they were meant to be used so i break stuff to find bugs it's a lot of fun um i would say also um oh okay i see what you're saying coffee okay so we're going to skip that one that was fun uh and another terminal run just via the test script on whichever step you're working on for example to start tests uh for the first watch mode so let's do that what um we're going and i should put a note in here that the test will fail at first and your job is going to be to fix them yay okay so what do i have okay so test uh suit failed to run uh reference error humanoid is not defined uh and then the comments say c dot uh forward slash original dot js for their older job script code module dot exports dot humanoid equal humanoid with a capital H and then model dot exports dot robot equals robot and going through this i can run the test again and let's see what and really go back i'm going back over here of coffee just said you can insult uh TSE globally and run it without npm run they think she be said but if you can do npm run TSE doesn't it mean you can do TSE fine to um they haven't gotten to see packaged uh dot jason though i love having more ed more i don't want to say more educated more experienced people because then i'm like oh that's where you would look for that that is good to know that would make sense but all right so steps i'm gonna look at this step number one prototypes to classes i'm going to just try to fix it based on the error code because i'm stubborn and this is also i'm not great at reading directions as we can see this is why Ramon who is somebody that's been on my screen quite a bit will tell me to read things out loud so i don't skip out with them it this does hurt me a little bit because i put effort into making all these chapter readmys like or like project readmys really like flavorful and silly but and i think that's a big part is like there's so many different learning you know ways of learning and this is something that like i can do this i guess i'm just embarrassed to do it on stream and also something i'm not i'm still getting used to the fact that i can do this of for when they have steps like this of making sure i use my text to speech to actually listen to them and comprehend them where i i honestly get a little embarrassed of doing it on stream because i'm like what are people gonna hear or think if i do that and i think that is a big step of also not realizing that i can do that until the last couple years so i'm so used to also just going well i have to just figure it out without reading documentation because documentation has always been hard for me to read
Fair enough that is actually something that I recently just like hmm what am I trying to say y'all make sure you save stuff and actually upload it to wherever you're using like get hub because if you don't do that and you just keep doing stuff and saving it then um he might end up undoing something important that you did because you didn't upload it and I might have done that this last week it was not pretty I was very frustrated and I feel like that's just like you know a path you must take okay cool yay we at least can commend changes okay I want to go here I want to go here and cubby and and the going hyper yay can y'all see my terminal or hyper well enough or do you need me to make it bigger okay so oh I'm just going to shamelessly plug this because I'm very proud of it it is also the first tech writing thing I did and Laura helped me a ton with just making it even more proper of how to obtain your home directory or like what you want to use there because this helped so much on realizing and not putting stuff in my desktop or in my user folder and actually putting them in my code folder so voila I get to open it yay and cd learning types grid fantastic code this is one thing I haven't gotten fixed yet we tried we tried on a stream Laura and I tried and I'm just not determined enough to get there so I'll just go magically turn it on yay it's installed for a minute fantastic we have made progress now if I want to do the chapter is like we were talking about because we are going to do from JavaScript to TypeScript is chapter one and yes like we have and let me link this to everyone really quick so that way you can look it up yourself is it's talking about you know just the overall we did go through this in a previous stream so not going too deep into this but a brief history of JavaScript the pitfalls what TypeScript is as a programming language and it was really fun to ask Josh these in details of a programming language a type checker a compiler and a language service I will at some point get those like probably chopped out of the first one and create a video based on those because I thought those were really good and explanations of them because it was always like I don't think I ever thought of beforehand what a language service was or a compiler and we really broke it down in that stream and then TypeScript advantages freedom through a restriction feel like this is a very good one and really talks about the type of person when you're like learning of you know I like to try to break everything and then learn it instead of having restriction learning the rules and then breaking it so we're going to try learning the rules and doing things better and faster and then just getting started with everything now we have the type of leader so do do do do do go on over here to be able to get it to store locally and have all of the projects quick question and this is me not knowing get hub actions well enough would you is this something that if I add the repo with words Gen words can I add this within the learning Python repo cloning and to side the learning pie art learning Python learning type script repo and still be able to go into that folder and get it to load even though they are both get repos you could try okay I don't know it's a good question because I feel like this would be a little easier for people to do then if I just like copy and paste things over I just want them to be able to access it a little easier than trying to remember like where did Gen do all this stuff yeah let's find out so we're in learning type script let's paste oh did I just hit copy to you how you trying to did you mean like get clone paste yeah I think you just pasted yeah what did I didn't copy the entire thing for the clone yeah it just copies the URL oh that's weird so why did this one copy the get hub repo clone when this one only copied the URL were you in get hub CLI when you copied like a little subsection huh that was just right here see yeah that one's in get hub CLI oh then why didn't this one go to get hub CLI oh because I didn't manually like move this one earlier it was just on it already in thresting oh that's a good call coffee coffee just called out first off that I was just facing the URL 100% and then offy also wow words Gen maybe the clone does something they haven't clicked it before I use the get hub CLI quite a bit and I love that we are doing this live even though I felt completely silly that I didn't realize that it was that on it definitely is small things like this that can really frustrate people being me I can get really frustrated when I don't notice those small things that make a huge difference like it probably could have taken me like an hour to do that so good hey we got projects yay bye all right so to hopefully make this a little easier on all of us we're going to put these side by side help me make them big enough if for maybe another time there's a really good app called rectangle for Mac that gives you really nice keyboard shortcuts and like snapping behaviors you can like drag and drop a window to the left side of the screen and it'll snap to 50% of your screen with oh that is I thought I closed a different one but apparently I didn't and that is phenomenal um what is it called rectangle I am a big believer that although I have a bunch of Macs and like use Macs for developments because I have to I really like the windows desktop interface a lot more yes I yes yes I'm going to add this to my tutorial list y'all really quick because this is something as as funny as it's me sound I had to put in my to do list yesterday to reply to a lot of you because I was like I haven't replied to homey I didn't reply to me oh my god so I'm just gonna put in my to do list so that way I remember later yay and that's actually really exciting the way at least you it sounds like it would work because especially while streaming it can be really annoying to have to like manually do all of this yeah okay so we and y'all if you didn't see it this is already what I'm doing is uh I just went with step one and was like oh okay let's do this without reading all of the steps or directions so we're now gonna read the directions and see if this is what I missed so sweet we went to the project um okay um and Ben is saying that there are there's a few uh window manager apps in the rectate rectangle camp uh def get at least one of them I feel like this will like save my life I'm so excited about it because especially if I'm doing stuff from my laptop it's so frustrating okay so we need to go oh so we didn't even really need VS code oh this is exciting um something that we were talking about and I know not everybody was on this stream yesterday with distribute aid what is a jest a jest is JavaScript testing it's a library that you can run that runs your code tests and then lets you know how many tests passed or failed is that sound reasonable yeah uh that is something that I think um when we were streaming yesterday they the dog and I were just not getting along at all she was barking at everything so it was a lot of me going on mute a lot um but they brought up I don't even know if this is it no a website that also explained a lot of it to you maybe it was this now I'll look it up later but uh that's a guess you all my chair just broke well something broke and now it's a wobbly oh that's it that's entertaining all right well I'm still here so we're good so back to this one all right so in this we are going to copy but we first need to go into learning types get script projects so you've done things slightly different from the command which is fine just it's going to be slightly different words you cloned it into a folder named projects instead of a folder named learning types your projects so you can either just go to the projects folder or rename the folder to learning types give projects learning types go projects and I'm not going to lie when it comes to this stuff a lot of times I I don't know if it's called cheating or just doing things differently I'll actually just go edit it here instead and a big reason I do that is this for folder structure it still makes a lot more sense when I'm looking at it this way then folder structure going through terminal so that's comfortable I do the same named learning types good projects in kapap case happy lunchtime everyone on the east coast so that way we can actually go through the directions the way you have it said so yay all right and then npm i is that installing something yeah that's something I stand for I was like I know npm does installing a lot of things but oh I should fix that securely thing make it stop yelling about that well let's run the the audit fix yay is the code on the terminal vs code right now wait I'm not sure if I know what you mean by that question coffee this one I'm currently using hyper as my terminal right now if that helps I ended up somewhat watching um james quick like set up for terminal to make it look prettier so this is what I ended up with and what up she be thank you for the follow and yes we are like having fun having Josh breakdown typescript to very very beginner friendly i think is a lot of fun um all right so we fix the vulnerabilities we are going to cd into this is really fun to copy and paste in one terminal run the typescript compiler via the tsc script within whatever step you're working on for example start the typescript compiler on the first step and watch mode so basically at this point i'm going to be honest and i i love that we're doing this at the beginning i'm following directions but i have no idea exactly what we're doing i mean i'll see you on how i should improve the site to explain this better ones no not necessarily i'm saying that it we're doing it backwards like remember how i said i wanted to do the you know the problems or you know the the test before actually studying sure so this is me going hey what is this i want to see if i can figure it out um i would say yeah it probably does assume knowledge of npm i or npm um but this is a big thing and why i asked Josh if we could do this is typescript is so commonly talked about when talking about java script that i feel like a lot of beginners are like hey i want to learn typescript and we're a lot of people previously we're like yo you got to have very solid java script knowledge to learn typescript and so i'm going through it as i got some JavaScript knowledge a smidge a smidge so i'm going to see if i can figure it out and that i think is definitely not what typescript in general is normally the audience it gears towards but also if we were to put some in between things what would they be and i think npm is a caveat that we could put here i'd like if you want to learn more about npm and i have a really fun um air that i need to read we know i think this is a recent bug in this site where i shouldn't have been asking you to run that um command so i'm just going to say you can skip that i'm going to i'm going to fix that now on the website so just ignore the thing the mpm run tsa you can command c out of this boy about it thank you for uh beta testing for me post release yes is anybody needs me to beta test instructions i'm here for it i love learning i also am really great at not using things the way they were meant to be used so i break stuff to find bugs it's a lot of fun um i would say also um oh okay i see what you're saying coffee okay so we're going to skip that one that was fun uh and another terminal run just via the test script on whichever step you're working on for example to start tests uh for the first watch mode so let's do that what um we're going and i should put a note in here that the test will fail at first and your job is going to be to fix them yay okay so what do i have okay so test uh suit failed to run uh reference error humanoid is not defined uh and then the comments say c dot uh forward slash original dot js for their older job script code module dot exports dot humanoid equal humanoid with a capital H and then model dot exports dot robot equals robot and going through this i can run the test again and let's see what and really go back i'm going back over here of coffee just said you can insult uh TSE globally and run it without npm run they think she be said but if you can do npm run TSE doesn't it mean you can do TSE fine to um they haven't gotten to see packaged uh dot jason though i love having more ed more i don't want to say more educated more experienced people because then i'm like oh that's where you would look for that that is good to know that would make sense but all right so steps i'm gonna look at this step number one prototypes to classes i'm going to just try to fix it based on the error code because i'm stubborn and this is also i'm not great at reading directions as we can see this is why Ramon who is somebody that's been on my screen quite a bit will tell me to read things out loud so i don't skip out with them it this does hurt me a little bit because i put effort into making all these chapter readmys like or like project readmys really like flavorful and silly but and i think that's a big part is like there's so many different learning you know ways of learning and this is something that like i can do this i guess i'm just embarrassed to do it on stream and also something i'm not i'm still getting used to the fact that i can do this of for when they have steps like this of making sure i use my text to speech to actually listen to them and comprehend them where i i honestly get a little embarrassed of doing it on stream because i'm like what are people gonna hear or think if i do that and i think that is a big step of also not realizing that i can do that until the last couple years so i'm so used to also just going well i have to just figure it out without reading documentation because documentation has always been hard for me to read That being said we're gonna do a remote said and y'all get to hear me read out loud i'm very excited about this. All right so we used for steps we have step one and step two and i'm going to scroll down to the readme that it linked to and step one is prototypes to classes
That being said we're gonna do a remote said and y'all get to hear me read out loud i'm very excited about this. All right so we used for steps we have step one and step two and i'm going to scroll down to the readme that it linked to and step one is prototypes to classes The first project for you to overhaul hails from before the time of class syntax how primitive
The first project for you to overhaul hails from before the time of class syntax how primitive Okay i also reading out loud with like any like proper inflection is not going to happen so y'all you know try to say it yourself but also yes Josh you are much better at writing these than a lot of people because this is not how i write my readmeans my readmeans are like go here
Okay i also reading out loud with like any like proper inflection is not going to happen so y'all you know try to say it yourself but also yes Josh you are much better at writing these than a lot of people because this is not how i write my readmeans my readmeans are like go here Yeah yeah you're too much more comical. The original.js file contains the project original code for robot and humanoid functions used as classes your job is to port that code to proper ES2015 plus class classes specification and index
Yeah yeah you're too much more comical. The original.js file contains the project original code for robot and humanoid functions used as classes your job is to port that code to proper ES2015 plus class classes specification and indexjs export two classes using ES205 class syntax robot based on the robot function in original.js humanoid extending the robot class based on the humanoid function in original.js files index.js write your robot and humanoid function here index.task.s verifies robot and humanoid and solution
js export two classes using ES205 class syntax robot based on the robot function in original.js humanoid extending the robot class based on the humanoid function in original.js files index.js write your robot and humanoid function here index.task.s verifies robot and humanoid and solutionjs is the solution code so don't look at solution yet got it. I also that's a type of it should say function plural i just fixed that too. Ha ha. index.js write your robot and humanoid function here should be functions
js is the solution code so don't look at solution yet got it. I also that's a type of it should say function plural i just fixed that too. Ha ha. index.js write your robot and humanoid function here should be functions Oh i mean when i'm missing things please like actually go make sure that i'm not just missing things. No no no no to be clear you are you said it correctly i wrote it incorrectly and now i'm fixing it in the original repo. Okay so thank you good you did nothing wrong
Oh i mean when i'm missing things please like actually go make sure that i'm not just missing things. No no no no to be clear you are you said it correctly i wrote it incorrectly and now i'm fixing it in the original repo. Okay so thank you good you did nothing wrong You're welcome you're welcome and so that being said um and this is also me learning a bit of vs code and how this was uh oh this is a great question from coffee. Jen does ES205 classes mean stuff to you or would you like modern JavaScript classes to be more understandable
You're welcome you're welcome and so that being said um and this is also me learning a bit of vs code and how this was uh oh this is a great question from coffee. Jen does ES205 classes mean stuff to you or would you like modern JavaScript classes to be more understandable I'm gonna go with that um yeah it's i i meant it as ES2015 because that's the technical right like the oh okay for like what addition of JavaScript they were added in because JavaScript gets new additions roughly every year now but yeah that's that's a good question i think like are you familiar with ES2015 classes aka just modern JavaScript classes
I'm gonna go with that um yeah it's i i meant it as ES2015 because that's the technical right like the oh okay for like what addition of JavaScript they were added in because JavaScript gets new additions roughly every year now but yeah that's that's a good question i think like are you familiar with ES2015 classes aka just modern JavaScript classes Okay um yay thank you bedrock for coming and hanging out with us and everybody over there we are working on learning typescript and i am being the annoying student that is going through all of these lessons from josh's learning typescript book and doing them as i would normally do them and also getting called out that i need to practice on reading out loud and um learning more about JavaScript and typescript it is pretty isn't it it's a sudden con here i requested bird i really like birds they were kind
Okay um yay thank you bedrock for coming and hanging out with us and everybody over there we are working on learning typescript and i am being the annoying student that is going through all of these lessons from josh's learning typescript book and doing them as i would normally do them and also getting called out that i need to practice on reading out loud and um learning more about JavaScript and typescript it is pretty isn't it it's a sudden con here i requested bird i really like birds they were kind I like the bird i feel like without meaning to um i feel like are the color of our background really compliments the bird. I just assumed that was intentional
I like the bird i feel like without meaning to um i feel like are the color of our background really compliments the bird. I just assumed that was intentional It wasn't it was you and i used one and then like i set one up for ours and then homie made uh lores in my Monday strings similar that i was like i don't want them to be associated so i went and found a new one because i didn't want homie to change that one because i liked that one so much that i found this one and i was like oh they're pretty together i like this but that being said uh she be said lately they've been thinking about learning uh JavaScript or JavaScript typescript helps a buyer can read properly in the last couple months uh they've been learning typescript and JavaScript by doing at the job and they've mostly been missing missing most of the fundamentals i guess well that is where we're here and you can join us every other Friday because that's what we're going to be doing
It wasn't it was you and i used one and then like i set one up for ours and then homie made uh lores in my Monday strings similar that i was like i don't want them to be associated so i went and found a new one because i didn't want homie to change that one because i liked that one so much that i found this one and i was like oh they're pretty together i like this but that being said uh she be said lately they've been thinking about learning uh JavaScript or JavaScript typescript helps a buyer can read properly in the last couple months uh they've been learning typescript and JavaScript by doing at the job and they've mostly been missing missing most of the fundamentals i guess well that is where we're here and you can join us every other Friday because that's what we're going to be doing Oh uh coffee uh just said uh to she be uh hope they are doing better than their last job when they started they'd been doing typescript for years which meant they were using file extensions and running ancient style JavaScript code through their typescript compiler
Oh uh coffee uh just said uh to she be uh hope they are doing better than their last job when they started they'd been doing typescript for years which meant they were using file extensions and running ancient style JavaScript code through their typescript compiler All right bedrock learned uh half of typescript on the job
All right bedrock learned uh half of typescript on the job All of that just kind of sounds terrifying but also i'm trying to like remember a bit of what Josh and i went through um when we were streaming back in like November when we first went through this because there was like one thing and i so to be very uh honest y'all i technically did this test back in November
All of that just kind of sounds terrifying but also i'm trying to like remember a bit of what Josh and i went through um when we were streaming back in like November when we first went through this because there was like one thing and i so to be very uh honest y'all i technically did this test back in November I don't remember it whatsoever and something else was let's see if I go to the original actually i have to go find out projects what project are we in the type in leaf from JavaScript to typescript is the chapter so there's a folder for each chapter then the type inator is the project
I don't remember it whatsoever and something else was let's see if I go to the original actually i have to go find out projects what project are we in the type in leaf from JavaScript to typescript is the chapter so there's a folder for each chapter then the type inator is the project Ah thank you. I was looking just directly for the type inator because it was the the the project name but it makes sure it makes way more sense that it's in the chapter just not where i necessarily went
Ah thank you. I was looking just directly for the type inator because it was the the the project name but it makes sure it makes way more sense that it's in the chapter just not where i necessarily went All right so in the index right robot and humanoid functions here and i'm just gonna but to um to answer your question earlier coffee about yes uh 2015 to say it properly
All right so in the index right robot and humanoid functions here and i'm just gonna but to um to answer your question earlier coffee about yes uh 2015 to say it properly I don't think i knew and that was really a thing like i didn't necessarily know what yes 2015 was or that it was a thing or that i meant really anything a lot of what i would have done would have been like oh okay cool let's see if we can figure out the rest of it and may not have even registered what that JavaScript class classes change and there's different versions of them
I don't think i knew and that was really a thing like i didn't necessarily know what yes 2015 was or that it was a thing or that i meant really anything a lot of what i would have done would have been like oh okay cool let's see if we can figure out the rest of it and may not have even registered what that JavaScript class classes change and there's different versions of them I just would have gone oh this is Java JavaScript class of typescript uses and end of this story
I just would have gone oh this is Java JavaScript class of typescript uses and end of this story I think it's uh and and i would say definitely and as a reminder just on this one is that i am going through this very backwards of just seeing if i can figure it out instead of going through the chapter so it's definitely maybe something that he does point out we should uh you should go get his book and it is something that you can also get the PDF version for Kindle and use text-to-speech and a big reason for those who are like Jenn you can't read very well why are you why do you have a physical book and a big reason for that is because as much as i mean a text-to-speech tool i am not good at keeping notes all digitally i need to be able to physically look at things and in the order and i use this for example this is something that we typed last time be maybe maybe and we're gonna get there because i can't see my there we go is i write notes in the book and it really helps me remember things when i'm getting really stuck so to me books are for note-taking we're gonna go with that uh oh interesting um that coffee said that they've seen people from uh hundred devs learned JavaScript and sure they encounter class quite early they may and to to catch everyone up because you may not know this so uh so to someone maybe learning the last few years it might be harder to understand that class wasn't always something something there i'm paraphrasing it always there or something this is also my problem i'm reading out loud or reading in general is uh i just put words there it's really annoying a big part that i will say that i got a little stuck on classes when i was trying to figure it out for JavaScript and it actually started to make more sense when doing typescript yet i've noticed that it's not something that's used everywhere like oh i maybe it is but or i miss it but i haven't seen like when i'm working on other projects that i have to create a class of something do you always have to create a class for something in JavaScript is this the thing that i just haven't stumbled upon yet you don't i don't often use classes once in a while but um okay that's a feature this was a big part of actually why this ended up working out really well but i was on linkedin learning and classes were what i got stuck on like i was really having a hard time comprehending classes because they wanted us to pause and go to classes to put them back into the code and i'm just like and they use a backpack as an example so it just was not clicking and then when i was like hey i want to be a dev role and everyone's like you need to know tech and have content and i was like cool i'll start streaming and until we started learning typescript i have not run into classes which has given me more hope where this one course that i was stuck on it specifically needed me to do classes next and i didn't realize that you don't necessarily need classes so i'm excited that we're doing it now um and uh well let me come back to this one because it was first of better ox ed classes are for a specific programming style and coffee said languages like c sharp is it she she see c sharp yeah it was like trying to say c shelves sheli she's sally sally c shelves by the c sharp yes please trying to say c sharp okay and java more forcing you to have classes versus like java script and c plus where you can use them or not um oh i love this this is just happiness i don't see sharp i wear glasses that's just like the happiest thing for this friday thank you um so okay go back to over here of rereading all of this and talking about classes specification in index dot js export two classes using yes 2015 class syntax robot based on robot function in original js humanoid extending the robot class based on the humanoid function in the original just dot js so what i was doing when i was like trying to figure this out for a different project is i kept always selecting them and would go to definition trying to find them we're seeing if they have like references or things like that and then also something that i started doing and i'm also doing this out loud so that way people can tell me if it's like not the proper way of doing things of like yours walks me through like where they actually are but that's not always something that happens when you do it a full project is i'll just start looking for it and search it and then go see if where the original might be and where i need to change things and that can be very helpful or very overwhelming so thank you for telling me where things are in the original dot js okay so so in this and this is where i'm totally getting stuck because instead of module exports what it just be exports or no i think you could kind of ignore that part of it because either way works depending on like what system you're running in i don't normally use this is this style of things like edgel exports dot or module exports dot this is called common js modules i normally use it the newer like standard JavaScript modules called expert modules uh yeah so this is cjs i'm used to esn um so yeah if you could try removing the module dot from them and see what happens but it should work the same either way but either way it doesn't really matter like it's the same code but same result is that what you're asking i think so and thank you for the follow mr
I think it's uh and and i would say definitely and as a reminder just on this one is that i am going through this very backwards of just seeing if i can figure it out instead of going through the chapter so it's definitely maybe something that he does point out we should uh you should go get his book and it is something that you can also get the PDF version for Kindle and use text-to-speech and a big reason for those who are like Jenn you can't read very well why are you why do you have a physical book and a big reason for that is because as much as i mean a text-to-speech tool i am not good at keeping notes all digitally i need to be able to physically look at things and in the order and i use this for example this is something that we typed last time be maybe maybe and we're gonna get there because i can't see my there we go is i write notes in the book and it really helps me remember things when i'm getting really stuck so to me books are for note-taking we're gonna go with that uh oh interesting um that coffee said that they've seen people from uh hundred devs learned JavaScript and sure they encounter class quite early they may and to to catch everyone up because you may not know this so uh so to someone maybe learning the last few years it might be harder to understand that class wasn't always something something there i'm paraphrasing it always there or something this is also my problem i'm reading out loud or reading in general is uh i just put words there it's really annoying a big part that i will say that i got a little stuck on classes when i was trying to figure it out for JavaScript and it actually started to make more sense when doing typescript yet i've noticed that it's not something that's used everywhere like oh i maybe it is but or i miss it but i haven't seen like when i'm working on other projects that i have to create a class of something do you always have to create a class for something in JavaScript is this the thing that i just haven't stumbled upon yet you don't i don't often use classes once in a while but um okay that's a feature this was a big part of actually why this ended up working out really well but i was on linkedin learning and classes were what i got stuck on like i was really having a hard time comprehending classes because they wanted us to pause and go to classes to put them back into the code and i'm just like and they use a backpack as an example so it just was not clicking and then when i was like hey i want to be a dev role and everyone's like you need to know tech and have content and i was like cool i'll start streaming and until we started learning typescript i have not run into classes which has given me more hope where this one course that i was stuck on it specifically needed me to do classes next and i didn't realize that you don't necessarily need classes so i'm excited that we're doing it now um and uh well let me come back to this one because it was first of better ox ed classes are for a specific programming style and coffee said languages like c sharp is it she she see c sharp yeah it was like trying to say c shelves sheli she's sally sally c shelves by the c sharp yes please trying to say c sharp okay and java more forcing you to have classes versus like java script and c plus where you can use them or not um oh i love this this is just happiness i don't see sharp i wear glasses that's just like the happiest thing for this friday thank you um so okay go back to over here of rereading all of this and talking about classes specification in index dot js export two classes using yes 2015 class syntax robot based on robot function in original js humanoid extending the robot class based on the humanoid function in the original just dot js so what i was doing when i was like trying to figure this out for a different project is i kept always selecting them and would go to definition trying to find them we're seeing if they have like references or things like that and then also something that i started doing and i'm also doing this out loud so that way people can tell me if it's like not the proper way of doing things of like yours walks me through like where they actually are but that's not always something that happens when you do it a full project is i'll just start looking for it and search it and then go see if where the original might be and where i need to change things and that can be very helpful or very overwhelming so thank you for telling me where things are in the original dot js okay so so in this and this is where i'm totally getting stuck because instead of module exports what it just be exports or no i think you could kind of ignore that part of it because either way works depending on like what system you're running in i don't normally use this is this style of things like edgel exports dot or module exports dot this is called common js modules i normally use it the newer like standard JavaScript modules called expert modules uh yeah so this is cjs i'm used to esn um so yeah if you could try removing the module dot from them and see what happens but it should work the same either way but either way it doesn't really matter like it's the same code but same result is that what you're asking i think so and thank you for the follow mr software because when i was working on a different project i thought it had more of like uh yeah it would be more just like this where it was export but i thought it would be like export instead of dot robot it would be just like export robot equals robot without the dot but in my just maybe remembering incorrectly which is definitely possible of what an export would be yes i think your halfway between the style or the the form of exports that's used right now in the repo and maybe like the new exports or like in different languages exports okay so step in the specification export two classes in the uh yes 2015 class syntax so those already done and then in original dot js so this is the so you honestly you don't really need to go through this lesson right if you don't this might just be a good exploration of how the projects are set up but the intent of the lesson is that you have this old style of job script code and in the in the chapter one of the things that covers is there are like new ways of doing things and old ways of doing things in job script because the language has been improving over the years and one of the like there's an old way and there's a new way things as classes where this was the old way of writing classes you didn't actually use the word class you made a function excuse me and then it uh put stuff on the functions prototype like robots
software because when i was working on a different project i thought it had more of like uh yeah it would be more just like this where it was export but i thought it would be like export instead of dot robot it would be just like export robot equals robot without the dot but in my just maybe remembering incorrectly which is definitely possible of what an export would be yes i think your halfway between the style or the the form of exports that's used right now in the repo and maybe like the new exports or like in different languages exports okay so step in the specification export two classes in the uh yes 2015 class syntax so those already done and then in original dot js so this is the so you honestly you don't really need to go through this lesson right if you don't this might just be a good exploration of how the projects are set up but the intent of the lesson is that you have this old style of job script code and in the in the chapter one of the things that covers is there are like new ways of doing things and old ways of doing things in job script because the language has been improving over the years and one of the like there's an old way and there's a new way things as classes where this was the old way of writing classes you didn't actually use the word class you made a function excuse me and then it uh put stuff on the functions prototype like robotsprototype
prototypeannounce equals function announce um but if this isn't necessary for learning type script this is just like a exercise to get used to things ahead of time so if you personally don't juggle with classes you can just skip this okay up to you yeah and i think that uh is an interesting way of putting things and and could also be why i'm also struggling so much as with classes still they just don't click and um coffee said uh they think many learners might start off with website code that isn't like library with exports this is possibly another way uh to confuse learners in lesson one and also i think uh yeah that's fair uh they're not super into npm but have a vague recollection recollection recollection right uh about uh like common js still being recommended for reasons that's good feedback i'd plus want it um sometimes yeah common js the old style of modules some platforms or like some libraries or frameworks haven't been set up to support the new version of modules so sometimes you do have to use common js i think that's why i use it here but uh okay yeah okay cool like without even realizing it like a first off i think this has been just like such a great exercise on how to say this of like cool like for people that aren't the best like me at following directions this is a really good example of why it's important to go back and follow the directions and also like a bunch of different ways that we can um like google things and set them up but also like um because as a reminder to everybody that's been hanging out with us today or may tune in later on is i did not read the chapter so i was just winging it um and i think that's very interesting because many many people i think when tackling things nowadays they're they do that they just kind of like skip ahead and also um or their the directions are not as entertaining which yours are entertaining oh y'all we need to talk about this though this is like a really big reason why you should follow directions and not just skip ahead like because um is there are funny things at the beginning of every one of them every chapter and you should read them is it's what uh so uh chapter one is from JavaScript to TypeScript JavaScript today's course browsers decades past beauty of the web it's a hiku okay well i don't probably read it in the proper way of reading them but everybody should um i like the hikus and this also gave me more of a way that i think as if i were to say to newbies of going through this of like hey if you're just wanting to start learning TypeScript and things and you don't want to compare to JavaScript because sometimes that's not always the easiest or want to deal with classes maybe skip chapter one because knowing me if it wasn't for like all the support here and i really appreciate everybody is i would have been like well this isn't this isn't clicking so i may be like okay i'm not going to learn it not because i'm like oh my god i can't like figure it out but like a lot of times since i'm so used to having to just like pick it up very quickly and move with it i don't always know how to study or properly google things and i think this is such a good way of reminding people if a chapter doesn't make sense and this is not too josh's book this is literally to anything if one chapter doesn't make sense you can go around it and go learn other things and maybe that chapter will start to make sense and that is a big thing that i wish i could tell all learners in any topic because when i was building my website this weekend and trying to do things i kept having to remind myself i'm very stuck on this problem there's no reason i need to do this specific problem right now i will go try something else thank you for the gen rant of if something doesn't click go do something else for a bit it and thank you josh for you know being here and doing this because this is i think this is a really good way of newbies also seeing that it's not something that can't may automatically click for people like we had a lot of engagement from the audience and thank you everyone that showed up that was also asking questions because typescript is a very i don't i don't want to see difficult i want to see you knew with thought process like it's harder to put together the metha methodology and thought mapping into place to be able to comprehend it and that takes time it's more time consuming than anything there's a difference between difficult and different yes yes and i would say that typescript is different not difficult at least when i've been able to use it in other projects but it's definitely something i want to practice more and this is really exciting and i'm so grateful that josh has come on to do this and also so with this being done every other friday and something that we have talked about for a while but i really dropped the ball with the holidays is even if josh is unavailable for typescript or lore is not available for when we talk about python is i'm just gonna you know keep showing up and do it by myself there's more going to see what happens might look a lot different because i might try to skip through reading something and then josh will be like i'll just have josh's like voices my head going but i put effort into it and it'll be funny not like everybody else's that's my impression of me remembering that i actually do enjoy reading your writing instead of that is just a normal like textbook all right y'all i feel like this is a really good breaking point and on the reading page for each chapter i will be putting the link to the video stream so that way if you're like wanting to skip around or try it you can go through that and look at the chapters and also it will have a link to the projects everything we've talked about please let us know in first off to everybody that's hanging out with us anything else you want to ask josh before we let him go for the day and thank you for joining chibi chibi i have questions josh what headphones are you using
announce equals function announce um but if this isn't necessary for learning type script this is just like a exercise to get used to things ahead of time so if you personally don't juggle with classes you can just skip this okay up to you yeah and i think that uh is an interesting way of putting things and and could also be why i'm also struggling so much as with classes still they just don't click and um coffee said uh they think many learners might start off with website code that isn't like library with exports this is possibly another way uh to confuse learners in lesson one and also i think uh yeah that's fair uh they're not super into npm but have a vague recollection recollection recollection right uh about uh like common js still being recommended for reasons that's good feedback i'd plus want it um sometimes yeah common js the old style of modules some platforms or like some libraries or frameworks haven't been set up to support the new version of modules so sometimes you do have to use common js i think that's why i use it here but uh okay yeah okay cool like without even realizing it like a first off i think this has been just like such a great exercise on how to say this of like cool like for people that aren't the best like me at following directions this is a really good example of why it's important to go back and follow the directions and also like a bunch of different ways that we can um like google things and set them up but also like um because as a reminder to everybody that's been hanging out with us today or may tune in later on is i did not read the chapter so i was just winging it um and i think that's very interesting because many many people i think when tackling things nowadays they're they do that they just kind of like skip ahead and also um or their the directions are not as entertaining which yours are entertaining oh y'all we need to talk about this though this is like a really big reason why you should follow directions and not just skip ahead like because um is there are funny things at the beginning of every one of them every chapter and you should read them is it's what uh so uh chapter one is from JavaScript to TypeScript JavaScript today's course browsers decades past beauty of the web it's a hiku okay well i don't probably read it in the proper way of reading them but everybody should um i like the hikus and this also gave me more of a way that i think as if i were to say to newbies of going through this of like hey if you're just wanting to start learning TypeScript and things and you don't want to compare to JavaScript because sometimes that's not always the easiest or want to deal with classes maybe skip chapter one because knowing me if it wasn't for like all the support here and i really appreciate everybody is i would have been like well this isn't this isn't clicking so i may be like okay i'm not going to learn it not because i'm like oh my god i can't like figure it out but like a lot of times since i'm so used to having to just like pick it up very quickly and move with it i don't always know how to study or properly google things and i think this is such a good way of reminding people if a chapter doesn't make sense and this is not too josh's book this is literally to anything if one chapter doesn't make sense you can go around it and go learn other things and maybe that chapter will start to make sense and that is a big thing that i wish i could tell all learners in any topic because when i was building my website this weekend and trying to do things i kept having to remind myself i'm very stuck on this problem there's no reason i need to do this specific problem right now i will go try something else thank you for the gen rant of if something doesn't click go do something else for a bit it and thank you josh for you know being here and doing this because this is i think this is a really good way of newbies also seeing that it's not something that can't may automatically click for people like we had a lot of engagement from the audience and thank you everyone that showed up that was also asking questions because typescript is a very i don't i don't want to see difficult i want to see you knew with thought process like it's harder to put together the metha methodology and thought mapping into place to be able to comprehend it and that takes time it's more time consuming than anything there's a difference between difficult and different yes yes and i would say that typescript is different not difficult at least when i've been able to use it in other projects but it's definitely something i want to practice more and this is really exciting and i'm so grateful that josh has come on to do this and also so with this being done every other friday and something that we have talked about for a while but i really dropped the ball with the holidays is even if josh is unavailable for typescript or lore is not available for when we talk about python is i'm just gonna you know keep showing up and do it by myself there's more going to see what happens might look a lot different because i might try to skip through reading something and then josh will be like i'll just have josh's like voices my head going but i put effort into it and it'll be funny not like everybody else's that's my impression of me remembering that i actually do enjoy reading your writing instead of that is just a normal like textbook all right y'all i feel like this is a really good breaking point and on the reading page for each chapter i will be putting the link to the video stream so that way if you're like wanting to skip around or try it you can go through that and look at the chapters and also it will have a link to the projects everything we've talked about please let us know in first off to everybody that's hanging out with us anything else you want to ask josh before we let him go for the day and thank you for joining chibi chibi i have questions josh what headphones are you using Bose quiet comfort 35 some some some variant of them the type it's relative in your they have usbc i tried the Bose noise canceling 700s and they were fine little not cheaper flims even like a little less sturdy than these classics and they had like the situation with a whole headphone was like a capacitive touch thingy so like every time you like adjust it you could accidentally turn the volume on or beat yourself really annoying you would don't like that yeah but i really like the quiet comforts that's a good lie it's like 45 s or something maybe i don't know where my headphones are i was actually looking for them i have a very old school version of them i have quiet comfort 35s from 2018 i think so mine are still the micro usb's and very frustrating so i've been going okay these are still really good quality i cannot like convince myself to go upgrade and for those who may have questions about streaming feel free to join in and ask questions about that too because josh is a fellow streamer and if you don't already follow josh go follow josh on streaming because then you can ask questions there and i don't know shout out how do you do shout out
Bose quiet comfort 35 some some some variant of them the type it's relative in your they have usbc i tried the Bose noise canceling 700s and they were fine little not cheaper flims even like a little less sturdy than these classics and they had like the situation with a whole headphone was like a capacitive touch thingy so like every time you like adjust it you could accidentally turn the volume on or beat yourself really annoying you would don't like that yeah but i really like the quiet comforts that's a good lie it's like 45 s or something maybe i don't know where my headphones are i was actually looking for them i have a very old school version of them i have quiet comfort 35s from 2018 i think so mine are still the micro usb's and very frustrating so i've been going okay these are still really good quality i cannot like convince myself to go upgrade and for those who may have questions about streaming feel free to join in and ask questions about that too because josh is a fellow streamer and if you don't already follow josh go follow josh on streaming because then you can ask questions there and i don't know shout out how do you do shout out shout out oh hey my goal for the beginning of this year is to figure out stream elements i just haven't even tried that till now oh we might be getting somewhere josh go great okay yes that could be like a full like minute just to get the shout out out but go follow josh um and that is it for my side i definitely will i'm scared of this journey because learning live i will say like as i grow in knowledge learning live almost seems scarier because i'm like i should be getting this by now and i feel like other people see that and they're like that should be you should be getting them by now and then i have to remember jen that's okay it's okay you can still be a newb still forever and uh i'll position a research yeah plus one it's okay to not know part of being a streamer for me has been being okay with other people seeing me flail and suffer which i think is a good thing yes yes i um and good call coffee uh you um you know you can but uh funny enough you you say you keep meaning to try i recently gave a talk oh hey josh i did my first talk oh congrats yeah i knew my first go for the stock i'm very excited about this um and it was actually i i don't know if it's out there yet and i'm uh i'm gonna go look hold on before i tell you guys the title i want to tell y'all i want to see if it's live yet because if it is it has everything to do with if somebody wants to start streaming do do you okay that is definitely not oh my youtube i can do this i can do this okay recordings will be available soon okay well i will just link to the website so you can go do it but i gave a talk about saying fucking and it was extraordinary and i say that in the fact of coffee you could always just say fuck it and you know do it and it's scary and terrifying and i will say not for everybody because as um i have talked before about not doing things on a live unless i'm doing them live i don't always do them because i'm great at saying fucking and just doing it no fuck it we'll do it it'll be fine and we'll figure it out does that mean i'm great at strategy there is that and it is a very fine balance and this is why i have a lot of people around me that are very strategic and do things very methodically because i'm the opposite and that is just one big thing that if you need encouragement to do something when this talk is out you should walk it very excited because i had like three days to play in front of two i look forward to watching it sounds great hey all right y'all uh and thank you chaos for the follow i appreciate it let's win at least let's go rage all to a channel oh i haven't seen them for a while i feel like trash dev is really funny so oh but next online literally his username is niki online and niki is in there so therefore we're gonna go to next because niki is the best so y'all are about to get rated and i don't know if anybody else announces it or just does it but i'm not great at multitasking so that's why i just tell people they're gonna get rated okay bye everyone
shout out oh hey my goal for the beginning of this year is to figure out stream elements i just haven't even tried that till now oh we might be getting somewhere josh go great okay yes that could be like a full like minute just to get the shout out out but go follow josh um and that is it for my side i definitely will i'm scared of this journey because learning live i will say like as i grow in knowledge learning live almost seems scarier because i'm like i should be getting this by now and i feel like other people see that and they're like that should be you should be getting them by now and then i have to remember jen that's okay it's okay you can still be a newb still forever and uh i'll position a research yeah plus one it's okay to not know part of being a streamer for me has been being okay with other people seeing me flail and suffer which i think is a good thing yes yes i um and good call coffee uh you um you know you can but uh funny enough you you say you keep meaning to try i recently gave a talk oh hey josh i did my first talk oh congrats yeah i knew my first go for the stock i'm very excited about this um and it was actually i i don't know if it's out there yet and i'm uh i'm gonna go look hold on before i tell you guys the title i want to tell y'all i want to see if it's live yet because if it is it has everything to do with if somebody wants to start streaming do do you okay that is definitely not oh my youtube i can do this i can do this okay recordings will be available soon okay well i will just link to the website so you can go do it but i gave a talk about saying fucking and it was extraordinary and i say that in the fact of coffee you could always just say fuck it and you know do it and it's scary and terrifying and i will say not for everybody because as um i have talked before about not doing things on a live unless i'm doing them live i don't always do them because i'm great at saying fucking and just doing it no fuck it we'll do it it'll be fine and we'll figure it out does that mean i'm great at strategy there is that and it is a very fine balance and this is why i have a lot of people around me that are very strategic and do things very methodically because i'm the opposite and that is just one big thing that if you need encouragement to do something when this talk is out you should walk it very excited because i had like three days to play in front of two i look forward to watching it sounds great hey all right y'all uh and thank you chaos for the follow i appreciate it let's win at least let's go rage all to a channel oh i haven't seen them for a while i feel like trash dev is really funny so oh but next online literally his username is niki online and niki is in there so therefore we're gonna go to next because niki is the best so y'all are about to get rated and i don't know if anybody else announces it or just does it but i'm not great at multitasking so that's why i just tell people they're gonna get rated okay bye everyone