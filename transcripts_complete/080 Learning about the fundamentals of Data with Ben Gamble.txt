you you you gotten before I ended the... All right, hello, beautiful human. Welcome to Teach Genpec. And I need to definitely go change off the chat that we have. I had it in a test mode. I'm sure that is working. And as you can see, it is working, which is wonderful So before I so really, you know, not introduce them, I thought that's normal. And voila, okay, yay, you have it working. So welcome everybody to another episode of Teach Gen Tech. Today is the first day of trying this with OBS, I'm a guest
So before I so really, you know, not introduce them, I thought that's normal. And voila, okay, yay, you have it working. So welcome everybody to another episode of Teach Gen Tech. Today is the first day of trying this with OBS, I'm a guest So please let us know if there's anything wrong with audio or if you can't hear one of us. I mean, that's audio or can you please us. And we have Ben Gamble, who is going to be talking to us about data
So please let us know if there's anything wrong with audio or if you can't hear one of us. I mean, that's audio or can you please us. And we have Ben Gamble, who is going to be talking to us about data I'm excited about because I feel like that's what you should have talked about from the very beginning. You're in that order. Then who are you? So hi, I'm Ben Gamble. I work with Gen at Ivan, a fun data platform for all your open source data needs
I'm excited about because I feel like that's what you should have talked about from the very beginning. You're in that order. Then who are you? So hi, I'm Ben Gamble. I work with Gen at Ivan, a fun data platform for all your open source data needs I'm a bit of a strange background came originally from astrophysics into management, so let's see into loads of startups around everything from logistics to play games
I'm a bit of a strange background came originally from astrophysics into management, so let's see into loads of startups around everything from logistics to play games I'm kind of ended up here in the developer relations world because it's great fun to try and make things easy and accessible for people. So I'm happy to have you here. And if you do look together at Ivan, you can see lots of fun. I've already been there for a couple of years
I'm kind of ended up here in the developer relations world because it's great fun to try and make things easy and accessible for people. So I'm happy to have you here. And if you do look together at Ivan, you can see lots of fun. I've already been there for a couple of years So this is something that you can find in your data. So this is one of those kind of big questions and the short and the way I'm going to start with this is just kind of like a pretty broad assumption and a bold statement, which is data is useful information on a computer
So this is something that you can find in your data. So this is one of those kind of big questions and the short and the way I'm going to start with this is just kind of like a pretty broad assumption and a bold statement, which is data is useful information on a computer In this case, we're all going to be talking about computers. Otherwise, we get into a strange semantics like what is truth and all the epistemology stuff we don't want to get into because we don't have three weeks in a psychological and a loss of the degree to go all back to
In this case, we're all going to be talking about computers. Otherwise, we get into a strange semantics like what is truth and all the epistemology stuff we don't want to get into because we don't have three weeks in a psychological and a loss of the degree to go all back to So today it's about data. So data in most things is on a computer. It is stored at various places on a computer. And it does everything from choosing what your computer does next to serving you everything from the game you're playing this video file and the analytics find it
So today it's about data. So data in most things is on a computer. It is stored at various places on a computer. And it does everything from choosing what your computer does next to serving you everything from the game you're playing this video file and the analytics find it So it's a pretty big one and the majority of what it comes down to actually is access and what the data you need to do is and how you store it and how you get to it. So I'll start sharing a screen and we'll walk through some of it. Yes, and I'm just realizing that I am reading backwards of
So it's a pretty big one and the majority of what it comes down to actually is access and what the data you need to do is and how you store it and how you get to it. So I'll start sharing a screen and we'll walk through some of it. Yes, and I'm just realizing that I am reading backwards of Then, Dacha was saying, my mic is low and I turned it lower. That doesn't help. So for anyone that is joining for the first time, I am horribly dyslexic, which a lot of times means I mix words up or skip over words, even when I try not to. So please know that and bear with me
Then, Dacha was saying, my mic is low and I turned it lower. That doesn't help. So for anyone that is joining for the first time, I am horribly dyslexic, which a lot of times means I mix words up or skip over words, even when I try not to. So please know that and bear with me Feel free to repeat something if you're like, Jen, you skipped words. I hope this is better for my mic as well, especially now that I turned it up instead of down. And yes, let me know when you want to share your screen. Should be on screen now. All right, let's see if I got this right for yes
Feel free to repeat something if you're like, Jen, you skipped words. I hope this is better for my mic as well, especially now that I turned it up instead of down. And yes, let me know when you want to share your screen. Should be on screen now. All right, let's see if I got this right for yes I got to fix the date on this one to or the chat for this one. Just say, please stand by. And for those wondering, show my dot chat chat chat is from Ben Myers and they created it and it's a really useful tool that lets you use your chat wherever. So on screen, it's been fun. Okay, cool. Thank you
I got to fix the date on this one to or the chat for this one. Just say, please stand by. And for those wondering, show my dot chat chat chat is from Ben Myers and they created it and it's a really useful tool that lets you use your chat wherever. So on screen, it's been fun. Okay, cool. Thank you Thank you. Go ahead. Cool. So like the big one really and this is why we always have so probably a data is always like you're going to use it. You're going to store it. You're going to process it and you do things with it
Thank you. Go ahead. Cool. So like the big one really and this is why we always have so probably a data is always like you're going to use it. You're going to store it. You're going to process it and you do things with it And fundamentally, it's always going to be a trade off because the more data you have, the more you have to manage, the more you've got to store, the more you've got to do things with it
And fundamentally, it's always going to be a trade off because the more data you have, the more you have to manage, the more you've got to store, the more you've got to do things with it So fundamentally, like you end up with the idea of that something I have has to move around or something has to do things. So let's have a look briefly at this kind of modeling. Now, there's always a trade off here, right. And the idea really here is that your data has two main accesses
So fundamentally, like you end up with the idea of that something I have has to move around or something has to do things. So let's have a look briefly at this kind of modeling. Now, there's always a trade off here, right. And the idea really here is that your data has two main accesses There's the speed of access and then the cost of how much the thing you're putting in costs. So on your kind of computer, your CPU right in the middle of it all is what does all the heavy lifting. It's where most of the math happens. It's where most of the kind of exchange of control happens
There's the speed of access and then the cost of how much the thing you're putting in costs. So on your kind of computer, your CPU right in the middle of it all is what does all the heavy lifting. It's where most of the math happens. It's where most of the kind of exchange of control happens And then you have like a few different levels of things, but most of it can be kind of considered to be the cash. And that is the place where the data you see if you're really working on is stored and that costs a lot
And then you have like a few different levels of things, but most of it can be kind of considered to be the cash. And that is the place where the data you see if you're really working on is stored and that costs a lot Like this is in these days you have like in the levels, but the kind of L1 cash of most CPUs is less than like five megabytes. It is really expensive to get more cash, but it is unbelievably fast. And then you go down, you got things like RAM and this is now DRAM mostly and on GPUs with the G RAM
Like this is in these days you have like in the levels, but the kind of L1 cash of most CPUs is less than like five megabytes. It is really expensive to get more cash, but it is unbelievably fast. And then you go down, you got things like RAM and this is now DRAM mostly and on GPUs with the G RAM And that is very fast again, but it's volatile memory. So the power goes out, it's gone, but it's quick. And then as you go down the thing you get SSDs, so solid state drives, then you have hard disk drives
And that is very fast again, but it's volatile memory. So the power goes out, it's gone, but it's quick. And then as you go down the thing you get SSDs, so solid state drives, then you have hard disk drives And then as you go down, again, you go into the network, which is like the idea of calling AWS for S3, which was only enough goes for the whole stack again
And then as you go down, again, you go into the network, which is like the idea of calling AWS for S3, which was only enough goes for the whole stack again So every time you hit the network, you're now going into someone else's computer, therefore going down the cash again, which is why it's so slow way comparison. However, it's normally pretty cheap. You can't quite buy as many hard drives as AWS have
So every time you hit the network, you're now going into someone else's computer, therefore going down the cash again, which is why it's so slow way comparison. However, it's normally pretty cheap. You can't quite buy as many hard drives as AWS have You couldn't buy even a single millionth of the percent of the no hard drives. AWS probably has a lot of things around. Just because they have them and are ready to go. And this is where we get to this trade off kind of situation where you're trying to look at what you can do at various levels
You couldn't buy even a single millionth of the percent of the no hard drives. AWS probably has a lot of things around. Just because they have them and are ready to go. And this is where we get to this trade off kind of situation where you're trying to look at what you can do at various levels And then I quite quick question really quick because when I at least hear of types of things that the computers come with, Ram is something I hear about. And then memory
And then I quite quick question really quick because when I at least hear of types of things that the computers come with, Ram is something I hear about. And then memory And then memory. So is memory what they call cash? Ram and memory is kind of interchangeable Ram, meaning random access memory, specifically because you can randomly access any part of it originally. It was very much optimized for this semi random read thing we put a piece over here. Go get it
And then memory. So is memory what they call cash? Ram and memory is kind of interchangeable Ram, meaning random access memory, specifically because you can randomly access any part of it originally. It was very much optimized for this semi random read thing we put a piece over here. Go get it Go get it. Put a piece over there. Go get it. But over time, as for always, everything sequential is faster, but still it retains the name random access memory. And it is what often referred to as memory or main memory on your machine. Okay, we're going to go with okay, keep going
Go get it. Put a piece over there. Go get it. But over time, as for always, everything sequential is faster, but still it retains the name random access memory. And it is what often referred to as memory or main memory on your machine. Okay, we're going to go with okay, keep going I'll go back to it. No worries. So the kind of thing is if you imagine like you're now writing some code, right? And let's say you make an array. So let's just imagine over here. So you've got, I know, let's say we're going to have a list of votes to really some voting application
I'll go back to it. No worries. So the kind of thing is if you imagine like you're now writing some code, right? And let's say you make an array. So let's just imagine over here. So you've got, I know, let's say we're going to have a list of votes to really some voting application And that's what votes is now an array. And that. And let's say equals, let's give it some things. So it's going to be an array list because apparently I'm doing job today. And you make that like way bigger please. Yeah, so maybe way bigger. So, so that. Thank you. Perfect. Let's do it
And that's what votes is now an array. And that. And let's say equals, let's give it some things. So it's going to be an array list because apparently I'm doing job today. And you make that like way bigger please. Yeah, so maybe way bigger. So, so that. Thank you. Perfect. Let's do it Let's do it. Let's do it with a bit more of a syntax that makes more sense to me. So votes is so we have an integer array of votes. And it's going to be a long, right? So the key thing here is that each of these things is currently going. So I'm going to sign this out in most languages
Let's do it. Let's do it with a bit more of a syntax that makes more sense to me. So votes is so we have an integer array of votes. And it's going to be a long, right? So the key thing here is that each of these things is currently going. So I'm going to sign this out in most languages This will end up in memory. It's not going to be off. It's also known as the heap in most coding languages. So in most kind of see things like see see the class or I look kind of like strongly typed nearly always probably type, but
This will end up in memory. It's not going to be off. It's also known as the heap in most coding languages. So in most kind of see things like see see the class or I look kind of like strongly typed nearly always probably type, but Compiled languages like this to end up with the idea of the heap and the stack. These are all kind of RAM constructs. And in RAM, you end up with like if you're a sign up of an array and adding items, you're going to keep assigning a bigger and bigger chunk of RAM
Compiled languages like this to end up with the idea of the heap and the stack. These are all kind of RAM constructs. And in RAM, you end up with like if you're a sign up of an array and adding items, you're going to keep assigning a bigger and bigger chunk of RAM And so it's really fast for this reason because it's a big sequential chunk of RAM. And what happens here is as you start. So this is in RAM. And as you start, let's say loading data, some historic data from your, from your disk drives, so it's the open file and load it in
And so it's really fast for this reason because it's a big sequential chunk of RAM. And what happens here is as you start. So this is in RAM. And as you start, let's say loading data, some historic data from your, from your disk drives, so it's the open file and load it in You're going to load it into this array, which is on your RAM. And now you can act on it like count the number of votes total from the different places. Counting, let's say you're trying to count them up, you're going to go from your RAM into your cache and then run like a accumulator on it
You're going to load it into this array, which is on your RAM. And now you can act on it like count the number of votes total from the different places. Counting, let's say you're trying to count them up, you're going to go from your RAM into your cache and then run like a accumulator on it So you've got if you had a quick for loop through this. Let's say or vote in votes. And then you say, total is plus equal to the vote count on that point. Now what happens is total will keep adding up every vote as we go through this operation here that plus sign is happening from cache
So you've got if you had a quick for loop through this. Let's say or vote in votes. And then you say, total is plus equal to the vote count on that point. Now what happens is total will keep adding up every vote as we go through this operation here that plus sign is happening from cache So we load the vote number into cache. We do the addition and then we return it back to RAM. When we save this total. So this is where basically everything has to go through the various stages above it before it actually does anything useful for us
So we load the vote number into cache. We do the addition and then we return it back to RAM. When we save this total. So this is where basically everything has to go through the various stages above it before it actually does anything useful for us But basically, like if you imagine like the problem is always going to be that I can't touch the data until it's touched my cache. So it's going to go up through the cycles before actually was useful to me
But basically, like if you imagine like the problem is always going to be that I can't touch the data until it's touched my cache. So it's going to go up through the cycles before actually was useful to me And as these things get progressively smaller, so this is let's say a cache is in the order of megabytes or single as you make a bite. So you can get a number of low double digit gigabytes like you'll have to probably have 16 gigs of RAM. Well 32 gigs of RAM if you're in a good place
And as these things get progressively smaller, so this is let's say a cache is in the order of megabytes or single as you make a bite. So you can get a number of low double digit gigabytes like you'll have to probably have 16 gigs of RAM. Well 32 gigs of RAM if you're in a good place And then SSDs were talking single digit terabytes on your local machines. I've got a couple of 10 terabyte hard disk drives from yesterday lying around still somewhere
And then SSDs were talking single digit terabytes on your local machines. I've got a couple of 10 terabyte hard disk drives from yesterday lying around still somewhere And when you're into and then when you're down a bit level bit lower, you're into the, you know, you might have a kind of a, you know, 100 terabytes of like you have terabytes of storage external to yourself
And when you're into and then when you're down a bit level bit lower, you're into the, you know, you might have a kind of a, you know, 100 terabytes of like you have terabytes of storage external to yourself Right, multiple like imagine a drop box like, you know, a drop box camp comes with like two terabytes plus. I feel okay. I'm jumping around. So if we go with this, let's let's actually get back a bit. Because what happens here is always what goes on it come back to this kind of model over here
Right, multiple like imagine a drop box like, you know, a drop box camp comes with like two terabytes plus. I feel okay. I'm jumping around. So if we go with this, let's let's actually get back a bit. Because what happens here is always what goes on it come back to this kind of model over here So we start with the idea of you know, acting on data. So let's take think to me use case, which you wrote, the piece of programming on
So we start with the idea of you know, acting on data. So let's take think to me use case, which you wrote, the piece of programming on I mean, one of the ones that I was trying to set up actually when I was first interviewing with Ivan was being able to set up something I called a Tweety tag app of tagging people. Automatically, if they wanted to get a notification of a Twitter space coming up
I mean, one of the ones that I was trying to set up actually when I was first interviewing with Ivan was being able to set up something I called a Tweety tag app of tagging people. Automatically, if they wanted to get a notification of a Twitter space coming up So in this case, we have various pieces of information, you know, the list of people who, you know, list of of spaces from somewhere. So I actually do this because this actually makes more sense this way around. So we have only a list of spaces
So in this case, we have various pieces of information, you know, the list of people who, you know, list of of spaces from somewhere. So I actually do this because this actually makes more sense this way around. So we have only a list of spaces Right this big because apparently the maximum size is not actually that big. So it lists the spaces. This is spaces this of users and then we've got the idea of a map or some description of users. To the spaces. So these are people who are interested in while the other. Bigger
Right this big because apparently the maximum size is not actually that big. So it lists the spaces. This is spaces this of users and then we've got the idea of a map or some description of users. To the spaces. So these are people who are interested in while the other. Bigger Bigger. Oh, I was thinking that it's more as you're in. Because then I could actually use their font sizes without it breaking things you learn as you do. Right. And let's spell that right
Bigger. Oh, I was thinking that it's more as you're in. Because then I could actually use their font sizes without it breaking things you learn as you do. Right. And let's spell that right So you think about these, these are the kind of three main things you're dealing with isn't it? We've got a number of users, a number of spaces and they build the user to know about that space is basically saying, you know, I know that user one is interested in spaces, A, B, and D
So you think about these, these are the kind of three main things you're dealing with isn't it? We've got a number of users, a number of spaces and they build the user to know about that space is basically saying, you know, I know that user one is interested in spaces, A, B, and D So two is interested in spaces, CD and Z. And this is. And if you imagine then you've got this kind of like basically a grid. So if we. Imagine a lovely square space. And we draw some lines on it. So this is our grid of. That's learning shortcuts as you go along. So this is our users down one side
So two is interested in spaces, CD and Z. And this is. And if you imagine then you've got this kind of like basically a grid. So if we. Imagine a lovely square space. And we draw some lines on it. So this is our grid of. That's learning shortcuts as you go along. So this is our users down one side So. And then as you go across, there'll be spaces. So the idea here is that as you say. Like, so is it use it? Let's not do that. Let's go for a nice thing one user, a user, B. You just see you. And then these are the very spaces that are interested in going across here
So. And then as you go across, there'll be spaces. So the idea here is that as you say. Like, so is it use it? Let's not do that. Let's go for a nice thing one user, a user, B. You just see you. And then these are the very spaces that are interested in going across here So the idea really is that then you do is you map the subscriptions to the potentials. But the problem here is that as this list gets very big, like let's say you no longer have 10 users, which is very easy to manage. You might just store that in a way
So the idea really is that then you do is you map the subscriptions to the potentials. But the problem here is that as this list gets very big, like let's say you no longer have 10 users, which is very easy to manage. You might just store that in a way You end up, let's say saying, I now need to deal with all of Twitter. So some number of tens of millions or hundreds of millions of users. Now that actually becomes problematic because. Once these kind of storage things get very big, it stops being actually worthwhile storing it all in one place
You end up, let's say saying, I now need to deal with all of Twitter. So some number of tens of millions or hundreds of millions of users. Now that actually becomes problematic because. Once these kind of storage things get very big, it stops being actually worthwhile storing it all in one place Because even though you'd like to store it all in the round. 100 million items, let's say. So let's say 100 million. Each of these, so 100 million users, each of these users has a little bit of information attached. Let's say total size
Because even though you'd like to store it all in the round. 100 million items, let's say. So let's say 100 million. Each of these, so 100 million users, each of these users has a little bit of information attached. Let's say total size So an interesting, even just their name is probably a fan number of bytes might be 20 or 30 bytes. So just their name or their email address stuff. So you start getting quite large
So an interesting, even just their name is probably a fan number of bytes might be 20 or 30 bytes. So just their name or their email address stuff. So you start getting quite large You multiply a byte by a million, you're already at a megabyte and then we got 100 million users in Twitter, let's say. So you're 100 megabytes of just user information before we add anything other than their name. Now a user might even have a couple of megabytes information each
You multiply a byte by a million, you're already at a megabyte and then we got 100 million users in Twitter, let's say. So you're 100 megabytes of just user information before we add anything other than their name. Now a user might even have a couple of megabytes information each So now we're maybe, you know, more than gigabytes. We're now into petabytes and maybe. No terabytes, maybe petabytes of actual just user data, right? And we can't put that one computer. So I'm just going to add a little bit of information. Really quick
So now we're maybe, you know, more than gigabytes. We're now into petabytes and maybe. No terabytes, maybe petabytes of actual just user data, right? And we can't put that one computer. So I'm just going to add a little bit of information. Really quick Really quick. In case anybody didn't know this and I feel like I only know this because I used to work with physical devices. One kilobyte at 1024 kilobytes go into a megabyte. 1024 megabytes go into a gigabyte. 1024 gigabytes go into a terabyte. I was like, it sounded weird
Really quick. In case anybody didn't know this and I feel like I only know this because I used to work with physical devices. One kilobyte at 1024 kilobytes go into a megabyte. 1024 megabytes go into a gigabyte. 1024 gigabytes go into a terabyte. I was like, it sounded weird Some people say terabyte, terabyte, all of that. It actually is when we get different. So we'll just just to bite. I'm excited. I know, I know I get burned by this one regularly because I forget which is which. And I believe bits is when you get to the powers of two bytes, bits of bite
Some people say terabyte, terabyte, all of that. It actually is when we get different. So we'll just just to bite. I'm excited. I know, I know I get burned by this one regularly because I forget which is which. And I believe bits is when you get to the powers of two bytes, bits of bite One of his powers of two, one of them is round units. And I can never remember which. I'm sure the chat will help us on that one. Please. So as we kind of go down, this is like killer for the bees. Little bees on this one
One of his powers of two, one of them is round units. And I can never remember which. I'm sure the chat will help us on that one. Please. So as we kind of go down, this is like killer for the bees. Little bees on this one So as we start going down here, single users are probably into the kilobytes range. Multiple users, you're probably doing a couple of megabytes. We start getting to reasonable size applications
So as we start going down here, single users are probably into the kilobytes range. Multiple users, you're probably doing a couple of megabytes. We start getting to reasonable size applications You're into gigabytes and when you get to big global applications like a Twitter, you're into terabytes and petabytes of actual information just to handle your users. And if you remember back to our. A little model about how much space various devices have access to. Right
You're into gigabytes and when you get to big global applications like a Twitter, you're into terabytes and petabytes of actual information just to handle your users. And if you remember back to our. A little model about how much space various devices have access to. Right Right. You can lead on how much your laptop might have. So my laptop here has a one terabyte SSD. That's pretty big. But if we starting to looking to multiple tens of hundreds of terabytes, that's unfeasibly large. Just sit on one machine
Right. You can lead on how much your laptop might have. So my laptop here has a one terabyte SSD. That's pretty big. But if we starting to looking to multiple tens of hundreds of terabytes, that's unfeasibly large. Just sit on one machine Well, this one feasibly for our large bit wants to particularly into petabytes. So instead what happens is because you need to have this data stored. You probably want it on more than one machine. So one falls over. You still got something else. You end up saying, I need this somewhere else
Well, this one feasibly for our large bit wants to particularly into petabytes. So instead what happens is because you need to have this data stored. You probably want it on more than one machine. So one falls over. You still got something else. You end up saying, I need this somewhere else So this data cannot live on the machine that's doing the math directly. So now you've got this idea because you got one user. So your users, which are now in the multiple terabytes. And now per user, you have an additional field. Which is going to be the stream data. So really quick
So this data cannot live on the machine that's doing the math directly. So now you've got this idea because you got one user. So your users, which are now in the multiple terabytes. And now per user, you have an additional field. Which is going to be the stream data. So really quick So really quick. You gave us an example of like a very large one. Like Twitter would be a very large application. What is something that we may be able to associate with that may be like in the gigabytes. Okay, so let's talk about let's say we're making. So making a game. I've built a long game
So really quick. You gave us an example of like a very large one. Like Twitter would be a very large application. What is something that we may be able to associate with that may be like in the gigabytes. Okay, so let's talk about let's say we're making. So making a game. I've built a long game Us. So a game fight. If you imagine how big a game is when you download it. So doom 2016. I remember downloading and being surprised at it being about 60 gigabytes. Yeah. So that's kind of like a lot of information. You won't fit into your RAM at once unless you have a wonderfully powerful machine
Us. So a game fight. If you imagine how big a game is when you download it. So doom 2016. I remember downloading and being surprised at it being about 60 gigabytes. Yeah. So that's kind of like a lot of information. You won't fit into your RAM at once unless you have a wonderfully powerful machine Instead of your disk. Because what happens there is there's loads of these big. Most of it comes down to assets. So these are the things you can see in the game or things you can hear in the game. The music. The pictures. Like the textures which go on to the 3D objects. So 3D objects themselves
Instead of your disk. Because what happens there is there's loads of these big. Most of it comes down to assets. So these are the things you can see in the game or things you can hear in the game. The music. The pictures. Like the textures which go on to the 3D objects. So 3D objects themselves The cutscene videos. These are all big chunks of data. Right. And they're all compressed up and stored inside your on your disk drive somewhere. Whether it's an SSD or hard disk drive. It's kind of a bit of mood. Then what happens is the game as the game starts running up is as you enter a level
The cutscene videos. These are all big chunks of data. Right. And they're all compressed up and stored inside your on your disk drive somewhere. Whether it's an SSD or hard disk drive. It's kind of a bit of mood. Then what happens is the game as the game starts running up is as you enter a level It has to stream all that data off your hard drive into your RAM. And then onto your then through your CPU or your GPU to get it on screen. Because you can't see it when it's just a pile of ones and nots. You've got to actually render it. Okay. Could you. Put that into
It has to stream all that data off your hard drive into your RAM. And then onto your then through your CPU or your GPU to get it on screen. Because you can't see it when it's just a pile of ones and nots. You've got to actually render it. Okay. Could you. Put that into Put that into. Because we have the hard drive and that's the SSD HDD. Okay. Yes. Yeah. Yeah. And then what is the GPU again? So the GPU be your graphics processing unit. So up here. We're into CPU land, right? So this line here basically here is what you'll see. You live
Put that into. Because we have the hard drive and that's the SSD HDD. Okay. Yes. Yeah. Yeah. And then what is the GPU again? So the GPU be your graphics processing unit. So up here. We're into CPU land, right? So this line here basically here is what you'll see. You live You live. So if you don't know the GPU is just the graphics version of it. So this is like your graphics card. Or if you don't have one, it's in your CPU as well. Okay. So you know how sometimes you buy like a, you know, like an Nvidia card or an MD card
You live. So if you don't know the GPU is just the graphics version of it. So this is like your graphics card. Or if you don't have one, it's in your CPU as well. Okay. So you know how sometimes you buy like a, you know, like an Nvidia card or an MD card Those are those are all those are new processing type units which was exactly the same kind of logic as your CPU just architected to fit differently. So the important things are being that let's say in a game like doom
Those are those are all those are new processing type units which was exactly the same kind of logic as your CPU just architected to fit differently. So the important things are being that let's say in a game like doom You still need to pull all those level information, put it somewhere and then load it into a place that can process it before it can happen. Then when you press left on your screen and your character needs to shuffle. So one side to the other
You still need to pull all those level information, put it somewhere and then load it into a place that can process it before it can happen. Then when you press left on your screen and your character needs to shuffle. So one side to the other You need to be able to process that then change where the model which represent your character is and move them in the world. So if you imagine that has to happen either at a GPU level or a CPU level. So that has to go right to the top here. In this kind of cash zone here
You need to be able to process that then change where the model which represent your character is and move them in the world. So if you imagine that has to happen either at a GPU level or a CPU level. So that has to go right to the top here. In this kind of cash zone here So the kind of problem here is that like that data is tiny. The I press button left is a tiny piece of data. It's in the single bucket bytes. So easily cash and say use that information to change a lot of other information. So when we talk about rendering and for my understanding rendering is just
So the kind of problem here is that like that data is tiny. The I press button left is a tiny piece of data. It's in the single bucket bytes. So easily cash and say use that information to change a lot of other information. So when we talk about rendering and for my understanding rendering is just Is rendering the same as buffering. You is part of it. So buffering is part of rendering. If you imagine rendering is literally just drawing dots on your screen. Very high density of dots. So you can put picture up. You draw into a buffer
Is rendering the same as buffering. You is part of it. So buffering is part of rendering. If you imagine rendering is literally just drawing dots on your screen. Very high density of dots. So you can put picture up. You draw into a buffer And then you bang draw the next buffer and then you swap them over and over again. A buffer is a piece of memory. So actually this was very nicely into a little diagram over here. So what happens here? So by the way, if you imagine the fact of like everything that takes time
And then you bang draw the next buffer and then you swap them over and over again. A buffer is a piece of memory. So actually this was very nicely into a little diagram over here. So what happens here? So by the way, if you imagine the fact of like everything that takes time And is actually important that it happens very quickly has to happen right at the top. Okay. So what happens here is your in your GPU and your cash in there is you have your buffers. So what happens is when you want to draw your next screen. You fill the next buffer
And is actually important that it happens very quickly has to happen right at the top. Okay. So what happens here is your in your GPU and your cash in there is you have your buffers. So what happens is when you want to draw your next screen. You fill the next buffer While the first one is being drawn. Well, the first one is being transferred up to your monitor. So you fill the next one. And this is like an area of memory. And then as you continue, you'll keep swapping them around and around and around. You imagine it's like buckets throw one on screen
While the first one is being drawn. Well, the first one is being transferred up to your monitor. So you fill the next one. And this is like an area of memory. And then as you continue, you'll keep swapping them around and around and around. You imagine it's like buckets throw one on screen Fill the next one. While someone else is filling the buckets behind you. So bucket on screen. The next bucket bucket on screen. But the person down the line is going fill the bucket. Fill the bucket. Fill the bucket as they come back around. And that's really what's exactly happening
Fill the next one. While someone else is filling the buckets behind you. So bucket on screen. The next bucket bucket on screen. But the person down the line is going fill the bucket. Fill the bucket. Fill the bucket as they come back around. And that's really what's exactly happening Minus the analogy of buckets. Okay. And this is going off on a random past. A comparison of what about. CDs. Because I remember like CDs are like my disk. Walk walk. Yeah. Yeah. What? Yeah. I was like whatever they're called. And you would put it in and you'd have to wait. You'd wait. Yes
Minus the analogy of buckets. Okay. And this is going off on a random past. A comparison of what about. CDs. Because I remember like CDs are like my disk. Walk walk. Yeah. Yeah. What? Yeah. I was like whatever they're called. And you would put it in and you'd have to wait. You'd wait. Yes You'd wait. Yes. Same with PlayStation. And you'd wait. Yes. And the way. So this is actually one of the better examples here. Because what happens is. Particularly when you stored audio on a CD. You stored it in consecutive data bytes going around and around and around and around
You'd wait. Yes. Same with PlayStation. And you'd wait. Yes. And the way. So this is actually one of the better examples here. Because what happens is. Particularly when you stored audio on a CD. You stored it in consecutive data bytes going around and around and around and around So what I would do is I would spun up really fast is it would read them in order. Okay. Now, if you remember how old old disk old CD players, it took a little while to get from one track to the next
So what I would do is I would spun up really fast is it would read them in order. Okay. Now, if you remember how old old disk old CD players, it took a little while to get from one track to the next I was literally because the head had to read ahead had to move to where the start of that track was. In physical space, the motor to go and start reading
I was literally because the head had to read ahead had to move to where the start of that track was. In physical space, the motor to go and start reading Now, do you remember how they used to skip all the time if you were walking around with it? Did he skip? So this is where for a while, like this is because they were continuously reading as they were playing. Which meant they couldn't seek very fast because they couldn't hop around very easily
Now, do you remember how they used to skip all the time if you were walking around with it? Did he skip? So this is where for a while, like this is because they were continuously reading as they were playing. Which meant they couldn't seek very fast because they couldn't hop around very easily So what happened is if you just jolted it, it would miss a second of reading. And it would just go. Or jolt out for a second because the data would just be lost. So do you remember when they brought out the anti-jogged system for a while? No, no, I. I didn't get to upgrade that often
So what happened is if you just jolted it, it would miss a second of reading. And it would just go. Or jolt out for a second because the data would just be lost. So do you remember when they brought out the anti-jogged system for a while? No, no, I. I didn't get to upgrade that often So I didn't either. However, I watched a lot of that. Okay, very enough. I was very much the person who like reading also used to read all the boxes in the electronic stores. And there's like anti-jolt system
So I didn't either. However, I watched a lot of that. Okay, very enough. I was very much the person who like reading also used to read all the boxes in the electronic stores. And there's like anti-jolt system And what this was was a buffer, right? So what it did was it used to load up, you know, the next 30 seconds of music into a buffer in RAM effectively off the disk. And therefore, we always had a 30 second window. So if it lost some data, you could quickly go, oh crap, get more data
And what this was was a buffer, right? So what it did was it used to load up, you know, the next 30 seconds of music into a buffer in RAM effectively off the disk. And therefore, we always had a 30 second window. So if it lost some data, you could quickly go, oh crap, get more data And I've been missed a bit of reading because it had a bit of a buffer window to catch up. This is making sense. I'm using it and I'm going to go back to computers as well because this will help with databases. All the same. All the same. I know they're the same like, but it doesn't click. Okay
And I've been missed a bit of reading because it had a bit of a buffer window to catch up. This is making sense. I'm using it and I'm going to go back to computers as well because this will help with databases. All the same. All the same. I know they're the same like, but it doesn't click. Okay Okay. So how that's reading data, that makes sense. It makes sense to me. Now, I would say that the next part that doesn't quite make sense is working on figuring out how to say it. So if we are going from like, well, I'll just go in the progression
Okay. So how that's reading data, that makes sense. It makes sense to me. Now, I would say that the next part that doesn't quite make sense is working on figuring out how to say it. So if we are going from like, well, I'll just go in the progression Napster was the thing was the cool thing and downloading songs. And okay, so. Of course, we talked about it and I'm going to go back if we did not have enough. C P to download songs. Actually, we flip around for a second
Napster was the thing was the cool thing and downloading songs. And okay, so. Of course, we talked about it and I'm going to go back if we did not have enough. C P to download songs. Actually, we flip around for a second You've got a song and Napster, which you want to play, right? So you'll see your CPU could play that. If you have that problem is it's on Napster Napster is far away. And back when Napster was the thing, I had a guy love modem. Did you have one of those? I did. Yeah
You've got a song and Napster, which you want to play, right? So you'll see your CPU could play that. If you have that problem is it's on Napster Napster is far away. And back when Napster was the thing, I had a guy love modem. Did you have one of those? I did. Yeah Yeah. Well, which is a state side, state side. But I had an equivalent in the UK, which was equally slow and terrible. So like what happened was you remember like we had that you pressed go on the download and you do download a little bit and then we stopped playing and it was stopped
Yeah. Well, which is a state side, state side. But I had an equivalent in the UK, which was equally slow and terrible. So like what happened was you remember like we had that you pressed go on the download and you do download a little bit and then we stopped playing and it was stopped They were downloaded a bit more and it played stop. Yes, it was very aggravating. It was because that so basically this is where buffering is to come in of course is the same thing. You basically fill up a buffer and you play as much the buffers you could
They were downloaded a bit more and it played stop. Yes, it was very aggravating. It was because that so basically this is where buffering is to come in of course is the same thing. You basically fill up a buffer and you play as much the buffers you could Now, your CPU was plenty fast enough to play any song. So I fully downloaded it played seamlessly. Right, but your network was so slow that it couldn't keep up with the play speed. Right, because you couldn't download it fast enough to continually play it
Now, your CPU was plenty fast enough to play any song. So I fully downloaded it played seamlessly. Right, but your network was so slow that it couldn't keep up with the play speed. Right, because you couldn't download it fast enough to continually play it Like if you imagine we still had internet that fast, we couldn't have Spotify. We'd have to pre download all the songs. So the CPU was. 20 fast enough. Your hard drive was pretty fast enough. But your network was too slow to handle it
Like if you imagine we still had internet that fast, we couldn't have Spotify. We'd have to pre download all the songs. So the CPU was. 20 fast enough. Your hard drive was pretty fast enough. But your network was too slow to handle it This is why network is that the little swiggles are about how much slower network is. These days everything's a lot faster, but it's still comparatively slow. And, uh, bro, nifty was talking about buffer from local file or from an upload in the browser
This is why network is that the little swiggles are about how much slower network is. These days everything's a lot faster, but it's still comparatively slow. And, uh, bro, nifty was talking about buffer from local file or from an upload in the browser Buffer is the object used in a stream, which is making sense. But I guess. Okay, let's say I had the best internet in the world. Now, but everything else is the same for Napster. Yes, we're going to go with that. So take one component out of the internet
Buffer is the object used in a stream, which is making sense. But I guess. Okay, let's say I had the best internet in the world. Now, but everything else is the same for Napster. Yes, we're going to go with that. So take one component out of the internet So if it downloaded very quickly and I had to worry about the download space. That's not the CPU. That's the RAM. Oh, it's all of it. So you're CPU has nowhere near enough space to hold. Let's say it's a scale up a bit, right? We're now in the modern world
So if it downloaded very quickly and I had to worry about the download space. That's not the CPU. That's the RAM. Oh, it's all of it. So you're CPU has nowhere near enough space to hold. Let's say it's a scale up a bit, right? We're now in the modern world So rather than Napster, we're talking Netflix. Big 4K movies, right? Because it's the same problem because the pipes have just got battered. Right? So you're a 4K movie coming along, right? You're talking megabytes per second. You're CPU can't really hold more than a few seconds of movie at a time
So rather than Napster, we're talking Netflix. Big 4K movies, right? Because it's the same problem because the pipes have just got battered. Right? So you're a 4K movie coming along, right? You're talking megabytes per second. You're CPU can't really hold more than a few seconds of movie at a time Right? A 4K movie, very memorably, right? It's about 100 gigabytes. Okay. No, it's enormous. It's crazy big. Right? So what happens is you can't even fit the light in RAM. So you're learning. So it's on. Let's say it's on your local trip. I see you downloaded the movie
Right? A 4K movie, very memorably, right? It's about 100 gigabytes. Okay. No, it's enormous. It's crazy big. Right? So what happens is you can't even fit the light in RAM. So you're learning. So it's on. Let's say it's on your local trip. I see you downloaded the movie You know, you bought on Amazon Prime. We're being good citizens today. I know it's a change. I'm talking about the Napster days. But hey, you learned our lesson. We are pretty familiar. We've learned our life. Yes. And so what happens is as far as so big
You know, you bought on Amazon Prime. We're being good citizens today. I know it's a change. I'm talking about the Napster days. But hey, you learned our lesson. We are pretty familiar. We've learned our life. Yes. And so what happens is as far as so big We, we, we, you know, you know, you load up a chunk and it starts playing. Right? Only a little bit of a time goes into CPU. It's being pulled out of RAM. And your RAM is pulling it and it's being pulled into your RAM piece by piece in big chunks
We, we, we, you know, you know, you load up a chunk and it starts playing. Right? Only a little bit of a time goes into CPU. It's being pulled out of RAM. And your RAM is pulling it and it's being pulled into your RAM piece by piece in big chunks So you put big chunk into RAM that tiny chunk of that chunk goes into CPU. And it goes up this track in slower and more smaller pieces. Until you can put on a screen. But because of the higher up the stack, you go the faster everything goes. You're actually okay
So you put big chunk into RAM that tiny chunk of that chunk goes into CPU. And it goes up this track in slower and more smaller pieces. Until you can put on a screen. But because of the higher up the stack, you go the faster everything goes. You're actually okay So what goes wrong is when something can no longer keep up with the level above it. Right? So now let's say you're streaming that 4k movie. Right? And we're doing it on a bus or a train because trains and buses are slow. And Netflix is on a, you got Netflix on your phone. We've all done it
So what goes wrong is when something can no longer keep up with the level above it. Right? So now let's say you're streaming that 4k movie. Right? And we're doing it on a bus or a train because trains and buses are slow. And Netflix is on a, you got Netflix on your phone. We've all done it We've all done it. It's lovely. Right? Best things you want to train. Watch Netflix. But, you know, I've ever been on an soundtrack. You don't always get a good signal all the way through a new. That's the new signal
We've all done it. It's lovely. Right? Best things you want to train. Watch Netflix. But, you know, I've ever been on an soundtrack. You don't always get a good signal all the way through a new. That's the new signal Now you've got some of that data locally because you know you've loaded up season half a season one before you let the house. But you got to the end of what you had loaded part way through that long and track trip. And now you're going into a tunnel
Now you've got some of that data locally because you know you've loaded up season half a season one before you let the house. But you got to the end of what you had loaded part way through that long and track trip. And now you're going into a tunnel So you've got about let's say 10 minutes of pre cashed up stuff on a buffer locally. This will probably be on a disc, to be honest, because there's just so much data. And then what we'll do is that'll be loaded into RAM steadily
So you've got about let's say 10 minutes of pre cashed up stuff on a buffer locally. This will probably be on a disc, to be honest, because there's just so much data. And then what we'll do is that'll be loaded into RAM steadily And then it'll try and keep keep playing and playing until it runs out. So, if you're going to be out. Are you right there because FedEx is here. Y'all I ordered stuff and they make me want to sign it. So I will be right back. Hopefully. I'll take this as a really opportunity to draw more diagrams
And then it'll try and keep keep playing and playing until it runs out. So, if you're going to be out. Are you right there because FedEx is here. Y'all I ordered stuff and they make me want to sign it. So I will be right back. Hopefully. I'll take this as a really opportunity to draw more diagrams I'll take this as a really opportunity to draw more diagrams. I'll just take this as a really quick question. Hello again. Only three more boxes left to go today. I think this one is my watch. Yay. Oh, okay. Put that aside and let you draw your. This is this is basically what's going on here
I'll take this as a really opportunity to draw more diagrams. I'll just take this as a really quick question. Hello again. Only three more boxes left to go today. I think this one is my watch. Yay. Oh, okay. Put that aside and let you draw your. This is this is basically what's going on here So at every level. So basically the idea here is we're loading over the network. We're loading into RAM. And I actually wrote down for next stream for us to look at visuals like this now that it's starting to make sense. So good thinking. Thanks. And I can be a moment. We did do it before I
So at every level. So basically the idea here is we're loading over the network. We're loading into RAM. And I actually wrote down for next stream for us to look at visuals like this now that it's starting to make sense. So good thinking. Thanks. And I can be a moment. We did do it before I Well, could I find it difficult to draw a wall talking? Oh, because I just got a box. Open the box. I said, these. So I got caught up now. The main thing was to try and think through what to draw. So this is your SSD. This is your. Wow. Oh, yeah
Well, could I find it difficult to draw a wall talking? Oh, because I just got a box. Open the box. I said, these. So I got caught up now. The main thing was to try and think through what to draw. So this is your SSD. This is your. Wow. Oh, yeah Wow. Oh, yeah. So the thing you often forget about this tool is because everything's actually just an SVG, which is a really long string. If you paste it inside a string box, you get the full string of the SVG actually in the box itself. So I'm just something I didn't realize for a while. Okay
Wow. Oh, yeah. So the thing you often forget about this tool is because everything's actually just an SVG, which is a really long string. If you paste it inside a string box, you get the full string of the SVG actually in the box itself. So I'm just something I didn't realize for a while. Okay Okay. So now we have our little diagram. So over here we have. The network. We can always assume the network is effectively infinite. Because it's someone else's computer. And, you know, they have more and they have more stuff than us. So you can go down up these kind of chain towards the CPU
Okay. So now we have our little diagram. So over here we have. The network. We can always assume the network is effectively infinite. Because it's someone else's computer. And, you know, they have more and they have more stuff than us. So you can go down up these kind of chain towards the CPU The amount data you can put in a location goes down by an order of magnitude, nearly always, or even more. But it's a potential speed goes up so much faster. So you can keep filling it very quickly. But it's like the buckets. Right
The amount data you can put in a location goes down by an order of magnitude, nearly always, or even more. But it's a potential speed goes up so much faster. So you can keep filling it very quickly. But it's like the buckets. Right Right. So there's a swimming pool over in the corner, which are now trying to put out. Basically, should I shovel water onto the fire? Right? Last but it is very small, but very easy to throw
Right. So there's a swimming pool over in the corner, which are now trying to put out. Basically, should I shovel water onto the fire? Right? Last but it is very small, but very easy to throw And the next, but then down the chain, you're filling that bucket from, you know, you know, I kind of attend a 30 gallon drum next to you, right? Which is quick, which is still okay to fill, but not very easy to move around. And then there's a swimming pool next to that. Right
And the next, but then down the chain, you're filling that bucket from, you know, you know, I kind of attend a 30 gallon drum next to you, right? Which is quick, which is still okay to fill, but not very easy to move around. And then there's a swimming pool next to that. Right Right. And the pumping water from the swimming pool into the drum. And the swimming pool is being filled by a tiny hose, but it's from the water made. Okay. So, who in thought is your local describe on the SSD? The network is your little hose spraying the water. And it's going up to you CPU
Right. And the pumping water from the swimming pool into the drum. And the swimming pool is being filled by a tiny hose, but it's from the water made. Okay. So, who in thought is your local describe on the SSD? The network is your little hose spraying the water. And it's going up to you CPU Which is you holding the last bucket, throwing it. And each of these buckets, like the SSD is a much bigger bucket. But it's going to pour into RAM, the smaller bucket. Slowly. So this, so the loading here is this is the slowest load. Okay. Down here on the load from the network
Which is you holding the last bucket, throwing it. And each of these buckets, like the SSD is a much bigger bucket. But it's going to pour into RAM, the smaller bucket. Slowly. So this, so the loading here is this is the slowest load. Okay. Down here on the load from the network This is actually quite slow, right? This is a very narrow arrow. This arrow and the actually the arrows go up. They get thicker and thicker. So this is a medium thickness arrow. Right. And this one up here is actually a really thick arrow. So let's make this one dotted line because that's
This is actually quite slow, right? This is a very narrow arrow. This arrow and the actually the arrows go up. They get thicker and thicker. So this is a medium thickness arrow. Right. And this one up here is actually a really thick arrow. So let's make this one dotted line because that's That's actually more realistic, right? Let's make this one. And this is actually that's just duplicate this arrow because fundamentally this arrow is really. Really, really, really fast, right? So this is a really weak arrow up into your SSD
That's actually more realistic, right? Let's make this one. And this is actually that's just duplicate this arrow because fundamentally this arrow is really. Really, really, really fast, right? So this is a really weak arrow up into your SSD In modern days, it's better, but it's still pretty bad by comparison. This arrow here is pretty damn fast. And this one is insanely quick. Okay. Okay. So we end up with a simple fact of we can really always read everything in RAM from the CPU. So that is kind of like the overview
In modern days, it's better, but it's still pretty bad by comparison. This arrow here is pretty damn fast. And this one is insanely quick. Okay. Okay. So we end up with a simple fact of we can really always read everything in RAM from the CPU. So that is kind of like the overview And to kind of put this in some context with some speed. So we're going to put these numbers finally. So this is a lovely visualization we talked about a little while ago before we went on air. Yes. Which is a lot of latency numbers
And to kind of put this in some context with some speed. So we're going to put these numbers finally. So this is a lovely visualization we talked about a little while ago before we went on air. Yes. Which is a lot of latency numbers So we talked a bit about kind of rough equivalency of size and scale. But let's talk about actual performance numbers. So the little black squares are nanoseconds. And referencing L1 cache is only half a nanosecond. So she is rather insanely fast if you think about it
So we talked a bit about kind of rough equivalency of size and scale. But let's talk about actual performance numbers. So the little black squares are nanoseconds. And referencing L1 cache is only half a nanosecond. So she is rather insanely fast if you think about it You actually down to the limitations of the speed of light. And some annoyances around quantum mechanics to make that actually really faster. That literally can't really be much faster. Okay. If you look at this one called denotes scaling
You actually down to the limitations of the speed of light. And some annoyances around quantum mechanics to make that actually really faster. That literally can't really be much faster. Okay. If you look at this one called denotes scaling If you want to look into that, which kind of shows you where we're starting to read the limitations of making things physically smaller. So they have to go less distance on the CPU itself
If you want to look into that, which kind of shows you where we're starting to read the limitations of making things physically smaller. So they have to go less distance on the CPU itself Now, as we go down into the actual cache itself, because it's leveled, the cache kind of ends up at like level two and level three. But we're still in the order of single digit nanoseconds. So then, you know, 100 of these black boxes is one blue box and a main memory reference
Now, as we go down into the actual cache itself, because it's leveled, the cache kind of ends up at like level two and level three. But we're still in the order of single digit nanoseconds. So then, you know, 100 of these black boxes is one blue box and a main memory reference This is going into your RAM for one off read. And that is, effectively, 100 nanoseconds. And that is assuming you're going to something which is relatively easy to get to. Right. So it's 100. So it's between 100 500 times slower already than reading something interesting cache
This is going into your RAM for one off read. And that is, effectively, 100 nanoseconds. And that is assuming you're going to something which is relatively easy to get to. Right. So it's 100. So it's between 100 500 times slower already than reading something interesting cache So that's the kind of like two plus orders of magnitude slower. Then as we go down, these are just some comparisons. How long it takes to do stuff. Like the thing is once you're actually getting things in memory, doing work on them is not that bad
So that's the kind of like two plus orders of magnitude slower. Then as we go down, these are just some comparisons. How long it takes to do stuff. Like the thing is once you're actually getting things in memory, doing work on them is not that bad Like compressing a kilobyte with a compression algorithm. Three microseconds, not too bad. You know, that's only effectively 30 references due to some tricks that go on behind the scenes
Like compressing a kilobyte with a compression algorithm. Three microseconds, not too bad. You know, that's only effectively 30 references due to some tricks that go on behind the scenes So then we get up to the green boxes, which are once again, 100 times slower again is to send it over, let's say a network. This is a tiny file that were a very fast network, right? A tiny file is 10 microseconds reading anything from SSD, like takes a little time as well
So then we get up to the green boxes, which are once again, 100 times slower again is to send it over, let's say a network. This is a tiny file that were a very fast network, right? A tiny file is 10 microseconds reading anything from SSD, like takes a little time as well But this is to read as any read from SSD takes a little bit of overhead at 150. When reading, exponentially from an SSD is reading a line, you get pretty damn fast. So it's only a quarter of a millisecond to read a big chunk. And now you start thinking in terms of actual milliseconds
But this is to read as any read from SSD takes a little bit of overhead at 150. When reading, exponentially from an SSD is reading a line, you get pretty damn fast. So it's only a quarter of a millisecond to read a big chunk. And now you start thinking in terms of actual milliseconds So inside the actual data center, let's say you're using a machine inside GCP. So inside Google Cloud Platform, and you're accessing another machine inside Google Cloud Platform on their super fast internal internet. And that's half a millisecond
So inside the actual data center, let's say you're using a machine inside GCP. So inside Google Cloud Platform, and you're accessing another machine inside Google Cloud Platform on their super fast internal internet. And that's half a millisecond But when you actually start to do the real internet as in you to the server in GCP, let's say, you know, you're in Colorado. I am in Cambridge in the UK. So we're still thinking about over here. So we go from microseconds to milliseconds, tens of microseconds to milliseconds
But when you actually start to do the real internet as in you to the server in GCP, let's say, you know, you're in Colorado. I am in Cambridge in the UK. So we're still thinking about over here. So we go from microseconds to milliseconds, tens of microseconds to milliseconds And between us is probably 100 to 200 milliseconds of latencies. The minimum we can get is the speed of light and the quality of the cables, right? So we go from nanoseconds to hundreds of milliseconds, which is quite the difference. It's over a million times in difference. Performance
And between us is probably 100 to 200 milliseconds of latencies. The minimum we can get is the speed of light and the quality of the cables, right? So we go from nanoseconds to hundreds of milliseconds, which is quite the difference. It's over a million times in difference. Performance Performance. So if you imagine every single bit you send me, which I can see you on my screen, is 100 million times slower than the bits of my own video. And that makes sense why especially post COVID, I think it's a little easier for people to kind of convert start to comprehend this
Performance. So if you imagine every single bit you send me, which I can see you on my screen, is 100 million times slower than the bits of my own video. And that makes sense why especially post COVID, I think it's a little easier for people to kind of convert start to comprehend this Because your video may look super clear on your computer, but over zoom, you know, other people are seeing it. Great me. Yes, and that is where we kind of like we trade off the fact we can only send so much so we can press the video
Because your video may look super clear on your computer, but over zoom, you know, other people are seeing it. Great me. Yes, and that is where we kind of like we trade off the fact we can only send so much so we can press the video We drop bits and pieces of the video so we can just send what we need to render it. So this is where we kind of come down to what back to the kind of the data argument of like how we start with this access pattern stuff
We drop bits and pieces of the video so we can just send what we need to render it. So this is where we kind of come down to what back to the kind of the data argument of like how we start with this access pattern stuff And we end up with a combination of we can do the thing we want to do right now. Or we can basically do it later in bigger chunks. So this is where that kind of like streaming of data versus like chunking up data to do it later comes in
And we end up with a combination of we can do the thing we want to do right now. Or we can basically do it later in bigger chunks. So this is where that kind of like streaming of data versus like chunking up data to do it later comes in So like this is so use a stream versus batch analogy to go back to some of the Kafka stuff. A batch analogy is downloading the song from Napster before you play it. And the modern streaming equipment would be it would be Spotify
So like this is so use a stream versus batch analogy to go back to some of the Kafka stuff. A batch analogy is downloading the song from Napster before you play it. And the modern streaming equipment would be it would be Spotify Does it play as it goes? Yes, everything you're saying like makes sense. I think this is one of the things I have a hard time with of where I can comprehend what you're saying
Does it play as it goes? Yes, everything you're saying like makes sense. I think this is one of the things I have a hard time with of where I can comprehend what you're saying And if I were to try to describe back to you what you just said, but even like the CPU or like the funnel from the website to the down below for that one that you referenced from the network or the differences like they still get stuck and I'm like am I stuck on words and my stuck on a concept
And if I were to try to describe back to you what you just said, but even like the CPU or like the funnel from the website to the down below for that one that you referenced from the network or the differences like they still get stuck and I'm like am I stuck on words and my stuck on a concept And so on that note. Just moving forward because it could just be one of those things that just needs to marinate a bit before I clicks
And so on that note. Just moving forward because it could just be one of those things that just needs to marinate a bit before I clicks What like so why did we come up with databases and what I get that and you alluded to this earlier that computers can't hold all these databases, especially like if you have. And for the Tweety app that we looked at like it would have petabytes of data just by user names. Cool, user profiles
What like so why did we come up with databases and what I get that and you alluded to this earlier that computers can't hold all these databases, especially like if you have. And for the Tweety app that we looked at like it would have petabytes of data just by user names. Cool, user profiles So let's kind of like let's kind of go back through this little diagram. We'll actually get to why databases are really interesting and why they exist. Particularly in this one, this is about access of data right and occasionally how much read
So let's kind of like let's kind of go back through this little diagram. We'll actually get to why databases are really interesting and why they exist. Particularly in this one, this is about access of data right and occasionally how much read So this basically tells us that reading data is expensive if it's far away. But if we can basically read sequential data, it's not as bad
So this basically tells us that reading data is expensive if it's far away. But if we can basically read sequential data, it's not as bad Now, if we skip back to the kind of this this lovely diagram here, which is actually probably the best diagram for everything we're going to talk about to be honest. And really quick because I get stuck on words, y'all, we've talked about this. So I'm just letting everybody else know sequential
Now, if we skip back to the kind of this this lovely diagram here, which is actually probably the best diagram for everything we're going to talk about to be honest. And really quick because I get stuck on words, y'all, we've talked about this. So I'm just letting everybody else know sequential What I'm going in order. I'm googling at the side. I figure you know if there's a word that I don't know or doesn't make sense, maybe somebody else doesn't. So just saying those ones out loud when I Google them. Now, please stop me about explaining any word
What I'm going in order. I'm googling at the side. I figure you know if there's a word that I don't know or doesn't make sense, maybe somebody else doesn't. So just saying those ones out loud when I Google them. Now, please stop me about explaining any word I'm just going to have a bad habit of using it for six syllables where a little one will use will do. I'm really bad at thinking of. Understanding, standing things in context. So like I could have put two and two together that I'm like, OK, sequential probably means just going through emotion
I'm just going to have a bad habit of using it for six syllables where a little one will use will do. I'm really bad at thinking of. Understanding, standing things in context. So like I could have put two and two together that I'm like, OK, sequential probably means just going through emotion necessarily in a series of steps or a specific steps you need to go in. So that's why I was pausing it. I was like, what you said made sense. It was more of, I need to break the habit of doing it out of context, or it will not make sense if somebody is using it in a different context. Yes
necessarily in a series of steps or a specific steps you need to go in. So that's why I was pausing it. I was like, what you said made sense. It was more of, I need to break the habit of doing it out of context, or it will not make sense if somebody is using it in a different context. Yes Yes. Now, if we go back to that CD analogy, we talked about a while ago, right? Now, your CD, your CD player from the 90s, which we all remember very fondly, specifically, you know, it's playing, it's playing, it's playing some music
Yes. Now, if we go back to that CD analogy, we talked about a while ago, right? Now, your CD, your CD player from the 90s, which we all remember very fondly, specifically, you know, it's playing, it's playing, it's playing some music And it took, it took a while to skip between tracks, right? And that was just sitting from, what, 15 tracks on a good disc, right? And remember how long it took just to find the track you wanted, because they just had track numbers. They didn't have names originally. I know
And it took, it took a while to skip between tracks, right? And that was just sitting from, what, 15 tracks on a good disc, right? And remember how long it took just to find the track you wanted, because they just had track numbers. They didn't have names originally. I know I know. So you're thinking, I want to listen to, you buy by buy by in sync, of course, because that is about the job, that's about the era we're talking, right? Earlier, earlier, spice growth, spice scale. So it's, so okay
I know. So you're thinking, I want to listen to, you buy by buy by in sync, of course, because that is about the job, that's about the era we're talking, right? Earlier, earlier, spice growth, spice scale. So it's, so okay So it's, so okay. So that's, so it's going to be, so let's go one of the, by the spice scales. So you try to find one of the on that, on that, on that original album, right? And you're going to skip past two become one, because no one likes that song either
So it's, so okay. So that's, so it's going to be, so let's go one of the, by the spice scales. So you try to find one of the on that, on that, on that original album, right? And you're going to skip past two become one, because no one likes that song either Yes, I remember my, I remember my spice goals, being in the UK, you couldn't avoid it. Yeah. Right? So you're going to find that zigazic heart, and you're going to go skip, skip, skip, skip, skip, skip, because the tracks aren't named on the disc when you're looking at all of them
Yes, I remember my, I remember my spice goals, being in the UK, you couldn't avoid it. Yeah. Right? So you're going to find that zigazic heart, and you're going to go skip, skip, skip, skip, skip, skip, because the tracks aren't named on the disc when you're looking at all of them So the problem there is you have no way to know which track is, which ahead of time. So you've got to search through them all, start them playing, listen for a bit, and go to the next one, because fundamentally, don't have a good way to identify what is what. All right, so you need to index
So the problem there is you have no way to know which track is, which ahead of time. So you've got to search through them all, start them playing, listen for a bit, and go to the next one, because fundamentally, don't have a good way to identify what is what. All right, so you need to index So you look at the back of the disc box, you know, the dual case it came in and it tells you the order. Now, fundamentally, that plus the disc is a database. It's a way to look up data you need a reference to it. What you're saying makes sense
So you look at the back of the disc box, you know, the dual case it came in and it tells you the order. Now, fundamentally, that plus the disc is a database. It's a way to look up data you need a reference to it. What you're saying makes sense Because all the database is a structured way of storing data and a structured way to write and retrieve it. Okay. That's all the database really is at a very core, very basic level
Because all the database is a structured way of storing data and a structured way to write and retrieve it. Okay. That's all the database really is at a very core, very basic level Right? And even if the index is something you've got to read with your eyes, and then you've got to plug, plug, plug, plug to get to the next track. You know, you want to get to spice up your life. You've got to get track six, something it was. There's very vague memories from a while ago
Right? And even if the index is something you've got to read with your eyes, and then you've got to plug, plug, plug, plug to get to the next track. You know, you want to get to spice up your life. You've got to get track six, something it was. There's very vague memories from a while ago I might be skipping the spice girls albums around right now, but hey. So really quick. And I know not everyone was able to join on yesterday's. Stream. I started setting up postgres. So I'm doing it locally and I had to set up the server and then I had to set up the client
I might be skipping the spice girls albums around right now, but hey. So really quick. And I know not everyone was able to join on yesterday's. Stream. I started setting up postgres. So I'm doing it locally and I had to set up the server and then I had to set up the client If I take the spice girl CDs reference, I was basically every time I wanted to skip something, I was being the client because the CD is the server. The back of the, uh, the actual case, tell me what song I want and I'm the client telling it to skip. Yes. Okay. Very much exactly exactly
If I take the spice girl CDs reference, I was basically every time I wanted to skip something, I was being the client because the CD is the server. The back of the, uh, the actual case, tell me what song I want and I'm the client telling it to skip. Yes. Okay. Very much exactly exactly Um, the analogy is really perfect, but we'll go for it because it's so close to true that it's pretty much exactly right. I just want to let you know that I will tell people that you taught me about databases with spice girls. I am so happy for saying that
Um, the analogy is really perfect, but we'll go for it because it's so close to true that it's pretty much exactly right. I just want to let you know that I will tell people that you taught me about databases with spice girls. I am so happy for saying that No, and the key thing that comes out of this is the idea of the two three major concepts here, which is there's the thing interested in the data, which is nearly always a client
No, and the key thing that comes out of this is the idea of the two three major concepts here, which is there's the thing interested in the data, which is nearly always a client There's the place the data lives, which is a server and a thing that runs it and manages all the queries, which is that little panel of next next next next next next. Okay. And if a query. Okay. And the index, which is the back of the dual case telling you where to go
There's the place the data lives, which is a server and a thing that runs it and manages all the queries, which is that little panel of next next next next next next. Okay. And if a query. Okay. And the index, which is the back of the dual case telling you where to go All right, the ability to find this data. Now, so let's say, suppose, Chris is a great example here because it has all the kind of usual bits you'd expect in a traditional database system. Right. It's got a client. It's which caught which you can load up either as a, um, a piece of a pro S. D. K
All right, the ability to find this data. Now, so let's say, suppose, Chris is a great example here because it has all the kind of usual bits you'd expect in a traditional database system. Right. It's got a client. It's which caught which you can load up either as a, um, a piece of a pro S. D. K D. K. Or a tool on your machine. Or you can put it. What you need is from a command line or you can use a web tool like PG admin
D. K. Or a tool on your machine. Or you can put it. What you need is from a command line or you can use a web tool like PG admin Then we have a server, which basically is your database management system, which basically manages the database inside itself, which is like if you make a, if you make a postgres database and then tables inside it, that's all managed by postgres, who's all in one box. Right. Okay
Then we have a server, which basically is your database management system, which basically manages the database inside itself, which is like if you make a, if you make a postgres database and then tables inside it, that's all managed by postgres, who's all in one box. Right. Okay Right. Okay. So as you start, let's say you make a table and let's say it's spice girls tracks, right. So you have the first table, which is first album, second date, which is the second album. I can't remember. I'm just, I'm gesturing around. I can't quite Google names on the others yet
Right. Okay. So as you start, let's say you make a table and let's say it's spice girls tracks, right. So you have the first table, which is first album, second date, which is the second album. I can't remember. I'm just, I'm gesturing around. I can't quite Google names on the others yet But what happens then is your rows in your database would be each song and then you say song name, um, who sings the length of the track. And then some details about it, maybe maybe the lyrics, right. For that track are the entries in the row of each spice girls track, right
But what happens then is your rows in your database would be each song and then you say song name, um, who sings the length of the track. And then some details about it, maybe maybe the lyrics, right. For that track are the entries in the row of each spice girls track, right Now what happens is postgres will automatically have a way for you to find this data. So let's say you want to go select from spice girls songs, right. And you want to select all the songs, which are longer than four minutes
Now what happens is postgres will automatically have a way for you to find this data. So let's say you want to go select from spice girls songs, right. And you want to select all the songs, which are longer than four minutes So you'll go select far star from spice girls songs, where duration is greater than four minutes in whatever you thought in. Now to do that, it's got to go through all the rows and say, is this number bigger than that number? Yes
So you'll go select far star from spice girls songs, where duration is greater than four minutes in whatever you thought in. Now to do that, it's got to go through all the rows and say, is this number bigger than that number? Yes Put it into the list or send back next number next number next number next number next number. The thing here is that because it is stored structurally, it knows where to look in that data to do that comparison for you. So now let's say that the spice girls had a million tracks
Put it into the list or send back next number next number next number next number next number. The thing here is that because it is stored structurally, it knows where to look in that data to do that comparison for you. So now let's say that the spice girls had a million tracks They have a lot, not a million. And what happens here is you now know that people in a search for tracks by their how long they are, right. So they want all like, you know, people looking for tracks which are exactly this long or exactly that long
They have a lot, not a million. And what happens here is you now know that people in a search for tracks by their how long they are, right. So they want all like, you know, people looking for tracks which are exactly this long or exactly that long So you might index that exact thing like your dual case just had the name and the number. You might have an in equivalent dual case that gave you a track length and then a name of the track. Right. And that's what the database index is sort of do
So you might index that exact thing like your dual case just had the name and the number. You might have an in equivalent dual case that gave you a track length and then a name of the track. Right. And that's what the database index is sort of do They give the ability to sort through things quickly to find the subset you need faster. Okay. So this is like the filtering system basically. This is you going, I like it when scary spices the main singer. So let's find the ones with scary spice being the main singer
They give the ability to sort through things quickly to find the subset you need faster. Okay. So this is like the filtering system basically. This is you going, I like it when scary spices the main singer. So let's find the ones with scary spice being the main singer So you have a way to say these all have scary spice starting. I'm. Where are my thought processes currently going. I'm really skipping ahead of like what you're saying makes sense and it sounds like this would be row based. Yes
So you have a way to say these all have scary spice starting. I'm. Where are my thought processes currently going. I'm really skipping ahead of like what you're saying makes sense and it sounds like this would be row based. Yes Yes. Because postgres is row based meaning that you put like in the index, it would be like song title and then length and then lead singer. And then those are each going by row
Yes. Because postgres is row based meaning that you put like in the index, it would be like song title and then length and then lead singer. And then those are each going by row Now, where I think I'm getting a little mixed up is taking something like what we're talking about like if spice girls had a million songs. I think postgres is one of the easier ones to understand because it's very close to conceptualize of something that many of us use
Now, where I think I'm getting a little mixed up is taking something like what we're talking about like if spice girls had a million songs. I think postgres is one of the easier ones to understand because it's very close to conceptualize of something that many of us use We like to like sell or Google sheets. Yes. But then we have like click house where it's all on based. Yes. Instead. Yes. What? So, ah, now they now are into the app. So this is where actually how the nature of stored becomes incredibly important
We like to like sell or Google sheets. Yes. But then we have like click house where it's all on based. Yes. Instead. Yes. What? So, ah, now they now are into the app. So this is where actually how the nature of stored becomes incredibly important So postgres is heavily built around the idea of you'll want to you'll you both want to read your data and write your data. So now we just this is where the music analogy sort of breaks down a bit because that's reference data. But now if you imagine that
So postgres is heavily built around the idea of you'll want to you'll you both want to read your data and write your data. So now we just this is where the music analogy sort of breaks down a bit because that's reference data. But now if you imagine that Oh, but we could do if it's a read and write postgres is kind of like you need to search a song and burn the CD. Well, actually it's more like I want to favor these songs. I'm changing who I'm favoriting, let's say, because I'm burning CD is a bit of a
Oh, but we could do if it's a read and write postgres is kind of like you need to search a song and burn the CD. Well, actually it's more like I want to favor these songs. I'm changing who I'm favoriting, let's say, because I'm burning CD is a bit of a There's a reason I don't want to use that particular analogy because I want to use it somewhere else. Only for that reason it holds but but I want to use it somewhere else it makes more sense somewhere else. So let's say you're now you now have a voting board of who likes what songs
There's a reason I don't want to use that particular analogy because I want to use it somewhere else. Only for that reason it holds but but I want to use it somewhere else it makes more sense somewhere else. So let's say you're now you now have a voting board of who likes what songs And want to give people tanks like this song is fierce. This song is more girl power. This song is more Brit pop era like iconic of the Brit pop era. You're giving tags to all the songs and lots of people are changing
And want to give people tanks like this song is fierce. This song is more girl power. This song is more Brit pop era like iconic of the Brit pop era. You're giving tags to all the songs and lots of people are changing Now, it's really important that that data can be written easily and when you're a right align you don't modify everything else. You just want to write the line you care about. Right. So spice of your life is fierce but not really iconic of the Brit pop era
Now, it's really important that that data can be written easily and when you're a right align you don't modify everything else. You just want to write the line you care about. Right. So spice of your life is fierce but not really iconic of the Brit pop era So you're taking that tag off but you're adding a different one. Because it's a row based system when you access it you pull that full row out and then you change it and you put just that row back
So you're taking that tag off but you're adding a different one. Because it's a row based system when you access it you pull that full row out and then you change it and you put just that row back It's not very efficient in some ways to search to do a big scam across every piece of data in that one field. However, it's very quick to find the one thing and change it. So this is the old bucket analogy you pick up the bucket you pick thing out you put thing in very good
It's not very efficient in some ways to search to do a big scam across every piece of data in that one field. However, it's very quick to find the one thing and change it. So this is the old bucket analogy you pick up the bucket you pick thing out you put thing in very good But it's very bad for saying what's in all my buckets. Everybody looks in it now if we flip to click house click house if you imagine the storage right so we go over here draw some diagrams. Yay. So so this is the old row based thing so. This is
But it's very bad for saying what's in all my buckets. Everybody looks in it now if we flip to click house click house if you imagine the storage right so we go over here draw some diagrams. Yay. So so this is the old row based thing so. This is This is. And as it heads up for everyone watching now and for those who may be watching later please let us know questions that you would like us to fill in in between these because I'm going off on my own experience
This is. And as it heads up for everyone watching now and for those who may be watching later please let us know questions that you would like us to fill in in between these because I'm going off on my own experience I have learned a little bit about click house I've learned a little bit about Kafka learned a little bit about post sequel and
I have learned a little bit about click house I've learned a little bit about Kafka learned a little bit about post sequel and It's as you've seen in other streams it's easier for me to compare something I might have used before or know a little bit about so please let us know if we need to dig in deeper somewhere
It's as you've seen in other streams it's easier for me to compare something I might have used before or know a little bit about so please let us know if we need to dig in deeper somewhere So fundamentally though everything all databases have rows and columns right because probably they're just like all very fancy Excel documents if you want to. Then Kafka. Oh yes I could make I could make that argument I could definitely make that say that I will ask you later
So fundamentally though everything all databases have rows and columns right because probably they're just like all very fancy Excel documents if you want to. Then Kafka. Oh yes I could make I could make that argument I could definitely make that say that I will ask you later So what happens here is it's really about which bit you care most about now these rows if you care really about the rows so as in this data is conceptually it's one big thing that's important that you have that row together like like the spice girls track the likes and dislikes the thing that's all really important to stay together just going to change together
So what happens here is it's really about which bit you care most about now these rows if you care really about the rows so as in this data is conceptually it's one big thing that's important that you have that row together like like the spice girls track the likes and dislikes the thing that's all really important to stay together just going to change together You want it a row but now let's go over here and say we want it as a column
You want it a row but now let's go over here and say we want it as a column You because I can't spell today apparently now what happens here is that we are now saying we saw our rules but we don't actually think that the data is often needed in entirety so instead what we say is rather than storing let's say if that's a set now we're now looking at place statistics for spice girls tracks on Spotify right
You because I can't spell today apparently now what happens here is that we are now saying we saw our rules but we don't actually think that the data is often needed in entirety so instead what we say is rather than storing let's say if that's a set now we're now looking at place statistics for spice girls tracks on Spotify right So what happens here is we have. Well this is nice now we have is the first column what we call the title of the John will the unique identifier of the song so the title right
So what happens here is we have. Well this is nice now we have is the first column what we call the title of the John will the unique identifier of the song so the title right So every single play event which comes through is going to be the title of the so the number that the unique identifier of the play event the song it's been played the length has been played by the user who played it where they were in the world etc etc and a few other columns going that way
So every single play event which comes through is going to be the title of the so the number that the unique identifier of the play event the song it's been played the length has been played by the user who played it where they were in the world etc etc and a few other columns going that way Now the point really here is that I want to know let's say the total number of hours spice girls are played for right so I know how to much pay them because it's Spotify right
Now the point really here is that I want to know let's say the total number of hours spice girls are played for right so I know how to much pay them because it's Spotify right So this is an example of a query where though it's been written to I'm not changing that date or ever really right it's historical record right this is right this is data which is which is once just true it stays true
So this is an example of a query where though it's been written to I'm not changing that date or ever really right it's historical record right this is right this is data which is which is once just true it stays true Right like how we classify a song based on who likes it dislikes it's going to change over here right
Right like how we classify a song based on who likes it dislikes it's going to change over here right But over here is I played it so I played spicy bill live yesterday for three hours on repeat so three hours of play time ideas by the idea of spice up the idea of this plays let's say some magical number which is unique so I could spice it alive the user is been gamble and you know I played it in the UK
But over here is I played it so I played spicy bill live yesterday for three hours on repeat so three hours of play time ideas by the idea of spice up the idea of this plays let's say some magical number which is unique so I could spice it alive the user is been gamble and you know I played it in the UK So what happens here is a three hour thing here you happen to play one of the four five minutes yesterday because you played over once and you didn't stop it in time stop it playing first few minutes again
So what happens here is a three hour thing here you happen to play one of the four five minutes yesterday because you played over once and you didn't stop it in time stop it playing first few minutes again And every time this happens going back in time you have this long record now what happens is Spotify say how much do I pay the spice girls this month so they say for his last month give me the total of play hours of spice girls
And every time this happens going back in time you have this long record now what happens is Spotify say how much do I pay the spice girls this month so they say for his last month give me the total of play hours of spice girls So what they do on a column based databases they go well this is the this is the database of the thing I'll just sum up this column please and it just stands through that one column. We don't read any of this other data
So what they do on a column based databases they go well this is the this is the database of the thing I'll just sum up this column please and it just stands through that one column. We don't read any of this other data So the data sets for both examples are going to be different it could be the same subject but not the same data set. You're not not so occasionally it is but very rarely so if you imagine what so imagine this was the same let's say let's say this was I don't know
So the data sets for both examples are going to be different it could be the same subject but not the same data set. You're not not so occasionally it is but very rarely so if you imagine what so imagine this was the same let's say let's say this was I don't know Another example that's like if you flip it so let's say purchases right like you want to buy something right we say we might make a row in our transactional database saying Jen has bought headphones today right now it's and now we say Jen has paid the headphones we've paid up here we take Jen has been shipped the headphones Jen has not
Another example that's like if you flip it so let's say purchases right like you want to buy something right we say we might make a row in our transactional database saying Jen has bought headphones today right now it's and now we say Jen has paid the headphones we've paid up here we take Jen has been shipped the headphones Jen has not So if you want to turn the headphones Jen has claimed to warranty on these headphones or fields here and there's a series of checkbox that's that can be unchecked and checked right and then you have your review at the end
So if you want to turn the headphones Jen has claimed to warranty on these headphones or fields here and there's a series of checkbox that's that can be unchecked and checked right and then you have your review at the end Now at any point in time what there'll be a state of this table right the only time if you want to change anything you need to know the current state and the current state only but over time as this table changes what we can do is we might extract out the time what happens and dump it in a column
Now at any point in time what there'll be a state of this table right the only time if you want to change anything you need to know the current state and the current state only but over time as this table changes what we can do is we might extract out the time what happens and dump it in a column At one point in time you had just purchased them it wasn't in shipping yet so the first row is Jen Jen buys headphones this is the current state of the headphones the next line would be Jen has headphones there now in shipping event event event event event with a timestamp next to each one
At one point in time you had just purchased them it wasn't in shipping yet so the first row is Jen Jen buys headphones this is the current state of the headphones the next line would be Jen has headphones there now in shipping event event event event event with a timestamp next to each one So then what we can do in analytics world outside of this when we don't want to change we see we can now chart how long it took to say average shipping from buy ship was we look down all the columns and work out what happens
So then what we can do in analytics world outside of this when we don't want to change we see we can now chart how long it took to say average shipping from buy ship was we look down all the columns and work out what happens Because we know how long we can basically do a quick query to work out difference in time between point A and point B and we can then do something say how many people return their headphones so we can go count the number of returns because I don't know how many people because in this column over here on the road world this is going to keep changing
Because we know how long we can basically do a quick query to work out difference in time between point A and point B and we can then do something say how many people return their headphones so we can go count the number of returns because I don't know how many people because in this column over here on the road world this is going to keep changing So I'm going to start with the question. So I'm going to start with the question
So I'm going to start with the question. So I'm going to start with the question But it's making me think just some things that I would like to write out and show to you to have you kind of help me break down later on is the process of like your computer like how you have the computer parts or pieces and have those go through
But it's making me think just some things that I would like to write out and show to you to have you kind of help me break down later on is the process of like your computer like how you have the computer parts or pieces and have those go through And put it in a way that I might understand it and visual there and then also here with data
And put it in a way that I might understand it and visual there and then also here with data Filled in i'm saying it like that because i'm not going to go find a data set i'm going to just see if I can like understand a data set or like create my own but something that I did really want to ask you today that might actually fit in really well here
Filled in i'm saying it like that because i'm not going to go find a data set i'm going to just see if I can like understand a data set or like create my own but something that I did really want to ask you today that might actually fit in really well here On my website so I have too many too many things going on I don't have too many things they all kind of relate I have teach and tech out of the podcast shit you don't want to talk about and the both I want to set them up where they both have like a pay their own individual page on my site of each episode where it has about the author the graphic and a transcript and a lot of things that I want to say about the content of the content
On my website so I have too many too many things going on I don't have too many things they all kind of relate I have teach and tech out of the podcast shit you don't want to talk about and the both I want to set them up where they both have like a pay their own individual page on my site of each episode where it has about the author the graphic and a transcript and a lot of things that I want to say about the content of the content And a link to go watch it or listen to it. Can those both use and I want to have a blog on my website just a regular blog not not structure for you know one of the shows but an actual block so
And a link to go watch it or listen to it. Can those both use and I want to have a blog on my website just a regular blog not not structure for you know one of the shows but an actual block so So with the is it possible to use the same database for everything or would I need a separate database for each
So with the is it possible to use the same database for everything or would I need a separate database for each So the golden rule for choosing things like databases and structures is you're going to is always a winner to trade off so in this case like your because this is your single contributor to a website and what you really need flexibility more than a single thing else right you want a database that can just do it all
So the golden rule for choosing things like databases and structures is you're going to is always a winner to trade off so in this case like your because this is your single contributor to a website and what you really need flexibility more than a single thing else right you want a database that can just do it all So postgres is a perfect choice here because fundamentally your data load is not that large and postgres is pretty amazing at just being the workhorse of an end of a website like this
So postgres is a perfect choice here because fundamentally your data load is not that large and postgres is pretty amazing at just being the workhorse of an end of a website like this However if you wanted to start logging what everyone was doing on your website let's say you want to track how long people look at I don't know each of your podcasts this all the different listening events and you wanted to track how long people scroll down each of your blocks individually that is where you wouldn't use postgres for that you probably use something else
However if you wanted to start logging what everyone was doing on your website let's say you want to track how long people look at I don't know each of your podcasts this all the different listening events and you wanted to track how long people scroll down each of your blocks individually that is where you wouldn't use postgres for that you probably use something else Classically a column or into database like BigQuery or click else because what happens here is every time one of these events happens you only normally care about one field at a time so the reason I've done the highlighting that is actually placed very nicely here
Classically a column or into database like BigQuery or click else because what happens here is every time one of these events happens you only normally care about one field at a time so the reason I've done the highlighting that is actually placed very nicely here So if you imagine your displaying blocks right so if you have an index that says says the time based index do you want to find the blog which is let's say June 15 last year
So if you imagine your displaying blocks right so if you have an index that says says the time based index do you want to find the blog which is let's say June 15 last year So you can index on that so you find June 15 last year and you return the whole row which has the blog the title the picture the whatever the whatever right. John DeTron screen looks great you want to make a quick edit very easy to do that postgres it's very good that it's now
So you can index on that so you find June 15 last year and you return the whole row which has the blog the title the picture the whatever the whatever right. John DeTron screen looks great you want to make a quick edit very easy to do that postgres it's very good that it's now You're so you were in my cell to go it trends on the front page of reddit right out of the well oh yeah it would be great and let's say your website held up nicely because you ended it great
You're so you were in my cell to go it trends on the front page of reddit right out of the well oh yeah it would be great and let's say your website held up nicely because you ended it great Now the problem then is you want to work out where in your website these people going and what drew them in so you'll need something good about analytics power to pull this apart but now we've got multiple millions of events happening very quickly and you want to put a pull that data apart
Now the problem then is you want to work out where in your website these people going and what drew them in so you'll need something good about analytics power to pull this apart but now we've got multiple millions of events happening very quickly and you want to put a pull that data apart Now the first thing is happening is you put into a column store like click house one you can handle that right volume pretty well because it's very well built to just take that massive stream the data in
Now the first thing is happening is you put into a column store like click house one you can handle that right volume pretty well because it's very well built to just take that massive stream the data in Now what happens next is you want to firstly just say is give me the various places people are coming from and the total so you say I want to sum up all the different places websites people are referring from right
Now what happens next is you want to firstly just say is give me the various places people are coming from and the total so you say I want to sum up all the different places websites people are referring from right So what happens is this red row is going to be the referral which is the website that people came from and what you will be able to do is return the top five or six websites of where people came from which is going to be read it
So what happens is this red row is going to be the referral which is the website that people came from and what you will be able to do is return the top five or six websites of where people came from which is going to be read it They have a one or very large way so be Twitter from people linking to the linking to it directly after they've read it and then there'll be something like I know organic Google searches because you try trending really well
They have a one or very large way so be Twitter from people linking to the linking to it directly after they've read it and then there'll be something like I know organic Google searches because you try trending really well And this is where I pause the whole works because you can search that just that column and this is where because this is now a lot of data and this is the important bit is because you don't because you can only read so much data out of the disk on one time because let's say you've got the top of reddit you generate gigabytes of blocks gigabytes of events very quickly and if you did this a few times in a row you've been the terabytes
And this is where I pause the whole works because you can search that just that column and this is where because this is now a lot of data and this is the important bit is because you don't because you can only read so much data out of the disk on one time because let's say you've got the top of reddit you generate gigabytes of blocks gigabytes of events very quickly and if you did this a few times in a row you've been the terabytes So this is back to our lovely reading pattern thing is I don't want to pull terabytes into my RAM I want to pull gigabytes I don't want to pull gigabytes into my CPU I want to pull megabytes so I want to search the one column. Is it cool? This is where I was going to get the burning CDs
So this is back to our lovely reading pattern thing is I don't want to pull terabytes into my RAM I want to pull gigabytes I don't want to pull gigabytes into my CPU I want to pull megabytes so I want to search the one column. Is it cool? This is where I was going to get the burning CDs Okay cool cool yeah. So what happens is right into a column of the database like click house is like burning a CD because it's very very fast to read just the tracks you need right more often not when you listen to a piece of music you don't need to listen to three different tracks at once right
Okay cool cool yeah. So what happens is right into a column of the database like click house is like burning a CD because it's very very fast to read just the tracks you need right more often not when you listen to a piece of music you don't need to listen to three different tracks at once right You need to always only care about one track of music. Then most column of databases you only really care about each column on its own which is the view count compared to one other column at a time and the math you do on it is on one column at a time
You need to always only care about one track of music. Then most column of databases you only really care about each column on its own which is the view count compared to one other column at a time and the math you do on it is on one column at a time So what happens is you want to sum unique events so scroll through that column very quickly which means you can do the whole buffering trick we talked about here
So what happens is you want to sum unique events so scroll through that column very quickly which means you can do the whole buffering trick we talked about here We just go from we don't go over the network we go SSD into RAM in CPU on that one column in order this is where it's super fast to go in order
We just go from we don't go over the network we go SSD into RAM in CPU on that one column in order this is where it's super fast to go in order We're not hopping around the disk we're not randomly hoping to find the data there's no it's all sequential it's all very quick and it goes very nicely through. So this is why click house has such ridiculous performance for analytics type queries where you care about one or two fields at a time
We're not hopping around the disk we're not randomly hoping to find the data there's no it's all sequential it's all very quick and it goes very nicely through. So this is why click house has such ridiculous performance for analytics type queries where you care about one or two fields at a time Because it's like a burn CD track and this is why it's very expensive to edit this data because it's like a burn CD track. And if you remember the horrible is the CDRWs and things from back in the day and how much more they cost it. Yes. Yes
Because it's like a burn CD track and this is why it's very expensive to edit this data because it's like a burn CD track. And if you remember the horrible is the CDRWs and things from back in the day and how much more they cost it. Yes. Yes Yes. Yes. Exactly the same mentality CDRs cheap CDRWs weirdly expensive. I think a part that I'm also a little stuck on it and this is I definitely know that sometimes I get into the weeds of if we go back to the rose option or not rose the columns example and we're talking about people
Yes. Yes. Exactly the same mentality CDRs cheap CDRWs weirdly expensive. I think a part that I'm also a little stuck on it and this is I definitely know that sometimes I get into the weeds of if we go back to the rose option or not rose the columns example and we're talking about people And traffic. Does that mean to be able to do something like this and this is again me and the weeds trying to just connect the concepts when I'm stuck on the end between
And traffic. Does that mean to be able to do something like this and this is again me and the weeds trying to just connect the concepts when I'm stuck on the end between Do you have to have like a you are I setup or something or you are M is that what they're called when like people know where the link came from. Okay so a you can all the unique track. So I can't remember the acronym means because I have honestly not looked it up in about a year
Do you have to have like a you are I setup or something or you are M is that what they're called when like people know where the link came from. Okay so a you can all the unique track. So I can't remember the acronym means because I have honestly not looked it up in about a year I'm bad at acronyms but this is so the you can really useful because what it does is let's you have additional knowledge right so I have a you can when I go out and let's say I give a talk and I put you can at the end of the link I give on to my to let's say a link to a sign of page
I'm bad at acronyms but this is so the you can really useful because what it does is let's you have additional knowledge right so I have a you can when I go out and let's say I give a talk and I put you can at the end of the link I give on to my to let's say a link to a sign of page What that means is I have a way to uniquely identify it came from this link I gave him because that thing was clicked directly I copied that link into my browser right I didn't go from one website to another website I just started on you
What that means is I have a way to uniquely identify it came from this link I gave him because that thing was clicked directly I copied that link into my browser right I didn't go from one website to another website I just started on you So then I need a UTM if it's on reddit and I click on the reddit link right if you have a UCM that's great i'll get that tracking information but I'll know it came from reddit because I'll know where the previous page was I get that information automatically
So then I need a UTM if it's on reddit and I click on the reddit link right if you have a UCM that's great i'll get that tracking information but I'll know it came from reddit because I'll know where the previous page was I get that information automatically Oh, you you to you to really powerful because let's say all five let's say you have five people are team we all go out and share it various places in social right and we want to know roughly which one were best for good for whatever reason and let's say I did linked in you did Twitter and some of our colleagues did Pinterest Instagram Facebook and I don't know my space because someone was feeling
Oh, you you to you to really powerful because let's say all five let's say you have five people are team we all go out and share it various places in social right and we want to know roughly which one were best for good for whatever reason and let's say I did linked in you did Twitter and some of our colleagues did Pinterest Instagram Facebook and I don't know my space because someone was feeling It's a lot of people are really hard core sharing people and it went viral in many places so that means that you to probably went with it and will know where there even a good reshare will know the UTM was where it came from
It's a lot of people are really hard core sharing people and it went viral in many places so that means that you to probably went with it and will know where there even a good reshare will know the UTM was where it came from But if we didn't have the UTM a website can still track at least weird the traffic came from. So let's say the one that was on. It's been a long Pinterest ended up on the top of hack and use right
But if we didn't have the UTM a website can still track at least weird the traffic came from. So let's say the one that was on. It's been a long Pinterest ended up on the top of hack and use right And then what happens is it became it gets reshare on hack and use now it looks like all the links came from hack and use perfect but we don't know where it came from originally but it has a UTM in there will know that's the same link as in it got shared from that the UTM is just it's another way of categorizing where it came from
And then what happens is it became it gets reshare on hack and use now it looks like all the links came from hack and use perfect but we don't know where it came from originally but it has a UTM in there will know that's the same link as in it got shared from that the UTM is just it's another way of categorizing where it came from Okay, this is helpful. You see it all together. Now let's look at the column of store thing because of all this information comes in now what we can do is we have a column for UTM and a column for the where it works
Okay, this is helpful. You see it all together. Now let's look at the column of store thing because of all this information comes in now what we can do is we have a column for UTM and a column for the where it works I say this is the UTM column read and this will be in green will be the previous website. So this field is null like no previous website. There's just a UCM field. No, it was from your talk on that QR code you put on screen. Right
I say this is the UTM column read and this will be in green will be the previous website. So this field is null like no previous website. There's just a UCM field. No, it was from your talk on that QR code you put on screen. Right Right. Now let's say that this field was green and this one but it said let's say it also hack a news but let's say that the UTM fields were all over the place it means all of our various UTM links ended up on hack and use for different reasons
Right. Now let's say that this field was green and this one but it said let's say it also hack a news but let's say that the UTM fields were all over the place it means all of our various UTM links ended up on hack and use for different reasons However, if the one UTM is it is it's all one UTM is specifically and it comes from various different places we know that article got shared really well
However, if the one UTM is it is it's all one UTM is specifically and it comes from various different places we know that article got shared really well The kind of key point here is that because it's on a column store we can do things like say we can we only say we only care about those two column we normally only care about a few things at once in a column store because this might be a billion clicks right over the course of six months right really really
The kind of key point here is that because it's on a column store we can do things like say we can we only say we only care about those two column we normally only care about a few things at once in a column store because this might be a billion clicks right over the course of six months right really really So let's say we say give me a summation of all the various things so let's say all the different websites that were sent as information and give me the various UTM sorted with them and account for each piece of data
So let's say we say give me a summation of all the various things so let's say all the different websites that were sent as information and give me the various UTM sorted with them and account for each piece of data So let's say I want to know the number of our gen UTMs from Twitter the number of Ben UTMs from Twitter the number of Francesco UTMs from Pinterest and the number of tips UTMs from masterdom
So let's say I want to know the number of our gen UTMs from Twitter the number of Ben UTMs from Twitter the number of Francesco UTMs from Pinterest and the number of tips UTMs from masterdom These are some of our colleagues and the idea here would be that we could then do the summation across them and we might find out that turns out your following is not actually on Twitter like you think it is it turns out it's all linked in we got reshared and because on databases very quick to find this stuff out
These are some of our colleagues and the idea here would be that we could then do the summation across them and we might find out that turns out your following is not actually on Twitter like you think it is it turns out it's all linked in we got reshared and because on databases very quick to find this stuff out We just that one in a single digit milliseconds or in single digit seconds we can get that answer out even a very large click house table
We just that one in a single digit milliseconds or in single digit seconds we can get that answer out even a very large click house table Okay, this is going to take some noodling to wrap my head around because I really like how you were going back to the on showing how it goes through from the network upward and all of the buckets and then into the databases. Yes
Okay, this is going to take some noodling to wrap my head around because I really like how you were going back to the on showing how it goes through from the network upward and all of the buckets and then into the databases. Yes Yes. Okay, so this is an interesting point to note so now what happens is let's say we are so if we're actually using a database system let's say this is where it's quite good fun. Let's say we're actually using a really big data set let's say we're doing something like like asteroid detection
Yes. Okay, so this is an interesting point to note so now what happens is let's say we are so if we're actually using a database system let's say this is where it's quite good fun. Let's say we're actually using a really big data set let's say we're doing something like like asteroid detection Now the data sets we have so I remember when I was university we were looking for what was known as like we're looking for big events like gallery bursts and the equivalent stuff which is like when a black hole spits out what galleries that is sensible and wipe out all life as we know it
Now the data sets we have so I remember when I was university we were looking for what was known as like we're looking for big events like gallery bursts and the equivalent stuff which is like when a black hole spits out what galleries that is sensible and wipe out all life as we know it Yeah, crazy events like that. Okay. And so we're looking for a bigger data set that is like what we're looking for or other things in the sky now we have tons of this data this is like petabytes of data genuinely fun size big data
Yeah, crazy events like that. Okay. And so we're looking for a bigger data set that is like what we're looking for or other things in the sky now we have tons of this data this is like petabytes of data genuinely fun size big data Now our local machine can't handle all that so it's all in some very large array of SSDs so what happened here is we have lots and lots of these. That's actually given the logo of the name of all sorts of SSD but this right so actually we have
Now our local machine can't handle all that so it's all in some very large array of SSDs so what happened here is we have lots and lots of these. That's actually given the logo of the name of all sorts of SSD but this right so actually we have So this is over the network we have a big part of SSDs right they are there there might be slightly better all kinds of this but let's say we're an astrophysics department so probably not
So this is over the network we have a big part of SSDs right they are there there might be slightly better all kinds of this but let's say we're an astrophysics department so probably not Right so they're all over there and what happens is we say on our machine I want to know I want to find these gamma ray burst events will be super no right so the first thing I'm going to do a
Right so they're all over there and what happens is we say on our machine I want to know I want to find these gamma ray burst events will be super no right so the first thing I'm going to do a All that data is in some massive click house cluster which is let's say 150 machines running click house all with disks attached right all somewhere else not on my machine okay and what I say to the over there is give me the first thing so this is a count so I want to know how big this data is before I even try and get some screen I want to get some rough guesses on numbers right so I say give me a count of the number of events where the intensity so how big
All that data is in some massive click house cluster which is let's say 150 machines running click house all with disks attached right all somewhere else not on my machine okay and what I say to the over there is give me the first thing so this is a count so I want to know how big this data is before I even try and get some screen I want to get some rough guesses on numbers right so I say give me a count of the number of events where the intensity so how big And bright the event was is above I know some number of standard candles which is a measure of brightness for us to go things right but also that it was in the gamma spectra so the spec that the the wavelength was below a certain number and the brightness was about a certain number
And bright the event was is above I know some number of standard candles which is a measure of brightness for us to go things right but also that it was in the gamma spectra so the spec that the the wavelength was below a certain number and the brightness was about a certain number But what was it was count so I need to do is I send this to click house over my networks a give me this click house says okay and it scans through just those two columns as is greater than and less than on each column so super fast on all the around all the various machines all those SSDs over the network
But what was it was count so I need to do is I send this to click house over my networks a give me this click house says okay and it scans through just those two columns as is greater than and less than on each column so super fast on all the around all the various machines all those SSDs over the network And I get a series of counts back from every machine through the CPU is all the way up scans through these SSDs into around into the CPU does the very little bit of math needs to and then after does all that across the whole network of machines it all gets spat back over the network to my machine and I receive a couple of numbers which is this many
And I get a series of counts back from every machine through the CPU is all the way up scans through these SSDs into around into the CPU does the very little bit of math needs to and then after does all that across the whole network of machines it all gets spat back over the network to my machine and I receive a couple of numbers which is this many Let's say I know from the from the hundreds of billions of events I started with trillion zero ends I start with I now know is only about three or more million I care about which could be gamma ray bursts so I go that's not too bad I can return some of that data over the wire and it won't kill my machine right I can't pull petabytes over the wire I'll be here for months
Let's say I know from the from the hundreds of billions of events I started with trillion zero ends I start with I now know is only about three or more million I care about which could be gamma ray bursts so I go that's not too bad I can return some of that data over the wire and it won't kill my machine right I can't pull petabytes over the wire I'll be here for months Generally months right so instead I now know I'm not going to do something crazy so I say select now rather than count so select is going to get me some data the word dangerous territory now select select and these are the columns I care about so I now know they're into the spectrum things I care about so now I want to know where they are in the sky so which direction there which is like a series of angles and some other bits of pieces right so which direction that signal is going to be
Generally months right so instead I now know I'm not going to do something crazy so I say select now rather than count so select is going to get me some data the word dangerous territory now select select and these are the columns I care about so I now know they're into the spectrum things I care about so now I want to know where they are in the sky so which direction there which is like a series of angles and some other bits of pieces right so which direction that signal is going to be So I say select the did select the direction column the intensity column the wavelength column and there's probably a distance column there as well like how far away was it okay so those four columns select all of those please where I'm inside this field now click house crunches through all this again six a bit longer because it's now returning more data so it's called more data is the CPU so over the wire and over the next you know I'm going to do that again
So I say select the did select the direction column the intensity column the wavelength column and there's probably a distance column there as well like how far away was it okay so those four columns select all of those please where I'm inside this field now click house crunches through all this again six a bit longer because it's now returning more data so it's called more data is the CPU so over the wire and over the next you know I'm going to do that again I know I'm 150 seconds let's say a couple minutes go by and I get couple of gigabytes of data locally be five six gigabytes data right just about realistic to be honest it's about five minutes to download a few gigabytes and I now have this one big table of data and I think that is cool I know I can now work with locally and the reason I had to do it remotely is because one I want to use the whole CPUs and all those different machines but two because that data need to be done locally so it was fast
I know I'm 150 seconds let's say a couple minutes go by and I get couple of gigabytes of data locally be five six gigabytes data right just about realistic to be honest it's about five minutes to download a few gigabytes and I now have this one big table of data and I think that is cool I know I can now work with locally and the reason I had to do it remotely is because one I want to use the whole CPUs and all those different machines but two because that data need to be done locally so it was fast This is why click house is really fast this was known if is the data is right next to the RAM is right next to the CPU is it runs on. That calculation was done really close to the data and then we spat up only the bit we care about over the wire
This is why click house is really fast this was known if is the data is right next to the RAM is right next to the CPU is it runs on. That calculation was done really close to the data and then we spat up only the bit we care about over the wire You are definitely giving me more questions for next time because I know because I know we're we're close to wrapping time and I I also feel like a lot of this information already knew but they weren't together so it didn't necessarily make sense but at the same time I'm like if you keep adding things I'm going to start giving you a blank stare
You are definitely giving me more questions for next time because I know because I know we're we're close to wrapping time and I I also feel like a lot of this information already knew but they weren't together so it didn't necessarily make sense but at the same time I'm like if you keep adding things I'm going to start giving you a blank stare So we're trying to find it down again because this is the kind of core concept here is the things that you'll find that these patterns repeat and this is my favorite thing here is a certain point we'll get to this weird realization that it's all the same and genuinely and like the three things that always end up matter are how easy to find the data I care about like how like how can I search for it so this indexing this is acceleration structures this is core of like how do I get to the thing I need
So we're trying to find it down again because this is the kind of core concept here is the things that you'll find that these patterns repeat and this is my favorite thing here is a certain point we'll get to this weird realization that it's all the same and genuinely and like the three things that always end up matter are how easy to find the data I care about like how like how can I search for it so this indexing this is acceleration structures this is core of like how do I get to the thing I need I know I only go right then it's how do I load it how do I only how do I how do I load it as fast as possible into a place I can crunch it and then it's how I get only what I care about so what I load is small enough that it fits
I know I only go right then it's how do I load it how do I only how do I how do I load it as fast as possible into a place I can crunch it and then it's how I get only what I care about so what I load is small enough that it fits So it's how do I find the bit I care about how do I access it as fast as I can and how do I keep as little as possible around. And that all makes sense and those the only three things that matter in most things to do a data
So it's how do I find the bit I care about how do I access it as fast as I can and how do I keep as little as possible around. And that all makes sense and those the only three things that matter in most things to do a data Okay, this is rendering all the same right it's I need to find it I need to get it to where used to be and you can be as small as possible so I can get past it as fast as possible everything else is just a way of getting there. Okay. I will get there like what you say makes sense but connecting
Okay, this is rendering all the same right it's I need to find it I need to get it to where used to be and you can be as small as possible so I can get past it as fast as possible everything else is just a way of getting there. Okay. I will get there like what you say makes sense but connecting Yes. It's going to take a lot of dots there's a lot of dots to connect here and the thing so the core thing to always remember is we always want to go a bit faster and we don't want to wait once we are achieving what we want to wait what we wanted
Yes. It's going to take a lot of dots there's a lot of dots to connect here and the thing so the core thing to always remember is we always want to go a bit faster and we don't want to wait once we are achieving what we want to wait what we wanted Same reason is now we go back to Napster again that's a wonderful example right. Napster in the days of dial up the slowest part was what we had to wait for so we did as a batch you chunked it over the wire overnight
Same reason is now we go back to Napster again that's a wonderful example right. Napster in the days of dial up the slowest part was what we had to wait for so we did as a batch you chunked it over the wire overnight Remember because our line wire from the similar time lines you know we said we said it we said it going and then we waited and we came back some hours later or longer hoping no one else picked up the phone in the meantime
Remember because our line wire from the similar time lines you know we said we said it we said it going and then we waited and we came back some hours later or longer hoping no one else picked up the phone in the meantime Oh yeah, I remember those days well and eventually on our machine we had a file which would work in theory. But the point was that we then wanted uninterrupted experience so we had the way for the slow bit to happen so we could do the fast bit. Right
Oh yeah, I remember those days well and eventually on our machine we had a file which would work in theory. But the point was that we then wanted uninterrupted experience so we had the way for the slow bit to happen so we could do the fast bit. Right So we searched for the song we wanted that was fairly fast because we're just searching for method data we looked for what we cared about we said what's the name of the song we care about you know and we want to find that one track that we care about so we found that track that was not that to do a little bit of time
So we searched for the song we wanted that was fairly fast because we're just searching for method data we looked for what we cared about we said what's the name of the song we care about you know and we want to find that one track that we care about so we found that track that was not that to do a little bit of time Then we said go and we then chunked it over the very slow bit of the network and then we had it local and then we could experience it which is that up the up the stack again and it's the thing we care about. Okay and that's it's actually starting to make a lot more sense it's just
Then we said go and we then chunked it over the very slow bit of the network and then we had it local and then we could experience it which is that up the up the stack again and it's the thing we care about. Okay and that's it's actually starting to make a lot more sense it's just It's all the same it's just are you the database or is the database the database yeah and I think this goes into a lot of also how are we processing the data and what
It's all the same it's just are you the database or is the database the database yeah and I think this goes into a lot of also how are we processing the data and what Yes eventually what we do with the data like what are things that you can use databases for those are all like future questions because I know he's definitely did not get anywhere near those so yeah
Yes eventually what we do with the data like what are things that you can use databases for those are all like future questions because I know he's definitely did not get anywhere near those so yeah Lots to go over in the future and thank you for coming on the stream today anything else that I know you gave us the three things to know is how to find the data how to what's the fastest way to load the data and how to
Lots to go over in the future and thank you for coming on the stream today anything else that I know you gave us the three things to know is how to find the data how to what's the fastest way to load the data and how to So do I get only what I want from the data so others those three things anything else you want us to walk away with
So do I get only what I want from the data so others those three things anything else you want us to walk away with That suppose it as I said like the key thing there is is it's literally the same thing applied everywhere and I can try to walk you through why a game engine does exactly the same thing as a database as Kafka as your file system in your brain
That suppose it as I said like the key thing there is is it's literally the same thing applied everywhere and I can try to walk you through why a game engine does exactly the same thing as a database as Kafka as your file system in your brain All the same and genuinely all the same we will get there we will get there but thank you again for joining today and y'all if you want to find them on Twitter his Twitter handle is right below his video but also it is then gamble seven
All the same and genuinely all the same we will get there we will get there but thank you again for joining today and y'all if you want to find them on Twitter his Twitter handle is right below his video but also it is then gamble seven Yes i'm lazy I use my name everywhere because otherwise I will forget my username I mean I have to show teach gentec yet everything is under my name gench not because I'm like I don't. That's not going to change at least so thank you everyone.
Yes i'm lazy I use my name everywhere because otherwise I will forget my username I mean I have to show teach gentec yet everything is under my name gench not because I'm like I don't. That's not going to change at least so thank you everyone.