The men's welcome to another episode of Teach Gen Tech, where we have been back again. And I'm excited because we are learning the basics of data because, well, we use data day in, day out. You just watch the stream. Hear the stream. Do anything about on the interwebs? It all uses data And then I feel like I should know a better introduction for you, but your bed gamble that does absolutely everything. And currently is a dev role at Ivan as well
And then I feel like I should know a better introduction for you, but your bed gamble that does absolutely everything. And currently is a dev role at Ivan as well But what's your official introduction? So these days, I mostly go by the open source technology sub-LEA, which is kind of as a joke based around my job, mostly being about pairing some Kafka, some Postgres, and maybe some cheese in the middle
But what's your official introduction? So these days, I mostly go by the open source technology sub-LEA, which is kind of as a joke based around my job, mostly being about pairing some Kafka, some Postgres, and maybe some cheese in the middle And the idea is basically trying to pair the right pieces of software to build that stack. And the reason about this is that these days, most of what you do is no longer just that single column of tech of your database, and maybe it went framework on top
And the idea is basically trying to pair the right pieces of software to build that stack. And the reason about this is that these days, most of what you do is no longer just that single column of tech of your database, and maybe it went framework on top These days, there are more bits in the stack. Therefore, you've got to pair the right pieces together to get the best outcome. Yes, yes, all of that, all of that. Also, it's a good joke
These days, there are more bits in the stack. Therefore, you've got to pair the right pieces together to get the best outcome. Yes, yes, all of that, all of that. Also, it's a good joke And I feel like that's such a good thing because as I've been learning about databases, especially Postgres right now, a lot of it is I'm seeing how much it's interconnected with everything else. Everything is connected
And I feel like that's such a good thing because as I've been learning about databases, especially Postgres right now, a lot of it is I'm seeing how much it's interconnected with everything else. Everything is connected It's just learning what they are and how they're connected, which has been fun and annoying. The deeper you get into this, the more you get this kind of weird dichotomy of everything is different, but everything is the same
It's just learning what they are and how they're connected, which has been fun and annoying. The deeper you get into this, the more you get this kind of weird dichotomy of everything is different, but everything is the same But it's all very different, but it's all the same, but it won't talk unless you really make it. And this is something that I've been realizing with, learning live in the last nine months has been things that are very, very complex can make total sense until you go to do it
But it's all very different, but it's all the same, but it won't talk unless you really make it. And this is something that I've been realizing with, learning live in the last nine months has been things that are very, very complex can make total sense until you go to do it And then it doesn't make sense at all. And you're like, what? What? So that is what I have realized that I get really stuck with and I have linked in the chat y'all the playlist from, got I started about this series, which currently just has our last episode
And then it doesn't make sense at all. And you're like, what? What? So that is what I have realized that I get really stuck with and I have linked in the chat y'all the playlist from, got I started about this series, which currently just has our last episode Eventually I will also link in the Postgres ones because they're also learning about data. Yet anything you want to go over before I show you recaps of last week and where I got stuff. I think that's really everything, or really, to be honest, other than that the playlist is great, please watch it
Eventually I will also link in the Postgres ones because they're also learning about data. Yet anything you want to go over before I show you recaps of last week and where I got stuff. I think that's really everything, or really, to be honest, other than that the playlist is great, please watch it Yeah, yes. And I feel like so yesterday I had a friend on his name's Anthony Campolo and he was on and he works for EGEO, which is a part of line light. And I had no idea that his friend Scott was part of them until they started saying that their Twitter space every week is a part of EGEO
Yeah, yes. And I feel like so yesterday I had a friend on his name's Anthony Campolo and he was on and he works for EGEO, which is a part of line light. And I had no idea that his friend Scott was part of them until they started saying that their Twitter space every week is a part of EGEO I was like, oh, anyway, all that to say that Scott is the best at doing his radio ads of make sure that you follow everybody on the screen and in the Twitter space and to like follow and interact and make sure to come on stage and ask questions
I was like, oh, anyway, all that to say that Scott is the best at doing his radio ads of make sure that you follow everybody on the screen and in the Twitter space and to like follow and interact and make sure to come on stage and ask questions You really ought to get a difficult sound fight for this and then press the button. Oh, that yes, yes, that is what I should do. And okay, well, going to our lovely data spread sheep, which you all then did a lot of this work before our stream last week
You really ought to get a difficult sound fight for this and then press the button. Oh, that yes, yes, that is what I should do. And okay, well, going to our lovely data spread sheep, which you all then did a lot of this work before our stream last week And I copy and pasted and wrote notes about some of it. So I'm gonna go through and see what I remember and get corrected on some things
And I copy and pasted and wrote notes about some of it. So I'm gonna go through and see what I remember and get corrected on some things So, as you may see, this is where we started when we were talking about how data progresses, which in the speed of progression, where like when you have a cache, it's the very, very first part of where data starts. It's only in the single digits of megabytes
So, as you may see, this is where we started when we were talking about how data progresses, which in the speed of progression, where like when you have a cache, it's the very, very first part of where data starts. It's only in the single digits of megabytes And we talked about how a thousand 24 megabytes go into a gig, oh, I always feel like I want to go over here. We're gonna postpone just a moment. Because would this help knowing the rest of them going through this first? Or does this make it more confusing? So this is really about speed
And we talked about how a thousand 24 megabytes go into a gig, oh, I always feel like I want to go over here. We're gonna postpone just a moment. Because would this help knowing the rest of them going through this first? Or does this make it more confusing? So this is really about speed So this is like, so this is where we, so the best thing to do is actually start where we were. And I'll, if I could run the quick recap as well. So, we'll go back to where we were. The main thing is you start, yeah, so the best side here. So the key thing to start with is CPU in your machine
So this is like, so this is where we, so the best thing to do is actually start where we were. And I'll, if I could run the quick recap as well. So, we'll go back to where we were. The main thing is you start, yeah, so the best side here. So the key thing to start with is CPU in your machine It can only act on a few bits and pieces at once. Those bits in the cache, which is both the fastest and the most expensive piece of memory. When you need more data, you pull it from what's known as main memory or RAM around the maximum, which is nowhere near as costly
It can only act on a few bits and pieces at once. Those bits in the cache, which is both the fastest and the most expensive piece of memory. When you need more data, you pull it from what's known as main memory or RAM around the maximum, which is nowhere near as costly And there's a separate, not only a separate chip on your machine through your CPU. And that's kind of measured in like gigabytes. You have gigabytes of RAM. You can go up to terabytes of RAM just about these days, but you're going to be paying, you'll be able to sell a lot of money for that
And there's a separate, not only a separate chip on your machine through your CPU. And that's kind of measured in like gigabytes. You have gigabytes of RAM. You can go up to terabytes of RAM just about these days, but you're going to be paying, you'll be able to sell a lot of money for that Cache is single digit megabytes to about 30 megabytes on a big CPU. You don't get much cache. And it's very, very expensive. So then as you go down again, we get to your kind of persistent storage because RAM is still so volatile. You turn the machine off. It's all gone
Cache is single digit megabytes to about 30 megabytes on a big CPU. You don't get much cache. And it's very, very expensive. So then as you go down again, we get to your kind of persistent storage because RAM is still so volatile. You turn the machine off. It's all gone It's all gone. And these are where you get SSDs and hard disks, you know, spinning platter drives. And these are not slow by any stretch of the imagination for what comes next, but they are much, much slower again, but also much, much bigger than RAM
It's all gone. And these are where you get SSDs and hard disks, you know, spinning platter drives. And these are not slow by any stretch of the imagination for what comes next, but they are much, much slower again, but also much, much bigger than RAM After we get to the disk drives, we kind of go beyond the size of what one machine will hold. And this is where we get to this kind of like, what often is referred to as like cloud scale stuff
After we get to the disk drives, we kind of go beyond the size of what one machine will hold. And this is where we get to this kind of like, what often is referred to as like cloud scale stuff So we go, okay, so our local area might have like four or five machines all stapled together using the local area network LAN. And that will give us all the different disks attached to all the different machines to access
So we go, okay, so our local area might have like four or five machines all stapled together using the local area network LAN. And that will give us all the different disks attached to all the different machines to access That's great, but now if you imagine that cables go machine machines and now your band is now your kind of finite max speed is, I've got a call over there. It's physically further away. It takes a long way for the days to get there
That's great, but now if you imagine that cables go machine machines and now your band is now your kind of finite max speed is, I've got a call over there. It's physically further away. It takes a long way for the days to get there It's not that slow by comparison to the next step, which is the wide area network or the LAN, which is I would use S3 or equivalent or some of the block object storage, which is no longer on machines you probably own, but it is if you own the one print, but they're so far away by comparison, there's so many of them that it's once again, much, much, much, much bigger
It's not that slow by comparison to the next step, which is the wide area network or the LAN, which is I would use S3 or equivalent or some of the block object storage, which is no longer on machines you probably own, but it is if you own the one print, but they're so far away by comparison, there's so many of them that it's once again, much, much, much, much bigger You can store, you know, exabytes of data in S3, but you know, the access speed is gonna be commensurately lower
You can store, you know, exabytes of data in S3, but you know, the access speed is gonna be commensurately lower There are some good trade-offs and bad trade-offs there, but it's so cheap by comparison to your cash or your RAM or even your local hard drives that it is very much worth the trade-off. If that's what you can get away with
There are some good trade-offs and bad trade-offs there, but it's so cheap by comparison to your cash or your RAM or even your local hard drives that it is very much worth the trade-off. If that's what you can get away with The kind of really important thing to know is that eventually if you wanna act upon that day day, that's have to hit your cash at some point or your CPU can't touch it
The kind of really important thing to know is that eventually if you wanna act upon that day day, that's have to hit your cash at some point or your CPU can't touch it This is like, if you imagine a production line, like the machine itself has, like, whether the thing that stamps out a punch into a piece of flat metal, that bit we can act upon is your cash. It's a very small area, but then lots of bits can go through
This is like, if you imagine a production line, like the machine itself has, like, whether the thing that stamps out a punch into a piece of flat metal, that bit we can act upon is your cash. It's a very small area, but then lots of bits can go through So you gotta pump them through the cash to get things done. And that's kind of like core of what we started off with. And that's why you have to kill advice, make advice, make advice, or advice and pet advice. It's just kind of like, as you go down, you get bigger, cheaper and slower
So you gotta pump them through the cash to get things done. And that's kind of like core of what we started off with. And that's why you have to kill advice, make advice, make advice, or advice and pet advice. It's just kind of like, as you go down, you get bigger, cheaper and slower As you go up, you get much more expensive, much smaller and much, much faster. And this is where we then jump to that lovely little diagram at latency. Because this is like where it ends up being important. Because latency is just the time it takes for something to happen, right? Yes. Yeah
As you go up, you get much more expensive, much smaller and much, much faster. And this is where we then jump to that lovely little diagram at latency. Because this is like where it ends up being important. Because latency is just the time it takes for something to happen, right? Yes. Yeah Yeah. I ended up somehow merding some of the notes, but I'm moving this over so we can see both. That's the other direction. Because buffering did help when you were talking about the water. Yes. So these are my lovely graphics to go with it
Yeah. I ended up somehow merding some of the notes, but I'm moving this over so we can see both. That's the other direction. Because buffering did help when you were talking about the water. Yes. So these are my lovely graphics to go with it Now, one thing that helps for me to remember when I'm looking at these is, for some reason, some words just don't click. Like that RAM and memory are the same thing. Why? I have no idea. Random access memory. So I wrote it out. And CPU and GPU is similar
Now, one thing that helps for me to remember when I'm looking at these is, for some reason, some words just don't click. Like that RAM and memory are the same thing. Why? I have no idea. Random access memory. So I wrote it out. And CPU and GPU is similar But do most computers have both or does the GPU use or is inside of the CPU? So these days, they are nearly always discrete pieces of silicon. However, they might be built in. You can get a piece of the GPU chip is often built into a CPU. So Intel have what's known as integrative graphics often
But do most computers have both or does the GPU use or is inside of the CPU? So these days, they are nearly always discrete pieces of silicon. However, they might be built in. You can get a piece of the GPU chip is often built into a CPU. So Intel have what's known as integrative graphics often And those are integrated into the actual same piece of silicon. But they'll still be a separate area, but it'll be another GPU, but it will be integrated onto the same piece, the same wafer, what dies, as often known
And those are integrated into the actual same piece of silicon. But they'll still be a separate area, but it'll be another GPU, but it will be integrated onto the same piece, the same wafer, what dies, as often known AMD does as well with their what's known as APU range of processes, but it's not uncor, it's increasingly common in some places and uncommon in others. When you get to specialist hardware, as in hardware, which has a performance characteristics, you tend to have discrete units
AMD does as well with their what's known as APU range of processes, but it's not uncor, it's increasingly common in some places and uncommon in others. When you get to specialist hardware, as in hardware, which has a performance characteristics, you tend to have discrete units So there's a discrete GPU, because then you get all of the usefulness of lots of space and good heat management
So there's a discrete GPU, because then you get all of the usefulness of lots of space and good heat management If you imagine you wanted to have a beefy game running high speeds, you don't want to have all the heat to that generates in the same places as your CPU, because you can imagine the load in the lot higher. That makes sense. So thank you for those clarifications. That does help. Okay, now I have to
If you imagine you wanted to have a beefy game running high speeds, you don't want to have all the heat to that generates in the same places as your CPU, because you can imagine the load in the lot higher. That makes sense. So thank you for those clarifications. That does help. Okay, now I have to.. The only one kind of thing to make is like, as you go in, as the problem, from men's of being, that a lot of what we consider computers to be is still based off a bunch of thought processes left over from the late 80s to... Well, not early to late 80s. I'll call the PDP 11 era of thinking. Okay
.. The only one kind of thing to make is like, as you go in, as the problem, from men's of being, that a lot of what we consider computers to be is still based off a bunch of thought processes left over from the late 80s to... Well, not early to late 80s. I'll call the PDP 11 era of thinking. Okay Okay. And what that means is all of our various mic mental models, often the way we actually program a based around a bunch of these computers that no longer exist, right? Back when it was so prohibitive and expensive to do some things, that decisions were made
Okay. And what that means is all of our various mic mental models, often the way we actually program a based around a bunch of these computers that no longer exist, right? Back when it was so prohibitive and expensive to do some things, that decisions were made Though, what that really means is, as you come to kind of today's actual chips and hardware design, so many things are..
Though, what that really means is, as you come to kind of today's actual chips and hardware design, so many things are.... It depends, out the box now, because I could tell you about, like, specialist pieces of hardware, where they're mostly GPU, a tiny bit of CPU, you could literally, like, get something or an FPGA, which can then just put all the different bits in one piece of silicon and do all kinds of nonsense
.. It depends, out the box now, because I could tell you about, like, specialist pieces of hardware, where they're mostly GPU, a tiny bit of CPU, you could literally, like, get something or an FPGA, which can then just put all the different bits in one piece of silicon and do all kinds of nonsense But it's, it basically is because we've gotten so good at building hardware, in some respects, that we've over-specialized, like, and then generalized and specialized and generalized a couple of cycles over
But it's, it basically is because we've gotten so good at building hardware, in some respects, that we've over-specialized, like, and then generalized and specialized and generalized a couple of cycles over So everything is sort of, like, become that weird, like, if you imagine all the dog breeds turning into Mongrel's, not the whole. Okay. So it's going a bit strange over time, but I'm still going to go by the generalities we normally use, because they still hold true more often than not
So everything is sort of, like, become that weird, like, if you imagine all the dog breeds turning into Mongrel's, not the whole. Okay. So it's going a bit strange over time, but I'm still going to go by the generalities we normally use, because they still hold true more often than not Okay, and that is making sense. Like, everything you're seeing there makes sense. I now get why you were saying to go to this second. So thank you. So this is like not a second, this is not a if
Okay, and that is making sense. Like, everything you're seeing there makes sense. I now get why you were saying to go to this second. So thank you. So this is like not a second, this is not a if Yeah, so I guess the other part that, and this is a big reason, I am super glad that we're doing this again, but also that I'm writing notes as we go, is I've realized that's helped me learn so much better, because people can fact check what I'm actually writing down. It's marvelous
Yeah, so I guess the other part that, and this is a big reason, I am super glad that we're doing this again, but also that I'm writing notes as we go, is I've realized that's helped me learn so much better, because people can fact check what I'm actually writing down. It's marvelous It's marvelous. So when we're talking about one NS, this is what cash is using. Yeah, so a cash, so the first one there is that the L1 cash reference is half an hour a second. So this is about one CPU site
It's marvelous. So when we're talking about one NS, this is what cash is using. Yeah, so a cash, so the first one there is that the L1 cash reference is half an hour a second. So this is about one CPU site This is like, I can't remember how many CPU cycles this is, because it depends too much on things, but fundamentally half an hour a second, but the fastest thing a computer will do. When you, then these are all inside cash
This is like, I can't remember how many CPU cycles this is, because it depends too much on things, but fundamentally half an hour a second, but the fastest thing a computer will do. When you, then these are all inside cash So L2 is another bit of the cash, it's just a bit, it's, it's, it's cash is at levels, but not really important for today. The key thing really here is like, you know, you're looking at tens of nanose, like below 10 nanoseconds, to do things from cash, really, okay? Below 10 nanoseconds
So L2 is another bit of the cash, it's just a bit, it's, it's, it's cash is at levels, but not really important for today. The key thing really here is like, you know, you're looking at tens of nanose, like below 10 nanoseconds, to do things from cash, really, okay? Below 10 nanoseconds This is one thing I'm learning with the AccelerDRA is it can still pick up my pencils so much more that it, I cross out my, so you said it. Single digit nanoseconds. Yeah, single digit nanoseconds is your cash stuff. So everything in cash is with the single digit nanoseconds ish
This is one thing I'm learning with the AccelerDRA is it can still pick up my pencils so much more that it, I cross out my, so you said it. Single digit nanoseconds. Yeah, single digit nanoseconds is your cash stuff. So everything in cash is with the single digit nanoseconds ish And that these are mostly each kind of like orders, like the way to think of this is like, it often ends up being a bit like, it's a bit hard or independent, when you get down to these low speeds, like really fast things
And that these are mostly each kind of like orders, like the way to think of this is like, it often ends up being a bit like, it's a bit hard or independent, when you get down to these low speeds, like really fast things So these are just, it's best to think in terms of tens of hundreds of single digits of for this stuff, because like, you'll get a lot of people go, well, actually, blah, blah, blah, blah, blah, blah, and that doesn't really matter
So these are just, it's best to think in terms of tens of hundreds of single digits of for this stuff, because like, you'll get a lot of people go, well, actually, blah, blah, blah, blah, blah, blah, and that doesn't really matter For most practical use cases, I know of, and nearly all the engineering I've ever done, including like hardcore, like handwriting, the assembly stuff. An order of magnitude in, of time units is all you ever need in kind of a solution
For most practical use cases, I know of, and nearly all the engineering I've ever done, including like hardcore, like handwriting, the assembly stuff. An order of magnitude in, of time units is all you ever need in kind of a solution I've only ever come up a couple of times when we talked about actual exact nanos. Okay. Now that we went through a bit of the beginning part again, what would you say? So we talked about that cash is mega bytes. And now we're talking about that cash is nanoseconds
I've only ever come up a couple of times when we talked about actual exact nanos. Okay. Now that we went through a bit of the beginning part again, what would you say? So we talked about that cash is mega bytes. And now we're talking about that cash is nanoseconds So it's how long it takes to process. It takes to do something, to do something. Yeah. And cash actions. Yeah. An action from cash takes nanoseconds. The reason I say action is because it's, it's a big vague video to the cash of what you're actually doing
So it's how long it takes to process. It takes to do something, to do something. Yeah. And cash actions. Yeah. An action from cash takes nanoseconds. The reason I say action is because it's, it's a big vague video to the cash of what you're actually doing And I try, like the general rule is, yeah, using stuff from cash is nanoseconds. Okay. So cool. And then, the next one is RAM or main memory. So RAM of course is random access memory
And I try, like the general rule is, yeah, using stuff from cash is nanoseconds. Okay. So cool. And then, the next one is RAM or main memory. So RAM of course is random access memory And this is where I talked about the computers from the 80s, because this is, RAM was specifically, is often specifically used to differentiate from ROM, which is read only memory or, and, or, or, and other things like this, where this is memory where you could read, you could basically, what's the most flash it once, and it would hold whatever you gave it
And this is where I talked about the computers from the 80s, because this is, RAM was specifically, is often specifically used to differentiate from ROM, which is read only memory or, and, or, or, and other things like this, where this is memory where you could read, you could basically, what's the most flash it once, and it would hold whatever you gave it Okay. And you could never write to it, but you could keep reading from it very quickly. So main memory reference, this is accessing something in your main memory is hundreds of nanoseconds. So you could RAM for 100 nanose or, so three did in nanose
Okay. And you could never write to it, but you could keep reading from it very quickly. So main memory reference, this is accessing something in your main memory is hundreds of nanoseconds. So you could RAM for 100 nanose or, so three did in nanose So this is random access memory, not read access memory. Read only memory here. So RAM not ROM. ROM is not relevant in today's world of what we do. I wish I could say ROM has not come up in my careers, I think I need to deal with, but my career is otherwise known as I do nonsens. Yeah
So this is random access memory, not read access memory. Read only memory here. So RAM not ROM. ROM is not relevant in today's world of what we do. I wish I could say ROM has not come up in my careers, I think I need to deal with, but my career is otherwise known as I do nonsens. Yeah Yeah. That's one way to put it. Oh yes, yes, people pay me for the nonsens. Okay, if that's actually really, you can read that book. Access memory. And I think that's why I'm also getting a ROM. Read only memory
Yeah. That's one way to put it. Oh yes, yes, people pay me for the nonsens. Okay, if that's actually really, you can read that book. Access memory. And I think that's why I'm also getting a ROM. Read only memory Read only memory. Yes, so this is a useful thing to know, only because it will help understand the acronym. Right
Read only memory. Yes, so this is a useful thing to know, only because it will help understand the acronym. Right Right. And the problem with this stuff is always that a lot, it's like the idea of there are people who think the floppy disk in a picture is just the safe symbol, not representative of a disk we just physically have
Right. And the problem with this stuff is always that a lot, it's like the idea of there are people who think the floppy disk in a picture is just the safe symbol, not representative of a disk we just physically have It's the, like there's a lot of problems if computing is computing is now old enough that things have gone and it changes so quickly that things have gone obsolete, that used to be so core to what we do, that their names or their pictures persist so much longer, but the actual think themselves
It's the, like there's a lot of problems if computing is computing is now old enough that things have gone and it changes so quickly that things have gone obsolete, that used to be so core to what we do, that their names or their pictures persist so much longer, but the actual think themselves Yeah. Yo, what up, blacks? As you can see, I was probably way too focused on writing notes. And yay, Lex has been learning along with me. I found out yesterday that the way I explained Docker and Kubernetes in basic terms made sense to somebody else. I was very excited
Yeah. Yo, what up, blacks? As you can see, I was probably way too focused on writing notes. And yay, Lex has been learning along with me. I found out yesterday that the way I explained Docker and Kubernetes in basic terms made sense to somebody else. I was very excited I was very excited. It took me ages to get my head around, like why is that kind of virtualization mattered? Like I mean ages, like it was like a couple of years and deducing it for us, like it finally clicked to why this was relevant. Oh, I don't know
I was very excited. It took me ages to get my head around, like why is that kind of virtualization mattered? Like I mean ages, like it was like a couple of years and deducing it for us, like it finally clicked to why this was relevant. Oh, I don't know That like makes sense to me, but then there's like this kind of stuff where I'm like, why can I not get it? So I suppose it's the other classic thing of like this is where I started, like a this kind of level of like bits on wires versus you started probably with more complete systems
That like makes sense to me, but then there's like this kind of stuff where I'm like, why can I not get it? So I suppose it's the other classic thing of like this is where I started, like a this kind of level of like bits on wires versus you started probably with more complete systems And it's just that it all it comes down to is like your entry into this world comes from one side on the other side nearly always. So you either know some stuff you don't know others. Cause there's just too much to know now. I'm trying to think what SSE is. Solid state disk. Okay
And it's just that it all it comes down to is like your entry into this world comes from one side on the other side nearly always. So you either know some stuff you don't know others. Cause there's just too much to know now. I'm trying to think what SSE is. Solid state disk. Okay Okay. So it's state disk. And differentiate it from what's from the old hard disk drives, which were spinning, cause they're actually the spin, of course. So they don't spin to this solid. No moving parts in the SSD
Okay. So it's state disk. And differentiate it from what's from the old hard disk drives, which were spinning, cause they're actually the spin, of course. So they don't spin to this solid. No moving parts in the SSD And this is kind of noticeable because if your disk was a, you know, particularly bad state, you could hear it going tick, tick, tick, tick, tick, which is the head moving around, the read head moving around. And occasionally hitting on the disk itself
And this is kind of noticeable because if your disk was a, you know, particularly bad state, you could hear it going tick, tick, tick, tick, tick, which is the head moving around, the read head moving around. And occasionally hitting on the disk itself Lex, I am going to be starting a new database next month sometime. And I think I'm going to be building raspberry pies. Yes. I actually have some of them here. Yay. Which we're going to be using on for this. Yes
Lex, I am going to be starting a new database next month sometime. And I think I'm going to be building raspberry pies. Yes. I actually have some of them here. Yay. Which we're going to be using on for this. Yes Yes. So Lex, I'm going to help like need to make sure that you're like in the audience, then I get stuck. Okay. Cool. And I also put a few more notes of like solid state, just so that way I knew the difference
Yes. So Lex, I'm going to help like need to make sure that you're like in the audience, then I get stuck. Okay. Cool. And I also put a few more notes of like solid state, just so that way I knew the difference And I think something that I might have missed last time was the fact that rayon erases when it's turned off where solid state saves it. Yes. This is actually from the more important distinctions. So there's a whole line I could follow about
And I think something that I might have missed last time was the fact that rayon erases when it's turned off where solid state saves it. Yes. This is actually from the more important distinctions. So there's a whole line I could follow about There's an it depends on a well actually, but there's not that's not important today
There's an it depends on a well actually, but there's not that's not important today What's important today is that like this is why a lot of tools like Kafka and Redis are often things like Kafka is quite important because everything in Kafka once you've got the acknowledgments backs have been written to a persistent disk, which is like the SSD
What's important today is that like this is why a lot of tools like Kafka and Redis are often things like Kafka is quite important because everything in Kafka once you've got the acknowledgments backs have been written to a persistent disk, which is like the SSD And where we work at even, I'm sorry. All of our machines have attached solid state drives. And so every time a Kafka message comes in and it's saved to that disk, it means it won't go away if machines turned off
And where we work at even, I'm sorry. All of our machines have attached solid state drives. And so every time a Kafka message comes in and it's saved to that disk, it means it won't go away if machines turned off So that's therefore, it's known as a durable, right? So this is where the terms durable often come in. So durable data means that it'll survive the machine game powered on and off. Whereas the femoral data doesn't. So redis is famously ephemeral most of the time. Hey, because redis is only a wrap
So that's therefore, it's known as a durable, right? So this is where the terms durable often come in. So durable data means that it'll survive the machine game powered on and off. Whereas the femoral data doesn't. So redis is famously ephemeral most of the time. Hey, because redis is only a wrap Okay, this is not proper. But you know what? I feel like it'll at least help me keep my memory when I get there. And I will ask you about what you just said in a fit because I could go to a tangent on that. And then we have is this last one. I don't know why I'm looking on my tablet
Okay, this is not proper. But you know what? I feel like it'll at least help me keep my memory when I get there. And I will ask you about what you just said in a fit because I could go to a tangent on that. And then we have is this last one. I don't know why I'm looking on my tablet This is network attached storage really. So like AWS basically S3 or so I just call this network storage really. Because it could be almost anything. What? Okay, so networks. Network storage
This is network attached storage really. So like AWS basically S3 or so I just call this network storage really. Because it could be almost anything. What? Okay, so networks. Network storage Network storage. So these days is nearly always what's known as an object store, which is something like S3 or Azure object store or digital ocean house one. Did you just delete something? Yeah, and I don't know. I found my undo button. Thanks. Sorry. I was looking for the undo button. I got it
Network storage. So these days is nearly always what's known as an object store, which is something like S3 or Azure object store or digital ocean house one. Did you just delete something? Yeah, and I don't know. I found my undo button. Thanks. Sorry. I was looking for the undo button. I got it I got it. Yours got there. The point really is that like to make here is that like this is this is data on a different machine now. Right. So I was referred to as network storage because to be honest, like it could be almost anything. Right
I got it. Yours got there. The point really is that like to make here is that like this is this is data on a different machine now. Right. So I was referred to as network storage because to be honest, like it could be almost anything. Right Right. And it's just it's data on other machines and network attached storage. So S3 is some is a magical thing Amazon built to give us access to near and limited storage. Then everyone else of course has their own equivalents. If you go back five plus years, this would have been really useful
Right. And it's just it's data on other machines and network attached storage. So S3 is some is a magical thing Amazon built to give us access to near and limited storage. Then everyone else of course has their own equivalents. If you go back five plus years, this would have been really useful It got HDFS to do exactly the same thing. But we'd have to run that ourselves. Classically, this was just a big, you know, just a remote disk access to a machine. It's simply a far away
It got HDFS to do exactly the same thing. But we'd have to run that ourselves. Classically, this was just a big, you know, just a remote disk access to a machine. It's simply a far away And the reason why this is important is like what you've, what we're now saying is, is mostly just how long things take. So if we go back at that kind of black, blue, green and red, right. And a random read on your SSD was about 150 microseconds, right
And the reason why this is important is like what you've, what we're now saying is, is mostly just how long things take. So if we go back at that kind of black, blue, green and red, right. And a random read on your SSD was about 150 microseconds, right Now, let's say you're going to read something from a disk quite far away. So so now we have 1000 times slower to go to, let's say, to go from California to the Netherlands. And now what happens once we get there, we have to do the read, which means it's got to go through an SSD read
Now, let's say you're going to read something from a disk quite far away. So so now we have 1000 times slower to go to, let's say, to go from California to the Netherlands. And now what happens once we get there, we have to do the read, which means it's got to go through an SSD read And then we got to go and send it back again. So you've basically gone a foul, the literally a thousand times slower to read for S3. Then it is to read from a local machine. And okay. So that part makes sense
And then we got to go and send it back again. So you've basically gone a foul, the literally a thousand times slower to read for S3. Then it is to read from a local machine. And okay. So that part makes sense Why are external hard drives considered? So I know they have some SSEs, but then they have H. That HDDs. So hard to, they might, so an external drive could be anything in a box like, you know, your flash drive, pen drive could be one of those as well
Why are external hard drives considered? So I know they have some SSEs, but then they have H. That HDDs. So hard to, they might, so an external drive could be anything in a box like, you know, your flash drive, pen drive could be one of those as well All intents and purposes, it is a network attached storage device, except the network is very small. Okay. That is helpful now. And so the main thing to understand here is, I'd say a big reason that takes 150 milliseconds to get from one place to the other is the speed of light is only so fast
All intents and purposes, it is a network attached storage device, except the network is very small. Okay. That is helpful now. And so the main thing to understand here is, I'd say a big reason that takes 150 milliseconds to get from one place to the other is the speed of light is only so fast Right. So the light literally, the electrons take a little bit of time to go from one place to the next and back again. So if they're only going to go to your pen drive, which is plugged into USB port, that doesn't take very long like a person. Okay. So totally getting this now. Um, no. So, okay
Right. So the light literally, the electrons take a little bit of time to go from one place to the next and back again. So if they're only going to go to your pen drive, which is plugged into USB port, that doesn't take very long like a person. Okay. So totally getting this now. Um, no. So, okay Um, no. So, okay. So the network attached and like the external drive totally not starting to make sense. I guess
Um, no. So, okay. So the network attached and like the external drive totally not starting to make sense. I guess I guess. And I think this is going to lead us somewhere else of then where does AWS and those type of things come into it are like, are they the same as network attached as like go daddy hosting server for all intents and purposes? Yes. So like it would be scroll a little
I guess. And I think this is going to lead us somewhere else of then where does AWS and those type of things come into it are like, are they the same as network attached as like go daddy hosting server for all intents and purposes? Yes. So like it would be scroll a little So I'm just scroll to to one of our earlier diagrams again, which is the one straight down, actually just straight down. So what's going on here, right, is the idea of, you know, the loading data into your CPU from your drive, right? Your SSD and then you want to go S3
So I'm just scroll to to one of our earlier diagrams again, which is the one straight down, actually just straight down. So what's going on here, right, is the idea of, you know, the loading data into your CPU from your drive, right? Your SSD and then you want to go S3 So there's a network hop to a different CPU somewhere else, right? And then you're loading that they're loading from their massive pile of much cheaper SSDs or take drives or whatever else they're using. Right, it doesn't really matter. They've all less storage on their own machines
So there's a network hop to a different CPU somewhere else, right? And then you're loading that they're loading from their massive pile of much cheaper SSDs or take drives or whatever else they're using. Right, it doesn't really matter. They've all less storage on their own machines They got to load it, put in the CPU and send it open the network to you
They got to load it, put in the CPU and send it open the network to you Now, let's just say for a second, we are, I don't know, downloading a file from from go daddy, right? From a good adi hosted web page, right
Now, let's just say for a second, we are, I don't know, downloading a file from from go daddy, right? From a good adi hosted web page, right I say give me that file that sends a ping over and then that file starts to download that file to download the web server running on go daddy has to access the storage in go daddy
I say give me that file that sends a ping over and then that file starts to download that file to download the web server running on go daddy has to access the storage in go daddy Right. And then start sending me the file. OK
Right. And then start sending me the file. OK OK. All over the wire, right? So that's some CPU operations that it reads from its SSD into its CPU and blapt it over the wire to me and then it's read in over my network into my CPU then written to my SSD dependent on some stuff, but for all tends to purpose, that's what happens. Right
OK. All over the wire, right? So that's some CPU operations that it reads from its SSD into its CPU and blapt it over the wire to me and then it's read in over my network into my CPU then written to my SSD dependent on some stuff, but for all tends to purpose, that's what happens. Right Right. And the whole point here is S3 is just a nut is just someone once again, this is the main thing about the cloud and everything in the cloud is it's someone else's computer. Right. Or someone else is big, big, big pile of computers
Right. And the whole point here is S3 is just a nut is just someone once again, this is the main thing about the cloud and everything in the cloud is it's someone else's computer. Right. Or someone else is big, big, big pile of computers Or in the case of S3, a very, very, a comically large number of machines running an economically large number of data centers with frankly ludicrous levels of redundancy, allowing you to basically read blocks of data near random access, surprisingly quickly. So
Or in the case of S3, a very, very, a comically large number of machines running an economically large number of data centers with frankly ludicrous levels of redundancy, allowing you to basically read blocks of data near random access, surprisingly quickly. So Legless attached data and this is just a casual term I'm using because it could be anything like back in the day when you just hosted your own little web server on a machine somewhere, you might have a single, like a single U1 rack in a data center where you've literally walked up to the day center, plugged in your rack, plugged in the cable and be serving from that
Legless attached data and this is just a casual term I'm using because it could be anything like back in the day when you just hosted your own little web server on a machine somewhere, you might have a single, like a single U1 rack in a data center where you've literally walked up to the day center, plugged in your rack, plugged in the cable and be serving from that Directly that meant all the data for your website conserve came from that rack, but as a user that's not to remote disk storage effectively, which you're accessing. Okay, this is server. This is starting to make so much more sense
Directly that meant all the data for your website conserve came from that rack, but as a user that's not to remote disk storage effectively, which you're accessing. Okay, this is server. This is starting to make so much more sense So the golden rule here is that most things are weirdly the same when you drill when you when you slice enough layers off the top, the problem there, there's a lot of course very important
So the golden rule here is that most things are weirdly the same when you drill when you when you slice enough layers off the top, the problem there, there's a lot of course very important Details which we can slightly ignore for today because genuinely they don't change much because fundamentally they have to work this way
Details which we can slightly ignore for today because genuinely they don't change much because fundamentally they have to work this way Okay, there has to be a computer at the other end to shoot so I say give me file X and AWS has got to have something that says I know where file X is here it is so it has to be a computer. Right. Right
Okay, there has to be a computer at the other end to shoot so I say give me file X and AWS has got to have something that says I know where file X is here it is so it has to be a computer. Right. Right Right. Right. And that's all making sense because this is also starting to make more sense as we go into like yesterday, Anthony was on the show talking about Docker. So this is making a lot more sense with Docker as an example of whatever this red box is now
Right. Right. And that's all making sense because this is also starting to make more sense as we go into like yesterday, Anthony was on the show talking about Docker. So this is making a lot more sense with Docker as an example of whatever this red box is now And this might be taking us off on a different tangent, but this is the fun part about you should detect we kind of have a goal and then sometimes we just go off on different parts. So we are taking it to the network, taking it off of the network
And this might be taking us off on a different tangent, but this is the fun part about you should detect we kind of have a goal and then sometimes we just go off on different parts. So we are taking it to the network, taking it off of the network Why is it going from the SSD to the RAM to the CPU instead of vice versa. Okay, so this is really because I drew it wrong. Oh, so that if I correct by drawing for a second here. So this is merely because of the way I drew it
Why is it going from the SSD to the RAM to the CPU instead of vice versa. Okay, so this is really because I drew it wrong. Oh, so that if I correct by drawing for a second here. So this is merely because of the way I drew it So what really should happen here is if I can remember where my controls are, please keep the right settings. Right. So let's draw this box, which is a bit of fill because the fill is really pretty on this, right
So what really should happen here is if I can remember where my controls are, please keep the right settings. Right. So let's draw this box, which is a bit of fill because the fill is really pretty on this, right And let's call this because this is where I get in trouble for oversimplifying things. So this is the list. Yeah, I'm going to move all this stuff above here. There we go. So this is where the abstraction, the level of abstraction kind of comes comes to bite me. Let's zoom in. And zoom in
And let's call this because this is where I get in trouble for oversimplifying things. So this is the list. Yeah, I'm going to move all this stuff above here. There we go. So this is where the abstraction, the level of abstraction kind of comes comes to bite me. Let's zoom in. And zoom in And zoom in. There we go. So if I make this a bigger, I make this a bigger to go with it. So this is the network device. This is your machine has a like a physical device, which handles the networking for it. Right. So if I load think if I want to know from the network, right. I load it like this
And zoom in. There we go. So if I make this a bigger, I make this a bigger to go with it. So this is the network device. This is your machine has a like a physical device, which handles the networking for it. Right. So if I load think if I want to know from the network, right. I load it like this Right. Because it's a network device. Then this is going to probably goes directly into. Network device basically goes via the CPU. And like that. Oh, okay. So what happens here is I suddenly start loading data on your local machine off the SSD. Now you want to load data off the network
Right. Because it's a network device. Then this is going to probably goes directly into. Network device basically goes via the CPU. And like that. Oh, okay. So what happens here is I suddenly start loading data on your local machine off the SSD. Now you want to load data off the network So you go CPU says to the network device, go dial S3, give me some data, please. Basically, if I get request the get request hits a video, right. So that goes over the network device to the CPU of the other machine and says, I want this video, please
So you go CPU says to the network device, go dial S3, give me some data, please. Basically, if I get request the get request hits a video, right. So that goes over the network device to the CPU of the other machine and says, I want this video, please It goes, okay, sending pulls it off the SSD pile at the bottom. Right
It goes, okay, sending pulls it off the SSD pile at the bottom. Right Right. And then loads that through ram through the CPU in a buzz into the ram and sends up from the CPU through its network device to this network device, we've beams it and the CPU then goes, what should I do with this? Probably buffer it in ram
Right. And then loads that through ram through the CPU in a buzz into the ram and sends up from the CPU through its network device to this network device, we've beams it and the CPU then goes, what should I do with this? Probably buffer it in ram And then once it's in ram, I read it back to the CPU to play that video. We were talking about last but not very well. So because of effectively your red box is missing and was missing previously is that red box you just drew for your machine
And then once it's in ram, I read it back to the CPU to play that video. We were talking about last but not very well. So because of effectively your red box is missing and was missing previously is that red box you just drew for your machine So if you draw a red box around all these boxes above loading over the network. Yeah. Well, because that's your machine. So the SS words, no, that's not with the red box because that actually simplifies things a lot. Well, is the CPU the brain then? Yeah, it is literally
So if you draw a red box around all these boxes above loading over the network. Yeah. Well, because that's your machine. So the SS words, no, that's not with the red box because that actually simplifies things a lot. Well, is the CPU the brain then? Yeah, it is literally It's often described as the brain of the machine. Everything goes for the brain. I think this is helping. Hold on, let me let me draw this out to see if this is actually accurate. Yeah, I can read. Okay. Yeah, that's not. Let's get this right. So with RAM is I'm watching a YouTube video
It's often described as the brain of the machine. Everything goes for the brain. I think this is helping. Hold on, let me let me draw this out to see if this is actually accurate. Yeah, I can read. Okay. Yeah, that's not. Let's get this right. So with RAM is I'm watching a YouTube video It's using RAM, but it's not used going to the SSD because I never downloaded it. Yeah, exactly. Ah, okay. I'm getting there. I am getting there
It's using RAM, but it's not used going to the SSD because I never downloaded it. Yeah, exactly. Ah, okay. I'm getting there. I am getting there I am getting there. And the reason why it holds on to it for a little bit is Chrome says I'm going to hold on to it, even though you just close that tab, I'm going to hold on to that RAM for a little bit longer until 100% I'm sure you're done with it
I am getting there. And the reason why it holds on to it for a little bit is Chrome says I'm going to hold on to it, even though you just close that tab, I'm going to hold on to that RAM for a little bit longer until 100% I'm sure you're done with it So if you know is I've just drawn a box on the outside of this, right? Yes. Yes. This is your machine. Hi. This is the net one. She. Stored. And browser cache, but that's not the same as CPU type of cache. No, it's a cache
So if you know is I've just drawn a box on the outside of this, right? Yes. Yes. This is your machine. Hi. This is the net one. She. Stored. And browser cache, but that's not the same as CPU type of cache. No, it's a cache No, it's a cache. So this is the other classic problem of all the words are used for everything. So this is where we normally refer to as L1 cache or something like that because red is a cache. The browser cache was a cache. Your SSD has caches built straight into it. There are caches everywhere
No, it's a cache. So this is the other classic problem of all the words are used for everything. So this is where we normally refer to as L1 cache or something like that because red is a cache. The browser cache was a cache. Your SSD has caches built straight into it. There are caches everywhere And the short why? Well, because of what caching is full, which is that everything is slow. Therefore we cache. As if we don't as if it's cheaper to hold the data for a bit. The data we think we're going to use next is to try and fetch it again from zero
And the short why? Well, because of what caching is full, which is that everything is slow. Therefore we cache. As if we don't as if it's cheaper to hold the data for a bit. The data we think we're going to use next is to try and fetch it again from zero So it's the classic thing of why do we save bits of the web pit. So why do we cache bits of let's say we hit. Let's say we go to let's say we go to a LinkedIn. I don't know LinkedIn. I don't like twice a day. Right. So all of the LinkedIn assets are actually saved in your browser cache. Right
So it's the classic thing of why do we save bits of the web pit. So why do we cache bits of let's say we hit. Let's say we go to let's say we go to a LinkedIn. I don't know LinkedIn. I don't like twice a day. Right. So all of the LinkedIn assets are actually saved in your browser cache. Right Right. Because it's much better to hit a hot cache, which has data in it that is the load over the network. You could load over the network every time, but then it'd be slow
Right. Because it's much better to hit a hot cache, which has data in it that is the load over the network. You could load over the network every time, but then it'd be slow We've wasted literally tons of stuff like why waste the power, why waste the internet, why waste the bandwidth and why waste your time. So that's why we cache stuff. And it's exactly the same
We've wasted literally tons of stuff like why waste the power, why waste the internet, why waste the bandwidth and why waste your time. So that's why we cache stuff. And it's exactly the same It's like, why would your CPU not hold whatever it could in cache to act on that bearer then before has to go fetch another chunk at a time. So caching is basically picking up this idea of saying, I'm going to go. I need to
It's like, why would your CPU not hold whatever it could in cache to act on that bearer then before has to go fetch another chunk at a time. So caching is basically picking up this idea of saying, I'm going to go. I need to I need to. So I'm going to pick up a carrot, take it over to the bench, chop it, and then go pick up another car. I'm going to pick up five carons, bring them over to the bench, they cut them up. Because my cash is my bench space is enough to have at least five carrots it. Okay
I need to. So I'm going to pick up a carrot, take it over to the bench, chop it, and then go pick up another car. I'm going to pick up five carons, bring them over to the bench, they cut them up. Because my cash is my bench space is enough to have at least five carrots it. Okay Okay. It's stopping round trips. Caching is all about reducing the number of round trips you've got to do because most things happen more than once. And this is making sense. So is cash the same as buffering then? Yep, that's the same thing. A buffer could be called a cache. Sweet
Okay. It's stopping round trips. Caching is all about reducing the number of round trips you've got to do because most things happen more than once. And this is making sense. So is cash the same as buffering then? Yep, that's the same thing. A buffer could be called a cache. Sweet Sweet. I am putting two and two together now. In fact, I'd go once that further to say a buffer is a specialized single purpose cache. Oh, okay. Because it can't show me anything but generally if you buffer something you're buffering one specific thing. I thought there was a cache
Sweet. I am putting two and two together now. In fact, I'd go once that further to say a buffer is a specialized single purpose cache. Oh, okay. Because it can't show me anything but generally if you buffer something you're buffering one specific thing. I thought there was a cache Many different things in it. This is a, this might be a semantic argument you might cause though, but I will happily stand by that for now until proven otherwise. If I'm wrong, reach out to the comments
Many different things in it. This is a, this might be a semantic argument you might cause though, but I will happily stand by that for now until proven otherwise. If I'm wrong, reach out to the comments I'm asking because this is making a lot more sense in the fact that now when I go back down to my examples that I was working on like reading earlier. It's making a lot more sense how we're going from place to place and what places are used for this is
I'm asking because this is making a lot more sense in the fact that now when I go back down to my examples that I was working on like reading earlier. It's making a lot more sense how we're going from place to place and what places are used for this is This is oddly, I think a lot of it had to be like you had to go through this the first time last time and then I needed to go through the same stuff again to ask more questions. Because this is seriously helping. I think. So. Oh, go ahead
This is oddly, I think a lot of it had to be like you had to go through this the first time last time and then I needed to go through the same stuff again to ask more questions. Because this is seriously helping. I think. So. Oh, go ahead So. Oh, go ahead. So this is kind of to get to back to the ones the database thing is like so postgres was cash is built into it. So if you do a query and postgres the first time takes a long while because you exactly same query immediately after doesn't take anyone there as long
So. Oh, go ahead. So this is kind of to get to back to the ones the database thing is like so postgres was cash is built into it. So if you do a query and postgres the first time takes a long while because you exactly same query immediately after doesn't take anyone there as long Still hold the result. And when we talk about query are we talking about like if we say if we go to the spice girls example from the last episode. Let's say we are looking for things with scary spice. Yes, would it be considered the same query if I look for things with baby spice
Still hold the result. And when we talk about query are we talking about like if we say if we go to the spice girls example from the last episode. Let's say we are looking for things with scary spice. Yes, would it be considered the same query if I look for things with baby spice No, is that a news query? Okay, that would be a new query. So let's say, but let's say both you and I were looking for songs by scary spice. So I my query landed first it took four seconds to come back. This is an arbitrary amount of time. It's just an amount of four seconds ago. That was slow
No, is that a news query? Okay, that would be a new query. So let's say, but let's say both you and I were looking for songs by scary spice. So I my query landed first it took four seconds to come back. This is an arbitrary amount of time. It's just an amount of four seconds ago. That was slow That was slow. However, you then query after I did and asked for exactly the same things songs by scary spice please. But because there's a cash in there it goes someone just ask for this here is your answer. I don't have to go search for it again. Even if we're in different locations
That was slow. However, you then query after I did and asked for exactly the same things songs by scary spice please. But because there's a cash in there it goes someone just ask for this here is your answer. I don't have to go search for it again. Even if we're in different locations Yes, it's the same database. Interesting. So that's what cash is all about really. The catching is the idea of cash is to say the same thing things very very rare that things happen exactly once. It's quite common things happen more than once
Yes, it's the same database. Interesting. So that's what cash is all about really. The catching is the idea of cash is to say the same thing things very very rare that things happen exactly once. It's quite common things happen more than once And a lot of cases things the same thing tends to happen over and over and over again. Right. Now we have a lot of tools which are optimized for these various what's it is access patterns. Right. And access patterns really determine what tool you use in a very real way
And a lot of cases things the same thing tends to happen over and over and over again. Right. Now we have a lot of tools which are optimized for these various what's it is access patterns. Right. And access patterns really determine what tool you use in a very real way So whether you need to keep your data in RAM or can you even on disk. Hence how you access it or why you access it. And this is where like everything from your database choice to like how you build it matters. So a
So whether you need to keep your data in RAM or can you even on disk. Hence how you access it or why you access it. And this is where like everything from your database choice to like how you build it matters. So a So a. So you think about some data of like let's say back to the video I want to access this video right. Well, it's probably going to be a big it's a big file. It's going to be stored in chunks and I'm going to keep it on my disk right
So a. So you think about some data of like let's say back to the video I want to access this video right. Well, it's probably going to be a big it's a big file. It's going to be stored in chunks and I'm going to keep it on my disk right And I might have a little index file that tells me how far along that video to go to get to let's say the chapters like chapters in the video or the key points in the video. But fundamentally the video doesn't make sense unless you did in order. Because it's a fundamentally time ordered thing
And I might have a little index file that tells me how far along that video to go to get to let's say the chapters like chapters in the video or the key points in the video. But fundamentally the video doesn't make sense unless you did in order. Because it's a fundamentally time ordered thing So the only way you search it is time really video. But back to our discography right of the spice girls. There's various things you want to search on, but also it's it's it's very likely that the amount data you want from that thing is very small compared to the total amount of data
So the only way you search it is time really video. But back to our discography right of the spice girls. There's various things you want to search on, but also it's it's it's very likely that the amount data you want from that thing is very small compared to the total amount of data So you want to be able to query and get a bit back rather than saying a video where it's very likely you're going to watch all the pixels in the video. Okay, dig about it. Yes, I I feel like I and I just wrote this down. There we go. Apparently it's going to be giant. That's cool
So you want to be able to query and get a bit back rather than saying a video where it's very likely you're going to watch all the pixels in the video. Okay, dig about it. Yes, I I feel like I and I just wrote this down. There we go. Apparently it's going to be giant. That's cool That's cool. So when we talk about a floppy desk or a CD. I don't know if external hard drive goes with it. I did there and technically network. I would consider for the sake of this
That's cool. So when we talk about a floppy desk or a CD. I don't know if external hard drive goes with it. I did there and technically network. I would consider for the sake of this We're going to consider network attached because fundamentally there's a wire going from your machine to the device, which then has to read something. But you but they they don't use RAM because they're not randomly erased. They use
We're going to consider network attached because fundamentally there's a wire going from your machine to the device, which then has to read something. But you but they they don't use RAM because they're not randomly erased. They use They use. There are file storage so that so this is where the term here is a storage media. Aha. Okay. Cool. I'm still going to put it in red, but we're good. No, it's always good
They use. There are file storage so that so this is where the term here is a storage media. Aha. Okay. Cool. I'm still going to put it in red, but we're good. No, it's always good So the different storage medias you have are things like floppy disk, a CD external hard drive is just a hard drive in a box or a flash disk like your SD card. These are all the same kind of thing. You think about it, which is a device external to your machine, which stores data for you
So the different storage medias you have are things like floppy disk, a CD external hard drive is just a hard drive in a box or a flash disk like your SD card. These are all the same kind of thing. You think about it, which is a device external to your machine, which stores data for you I consider the network attached mostly because it's a very convenient way to turn these pieces of tech. They can. As per always analogy, start to break down and get into specifics, but if you're ever using a floppy disk, it might as well be considered network attached to the speed
I consider the network attached mostly because it's a very convenient way to turn these pieces of tech. They can. As per always analogy, start to break down and get into specifics, but if you're ever using a floppy disk, it might as well be considered network attached to the speed I still have a floppy drive. I have to go by an external hard drive or external CD driver because. I have to wait like weeks before I get the results back. So. Yeah, so I went and bought one and I'm like, well, now I have it. So I think this is also really helpful
I still have a floppy drive. I have to go by an external hard drive or external CD driver because. I have to wait like weeks before I get the results back. So. Yeah, so I went and bought one and I'm like, well, now I have it. So I think this is also really helpful Again, going to go a totally different direction. It's so fun. So we have file storage media, which this makes sense when we talk about these devices and we talked about spice girls, all that. So it doesn't make sense now. Our. Products like I want to build a
Again, going to go a totally different direction. It's so fun. So we have file storage media, which this makes sense when we talk about these devices and we talked about spice girls, all that. So it doesn't make sense now. Our. Products like I want to build a Astro website or something because they all start with one folder and then they are a file storage and they have structure. I guess I'm not like I get it, but I don't get it going from a to B. Okay, so you're in that weird kind of space where you see
Astro website or something because they all start with one folder and then they are a file storage and they have structure. I guess I'm not like I get it, but I don't get it going from a to B. Okay, so you're in that weird kind of space where you see You see a project directory, which has all your files in it, right? And what happens next. So the key thing really here is. What your machine can. So this is where we actually hit other path
You see a project directory, which has all your files in it, right? And what happens next. So the key thing really here is. What your machine can. So this is where we actually hit other path So there's more than one way things work in a CPU just because of nothing can be simple because we're not allowed nice things. It's actually is not too bad
So there's more than one way things work in a CPU just because of nothing can be simple because we're not allowed nice things. It's actually is not too bad So this is where if you've learned a program in the night, early night, like the 90s, this would have been you would have been taught this first and you would have been wildly confused at the time. Because that's how it taught programming back then
So this is where if you've learned a program in the night, early night, like the 90s, this would have been you would have been taught this first and you would have been wildly confused at the time. Because that's how it taught programming back then Okay, it was very frustrating, which is the idea of the program counter versus the execution stack. So what's going on right now is if you imagine you got your asteroid files, the first thing that happens is we're going to assume as a program running, right, which is the interpreter
Okay, it was very frustrating, which is the idea of the program counter versus the execution stack. So what's going on right now is if you imagine you got your asteroid files, the first thing that happens is we're going to assume as a program running, right, which is the interpreter Your computer goes, I will load this file into ram, then it'll throw it into the node interpreter. It'll chew it up and spit out a series of what's known as intermediate representation, which is just another file with a very different shape
Your computer goes, I will load this file into ram, then it'll throw it into the node interpreter. It'll chew it up and spit out a series of what's known as intermediate representation, which is just another file with a very different shape And then it'll basically follow the instructions written in that file, right. Okay
And then it'll basically follow the instructions written in that file, right. Okay Okay. Basically you load it like and then what happens is like all the different function calls you've described all the different states you've described are turned into executable code on machine via this program, which is the interpreter
Okay. Basically you load it like and then what happens is like all the different function calls you've described all the different states you've described are turned into executable code on machine via this program, which is the interpreter What happens, what's important thing to note is that like you have all this project structure and fundamentally why the structure is mostly there to make your life easy. It's not to make machines life easy
What happens, what's important thing to note is that like you have all this project structure and fundamentally why the structure is mostly there to make your life easy. It's not to make machines life easy Well, the machine does, it takes all your files and all your folders and munges and altogether into one block. Like kid, you don't. That is normally how these things work, right
Well, the machine does, it takes all your files and all your folders and munges and altogether into one block. Like kid, you don't. That is normally how these things work, right Because fundamentally the machine just tags these as a series of objects and was known as an abstract syntax tree where it basically builds a diagram to itself. The diagram is not really, but it's basically a diagram of all the blobs in your code and all the flow paths of massive flowcharts, right
Because fundamentally the machine just tags these as a series of objects and was known as an abstract syntax tree where it basically builds a diagram to itself. The diagram is not really, but it's basically a diagram of all the blobs in your code and all the flow paths of massive flowcharts, right Yeah. Of all the various states your machine, your system could be in and then how to get to there from there to there from there from there from there, right. And then you say start because the first box, which is the main function effectively says do this thing
Yeah. Of all the various states your machine, your system could be in and then how to get to there from there to there from there from there from there, right. And then you say start because the first box, which is the main function effectively says do this thing Now with Astro and tools like that, there's our whole ton of extra code which is loaded behind the scenes in the library that makes astro work. Right. Okay. So if you imagine you load so it's actually a bit easier to start this from a different language for the master
Now with Astro and tools like that, there's our whole ton of extra code which is loaded behind the scenes in the library that makes astro work. Right. Okay. So if you imagine you load so it's actually a bit easier to start this from a different language for the master Astro is about as far as I know. Well, really quick for the executable like in it reads it. Is that just the OS and is that part of the CPU? No, no, no, no, I wish, but we're super. This is a problem. So we are a few levels up
Astro is about as far as I know. Well, really quick for the executable like in it reads it. Is that just the OS and is that part of the CPU? No, no, no, no, I wish, but we're super. This is a problem. So we are a few levels up So what's happening is you said it would be scroll back a bit that a lot of like more simple programs are written and see where you remember to see I'm like int main and then some stuff, right. Right. So in main and then just so you know, print F, hello world, right
So what's happening is you said it would be scroll back a bit that a lot of like more simple programs are written and see where you remember to see I'm like int main and then some stuff, right. Right. So in main and then just so you know, print F, hello world, right And then of course the price is nothing. So that that little program there gets compiled down to machine code effectively, which is what your executable is, right. Excusable is machine code, which you basically when you double click on it, that gets run by the OS says, I know what that is
And then of course the price is nothing. So that that little program there gets compiled down to machine code effectively, which is what your executable is, right. Excusable is machine code, which you basically when you double click on it, that gets run by the OS says, I know what that is In the next is called an elf binary in Windows EXE file in Mac. I do not remember the actual extension name anymore, but DMG I think. Yeah, I think you're right. I'm pretty sure it's DMG. Yes. It might be a cut. So what happens next is that the OS basically says run to that executable, right
In the next is called an elf binary in Windows EXE file in Mac. I do not remember the actual extension name anymore, but DMG I think. Yeah, I think you're right. I'm pretty sure it's DMG. Yes. It might be a cut. So what happens next is that the OS basically says run to that executable, right And it basically starts feeding it to the CPU by the instruction cache, which is another cache. We've been talking about data cache is so far, but there's another one called the instruction cache. Right. I know it's annoying. I was hoping we could avoid that because it doesn't really matter
And it basically starts feeding it to the CPU by the instruction cache, which is another cache. We've been talking about data cache is so far, but there's another one called the instruction cache. Right. I know it's annoying. I was hoping we could avoid that because it doesn't really matter I know there's a ton of them, it's starting to make more sense. So if you imagine there's one, there's two tracks of things for the CPU. What is the instructions saying do this, do that, do this, do that. So there's the data of things to active on. Yeah. Okay. Right
I know there's a ton of them, it's starting to make more sense. So if you imagine there's one, there's two tracks of things for the CPU. What is the instructions saying do this, do that, do this, do that. So there's the data of things to active on. Yeah. Okay. Right Yeah. Okay. Right. So that's what your executable is a series of machine code, which goes in the instruction cache. And the data it needs to operate on goes in the data cache. Now that's level. That's kind of like on the metalish stuff
Yeah. Okay. Right. So that's what your executable is a series of machine code, which goes in the instruction cache. And the data it needs to operate on goes in the data cache. Now that's level. That's kind of like on the metalish stuff In C now in your astro example, what happens is there's a piece of code that does that. But it's not bigger and it's called your interpreter. And what that does is says most people don't have time to write all this stuff out in C or equivalent languages
In C now in your astro example, what happens is there's a piece of code that does that. But it's not bigger and it's called your interpreter. And what that does is says most people don't have time to write all this stuff out in C or equivalent languages Or Rust and says the assumption is that we'll give you a different language to write in, which gives you more powerful objects to work with and more flexibility to work, which is, you know, you can write four lines of node code
Or Rust and says the assumption is that we'll give you a different language to write in, which gives you more powerful objects to work with and more flexibility to work, which is, you know, you can write four lines of node code It should take a thousand lines of C to write because someone's already written the thousand lines of C behind the scenes for you. Okay. Oh, it really is behind it. That's sorry. That was getting distracted on how pretty it actually is. That's fun. So I'm just thinking if I download something
It should take a thousand lines of C to write because someone's already written the thousand lines of C behind the scenes for you. Okay. Oh, it really is behind it. That's sorry. That was getting distracted on how pretty it actually is. That's fun. So I'm just thinking if I download something So this came from a. Maybe I don't want to background and I want to block please. Say I don't know did. What am I going to spotify? We're going to say Spotify. Because that's where my mind's going right now. So it downloads and this is a network. Access
So this came from a. Maybe I don't want to background and I want to block please. Say I don't know did. What am I going to spotify? We're going to say Spotify. Because that's where my mind's going right now. So it downloads and this is a network. Access Access. And then it downloads and we go to having another box. Sure, we can have the black box. That's fine. And so when it gets to the box. It is sent to the CPU, which give me a second to see if the. It goes to write mindset. And then it goes to an interpreter. Which then moves it to a
Access. And then it downloads and we go to having another box. Sure, we can have the black box. That's fine. And so when it gets to the box. It is sent to the CPU, which give me a second to see if the. It goes to write mindset. And then it goes to an interpreter. Which then moves it to a And then it runs the program. So the interpreter basically is another piece of code which runs other code. So it's effectively says I follow instructions you've given me written in a different language. So this is where do you like. Java script. Yeah, JavaScript Java Python Ruby
And then it runs the program. So the interpreter basically is another piece of code which runs other code. So it's effectively says I follow instructions you've given me written in a different language. So this is where do you like. Java script. Yeah, JavaScript Java Python Ruby C sharp in most cases all this stuff gets. Goes through the interpreter. And that drives CPU to do things. Like I say. PPO to tell it to go to the interpreter and it goes back to the CPU. So no, no, it's basically the interpreter is a special program that just executes what it tells it to do
C sharp in most cases all this stuff gets. Goes through the interpreter. And that drives CPU to do things. Like I say. PPO to tell it to go to the interpreter and it goes back to the CPU. So no, no, it's basically the interpreter is a special program that just executes what it tells it to do But it's on the CPU itself. So it's for us to say yes. Now it's basically an alternate like if you imagine your operating system runs the seat. The C code is basically telling your operating system to do things. The interpreter is the that piece of C code your JavaScript telling that bit to do
But it's on the CPU itself. So it's for us to say yes. Now it's basically an alternate like if you imagine your operating system runs the seat. The C code is basically telling your operating system to do things. The interpreter is the that piece of C code your JavaScript telling that bit to do It's like an extra layer. Imagine like iracking things up. Okay. Okay. I feel like I can pause on this one because of that at least giving me some idea of how to start conceptualizing it. Yes. Yes. Trying to figure out how data works is very complicated. Yes
It's like an extra layer. Imagine like iracking things up. Okay. Okay. I feel like I can pause on this one because of that at least giving me some idea of how to start conceptualizing it. Yes. Yes. Trying to figure out how data works is very complicated. Yes Yes. The problem here is that like in a lot of ways what we do these days is quite far removed from the PDP 11 model I mentioned earlier. Which is how a lot of people think about programming and was taught programming because we're old
Yes. The problem here is that like in a lot of ways what we do these days is quite far removed from the PDP 11 model I mentioned earlier. Which is how a lot of people think about programming and was taught programming because we're old And where this gets interesting is like is way is like if this stuff is it. When you take it from the other side and you build it up incrementally. You end up with it but you end up with a kind of more complete picture of everything
And where this gets interesting is like is way is like if this stuff is it. When you take it from the other side and you build it up incrementally. You end up with it but you end up with a kind of more complete picture of everything however it takes a very long time, right? As it is, there's just tons of frankly useless information in my head now, the systems that no longer exist, and for ways of programming that are no longer relevant. What they helped me learn and so many others. They are quite good fun
however it takes a very long time, right? As it is, there's just tons of frankly useless information in my head now, the systems that no longer exist, and for ways of programming that are no longer relevant. What they helped me learn and so many others. They are quite good fun Where, but I will say now that I have completely derailed us, and we didn't end up going to spice girls this time. I'm not sure where to go for a beer. Wow, a logical answer is definitely to a rival girl band of some description
Where, but I will say now that I have completely derailed us, and we didn't end up going to spice girls this time. I'm not sure where to go for a beer. Wow, a logical answer is definitely to a rival girl band of some description I honestly think oh gosh, all saints was around at the same time, when they? I didn't know. Problem is, this is where the problem of spice girls, the spice girls were international enough to ever all knows the spice girls
I honestly think oh gosh, all saints was around at the same time, when they? I didn't know. Problem is, this is where the problem of spice girls, the spice girls were international enough to ever all knows the spice girls By comparison, people was every other band like Nuremberg from the Britpop era. Well, I mean, you mentioned in sync last time, so we can go with in sync this time. In sync will do nicely, right? Let's talk about in sync
By comparison, people was every other band like Nuremberg from the Britpop era. Well, I mean, you mentioned in sync last time, so we can go with in sync this time. In sync will do nicely, right? Let's talk about in sync And for this one, I am going to, do you want to share your screen since I know that you're going to end up showing us stuff, or do you want me to continue and just scroll to wherever you need me to get started
And for this one, I am going to, do you want to share your screen since I know that you're going to end up showing us stuff, or do you want me to continue and just scroll to wherever you need me to get started It's probably best if you keep scrolling mostly because my screen is doing something strange right now, and I put up to no slack
It's probably best if you keep scrolling mostly because my screen is doing something strange right now, and I put up to no slack Now, and people are messaging me about things like a neither. Important right now, but things I can't, I want to make sure I have an idea of how to reply later. This is the case of everything. Also, I have too many tabs open, my computer is right this way. Okay, cool
Now, and people are messaging me about things like a neither. Important right now, but things I can't, I want to make sure I have an idea of how to reply later. This is the case of everything. Also, I have too many tabs open, my computer is right this way. Okay, cool Okay, cool. So the key thing, let's be scrolled back to, if you jump to my mouse's, I had a personal, so there's a little button in the top corner where it says like just a V, you know, hit the V. Yay! You'll jump to our right. Okay
Okay, cool. So the key thing, let's be scrolled back to, if you jump to my mouse's, I had a personal, so there's a little button in the top corner where it says like just a V, you know, hit the V. Yay! You'll jump to our right. Okay Okay. So if it's not this point again, so now what we're going to talk about is like we're going to deal with the n-sync discovery, and we're going to deal with the fact that the data is now too, we're trying to deal with data, which just keeps scrolling
Okay. So if it's not this point again, so now what we're going to talk about is like we're going to deal with the n-sync discovery, and we're going to deal with the fact that the data is now too, we're trying to deal with data, which just keeps scrolling So we're actually, you know, we're now Spotify, we have n-sync, the n-sync discovery is one of very popular pieces of music, right? That's actually not that large, the total file, you know, you've ripped a CD years ago, a few hundred megabytes. So that's not too bad
So we're actually, you know, we're now Spotify, we have n-sync, the n-sync discovery is one of very popular pieces of music, right? That's actually not that large, the total file, you know, you've ripped a CD years ago, a few hundred megabytes. So that's not too bad You can feasibly have that on your sheen. For a single CD, but when you have, let's say a band, which is very prolific and has literally 30 albums, it starts to get a bit large
You can feasibly have that on your sheen. For a single CD, but when you have, let's say a band, which is very prolific and has literally 30 albums, it starts to get a bit large Queen! Queen, yeah, my gosh, Queen have a lot of albums, but then what happens is, do you think about how big is your playlist? Your default, I like this playlist. Right? Two thousand songs? Two thousand songs
Queen! Queen, yeah, my gosh, Queen have a lot of albums, but then what happens is, do you think about how big is your playlist? Your default, I like this playlist. Right? Two thousand songs? Two thousand songs And that's where it gets a bit difficult, because this is just a bit too big, but these are all one, but these are all the same, so they're not too bad to store. So you just stream them as you need them and you cash the ones locally. But now you're, but now you're actually Spotify
And that's where it gets a bit difficult, because this is just a bit too big, but these are all one, but these are all the same, so they're not too bad to store. So you just stream them as you need them and you cash the ones locally. But now you're, but now you're actually Spotify Spotify behind the scenes has a record of everyone who's played any individual song, because that's important, because that's how they pay their artists. So they need to know that Jen played bye-bye-bye 400 times last week. Right? Wow. Yeah
Spotify behind the scenes has a record of everyone who's played any individual song, because that's important, because that's how they pay their artists. So they need to know that Jen played bye-bye-bye 400 times last week. Right? Wow. Yeah Right? Wow. Yeah. And they need to know that, and they know that Ben actually likes the Backstreet Boys slightly more. Shocker! I know. Oh my goodness. I know
Right? Wow. Yeah. And they need to know that, and they know that Ben actually likes the Backstreet Boys slightly more. Shocker! I know. Oh my goodness. I know I know. Right? And so this is where, like, these kind of numbers are really important, because that's how they pay the artists and deal with licensing things. So what happens is, over time, the data of who did what and when grows bigger than the songs themselves
I know. Right? And so this is where, like, these kind of numbers are really important, because that's how they pay the artists and deal with licensing things. So what happens is, over time, the data of who did what and when grows bigger than the songs themselves Right? So let's say they have, let's say they have, you know, a petabyte of music, right? Which is a lot of music and potentially they've written more, but let's say a petabyte of music
Right? So let's say they have, let's say they have, you know, a petabyte of music, right? Which is a lot of music and potentially they've written more, but let's say a petabyte of music They can store that on some, they've probably store that in multiple locations, so lots of people can read it at the same time. So it can be nearby people and also read lots of time
They can store that on some, they've probably store that in multiple locations, so lots of people can read it at the same time. So it can be nearby people and also read lots of time But they probably have one or two very, very large databases, which have replicates of all the data or who played what. Because I listen to Spotify, you know, probably close to 10 hours a week. Yeah. And most people I know probably use, like, similar
But they probably have one or two very, very large databases, which have replicates of all the data or who played what. Because I listen to Spotify, you know, probably close to 10 hours a week. Yeah. And most people I know probably use, like, similar So every single one of those clicks is another hit on their database. So their database is probably tens of petabytes by now of their playlist things. So that's way too big to fit on any single machine by a very, very large way
So every single one of those clicks is another hit on their database. So their database is probably tens of petabytes by now of their playlist things. So that's way too big to fit on any single machine by a very, very large way So what happens now is you think, I need to access all that data, right? I need to have, and the point is really is all that play data. You very, really need to know who played a song at what point in time exactly once
So what happens now is you think, I need to access all that data, right? I need to have, and the point is really is all that play data. You very, really need to know who played a song at what point in time exactly once So this is what we get back to access patterns because I only care about play data in aggregate. I only care that you played XYZ number of songs or how many so how many times was by, by, by, by, by, by, by people or by people in America or by people in New South Wales in Australia
So this is what we get back to access patterns because I only care about play data in aggregate. I only care that you played XYZ number of songs or how many so how many times was by, by, by, by, by, by, by people or by people in America or by people in New South Wales in Australia That kind of stuff, right? Like I need to, I care about, you know, a few small things with smooth, small, pieces of details. So this is all going to be loaded over the network. So you only care about moving what you should
That kind of stuff, right? Like I need to, I care about, you know, a few small things with smooth, small, pieces of details. So this is all going to be loaded over the network. So you only care about moving what you should So if we scroll to where I am, which is up and to the right, to this column versus rows data, right? So this is where we have all that columns data about all the plays. And this is why we use column stores is we only care about one or two of these columns at a time
So if we scroll to where I am, which is up and to the right, to this column versus rows data, right? So this is where we have all that columns data about all the plays. And this is why we use column stores is we only care about one or two of these columns at a time Like all the plays, please, for, I don't know, give me all the plays by Jen. So I'm going to filter on the first column, which is who played it. And then, and then on the third column, which is what they actually played. So I now have all of your plays at any time
Like all the plays, please, for, I don't know, give me all the plays by Jen. So I'm going to filter on the first column, which is who played it. And then, and then on the third column, which is what they actually played. So I now have all of your plays at any time So you can now scroll back through what you played when you were. Now I want to do a thing that says, give me all NSYNC plays. So the second column is the band. And so every single line is a play. So I put all I do is say search where, where column A equals NSYNC. Pull them all out
So you can now scroll back through what you played when you were. Now I want to do a thing that says, give me all NSYNC plays. So the second column is the band. And so every single line is a play. So I put all I do is say search where, where column A equals NSYNC. Pull them all out Pull them all out. And I pull out all the durations, which is not the column. So I only pull these two columns at a time. And now I have total duration NSYNC gets paid for. So this is why we saw data differently because the access matters
Pull them all out. And I pull out all the durations, which is not the column. So I only pull these two columns at a time. And now I have total duration NSYNC gets paid for. So this is why we saw data differently because the access matters If I saw this in Postgres where everything's a row, right? Every time I pulled out data, I'd get the whole row every time I accessed it. I have the use of the state at the end that says the metadata like, where you were when you played that song. Which I don't need most of the time
If I saw this in Postgres where everything's a row, right? Every time I pulled out data, I'd get the whole row every time I accessed it. I have the use of the state at the end that says the metadata like, where you were when you played that song. Which I don't need most of the time Well, which device it was on? Very useful. Some people who are optimizing for playing on phones versus Alexa devices. But not very useful for just how much we have to pay NSYNC
Well, which device it was on? Very useful. Some people who are optimizing for playing on phones versus Alexa devices. But not very useful for just how much we have to pay NSYNC And if you imagine that these rows, there are say 400 rows, for 100 columns, sorry, right? Going sideways, there might be hundreds of columns. If you imagine I had to pull hundreds of columns for rather than the one column I actually needed, I had wasting time. So that is making sense
And if you imagine that these rows, there are say 400 rows, for 100 columns, sorry, right? Going sideways, there might be hundreds of columns. If you imagine I had to pull hundreds of columns for rather than the one column I actually needed, I had wasting time. So that is making sense Would you say that it's easier to sort with column database? Yes. Because you call them. So the reason to use column database
Would you say that it's easier to sort with column database? Yes. Because you call them. So the reason to use column database So it's filtering through when you, so column bases are optimized for the simple fact of, if you need aggregates where one column is deciding what you do, in some way, it is nearly always much, much faster, potentially multiple hundreds of times faster to go through a column, then it needs to go through a row store for this stuff
So it's filtering through when you, so column bases are optimized for the simple fact of, if you need aggregates where one column is deciding what you do, in some way, it is nearly always much, much faster, potentially multiple hundreds of times faster to go through a column, then it needs to go through a row store for this stuff Right? Okay. But also, caching doesn't work very well on these, because on average, what I want to know about NSYNC plays and what you want to know about, let's say, what mobile device someone's playing on are two entirely different queries. So you don't really cache column databases very often
Right? Okay. But also, caching doesn't work very well on these, because on average, what I want to know about NSYNC plays and what you want to know about, let's say, what mobile device someone's playing on are two entirely different queries. So you don't really cache column databases very often Okay. So if you flip it around to instead say, I want to store playlists for Spotify. Right? So I need to store them somewhere. They'll probably be in the database somewhere. There might be probably in something like a MongoDB type storage solution
Okay. So if you flip it around to instead say, I want to store playlists for Spotify. Right? So I need to store them somewhere. They'll probably be in the database somewhere. There might be probably in something like a MongoDB type storage solution Right? Now this is where caching is good, because they know that Ben loves to play his warning playlist every morning. Right? And I only really play from two, I only really use two or three my playlists all the time. So my cache, they'll probably use for me
Right? Now this is where caching is good, because they know that Ben loves to play his warning playlist every morning. Right? And I only really play from two, I only really use two or three my playlists all the time. So my cache, they'll probably use for me Basically, the only has those two or three playlists in it. And they know to retrieve them very quickly. They also know that, you know, that the playlist being shared by a big social media influence, it's very likely to be hit lots of times
Basically, the only has those two or three playlists in it. And they know to retrieve them very quickly. They also know that, you know, that the playlist being shared by a big social media influence, it's very likely to be hit lots of times So they'll still add in something hot, cache, some hot cache. So that will be cache somewhere in RAM rather than on a disk, because they don't want to read the disk every time to get that thing that's going to be read literally 100,000 times a day. Right
So they'll still add in something hot, cache, some hot cache. So that will be cache somewhere in RAM rather than on a disk, because they don't want to read the disk every time to get that thing that's going to be read literally 100,000 times a day. Right Right. The example isn't really holding up at this point, but it's hopefully the kind of gist is getting across, which is that you store stuff where it's relevant. So if it's a small piece of data access every time, like regular, you'll keep it in a RAM somewhere
Right. The example isn't really holding up at this point, but it's hopefully the kind of gist is getting across, which is that you store stuff where it's relevant. So if it's a small piece of data access every time, like regular, you'll keep it in a RAM somewhere If it's a random aggregation where it'll change quite differently every time, like I don't need to know the same thing in every analytics query I do, you need to have a system set up where you can actually just access all this stuff, and then just slice and dice through the day to quickly
If it's a random aggregation where it'll change quite differently every time, like I don't need to know the same thing in every analytics query I do, you need to have a system set up where you can actually just access all this stuff, and then just slice and dice through the day to quickly And that's making sense. I feel like my mind is going what's out of this area. Like, oh, I'm just speaking more sense of why a playlist that I play often, if I'm driving somewhere and I lose service, it will still play. Even if I don't have it downloaded, where... Yes, because it knows exactly
And that's making sense. I feel like my mind is going what's out of this area. Like, oh, I'm just speaking more sense of why a playlist that I play often, if I'm driving somewhere and I lose service, it will still play. Even if I don't have it downloaded, where... Yes, because it knows exactly So it has an intelligent on this cache, by the way. So it actually stores quite more songs on your phone than you might think. Because what it says is it knows you happen to love that particular album by that particular band, and you play those songs all the time
So it has an intelligent on this cache, by the way. So it actually stores quite more songs on your phone than you might think. Because what it says is it knows you happen to love that particular album by that particular band, and you play those songs all the time So it'll intelligently say, I'm going to store these here for now, and every time you play them, it resets the count of the timer before it leads it. Mmm, okay. So that's totally making sense. So let's say it says, I need an intelligent cache at the top 100 songs Gen plays
So it'll intelligently say, I'm going to store these here for now, and every time you play them, it resets the count of the timer before it leads it. Mmm, okay. So that's totally making sense. So let's say it says, I need an intelligent cache at the top 100 songs Gen plays Right? But if Gen doesn't play a song for 30 days, for 10 days, I'll throw it away and replace it with the next most popular song. Okay. So then what happens is, if you do play the top 20 songs over here again, they're always on your device. You can always play them
Right? But if Gen doesn't play a song for 30 days, for 10 days, I'll throw it away and replace it with the next most popular song. Okay. So then what happens is, if you do play the top 20 songs over here again, they're always on your device. You can always play them Right? They'll always just play immediately next when you hit hot to them. There's no loading time. Right? But now you load to that. Now you want to add one of those brand new songs, you know, play before. It takes a second or two to Spotify to link up
Right? They'll always just play immediately next when you hit hot to them. There's no loading time. Right? But now you load to that. Now you want to add one of those brand new songs, you know, play before. It takes a second or two to Spotify to link up You know, you'll notice if the Wi-Fi drops out. But then you go back to an old favorite next and it's immediate, even when the Wi-Fi drops out. Yes. And that makes sense. Yeah, and this is like smart caching
You know, you'll notice if the Wi-Fi drops out. But then you go back to an old favorite next and it's immediate, even when the Wi-Fi drops out. Yes. And that makes sense. Yeah, and this is like smart caching So this is, and once again, it's caching because if you're storing an arbitrary number of things, but nearer to where you need them. Okay. That's making sense
So this is, and once again, it's caching because if you're storing an arbitrary number of things, but nearer to where you need them. Okay. That's making sense I'm also over here writing down that someday we're going to definitely need someone on the show to talk about all the caching in the world and what is caching and what are they used for
I'm also over here writing down that someday we're going to definitely need someone on the show to talk about all the caching in the world and what is caching and what are they used for So this is an interesting one because if there's a famous phrase about programming and then a joke on top of that, which is there are only two hard problems in software engineering, naming things and caching validation. Naming things is always a problem
So this is an interesting one because if there's a famous phrase about programming and then a joke on top of that, which is there are only two hard problems in software engineering, naming things and caching validation. Naming things is always a problem And then the illogical is caching basically that is considered the second hardest problem with programming. Yes. Yes. I'm not actually joking
And then the illogical is caching basically that is considered the second hardest problem with programming. Yes. Yes. I'm not actually joking It caching is genuinely one of those areas of like actual hard engineering, though there is yet another one is where like naming things, you can get away would be pretty okay at it for a very very long time
It caching is genuinely one of those areas of like actual hard engineering, though there is yet another one is where like naming things, you can get away would be pretty okay at it for a very very long time And I feel like now knowing that there's different types of caching is also making a lot more sense with all of this because I kept thinking of caching like browser caching, but being able to break it down to why browser cache is different and why browser cache may disappear
And I feel like now knowing that there's different types of caching is also making a lot more sense with all of this because I kept thinking of caching like browser caching, but being able to break it down to why browser cache is different and why browser cache may disappear This is all like making so much more sense. This is like area by itself. I'm like, okay, cool. It's all the same
This is all like making so much more sense. This is like area by itself. I'm like, okay, cool. It's all the same It's all the same. This is my favorite line of everything is eventually the same, which is like fundamentally like you're accessing stuff in your browser and it's caching it locally so you don't have to go over the network to go get it
It's all the same. This is my favorite line of everything is eventually the same, which is like fundamentally like you're accessing stuff in your browser and it's caching it locally so you don't have to go over the network to go get it Right? Same way as your video is buffered in RAM so it doesn't go back to your SSD to read it. That's exactly the same principle
Right? Same way as your video is buffered in RAM so it doesn't go back to your SSD to read it. That's exactly the same principle It applies all the way down to your songs on Spotify, to the way you're database, why you use Redis in front of a database to apply you, you'll see these used to skip when you used to hit them. I feel like I have more questions about this yet at the same time
It applies all the way down to your songs on Spotify, to the way you're database, why you use Redis in front of a database to apply you, you'll see these used to skip when you used to hit them. I feel like I have more questions about this yet at the same time It kind of needs to sink in because I'm finally starting to understand the data side of it. Yes
It kind of needs to sink in because I'm finally starting to understand the data side of it. Yes Yes. Yeah, I think something that would be cool for us to talk about some time would be like how is data created? Like, I must point if I view or someone else to come on and be like, let's talk about the history of data. Dan Moore has an amazing talk on the history of security
Yes. Yeah, I think something that would be cool for us to talk about some time would be like how is data created? Like, I must point if I view or someone else to come on and be like, let's talk about the history of data. Dan Moore has an amazing talk on the history of security And like he talks about how like at one point there were two tribes on each side of the river and they one tribe realized that they like call the river. It's the same name but one says it differently than the other. So they knew that there were imposter when they said the river wrong. Yes
And like he talks about how like at one point there were two tribes on each side of the river and they one tribe realized that they like call the river. It's the same name but one says it differently than the other. So they knew that there were imposter when they said the river wrong. Yes Yes. That is a very simplified version. Oh, but maybe that had my interest way more into data or into security because I'm like, oh, that's how we actually got there. So data and data storage and data access patterns goes back a very, very long way away as well
Yes. That is a very simplified version. Oh, but maybe that had my interest way more into data or into security because I'm like, oh, that's how we actually got there. So data and data storage and data access patterns goes back a very, very long way away as well So you think about things like the dewey decimal system of libraries. That is an early example of an index, perfect index symbol, a way of sorting data and indexing data. For rapid access. Because you don't know where the book is but you'd happen to know already that the book is of a certain type
So you think about things like the dewey decimal system of libraries. That is an early example of an index, perfect index symbol, a way of sorting data and indexing data. For rapid access. Because you don't know where the book is but you'd happen to know already that the book is of a certain type So you know you want to look at botany. So you know the code for botany you can go to that section very quickly. So it gets you to the right place to start looking. And as you go back in time from there, you find like that's actually quite a sophisticated system
So you know you want to look at botany. So you know the code for botany you can go to that section very quickly. So it gets you to the right place to start looking. And as you go back in time from there, you find like that's actually quite a sophisticated system Earlier ones, you know, think like author name very straightforward. Understand or genre in a library is often another thing
Earlier ones, you know, think like author name very straightforward. Understand or genre in a library is often another thing But if you go back into things like record keeping and then things like the thing is in the thing is the car of which area is it of obviously the double entry accounting started
But if you go back into things like record keeping and then things like the thing is in the thing is the car of which area is it of obviously the double entry accounting started Right? Because this is the idea of you map payments into a payment out or a payment out to a payment in every time so that you could add up both sides of the columns and if they went to zero you knew you hadn't missed a payment. So this is my data was often sort twice in account
Right? Because this is the idea of you map payments into a payment out or a payment out to a payment in every time so that you could add up both sides of the columns and if they went to zero you knew you hadn't missed a payment. So this is my data was often sort twice in account This is why they've always thought twice the account. This is about 600 years old now. So we've gone back a few hundred years again. And this is like data storage
This is why they've always thought twice the account. This is about 600 years old now. So we've gone back a few hundred years again. And this is like data storage It was these were in books because these things had to be then transported by secure couriers between places so that if you borrowed money from somewhere or put money in one place for one place to go back from the other place
It was these were in books because these things had to be then transported by secure couriers between places so that if you borrowed money from somewhere or put money in one place for one place to go back from the other place Because basically the book was the ledger that said actually we can give the king of France money today. Because we know he deposited money when he was in Paris and we can pull that money in Naples. And that was done by a courier
Because basically the book was the ledger that said actually we can give the king of France money today. Because we know he deposited money when he was in Paris and we can pull that money in Naples. And that was done by a courier Trust are in the data to know that the money was allowed to be shared. Interesting. And my favorite thing here is back to the security thing is it was done by people who very not very carefully known handwriting. Interesting
Trust are in the data to know that the money was allowed to be shared. Interesting. And my favorite thing here is back to the security thing is it was done by people who very not very carefully known handwriting. Interesting Interesting. Yeah there's so many different types of security that I found his talk so interesting that I had no idea that much went into it and to be able to talk about it now. Security is such a huge field. It's ridiculous. It's one of those it's also a truly old field
Interesting. Yeah there's so many different types of security that I found his talk so interesting that I had no idea that much went into it and to be able to talk about it now. Security is such a huge field. It's ridiculous. It's one of those it's also a truly old field So data isn't very old field as well. But in a lot of ways it's sophistication. How speculative is goes up and down over time. There are times I don't care particularly. There are cultures where you are and where your birthday doesn't matter because you're born in the season. That's a precision
So data isn't very old field as well. But in a lot of ways it's sophistication. How speculative is goes up and down over time. There are times I don't care particularly. There are cultures where you are and where your birthday doesn't matter because you're born in the season. That's a precision That's a precision. The other precision they'll work to. There are other things where things where the exact number of things you own isn't important for various reasons or things that collectively own. Therefore ownership is not directly something is collectively owned
That's a precision. The other precision they'll work to. There are other things where things where the exact number of things you own isn't important for various reasons or things that collectively own. Therefore ownership is not directly something is collectively owned Therefore no one would have knowledge of exactly how many things there were because everybody might have who knows where they are
Therefore no one would have knowledge of exactly how many things there were because everybody might have who knows where they are And then when you get to think it's when you get to places where you particularly like if you look into things like the ancient Egyptians had a lot of data storage in tablets and things so that they could have a more complex economy. But their economy was still butter based
And then when you get to think it's when you get to places where you particularly like if you look into things like the ancient Egyptians had a lot of data storage in tablets and things so that they could have a more complex economy. But their economy was still butter based When you get to money money then accelerates this data boom and the Romans had great details things. They still have the concept of zero though so owing people money was very strange. I feel like you just you slash Dan gives me a great talk idea. Now I want to go research of how data became data
When you get to money money then accelerates this data boom and the Romans had great details things. They still have the concept of zero though so owing people money was very strange. I feel like you just you slash Dan gives me a great talk idea. Now I want to go research of how data became data I would love to hear that done because of it's one of those areas where I have a lot of bits of knowledge and no through line through any of it. It's fascinating that the double entry accounting thing is fascinating because of so I'm a guy called Jorang Grief recently as a conference as that
I would love to hear that done because of it's one of those areas where I have a lot of bits of knowledge and no through line through any of it. It's fascinating that the double entry accounting thing is fascinating because of so I'm a guy called Jorang Grief recently as a conference as that I've been following him for a while. He's building a database called Tiger Beetle which is open source and written a language called Sig which I'm a fan of. And it is a database specializing in accounting. And double entry accounting is a fundamental principle in the database
I've been following him for a while. He's building a database called Tiger Beetle which is open source and written a language called Sig which I'm a fan of. And it is a database specializing in accounting. And double entry accounting is a fundamental principle in the database Because if you think about it most debt most accounting systems are just done on top of databases built for other things. And this one's actually like double entry accounting is literally a core piece of the system which gets two interesting things
Because if you think about it most debt most accounting systems are just done on top of databases built for other things. And this one's actually like double entry accounting is literally a core piece of the system which gets two interesting things The first is you get double rights therefore you actually have more data protection than you might think. But also it automatically keeps storage in the way that accounting rules require as a file format effectively which is quite special. Interesting
The first is you get double rights therefore you actually have more data protection than you might think. But also it automatically keeps storage in the way that accounting rules require as a file format effectively which is quite special. Interesting Interesting. I'll see if I can get him to do one of these with you actually. He's a very excellent guest. Yeah that would be amazing. Yes he gave an absolutely amazing talk on how data is stored recently at the event Qcon where I was at and it was amazing
Interesting. I'll see if I can get him to do one of these with you actually. He's a very excellent guest. Yeah that would be amazing. Yes he gave an absolutely amazing talk on how data is stored recently at the event Qcon where I was at and it was amazing I was like making furious notes and tweeting along because like the turns out there's a lot more things going like would you actually have to start writing data to disk and when you write a disk and how it's written to disk
I was like making furious notes and tweeting along because like the turns out there's a lot more things going like would you actually have to start writing data to disk and when you write a disk and how it's written to disk Like these things like because we've gotten so far along the journey from the older you know computers designed in the 80s like the abstraction level we've got to even just in our operating systems are so high that things aren't as easy as you think
Like these things like because we've gotten so far along the journey from the older you know computers designed in the 80s like the abstraction level we've got to even just in our operating systems are so high that things aren't as easy as you think And you know until relatively recently postgres wasn't just a secure writing data to disk because people thought it was. What is his name do you remember? I can find it for you. You're under it but I will let's get to those ones where my ability to make versus spelling is never straightforward
And you know until relatively recently postgres wasn't just a secure writing data to disk because people thought it was. What is his name do you remember? I can find it for you. You're under it but I will let's get to those ones where my ability to make versus spelling is never straightforward Yeah I was just going to say can you link the video if the video's out yet? He's behind a paywall so I mean let me think of anyway because if others want to pay to view it we should probably. So here I'll show you his Twitter profile. Perfect
Yeah I was just going to say can you link the video if the video's out yet? He's behind a paywall so I mean let me think of anyway because if others want to pay to view it we should probably. So here I'll show you his Twitter profile. Perfect Perfect. I'll just ping you on on our Slack now and we can go from there. I'll ping you on my I'll intro you on Twitter. Yay. Perfect. Well then I oh hey we follow each other. It's a small world. It is it really is. I always get really excited when this happens a lot when I'm like I follow them
Perfect. I'll just ping you on on our Slack now and we can go from there. I'll ping you on my I'll intro you on Twitter. Yay. Perfect. Well then I oh hey we follow each other. It's a small world. It is it really is. I always get really excited when this happens a lot when I'm like I follow them They follow me. This is fun. When I had no idea what they do and all that. So we took a picture together at Qcon and an unusual friend of ours reached out and immediately to both us like hey you know so and so
They follow me. This is fun. When I had no idea what they do and all that. So we took a picture together at Qcon and an unusual friend of ours reached out and immediately to both us like hey you know so and so Yes yes that happened yesterday because Dan Moore was on my friend Ramones and Resells show where they do CFPs and talk practice and so I was like wait y'all know each other. I did not realize that and it's it's so fascinating. I it's such a big and small world all at once. There it is. Yeah cool
Yes yes that happened yesterday because Dan Moore was on my friend Ramones and Resells show where they do CFPs and talk practice and so I was like wait y'all know each other. I did not realize that and it's it's so fascinating. I it's such a big and small world all at once. There it is. Yeah cool Yeah cool. Well I will say that I'm probably a little crap. I don't want to say fragile. My brain is starting to be full so I have a lot to work on. I can say that and there's a lot there. Even to dis-swapping mode. Yes I need to do it
Yeah cool. Well I will say that I'm probably a little crap. I don't want to say fragile. My brain is starting to be full so I have a lot to work on. I can say that and there's a lot there. Even to dis-swapping mode. Yes I need to do it So that's actually a thing where you run out of ram and you need to swap you're doing what's in a swap disking is where your ram swaps in and out of your hard drive. So that's your story and things on the hard drive because you're out of ram
So that's actually a thing where you run out of ram and you need to swap you're doing what's in a swap disking is where your ram swaps in and out of your hard drive. So that's your story and things on the hard drive because you're out of ram Oh so you move it from the ram to the hard drive so the ram can race itself. Yeah and be reused because it is not being used right now. So if you ever run to a swap disk thing or Windows that's what it's talking about
Oh so you move it from the ram to the hard drive so the ram can race itself. Yeah and be reused because it is not being used right now. So if you ever run to a swap disk thing or Windows that's what it's talking about This is a very silly way of it's not Windows it's on Genshin Impact it says the CD switching. Like that yes
This is a very silly way of it's not Windows it's on Genshin Impact it says the CD switching. Like that yes Like that yes. So when you run out so we've run it so the funny thing is there's a really really good video I will share and I recommend you share it with a crowd which is talking about the original crash bandicoot game right
Like that yes. So when you run out so we've run it so the funny thing is there's a really really good video I will share and I recommend you share it with a crowd which is talking about the original crash bandicoot game right Because of disk streaming and all the tech that does all that stuff and cashing live cashing off disk was invented by the crash bandicoot team in most cases. Oh because of you remember how much better crash bandicoot looked at every other PlayStation one game. Yeah
Because of disk streaming and all the tech that does all that stuff and cashing live cashing off disk was invented by the crash bandicoot team in most cases. Oh because of you remember how much better crash bandicoot looked at every other PlayStation one game. Yeah Yeah. For the longest time like so much better right. Okay this is do you remember an IQ cube game on PlayStation? No. There was like a cube game where you were a little human and you had to guess what cubes were going to fall towards you. So I didn't have a console in PlayStation era
Yeah. For the longest time like so much better right. Okay this is do you remember an IQ cube game on PlayStation? No. There was like a cube game where you were a little human and you had to guess what cubes were going to fall towards you. So I didn't have a console in PlayStation era This was back so I went in and out as a PC gamer so I used to have a Famicom in the SNES era I had a Famicom. An actual Famicom because we lived in Pakistan for a brief fair time and it was what we could find
This was back so I went in and out as a PC gamer so I used to have a Famicom in the SNES era I had a Famicom. An actual Famicom because we lived in Pakistan for a brief fair time and it was what we could find And then later when it came round to the PlayStation era we were mostly PC and we got a PlayStation way deep into the middle of the PS2 era because it was second hand. I like that's the classic thing all we wanted to play Final Fantasy me and my brother. So we played Final Fantasy 8 so much
And then later when it came round to the PlayStation era we were mostly PC and we got a PlayStation way deep into the middle of the PS2 era because it was second hand. I like that's the classic thing all we wanted to play Final Fantasy me and my brother. So we played Final Fantasy 8 so much That makes sense and I I QQ I used to try to google it and I could never find it but either my Google has forgotten better or Google is starting to learn what I actually mean instead of what I'm typing. Which I think is that because well what I found is oh my god. Oh wonderful
That makes sense and I I QQ I used to try to google it and I could never find it but either my Google has forgotten better or Google is starting to learn what I actually mean instead of what I'm typing. Which I think is that because well what I found is oh my god. Oh wonderful Oh wonderful. I don't know if it's available anywhere but I will share my screen briefly because I'm so excited. Let's see it's this game. I don't know why it was so entertaining to me. I would play this stupid game for our words
Oh wonderful. I don't know if it's available anywhere but I will share my screen briefly because I'm so excited. Let's see it's this game. I don't know why it was so entertaining to me. I would play this stupid game for our words So I've seen so I didn't know this was the original because I've seen so many people trying to recreate things like this in so many of the gaming like forums, subreddit, some on. I did not realize there was a PlayStation game that China imitates. This game like I I love this game
So I've seen so I didn't know this was the original because I've seen so many people trying to recreate things like this in so many of the gaming like forums, subreddit, some on. I did not realize there was a PlayStation game that China imitates. This game like I I love this game This game is everything and I should actually see if there's a way to play it now because I well no I'm going to say I probably shouldn't because I will list way too much time playing that
This game is everything and I should actually see if there's a way to play it now because I well no I'm going to say I probably shouldn't because I will list way too much time playing that So the video I link to you and I recommend sharing because this is a genuine new brilliant one is about memory constraints and disc constraints on the PlayStation. So the point of when they filed tans for the technology they found. That's so cool
So the video I link to you and I recommend sharing because this is a genuine new brilliant one is about memory constraints and disc constraints on the PlayStation. So the point of when they filed tans for the technology they found. That's so cool That's so cool. It's like it's because it was so short and like so loads of PlayStation games had very small levels. They can parestically crash because of crash could stream levels whereas they couldn't
That's so cool. It's like it's because it was so short and like so loads of PlayStation games had very small levels. They can parestically crash because of crash could stream levels whereas they couldn't Which is why Crash Bandicoot looked better than every place that you gave to like the next the first three years of PlayStation. It was like the best looking game by a really long way. They were still good looking even at the end of the era
Which is why Crash Bandicoot looked better than every place that you gave to like the next the first three years of PlayStation. It was like the best looking game by a really long way. They were still good looking even at the end of the era Yeah but Crash Bandicoot and Spyro I don't think that they were made by the same people. I don't know. Spyro is a whole so special place in my heart. Because Spyro had pretty good graphics too. Yes. I think it was around the same time frame. It was. So I don't know
Yeah but Crash Bandicoot and Spyro I don't think that they were made by the same people. I don't know. Spyro is a whole so special place in my heart. Because Spyro had pretty good graphics too. Yes. I think it was around the same time frame. It was. So I don't know So I don't know. So this is by the way this is like early naughty dog as well. So the people who made last of us eventually was the people who made Crash. Okay so Crash Bandicoot came out and now it's not telling me. I think. History 1996 and Spyro first released in 1998
So I don't know. So this is by the way this is like early naughty dog as well. So the people who made last of us eventually was the people who made Crash. Okay so Crash Bandicoot came out and now it's not telling me. I think. History 1996 and Spyro first released in 1998 So yes around the same time frame but I wonder if the technology went to more programs within those two years. They were probably paid by that point. So yeah so they were buying Somniac and Somniac were another by pioneering studio anyway
So yes around the same time frame but I wonder if the technology went to more programs within those two years. They were probably paid by that point. So yeah so they were buying Somniac and Somniac were another by pioneering studio anyway So they might have had some of the same people to be honest. Yeah it was definitely. I still have it. I downloaded it for my Xbox. They have it and I all play it for a while. It's definitely. I was always more into those except Mario 3 and Mario 2. Those were also mega 2s
So they might have had some of the same people to be honest. Yeah it was definitely. I still have it. I downloaded it for my Xbox. They have it and I all play it for a while. It's definitely. I was always more into those except Mario 3 and Mario 2. Those were also mega 2s So I definitely played Spyro quite a bit. I was always more of a piece because I played PC games mostly so I was stuck in to Commander Conkerland for a very long time and things like like Shogun Total War and Equivalent like that. I mostly played a lot of RTSs
So I definitely played Spyro quite a bit. I was always more of a piece because I played PC games mostly so I was stuck in to Commander Conkerland for a very long time and things like like Shogun Total War and Equivalent like that. I mostly played a lot of RTSs Yeah a few of the D&D crew that I'm a part of they they want to start playing like uh what is it called SC2 Starcraft 2? There we go. Starcraft 2 yes I still play. I'm like strategy games. I queue thing I'll play it all day. Strategy games? I'm like no. So genuinely like I don't play those anymore
Yeah a few of the D&D crew that I'm a part of they they want to start playing like uh what is it called SC2 Starcraft 2? There we go. Starcraft 2 yes I still play. I'm like strategy games. I queue thing I'll play it all day. Strategy games? I'm like no. So genuinely like I don't play those anymore My eyesight is too bad these days but I play a lot of strategy games. I actually got a job on spy playing Age of Empires with the company founder pretty much. Oh wow. Oh wow. Okay so oddly this does come to another uh data question so this is fun
My eyesight is too bad these days but I play a lot of strategy games. I actually got a job on spy playing Age of Empires with the company founder pretty much. Oh wow. Oh wow. Okay so oddly this does come to another uh data question so this is fun So back in back in the day like the 2000s that's not even back in the day. Oh it is. Computer cafes. Like you would have to bring your own computer a lot of times to go play a game against your friends. Yes. On the same land internet. Yep. There's that same land yeah. Local air in network
So back in back in the day like the 2000s that's not even back in the day. Oh it is. Computer cafes. Like you would have to bring your own computer a lot of times to go play a game against your friends. Yes. On the same land internet. Yep. There's that same land yeah. Local air in network Okay so it would still be like an external or a network. So not really so you all so this is so land gaming is uh comes from the era of you all had the same game you all installed it on your own machines. Sorry every single machine had a copy of the game right
Okay so it would still be like an external or a network. So not really so you all so this is so land gaming is uh comes from the era of you all had the same game you all installed it on your own machines. Sorry every single machine had a copy of the game right Now how game networking works is uh is worthy of a whole the whole chat on its own. I have a talk app about this actually
Now how game networking works is uh is worthy of a whole the whole chat on its own. I have a talk app about this actually I gloss over the details to explain it in relation to other things but the key thing really is that fundamentally you don't send like you don't need to send off the other stream the whole game from one person to another person very often
I gloss over the details to explain it in relation to other things but the key thing really is that fundamentally you don't send like you don't need to send off the other stream the whole game from one person to another person very often Normally what happens is you and I have the same game running our machines with all the same base running. What happens is if I say move left I send you Ben's character moves left. Okay. Your machine you go acknowledged and Jen's character picked up a brick
Normally what happens is you and I have the same game running our machines with all the same base running. What happens is if I say move left I send you Ben's character moves left. Okay. Your machine you go acknowledged and Jen's character picked up a brick I acknowledged the sort of thing and what happens is behind the scenes our game the game the game software running on each of our machines synchronizes its state between each other. Depending on exactly how the game is being network that's normally what happens
I acknowledged the sort of thing and what happens is behind the scenes our game the game the game software running on each of our machines synchronizes its state between each other. Depending on exactly how the game is being network that's normally what happens One person is the authoritative leader of the game or one machine is and effectively all updates of the game are agreed by that machine and they're streamed out of everybody else and we just share the tiny changes. Okay. So we can change it so we can share them as fast as possible. Okay
One person is the authoritative leader of the game or one machine is and effectively all updates of the game are agreed by that machine and they're streamed out of everybody else and we just share the tiny changes. Okay. So we can change it so we can share them as fast as possible. Okay Okay. So an example of how it could take a while is if you played Minecraft you joined a new world you've never been to before and people don't know a lot of edits it takes ages to load up the map right. That is when it's streaming all the bits over the wire. Okay
Okay. So an example of how it could take a while is if you played Minecraft you joined a new world you've never been to before and people don't know a lot of edits it takes ages to load up the map right. That is when it's streaming all the bits over the wire. Okay Okay. Or VR chat does this as well when you go to a new place and you have the load of the whole new room and it's big it takes ages for it to stream it
Okay. Or VR chat does this as well when you go to a new place and you have the load of the whole new room and it's big it takes ages for it to stream it I'm also listening while trying to draw computer that's not going very well because that's a very useful part of it to draw land which okay this does make sense in why you would have a primary computer as well. So a lot of things to look into and I will also add that to my notes of
I'm also listening while trying to draw computer that's not going very well because that's a very useful part of it to draw land which okay this does make sense in why you would have a primary computer as well. So a lot of things to look into and I will also add that to my notes of Game that would be my job for a long time as well so it's one of those things where it's like it is a deep it is one of those areas which starts off deceptive it starts off in a deceptively straightforward place but rapidly becomes about dealing with the eccentricities of how weird people are and how weird like how weird the computers are and effectively faking everything you can get away with
Game that would be my job for a long time as well so it's one of those things where it's like it is a deep it is one of those areas which starts off deceptive it starts off in a deceptively straightforward place but rapidly becomes about dealing with the eccentricities of how weird people are and how weird like how weird the computers are and effectively faking everything you can get away with So I think this is just decided you will just be on the show every so often for forever. Thanks Ben. Now we have two bends on the show often this is going to be fantastic. Yay because Ben Myers talks about accessibility a lot and it's fantastic. I should send you some of their content
So I think this is just decided you will just be on the show every so often for forever. Thanks Ben. Now we have two bends on the show often this is going to be fantastic. Yay because Ben Myers talks about accessibility a lot and it's fantastic. I should send you some of their content I think you would really like it. If you don't follow each other on Twitter you should
I think you would really like it. If you don't follow each other on Twitter you should But yay okay well this will wrap up for this week and I know with my progression with Postgres and all the databases I will have questions by next time I just at the moment and switching disks is that what it's called
But yay okay well this will wrap up for this week and I know with my progression with Postgres and all the databases I will have questions by next time I just at the moment and switching disks is that what it's called You'll do that you'll swap it you'll do your activity swap disk is what's there so swap disk
You'll do that you'll swap it you'll do your activity swap disk is what's there so swap disk So yeah you're moving memory you're moving memory from RAM to disk so you can do other things for it
So yeah you're moving memory you're moving memory from RAM to disk so you can do other things for it It's like sleep quite literally so when you computer goes so this is what hibernators by the way you know when you hibernate a laptop yeah it literally saves all the RAM to your disk and then loads it all back again we wake up but it's like human sleep
It's like sleep quite literally so when you computer goes so this is what hibernators by the way you know when you hibernate a laptop yeah it literally saves all the RAM to your disk and then loads it all back again we wake up but it's like human sleep Human sleep is really weird like the more I read about sleep the more I'm like this makes no sense
Human sleep is really weird like the more I read about sleep the more I'm like this makes no sense Interesting well on that note thank you everyone for joining today and please put down in the comments what questions you have you can follow both of us on the Twitterers as well as finest on LinkedIn. I'm on master I'm on master are you on master I am on the hackaderm I'm Ben Ben Amel 7. Me too
Interesting well on that note thank you everyone for joining today and please put down in the comments what questions you have you can follow both of us on the Twitterers as well as finest on LinkedIn. I'm on master I'm on master are you on master I am on the hackaderm I'm Ben Ben Amel 7. Me too Me too. Me too by Jen. So some handle. Yeah yeah same handle on both because I am incredibly lazy when it comes to handles. Yes and thank you everyone and bye.
Me too. Me too by Jen. So some handle. Yeah yeah same handle on both because I am incredibly lazy when it comes to handles. Yes and thank you everyone and bye.