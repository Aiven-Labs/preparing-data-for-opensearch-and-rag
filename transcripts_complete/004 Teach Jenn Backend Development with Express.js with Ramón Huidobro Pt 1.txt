Thank you for joining Teach Gen Tech. I actually got to write this time and pretty excited. And this week, we actually have more than one guest this week. And today to start off our week, we have Ramon Yay! And it is all Ramon's fault of why I got into this because he's the one who gave me the idea of learning live and to peer programming. So hello Ramon. I deserve no credit for that. It was so lovely having a conversation with you, Jen
Yay! And it is all Ramon's fault of why I got into this because he's the one who gave me the idea of learning live and to peer programming. So hello Ramon. I deserve no credit for that. It was so lovely having a conversation with you, Jen And you know, I just love your energy and the way you learn in public because it's such a cool thing to do. And such a cool reminder to all of us that, you know, we're all learning, we're all learning at some point, you know, with a lot of things in tech. It's an ongoing learning thing
And you know, I just love your energy and the way you learn in public because it's such a cool thing to do. And such a cool reminder to all of us that, you know, we're all learning, we're all learning at some point, you know, with a lot of things in tech. It's an ongoing learning thing So being able to do so in public. And like for me, one of my favorite things about streaming is I can do that in public. In public can't be perfect on when you're live
So being able to do so in public. And like for me, one of my favorite things about streaming is I can do that in public. In public can't be perfect on when you're live So I'm going to make mistakes and people are going to take notice and just be like, huh, it's not just me that never remembers how to make how to make an espresso. Yes. And I love also just from a production side, you don't have to edit it because it's live. Absolutely. Exactly
So I'm going to make mistakes and people are going to take notice and just be like, huh, it's not just me that never remembers how to make how to make an espresso. Yes. And I love also just from a production side, you don't have to edit it because it's live. Absolutely. Exactly Exactly. There's nothing needed. That's also the best. Hey, we got a comment from. Yeah, you're right. No, we're high. Okay. So you're a see I totally but your names. Hey, we've got more. Yay. Welcome everyone. Love to see it. Hey, everybody. Yay. All right
Exactly. There's nothing needed. That's also the best. Hey, we got a comment from. Yeah, you're right. No, we're high. Okay. So you're a see I totally but your names. Hey, we've got more. Yay. Welcome everyone. Love to see it. Hey, everybody. Yay. All right Yay. All right. So what are we talking about today, Ramon and where are you from? What you doing? I got caught up in the excitement about streaming itself. So yes, hi, my name's Ramon. I'm coming to life from Vienna in Austria
Yay. All right. So what are we talking about today, Ramon and where are you from? What you doing? I got caught up in the excitement about streaming itself. So yes, hi, my name's Ramon. I'm coming to life from Vienna in Austria Originally from Chile, but I've been living here for pretty much all of my adult life. And let's see, I'm a software. I've been developing software for 12 years and yeah, just learning in public, teaching in public, all the good stuff. It's a joy of mine
Originally from Chile, but I've been living here for pretty much all of my adult life. And let's see, I'm a software. I've been developing software for 12 years and yeah, just learning in public, teaching in public, all the good stuff. It's a joy of mine It's a joy of mine. I'm focused has been mostly on macOS and web software. And yeah, I'm let's see, what am I working on? I'm working a company called Suborbital. We do a web assembly extensibility for your apps. And yeah, that's I think that about covers me. That is awesome
It's a joy of mine. I'm focused has been mostly on macOS and web software. And yeah, I'm let's see, what am I working on? I'm working a company called Suborbital. We do a web assembly extensibility for your apps. And yeah, that's I think that about covers me. That is awesome That is awesome. And also you have been one of the couple people that have just been like keeping me in the loop of like keep going, which has been really, really helpful. And I'll go ahead. No, I'm just going to say that means so much
That is awesome. And also you have been one of the couple people that have just been like keeping me in the loop of like keep going, which has been really, really helpful. And I'll go ahead. No, I'm just going to say that means so much I think I think the best thing we can do for each other as as tech folks is motivate each other. And it's honestly that it's that aspect of community that's kept me around. It's just and that's that's actually something that I found really surprising is the Twitter tech space tech Twitter
I think I think the best thing we can do for each other as as tech folks is motivate each other. And it's honestly that it's that aspect of community that's kept me around. It's just and that's that's actually something that I found really surprising is the Twitter tech space tech Twitter Okay, first off, only been on Twitter for like a month of actually using it. And now I'm addicted. But also like everyone for the most part is pretty friendly. And I would say all dev roles or dev advocates dev evangelist. There's so many names are super dope
Okay, first off, only been on Twitter for like a month of actually using it. And now I'm addicted. But also like everyone for the most part is pretty friendly. And I would say all dev roles or dev advocates dev evangelist. There's so many names are super dope And I love that because since that's what I want to get into. I'm like, your people people. And you know the tech. This is exciting. Yeah, I'm glad. No, it's been wonderful. It's been wonderful and I have very few regrets. And I see here that a JC Webdev knows suborbital and the founder Connor
And I love that because since that's what I want to get into. I'm like, your people people. And you know the tech. This is exciting. Yeah, I'm glad. No, it's been wonderful. It's been wonderful and I have very few regrets. And I see here that a JC Webdev knows suborbital and the founder Connor Yes. I'll send him your regards if I may. Yeah. Sorry. Go ahead. You know what? I got so caught up in myself. I didn't even talk about what we're doing today. So last week, I saw you live doing some react, which was super fun. And I loved watching that
Yes. I'll send him your regards if I may. Yeah. Sorry. Go ahead. You know what? I got so caught up in myself. I didn't even talk about what we're doing today. So last week, I saw you live doing some react, which was super fun. And I loved watching that And I immediately afterwards sent you a message like we were originally going to do some like intro open source stuff. But I got so excited. I messaged them. Jen right afterwards. Like, Joe, we could do. We've done some front end
And I immediately afterwards sent you a message like we were originally going to do some like intro open source stuff. But I got so excited. I messaged them. Jen right afterwards. Like, Joe, we could do. We've done some front end What if we just dip our toes into some backend? So that's what we're going to be doing today. Very, very gently, very, very fun, very, very easy. We're going to be checking out some backend software development with JavaScript using a framework called express JS
What if we just dip our toes into some backend? So that's what we're going to be doing today. Very, very gently, very, very fun, very, very easy. We're going to be checking out some backend software development with JavaScript using a framework called express JS Oh, a JC Webdev wants to know, are we going to deploy some Kubernetes pods? Not today. I still have to learn the ins and outs of Kubernetes first
Oh, a JC Webdev wants to know, are we going to deploy some Kubernetes pods? Not today. I still have to learn the ins and outs of Kubernetes first I feel like at some point because that is something that I've been, I'm like, I'm going to work on that eventually because it's that and Docker and like knowing people that I've worked at both. I'm just like, I'll get there. I will get there in time. Yeah. Yeah. Yeah. There is no route
I feel like at some point because that is something that I've been, I'm like, I'm going to work on that eventually because it's that and Docker and like knowing people that I've worked at both. I'm just like, I'll get there. I will get there in time. Yeah. Yeah. Yeah. There is no route There is no route. There is no rush. There is no optimal route as a GC Webdev says don't ever learn Kubernetes to learn Docker really well. So there you have it. Okay. I used to have a ton of Docker shirts because my second cousin used to work there and I didn't know what it was back then
There is no route. There is no rush. There is no optimal route as a GC Webdev says don't ever learn Kubernetes to learn Docker really well. So there you have it. Okay. I used to have a ton of Docker shirts because my second cousin used to work there and I didn't know what it was back then I just really like the whale. It's a kid logo. But I would say that's probably something with gravity as well. They have mute the graviton. So I'm like, I want to work there because their logos, their, you know, mascot is so cool
I just really like the whale. It's a kid logo. But I would say that's probably something with gravity as well. They have mute the graviton. So I'm like, I want to work there because their logos, their, you know, mascot is so cool I will say I am most excited about our chat today because you said that it also will have to do with APIs
I will say I am most excited about our chat today because you said that it also will have to do with APIs And I am excited with being like one of the co organizers on the Denver API meetup and you that I used to work for stoplight and never fully understood APIs and API specs until very, very late in the game there and that I'm like, yes, finally going to get there. Yeah, no, that's awesome
And I am excited with being like one of the co organizers on the Denver API meetup and you that I used to work for stoplight and never fully understood APIs and API specs until very, very late in the game there and that I'm like, yes, finally going to get there. Yeah, no, that's awesome Yeah, we're going to be covering. We're going to say it's going to be it's going to be gentle. It's going to be fun. And we'll get as far as we can until we either get tired or run out of time. Perfect. Shall we go ahead and share your screen? Bam. And, ooh, this looks lovely. Yeah
Yeah, we're going to be covering. We're going to say it's going to be it's going to be gentle. It's going to be fun. And we'll get as far as we can until we either get tired or run out of time. Perfect. Shall we go ahead and share your screen? Bam. And, ooh, this looks lovely. Yeah Yeah. So you've got here, you've got here your react app from last week. Last week, yeah. Yeah, so I think it would make sense to start a new project. Look at the live. This is always like this was confusing. AJ had to like help me through this last time. Oh, yeah. There we go. Wonderful
Yeah. So you've got here, you've got here your react app from last week. Last week, yeah. Yeah, so I think it would make sense to start a new project. Look at the live. This is always like this was confusing. AJ had to like help me through this last time. Oh, yeah. There we go. Wonderful Wonderful. So we're going to probably make a new folder. Yeah, where do we want to put that? Yeah, I think we're going to have to I would actually do that from the terminal
Wonderful. So we're going to probably make a new folder. Yeah, where do we want to put that? Yeah, I think we're going to have to I would actually do that from the terminal So how about we do here? Do you have a folder where you normally do your coding? Do you have some folks have like a dedicated code folder or a coding folder in their home folder? Maybe on your desktop or something? I don't know where you put your documents. I will now. Okay, cool
So how about we do here? Do you have a folder where you normally do your coding? Do you have some folks have like a dedicated code folder or a coding folder in their home folder? Maybe on your desktop or something? I don't know where you put your documents. I will now. Okay, cool Okay, cool. So I'm going to do a folder. That's a good name. So, um, so let's go up back on the terminal and we're going to navigate into that into that new folder. Talk me through it because I do not remember any of this from back. Do this step by step. So we're going to CD or change directory
Okay, cool. So I'm going to do a folder. That's a good name. So, um, so let's go up back on the terminal and we're going to navigate into that into that new folder. Talk me through it because I do not remember any of this from back. Do this step by step. So we're going to CD or change directory Followed by a space. And so you can see there's a little next to Jen, Jen, Jenod at boss. There's a little till the little squiggly character. Uh-huh. That's the character. That's the folder we're currently in at the moment
Followed by a space. And so you can see there's a little next to Jen, Jen, Jenod at boss. There's a little till the little squiggly character. Uh-huh. That's the character. That's the folder we're currently in at the moment I like to think of the terminal as kind of like a finder window right there. So right now we're inside a specific folder, which is the home folder. So we want to navigate from there to the desktop folder. So the desktop folder is always located inside the home folder
I like to think of the terminal as kind of like a finder window right there. So right now we're inside a specific folder, which is the home folder. So we want to navigate from there to the desktop folder. So the desktop folder is always located inside the home folder So if you start typing desktop and then hit enter. Terminal will like to access files in your desktop folder. And then CD. Fold it. Yep. Now we're going to yeah, give that a so, uh-huh. We're going to run into a bit of an issue here because it says string not string not in pwd code
So if you start typing desktop and then hit enter. Terminal will like to access files in your desktop folder. And then CD. Fold it. Yep. Now we're going to yeah, give that a so, uh-huh. We're going to run into a bit of an issue here because it says string not string not in pwd code So this is the thing about the about the terminal that's a little bit, um, want you to get used to. You see, uh, spaces between, um, each, let's say, command or word are treated as a separate thing, right? So we have two options
So this is the thing about the about the terminal that's a little bit, um, want you to get used to. You see, uh, spaces between, um, each, let's say, command or word are treated as a separate thing, right? So we have two options Either we rename our code folder to have no spaces in it or use code marks around when. Oh, okay. And it's totally up to you. Which one we use? Hey, Joe, real quick, we are focusing on
Either we rename our code folder to have no spaces in it or use code marks around when. Oh, okay. And it's totally up to you. Which one we use? Hey, Joe, real quick, we are focusing on Uh, JavaScript express JavaScript, but, um, JavaScript is everything that I've been working on to start learning before I go into Python or graph QL. Cool. Alright. Yeah, so we can either rename it or go with, uh, code marks. That works too. So now you're going to see where inside that folder
Uh, JavaScript express JavaScript, but, um, JavaScript is everything that I've been working on to start learning before I go into Python or graph QL. Cool. Alright. Yeah, so we can either rename it or go with, uh, code marks. That works too. So now you're going to see where inside that folder Awesome. Uh, express us a JavaScript library that uses node. Yes. We're going to be doing some node.js today, which you did a little bit of last week. Is that correct? Yeah. Yeah, because I had to install it. I need to do homework for that still
Awesome. Uh, express us a JavaScript library that uses node. Yes. We're going to be doing some node.js today, which you did a little bit of last week. Is that correct? Yeah. Yeah, because I had to install it. I need to do homework for that still That is, I'm going to be no, no, we didn't do that last week. Oh, we talked about it. Sorry. Um, what did I install then? That was for the nodes. Oh, you did, you probably did install the node. Yeah. Yeah. It's like, eight to talk with you right. So it was just before we got started. Yeah. Awesome
That is, I'm going to be no, no, we didn't do that last week. Oh, we talked about it. Sorry. Um, what did I install then? That was for the nodes. Oh, you did, you probably did install the node. Yeah. Yeah. It's like, eight to talk with you right. So it was just before we got started. Yeah. Awesome Yeah. Awesome. Yeah. Exactly. We're going to be using that again, except we're going to be, uh, yeah. Okay. So we, we didn't run, we didn't run any node scripts per say. And node is also your local build tool. Yeah
Yeah. Awesome. Yeah. Exactly. We're going to be using that again, except we're going to be, uh, yeah. Okay. So we, we didn't run, we didn't run any node scripts per say. And node is also your local build tool. Yeah Yeah. So we're going to be using, because we did some, you did a little bit of NPM stuff last week. Is that correct? I think so. I seem to recall you ran some NPM commands and NPM short for node package manager. Um, let's us install and manage JavaScript packages locally on your machine
Yeah. So we're going to be using, because we did some, you did a little bit of NPM stuff last week. Is that correct? I think so. I seem to recall you ran some NPM commands and NPM short for node package manager. Um, let's us install and manage JavaScript packages locally on your machine Good so far. Yeah. Yeah. We do have another question. In the naming, can we use a double quote or single interchangeably? I'm not sure. Do we want to try it out? You can always see the dot dot and try again. Now remember, we're not the backwards. Mm hmm. Like one out. Yeah. Back in desktop
Good so far. Yeah. Yeah. We do have another question. In the naming, can we use a double quote or single interchangeably? I'm not sure. Do we want to try it out? You can always see the dot dot and try again. Now remember, we're not the backwards. Mm hmm. Like one out. Yeah. Back in desktop Back in desktop. Oh, sorry. Um, do you know what? The single quote would be doing it without shift, I think, on the English keyboard. So it's not putting two double quote. So the, the, the symbol is called double quotes, right? The quote marks. Oh, yeah. Yeah
Back in desktop. Oh, sorry. Um, do you know what? The single quote would be doing it without shift, I think, on the English keyboard. So it's not putting two double quote. So the, the, the symbol is called double quotes, right? The quote marks. Oh, yeah. Yeah Oh, yeah. Yeah. So if you type in CD and then say, there you go. Let's give that a try. Okay. So that answers your question. That works too. Thanks, Joe. Yeah. I love these kinds of questions. Um, sometimes it's interchangeable. Kind of depends on the command you're trying to do
Oh, yeah. Yeah. So if you type in CD and then say, there you go. Let's give that a try. Okay. So that answers your question. That works too. Thanks, Joe. Yeah. I love these kinds of questions. Um, sometimes it's interchangeable. Kind of depends on the command you're trying to do So I always go, when in doubt, use, say, the double quotes for terminal stuff that I could be wrong. And I'm happy to be corrected on that. But yeah. So right. We're going to, we're going to create our own node project. Do we want to cover what no JS is and how it relates to JavaScript? Yeah. Yeah
So I always go, when in doubt, use, say, the double quotes for terminal stuff that I could be wrong. And I'm happy to be corrected on that. But yeah. So right. We're going to, we're going to create our own node project. Do we want to cover what no JS is and how it relates to JavaScript? Yeah. Yeah Yeah. Yeah. Yeah. Especially since I got some mixed up with last weeks. Oh, yeah, yeah. Sure. So, um, so I'm going to, I'm going to get, I'm going to probably butcher this, but I'll give this to the best of my understanding
Yeah. Yeah. Yeah. Especially since I got some mixed up with last weeks. Oh, yeah, yeah. Sure. So, um, so I'm going to, I'm going to get, I'm going to probably butcher this, but I'll give this to the best of my understanding So no JS is a runtime that is a program that lives on your computer that all it does is execute JavaScript on your computer. Right. It's kind of like, uh, it's a program to which you give some JavaScript and it will say, I gotcha, I'll run that JavaScript. Right. Because there's some front
So no JS is a runtime that is a program that lives on your computer that all it does is execute JavaScript on your computer. Right. It's kind of like, uh, it's a program to which you give some JavaScript and it will say, I gotcha, I'll run that JavaScript. Right. Because there's some front Is this. I think this is where it also helps with like. Is it something that Versel does because it takes the front and stuff to the back and stuff. Kind of. Um, as, uh, AJC Web Dev says, um, at its inception, JavaScript was meant to run in the browser, right
Is this. I think this is where it also helps with like. Is it something that Versel does because it takes the front and stuff to the back and stuff. Kind of. Um, as, uh, AJC Web Dev says, um, at its inception, JavaScript was meant to run in the browser, right And each browser will have its own, uh, what's it called runtime, right? Each browser runs JavaScript its own way. They are according to a pre agreed upon standard across different browsers and technology vendors, right? Okay. So I'm good. Right
And each browser will have its own, uh, what's it called runtime, right? Each browser runs JavaScript its own way. They are according to a pre agreed upon standard across different browsers and technology vendors, right? Okay. So I'm good. Right So I'm good. Right. Um, and, and some, some folks took that brought it over to run locally on your machine and said, this is called node. JS and all it does is run JavaScript locally on a machine outside of a browser. And as AJC Web Dev says, um, Versel runs hella node. So there you go
So I'm good. Right. Um, and, and some, some folks took that brought it over to run locally on your machine and said, this is called node. JS and all it does is run JavaScript locally on a machine outside of a browser. And as AJC Web Dev says, um, Versel runs hella node. So there you go So there you go. Or on a server. Okay. Um, we get so far. Yes. Cool. And it does look like we have one more question from the crowd. Oh, yeah. Uh, does it compile as well or just a runtime for web framework? So I'm not an expert on this, but I think I think it interprets JavaScript
So there you go. Or on a server. Okay. Um, we get so far. Yes. Cool. And it does look like we have one more question from the crowd. Oh, yeah. Uh, does it compile as well or just a runtime for web framework? So I'm not an expert on this, but I think I think it interprets JavaScript That is instead of, instead of reading all the JavaScript and giving you a, an executable file, you know, like an, a dot app file or something to be like, hey, take this and you can run it. Right. And then, uh, what it does is in real time, it reads it and goes like, okay, done, okay, done
That is instead of, instead of reading all the JavaScript and giving you a, an executable file, you know, like an, a dot app file or something to be like, hey, take this and you can run it. Right. And then, uh, what it does is in real time, it reads it and goes like, okay, done, okay, done Like it reads and, and interprets that is executes at the same time each line of code. Sounds good. Uh, yeah, I'm seeing what a JC said. JavaScript is an interpreted language, but it doesn't have a like type script or JSX. Okay. Cool. Cool
Like it reads and, and interprets that is executes at the same time each line of code. Sounds good. Uh, yeah, I'm seeing what a JC said. JavaScript is an interpreted language, but it doesn't have a like type script or JSX. Okay. Cool. Cool Okay. Cool. Cool. So we can, um, so we're going to go ahead and create our first, um, our first, uh, local JavaScript file. Sound good? Yes. So let's, um, open VS code locally in this folder. So we can, what we can do is either, uh, do code space dot to open this folder in VS code
Okay. Cool. Cool. So we can, um, so we're going to go ahead and create our first, um, our first, uh, local JavaScript file. Sound good? Yes. So let's, um, open VS code locally in this folder. So we can, what we can do is either, uh, do code space dot to open this folder in VS code So you got to try. Oh, wait. Command, not found code. Totally fine. Um, not what, what VS code lets us do is install a little program that says, hey, open me in VS code. But since we don't have that now, we can do one of two things
So you got to try. Oh, wait. Command, not found code. Totally fine. Um, not what, what VS code lets us do is install a little program that says, hey, open me in VS code. But since we don't have that now, we can do one of two things Either we can set that up or we can go by the open folder method from last week. Do you want to try, uh, install that? Sure. Yeah. All right. I think, I think if you go to file, we're going to, we're going to go down all the rabbit holes
Either we can set that up or we can go by the open folder method from last week. Do you want to try, uh, install that? Sure. Yeah. All right. I think, I think if you go to file, we're going to, we're going to go down all the rabbit holes If we go to, if we go to a file, let me see, file, I'm looking on my machine as well because I can never remember what the command is. It is under. Is it edit? We're going to be opening up a little, a, a little command, uh, tray, which I know as shift command P
If we go to, if we go to a file, let me see, file, I'm looking on my machine as well because I can never remember what the command is. It is under. Is it edit? We're going to be opening up a little, a, a little command, uh, tray, which I know as shift command P So if you, if you go back to VS code and put in the keyboard shortcut shift command and P. Eh? So what this has done is opened up a little console that lets us, um, run some VS code specific commands. And we want to, we want to look up where we have a little search bar
So if you, if you go back to VS code and put in the keyboard shortcut shift command and P. Eh? So what this has done is opened up a little console that lets us, um, run some VS code specific commands. And we want to, we want to look up where we have a little search bar We're going to look up a specific thing, which is code, I think. I'm learning how to like, where to put my mic, uh, and my keyboard. Oh, yeah. You're good. Go. There we go. Oh, yes. Uh, if you see where it says shell command colon installed code command, you know, a code command in path. That's us
We're going to look up a specific thing, which is code, I think. I'm learning how to like, where to put my mic, uh, and my keyboard. Oh, yeah. You're good. Go. There we go. Oh, yes. Uh, if you see where it says shell command colon installed code command, you know, a code command in path. That's us That's us. Do I want to click the gear or just click enter? I think you want to press enter on it. Yeah. Shell command code successfully installed in path. So let's go back to our terminal. Try it out. I don't know if that's going to work. Let's see. Hey. That's exciting
That's us. Do I want to click the gear or just click enter? I think you want to press enter on it. Yeah. Shell command code successfully installed in path. So let's go back to our terminal. Try it out. I don't know if that's going to work. Let's see. Hey. That's exciting That's exciting. Yeah, let's let it access file. So what we've done now is anytime we want to open a folder in VS code, we can do it from the terminal, which is pretty cool. Yay. All right. Awesome. So we're, we're one step ahead. Now let's, um, so we're inside our folder now
That's exciting. Yeah, let's let it access file. So what we've done now is anytime we want to open a folder in VS code, we can do it from the terminal, which is pretty cool. Yay. All right. Awesome. So we're, we're one step ahead. Now let's, um, so we're inside our folder now Let's create a new file in this folder. Shall we? So you can hear that here. I think there's a little icon a little bit higher up. Yep. And let's call it app.js. That's a double P dot JS. So this is our JavaScript file, which we're going to execute with node.js locally on our computer
Let's create a new file in this folder. Shall we? So you can hear that here. I think there's a little icon a little bit higher up. Yep. And let's call it app.js. That's a double P dot JS. So this is our JavaScript file, which we're going to execute with node.js locally on our computer And let's keep it. Let's keep it nice and nice and simple. Let's have it. Let's have it. Are you familiar with console log? We've done it. Let's do a console log. So let's do console dot log. And then we'll need some brackets for some arguments. I don't think I've got arguments yet. Or parameters
And let's keep it. Let's keep it nice and nice and simple. Let's have it. Let's have it. Are you familiar with console log? We've done it. Let's do a console log. So let's do console dot log. And then we'll need some brackets for some arguments. I don't think I've got arguments yet. Or parameters Or parameters. I always mix up the terms. If I say parameters or arguments, I mean, the thing is that go inside the brackets. Perfect. So this is a function call that we're going to pass as an argument a string, which is a double quote marks
Or parameters. I always mix up the terms. If I say parameters or arguments, I mean, the thing is that go inside the brackets. Perfect. So this is a function call that we're going to pass as an argument a string, which is a double quote marks And inside the string, we're just going to, we're just going to enter some text that's going to show up that is be console logged when we run our scripts. So it can be anything. Let's say, um, I don't know. Hello from Teach Gen Tech. I'm going to go to the main short. Hello world is usual go to
And inside the string, we're just going to, we're just going to enter some text that's going to show up that is be console logged when we run our scripts. So it can be anything. Let's say, um, I don't know. Hello from Teach Gen Tech. I'm going to go to the main short. Hello world is usual go to Oh, I love. Hello, beautiful humans. Lovely. Awesome. Well, that's done. So let's go ahead and save that. And it looks like we have two comments. Thank you. He said externally. You both sound brilliant. I'm excited. I'm feeling imposter syndrome hardcore. You are doing your sounding fantastic
Oh, I love. Hello, beautiful humans. Lovely. Awesome. Well, that's done. So let's go ahead and save that. And it looks like we have two comments. Thank you. He said externally. You both sound brilliant. I'm excited. I'm feeling imposter syndrome hardcore. You are doing your sounding fantastic I will say Tiffany from the podcast will be very, very excited that I'm finally set up my mic. And AJC said arguments that actually, I forget that I can put these on the screen. You can click on it to highlight it. Yeah. Can I do a wait. No, no, no. No, no. I'll do the second one. Do the other
I will say Tiffany from the podcast will be very, very excited that I'm finally set up my mic. And AJC said arguments that actually, I forget that I can put these on the screen. You can click on it to highlight it. Yeah. Can I do a wait. No, no, no. No, no. I'll do the second one. Do the other Do the other. Yeah. All right. Arguments are the actual values passed to the function. Parallel or what the function defines is having the thing that gets passed through. So. Here. We're calling a function. Called log. Right. And we're passing to it arguments
Do the other. Yeah. All right. Arguments are the actual values passed to the function. Parallel or what the function defines is having the thing that gets passed through. So. Here. We're calling a function. Called log. Right. And we're passing to it arguments But somewhere in another file, the function log gets defined. And it to it, we declare what parameters we're going to be passing to it. We'll get there. Okay. But in this context, we're using arguments. Thank you very much for the explanation. I mean, I had to go all the way away
But somewhere in another file, the function log gets defined. And it to it, we declare what parameters we're going to be passing to it. We'll get there. Okay. But in this context, we're using arguments. Thank you very much for the explanation. I mean, I had to go all the way away I mean, you're good. Actually, I think you can hide it, honestly. That's what I thought I was doing. But, uh, okay, well, we'll see if it comes back. There we go. Yeah, it'll come back. I think I think you can toggle it with that. I don't know why I'm pointing
I mean, you're good. Actually, I think you can hide it, honestly. That's what I thought I was doing. But, uh, okay, well, we'll see if it comes back. There we go. Yeah, it'll come back. I think I think you can toggle it with that. I don't know why I'm pointing You can, you can toggle it with the, with the two document icons at the top right of the, uh, Oh, no, not top right, top left. Sorry. Okay. Well, you can close those other ones. I just really want to have as many of the same document open as well. That's totally fair
You can, you can toggle it with the, with the two document icons at the top right of the, uh, Oh, no, not top right, top left. Sorry. Okay. Well, you can close those other ones. I just really want to have as many of the same document open as well. That's totally fair Uh, I think you can close that get started one. There we go. All right. If you put on the document icon at the top left of your window, uh, you can toggle it, you can toggle it open and closed. Okay. Which is nice. That was exciting. So great. We've got our console log ready
Uh, I think you can close that get started one. There we go. All right. If you put on the document icon at the top left of your window, uh, you can toggle it, you can toggle it open and closed. Okay. Which is nice. That was exciting. So great. We've got our console log ready Let's run this on our computer. So we'll hop back to the terminal. Yeah. Uh, yeah, exactly. So we, back in our terminal, we've got access. So when we installed Node.js, we installed a couple of things on our machine, one of which being NPM, which I believe you used last week
Let's run this on our computer. So we'll hop back to the terminal. Yeah. Uh, yeah, exactly. So we, back in our terminal, we've got access. So when we installed Node.js, we installed a couple of things on our machine, one of which being NPM, which I believe you used last week Uh, NPM start, NPM, other things, NPM install. You might recall. Maybe it was yarn. Sorry. You, you installed amongst other problems. Yeah, we did. My bad. My bad. NPM short for node package manager is a program very similar to yarn in usage. Y'all should both start using PNPM though
Uh, NPM start, NPM, other things, NPM install. You might recall. Maybe it was yarn. Sorry. You, you installed amongst other problems. Yeah, we did. My bad. My bad. NPM short for node package manager is a program very similar to yarn in usage. Y'all should both start using PNPM though We'll stick to NPM for now. So NPM is a program that comes in that gets installed with Node.js. But another program that gets installed is Node. So if you type in Node, try hitting Enter. Let's see what happens. So now we're in, now we're inside Node itself
We'll stick to NPM for now. So NPM is a program that comes in that gets installed with Node.js. But another program that gets installed is Node. So if you type in Node, try hitting Enter. Let's see what happens. So now we're in, now we're inside Node itself All good? Yeah, I was just hitting random things because I'm not used to my bike being here. Yeah, I'm totally with you. Um, so now where you can see it says welcome to Node.js version 16 type.help for more information. So right now our terminal is running Node. No idea how this works
All good? Yeah, I was just hitting random things because I'm not used to my bike being here. Yeah, I'm totally with you. Um, so now where you can see it says welcome to Node.js version 16 type.help for more information. So right now our terminal is running Node. No idea how this works So we're actually going to just exit out type in exit. And give it some bracket. Oh, sorry, type in exit and give it some brackets. Some smooth brackets without this space. Oh, wait. This one, right? No, sorry, the round brackets. I'm going to learn the different all of these. It's going to happen
So we're actually going to just exit out type in exit. And give it some bracket. Oh, sorry, type in exit and give it some brackets. Some smooth brackets without this space. Oh, wait. This one, right? No, sorry, the round brackets. I'm going to learn the different all of these. It's going to happen So give it the other one. Now hit Enter. Oh, uh, do you know what press control D on your keyboard? There we go. So that'll kill the node execution. So right, we've got node installed, which is fantastic. So we can call, we can type in Node. Which can remember is that is that JavaScript runtime
So give it the other one. Now hit Enter. Oh, uh, do you know what press control D on your keyboard? There we go. So that'll kill the node execution. So right, we've got node installed, which is fantastic. So we can call, we can type in Node. Which can remember is that is that JavaScript runtime Give it a space. And now we're going to give it the name of our file to run. So we can type in Node, run and now put an app.js. So before you hit Enter or let's hit it. You're good, you're good, you're good, you're good, you're good. But check it out, check it out. Um, you can see it printed out
Give it a space. And now we're going to give it the name of our file to run. So we can type in Node, run and now put an app.js. So before you hit Enter or let's hit it. You're good, you're good, you're good, you're good, you're good. But check it out, check it out. Um, you can see it printed out You ran it and then it printed out. Hello, beautiful humans. Yay. So what does that mean? That means we have run app.js locally on our computer using Node. Got it. If we were to put this into a, we're not going to do that today. But if we were to put this exact file app
You ran it and then it printed out. Hello, beautiful humans. Yay. So what does that mean? That means we have run app.js locally on our computer using Node. Got it. If we were to put this into a, we're not going to do that today. But if we were to put this exact file appjs in a browser and run it there, it'll print it into the command into the browser console. Okay. Because a lot of what node and browser JavaScript do is. Is it fair to say mostly similar? They, they share a lot of things that they can do the JavaScript. Okay. Right. So. That said
js in a browser and run it there, it'll print it into the command into the browser console. Okay. Because a lot of what node and browser JavaScript do is. Is it fair to say mostly similar? They, they share a lot of things that they can do the JavaScript. Okay. Right. So. That said So. That said. We spent a lot of time on this. Let's actually start making some back end, uh, some back end code. So first thing we're going to do is we're going to create an NPM. An NPM project. So to do that, we're going to use that other program that I mentioned that comes installed with Node
So. That said. We spent a lot of time on this. Let's actually start making some back end, uh, some back end code. So first thing we're going to do is we're going to create an NPM. An NPM project. So to do that, we're going to use that other program that I mentioned that comes installed with Nodejs, which is called NPM. So if you type in NPM. Give it space. And now we're going to initialize our NPM project. So we're going to type in I N I T in it. Yeah. So with this, once we hit enter, it's going to start asking us some questions to set up our project. So go ahead and set press enter
js, which is called NPM. So if you type in NPM. Give it space. And now we're going to initialize our NPM project. So we're going to type in I N I T in it. Yeah. So with this, once we hit enter, it's going to start asking us some questions to set up our project. So go ahead and set press enter We're going to see how this read it out. I like, I like reading out the stuff. This utility will walk you through creating a package.js and file. It only covers the most common items and tries to guess sensible defaults
We're going to see how this read it out. I like, I like reading out the stuff. This utility will walk you through creating a package.js and file. It only covers the most common items and tries to guess sensible defaults See NPM help in it for definitive documentation on these fields and exactly what they do. We don't need that right now. Use NPM install and then the name of a package afterwards to install a package and save it as a dependency in the package.js and file. That's a lot of stuff we just saw
See NPM help in it for definitive documentation on these fields and exactly what they do. We don't need that right now. Use NPM install and then the name of a package afterwards to install a package and save it as a dependency in the package.js and file. That's a lot of stuff we just saw So now it's asking us some questions. What would we like to call our package and package in this context is referring to the project itself
So now it's asking us some questions. What would we like to call our package and package in this context is referring to the project itself So let's talk a little bit about that, shall we
So let's talk a little bit about that, shall we We, my usual go to backend example app example is something I like to call kind words, which is a little app that I use to save little quotes of nice things people have told me so that when I'm feeling down, I can go back to it and have a looking, have a nice little serotonin boost
We, my usual go to backend example app example is something I like to call kind words, which is a little app that I use to save little quotes of nice things people have told me so that when I'm feeling down, I can go back to it and have a looking, have a nice little serotonin boost We can do something similar to that or we can do that. Yeah. Well, then let's go. Let's call our package name kind dash words. Okay, so it's going to be NPM. No, no, sorry. No, no, no, sorry. See here, it's prompting us for a package name. So we can just type in the package name
We can do something similar to that or we can do that. Yeah. Well, then let's go. Let's call our package name kind dash words. Okay, so it's going to be NPM. No, no, sorry. No, no, no, sorry. See here, it's prompting us for a package name. So we can just type in the package name Right now NPM is still running. I usually go with hyphenation. So instead of the capital W, you give it a nice hyphen. Yeah. So enter it's package. Now it's asking us, hey, what version do you want it to be? Now, the default is, you see the brackets are 0 1.0.0. The convention is to have 1.0
Right now NPM is still running. I usually go with hyphenation. So instead of the capital W, you give it a nice hyphen. Yeah. So enter it's package. Now it's asking us, hey, what version do you want it to be? Now, the default is, you see the brackets are 0 1.0.0. The convention is to have 1.00.0 be like the final released version. So I would actually recommend that we go with 0.0.1. This will be like our beta or alpha in development mode. We can give our package a description. This I think we can actually let's let's let's write it. What is it? Rest API for kind words
0.0 be like the final released version. So I would actually recommend that we go with 0.0.1. This will be like our beta or alpha in development mode. We can give our package a description. This I think we can actually let's let's let's write it. What is it? Rest API for kind words Is rest capitalized. Rest is all cats. I was like, I haven't had this in a while. Okay, what did you say rest API kind words? Rest API kind words. Perfect. You know like page pages for 16,olution 16. We didn't have to check the age of west of post, site checks. So that's we've got our website
Is rest capitalized. Rest is all cats. I was like, I haven't had this in a while. Okay, what did you say rest API kind words? Rest API kind words. Perfect. You know like page pages for 16,olution 16. We didn't have to check the age of west of post, site checks. So that's we've got our website We've got proper feedback from each site. And that's the same thing. For 3rd class section in this case, like I can switch to Babylonian Linux itself. You don't love, you know, Barbara dark infrastructure, right. You have the cloud industry. mês itself right now
We've got proper feedback from each site. And that's the same thing. For 3rd class section in this case, like I can switch to Babylonian Linux itself. You don't love, you know, Barbara dark infrastructure, right. You have the cloud industry. mês itself right now You know, all the time you are well aviation. This is all grass industry. Probably moreキャ nee earnr- So you see it in brackets is making, hey, is this the right, like, I, this is sort of the default I'm proposing, but you can change it if you want
You know, all the time you are well aviation. This is all grass industry. Probably moreキャ nee earnr- So you see it in brackets is making, hey, is this the right, like, I, this is sort of the default I'm proposing, but you can change it if you want Yeah, let's, let's press enter on that and leave it as this. All right. Thank you, Joe. Oh, thanks, Joe. Have a good one. And we got to reply from AJC. Right, major dot minor dot patch, exactly. When you make backwards, compare all your rights, this should be 0.1.0 technically
Yeah, let's, let's press enter on that and leave it as this. All right. Thank you, Joe. Oh, thanks, Joe. Have a good one. And we got to reply from AJC. Right, major dot minor dot patch, exactly. When you make backwards, compare all your rights, this should be 0.1.0 technically1.0 technically. Anyway, we can fix that. Let's leave that test command black blank. Okay. So just hand on her. Yep. Groovy. Kid repository will leave blank for now as well. Sweet tomorrow is going to be all about gets. I'm excited
1.0 technically. Anyway, we can fix that. Let's leave that test command black blank. Okay. So just hand on her. Yep. Groovy. Kid repository will leave blank for now as well. Sweet tomorrow is going to be all about gets. I'm excited I'm excited. Yeah, that's why that's why I'm having this, like, that's why I planned this so that I progress naturally into that. Nice keywords. Let's leave that blank as well. Author. Ah, well, now we need to put in your name. I think you can put in your, yeah, oh, I like that. Perfect. License
I'm excited. Yeah, that's why that's why I'm having this, like, that's why I planned this so that I progress naturally into that. Nice keywords. Let's leave that blank as well. Author. Ah, well, now we need to put in your name. I think you can put in your, yeah, oh, I like that. Perfect. License Perfect. License. Do we want to talk about software licenses? Or. So is software licenses like either like you could buy a word from Microsoft
Perfect. License. Do we want to talk about software licenses? Or. So is software licenses like either like you could buy a word from Microsoft It used to be where you could buy it as a one time software that you purchased, but most software is now or software is a service, which means you pay it a monthly service. Is that what it is or what is? I think that covers part of it
It used to be where you could buy it as a one time software that you purchased, but most software is now or software is a service, which means you pay it a monthly service. Is that what it is or what is? I think that covers part of it When it comes to open source development, however, of software, a software license also tells you how you can. Use that code
When it comes to open source development, however, of software, a software license also tells you how you can. Use that code Use that code. You know, when you download a project from GitHub, it gives you, um, it gives you get access to that code, but this license is a piece of text, a piece of most of the time legal text that tells you like, okay, you have the code. Here's what you're allowed to do with the code
Use that code. You know, when you download a project from GitHub, it gives you, um, it gives you get access to that code, but this license is a piece of text, a piece of most of the time legal text that tells you like, okay, you have the code. Here's what you're allowed to do with the code Does that make sense? It does. But if you don't upload it to the same repository, will they really know that you didn't follow those license guidelines? That's a good question. Oh, that's that's, that's where a lot of arguments come from actually
Does that make sense? It does. But if you don't upload it to the same repository, will they really know that you didn't follow those license guidelines? That's a good question. Oh, that's that's, that's where a lot of arguments come from actually I'm not going to, I'm not going to get too much into the nitty gritty because a lot of it comes from things that I'm not very knowledgeable on, but and I'm going to sound really naive when I say this and probably missell it. But a lot of the times it's kind of an honor system
I'm not going to, I'm not going to get too much into the nitty gritty because a lot of it comes from things that I'm not very knowledgeable on, but and I'm going to sound really naive when I say this and probably missell it. But a lot of the times it's kind of an honor system I'm going to sound, I hope that's not too controversial to say
I'm going to sound, I hope that's not too controversial to say So, you know, there are mechanisms for checking that people are complying with these licenses when they go like, Hey, um, you know, Hey, you're using my code and you shouldn't be, you should be, you know, giving me what is it called? Attribution. Is that a set the correct term? Oh, okay
So, you know, there are mechanisms for checking that people are complying with these licenses when they go like, Hey, um, you know, Hey, you're using my code and you shouldn't be, you should be, you know, giving me what is it called? Attribution. Is that a set the correct term? Oh, okay So, um, just based on like what you're saying and what AJC is saying, it sounds like it's, it's kind of like when somebody else uses a local or something where they either send a C serocyst or give us some money for using our stuff. Yeah. Yeah. Absolutely
So, um, just based on like what you're saying and what AJC is saying, it sounds like it's, it's kind of like when somebody else uses a local or something where they either send a C serocyst or give us some money for using our stuff. Yeah. Yeah. Absolutely Yeah. Absolutely. And as AJC correctly says, the best default is MIT. So they're under license where says ISE. Um, the default is currently ISE. Let's change that to be MIT. Sorry. I got to go back on your. Oh, I'm breaking stuff. You're good. Too many
Yeah. Absolutely. And as AJC correctly says, the best default is MIT. So they're under license where says ISE. Um, the default is currently ISE. Let's change that to be MIT. Sorry. I got to go back on your. Oh, I'm breaking stuff. You're good. Too many Too many. What is MIT mean instead? I think it comes from Massachusetts Institute of Technology. Um, it's a license that was created there that as AJC correctly says, it makes you not liable. So, okay. So, uh, let's see, this little form we just filled out
Too many. What is MIT mean instead? I think it comes from Massachusetts Institute of Technology. Um, it's a license that was created there that as AJC correctly says, it makes you not liable. So, okay. So, uh, let's see, this little form we just filled out Uh, where I'm says I'm about to write to this file called package. Jason, where it says amongst other things, the name is kind words version is 0.0.1. Description is this main is that scripts. We're going to get to scripts in a bit. Author, teach, gen tech and the licenses MIT
Uh, where I'm says I'm about to write to this file called package. Jason, where it says amongst other things, the name is kind words version is 0.0.1. Description is this main is that scripts. We're going to get to scripts in a bit. Author, teach, gen tech and the licenses MIT Is this okay? I'm going to say yes. I know we want to change that version. So we'll get to that. Okay. So if you type in. Hit enter though because it already says yes in that will it default to that? It should. It looks like it. And we can find out. Okay
Is this okay? I'm going to say yes. I know we want to change that version. So we'll get to that. Okay. So if you type in. Hit enter though because it already says yes in that will it default to that? It should. It looks like it. And we can find out. Okay Okay. Remember how I said we can toggle that file folder thing. And via code. Should I go and toggle it? And now we've got a file in here called package. Jason, and let's take a, let's take a second to take a closer look at it. So let's toggle that away. So let's see. This is a piece of Jason
Okay. Remember how I said we can toggle that file folder thing. And via code. Should I go and toggle it? And now we've got a file in here called package. Jason, and let's take a, let's take a second to take a closer look at it. So let's toggle that away. So let's see. This is a piece of Jason Are we cool? Are we familiar with Jason JavaScript object notation? I'm familiar with it from hearing it happen with that in YAML. When I worked at stoplight knowing what they mean, not so much. I just know they exist. Right
Are we cool? Are we familiar with Jason JavaScript object notation? I'm familiar with it from hearing it happen with that in YAML. When I worked at stoplight knowing what they mean, not so much. I just know they exist. Right Right. This is a, this is a way of storing data in the JavaScript object notation that we can then that, for example, no JS will read this file and do its magic with it. This is a, a standardize convention of how to layout JavaScript projects. Okay. Cool. Yes
Right. This is a, this is a way of storing data in the JavaScript object notation that we can then that, for example, no JS will read this file and do its magic with it. This is a, a standardize convention of how to layout JavaScript projects. Okay. Cool. Yes Okay. Cool. Yes. And there you can see all of the things that we filled out, right? Name, version, description, main scripts, author, and like. I'm clicking the debug thing. Oh. I clicked it. And now it did a lot. It did some stuff. Let's. Yeah. Let's go. There you go. Nice. We don't need that
Okay. Cool. Yes. And there you can see all of the things that we filled out, right? Name, version, description, main scripts, author, and like. I'm clicking the debug thing. Oh. I clicked it. And now it did a lot. It did some stuff. Let's. Yeah. Let's go. There you go. Nice. We don't need that We don't need that. I think you can hide it. Or you can, oh, you see that trash can I can on the right? Ah, yay. And we can. High bug. Yeah. Not yet. Not for now. And as AJC correctly says on the left, let's call it a column
We don't need that. I think you can hide it. Or you can, oh, you see that trash can I can on the right? Ah, yay. And we can. High bug. Yeah. Not yet. Not for now. And as AJC correctly says on the left, let's call it a column You see who we have like string colon string or string colon string comma string colon string and so on and so forth. For each line. Yes. Right. The left hand side is what's called a key. That is we're setting, for example, the name to be
You see who we have like string colon string or string colon string comma string colon string and so on and so forth. For each line. Yes. Right. The left hand side is what's called a key. That is we're setting, for example, the name to be And then on the right hand side of the colon, we've got the value. What is the difference between a key and a. Think of. A suivid.by Const or. The way. I think. I think the way I would say it is that. Yeah. It's a GC correctly says key is kind of like. Is is like a variable. Yeah
And then on the right hand side of the colon, we've got the value. What is the difference between a key and a. Think of. A suivid.by Const or. The way. I think. I think the way I would say it is that. Yeah. It's a GC correctly says key is kind of like. Is is like a variable. Yeah Yeah. It's a different data structure. So it's just called something different because it's being say, about something different because, like, what do you mean by different data structure? I think because it's in JSON, because it's a JavaScript object, it's having that different name. Got it
Yeah. It's a different data structure. So it's just called something different because it's being say, about something different because, like, what do you mean by different data structure? I think because it's in JSON, because it's a JavaScript object, it's having that different name. Got it Got it. Okay, thank you. This is a different way of going about structuring and handling that data. So, we've got that. So now we've got this package JSON file and I kind of want to keep that open while we do some stuff around it. So, you remember I said we can install packages with NPM
Got it. Okay, thank you. This is a different way of going about structuring and handling that data. So, we've got that. So now we've got this package JSON file and I kind of want to keep that open while we do some stuff around it. So, you remember I said we can install packages with NPM Remember it said, yeah, let's install Express.js. So let's type in NPM and then space install. Space and now we're going to type in the name of our package without the bigger that and smaller than. We're going to type in express. Perfect. And then the name? Nope, we're good. So we'll press enter
Remember it said, yeah, let's install Express.js. So let's type in NPM and then space install. Space and now we're going to type in the name of our package without the bigger that and smaller than. We're going to type in express. Perfect. And then the name? Nope, we're good. So we'll press enter Now it's going to be installed for stuff. So let's see, added 57 packages and audited 58 packages in two seconds. I like reading this stuff. Seven packages are looking for funding, found zero vulnerabilities, always good. But look at how our package JSON file changed
Now it's going to be installed for stuff. So let's see, added 57 packages and audited 58 packages in two seconds. I like reading this stuff. Seven packages are looking for funding, found zero vulnerabilities, always good. But look at how our package JSON file changed I don't know if you can see the difference. Yeah, with the dependencies and express. Yeah, so NPM automatically edited our file to say, hey, this project now has a dependency and this dependency is express. And the very specific version I have installed is 4.18.1. Sound good? Yeah
I don't know if you can see the difference. Yeah, with the dependencies and express. Yeah, so NPM automatically edited our file to say, hey, this project now has a dependency and this dependency is express. And the very specific version I have installed is 4.18.1. Sound good? Yeah1. Sound good? Yeah. Like, you got to stop me and ask questions. As well, please. No, I found that with a lot of this stuff
1. Sound good? Yeah. Like, you got to stop me and ask questions. As well, please. No, I found that with a lot of this stuff It's like just like consuming it because if you keep going, it'll eventually click where like I may not understand exactly what's going on right now, but after going through it all, then towards the end eventually clicks what I was wondering or didn't quite understand beforehand. Yeah, totally
It's like just like consuming it because if you keep going, it'll eventually click where like I may not understand exactly what's going on right now, but after going through it all, then towards the end eventually clicks what I was wondering or didn't quite understand beforehand. Yeah, totally Yeah, totally. I mean, we can, we can, we can, we have time. We can also take a look at this concretely. In the terminal, we told NPM, hey, I want to install this dependency called express. It went on the internet
Yeah, totally. I mean, we can, we can, we can, we have time. We can also take a look at this concretely. In the terminal, we told NPM, hey, I want to install this dependency called express. It went on the internet It looked up and downloaded those files and it also edited our package JSON file to say, hey, this project has a dependency. And that dependent, one of the, and that dependency is express.js. Okay, so that just like, taking it back some, it means that we made the app
It looked up and downloaded those files and it also edited our package JSON file to say, hey, this project has a dependency. And that dependent, one of the, and that dependency is express.js. Okay, so that just like, taking it back some, it means that we made the appjs, which at this point was just a, basically like a text file to view, to name it something. And then we added package.json which like told us more about app.js. And then we said, hey, cool. We have, we want, we have the dependency, which means we want to use express.js in all of this
js, which at this point was just a, basically like a text file to view, to name it something. And then we added package.json which like told us more about app.js. And then we said, hey, cool. We have, we want, we have the dependency, which means we want to use express.js in all of thisjs in all of this. And that's what we just installed. Yeah. I'd say that's, I'd say that's, that's a pretty good assessment of what's going on. I think, I think to rephrase it, if I may, we made a file called app.js. This is a JavaScript file that we ran in our terminal using node. Got it
js in all of this. And that's what we just installed. Yeah. I'd say that's, I'd say that's, that's a pretty good assessment of what's going on. I think, I think to rephrase it, if I may, we made a file called app.js. This is a JavaScript file that we ran in our terminal using node. Got it Got it. Independent of that, in the same file, we declared an NPM project. Okay. Right? We said, hey, this project is called Kindwords. It's got this version. It's got this description. It's got a main JavaScript file, which is called the same as that file that we created
Got it. Independent of that, in the same file, we declared an NPM project. Okay. Right? We said, hey, this project is called Kindwords. It's got this version. It's got this description. It's got a main JavaScript file, which is called the same as that file that we created And this project also depends on express.js. In fact, I'd love to take us down a rabbit hole, another rabbit hole if I may. Yeah. I take a look at what was downloaded it. So why don't you toggle that folder view again? Because a couple of things happened. Oh, yeah, yeah, yeah
And this project also depends on express.js. In fact, I'd love to take us down a rabbit hole, another rabbit hole if I may. Yeah. I take a look at what was downloaded it. So why don't you toggle that folder view again? Because a couple of things happened. Oh, yeah, yeah, yeah You found node modules. Have you heard of node modules yet? I've heard. And then I am pretty sure AJC was the one that said just ignore them. Hahaha. I don't want to, I don't want to, I don't want to like completely distract you. I'm all for ignoring it as well
You found node modules. Have you heard of node modules yet? I've heard. And then I am pretty sure AJC was the one that said just ignore them. Hahaha. I don't want to, I don't want to, I don't want to like completely distract you. I'm all for ignoring it as well But one thing I want to see, oh, there it is, there it is. Check it out. So one of these folders here is express. So, and if you take a look at that, what it did was, what NPM did was essentially download express. Now you've got all of the source code of express.js in this folder
But one thing I want to see, oh, there it is, there it is. Check it out. So one of these folders here is express. So, and if you take a look at that, what it did was, what NPM did was essentially download express. Now you've got all of the source code of express.js in this folderjs in this folder. All of the framework, it's been downloaded right here. Huh. I'm letting that one soak in. All good? Yeah. AJC saying, no, I said never look in there. Don't ignore actively run. Oh gosh, I'm sorry. I'm going against those wishes. It's. Um, I think it's cool to see you
js in this folder. All of the framework, it's been downloaded right here. Huh. I'm letting that one soak in. All good? Yeah. AJC saying, no, I said never look in there. Don't ignore actively run. Oh gosh, I'm sorry. I'm going against those wishes. It's. Um, I think it's cool to see you I don't want to touch it. And you absolutely don't have to. And I don't want to, don't want to cause confusion. I like to poke around. And what do you see here, by the way, are all bunches of free of JavaScript code that express needs to run? Oh, wow. Yeah. Yeah. Okay
I don't want to touch it. And you absolutely don't have to. And I don't want to, don't want to cause confusion. I like to poke around. And what do you see here, by the way, are all bunches of free of JavaScript code that express needs to run? Oh, wow. Yeah. Yeah. Okay Yeah. Yeah. Okay. So we should call that and never look at it again. Absolutely right. So just to maybe solidify this in my head a bit. Sure. Because we installed all the nodes, it's not making us break down that code even further. Because it's it installed the nodes
Yeah. Yeah. Okay. So we should call that and never look at it again. Absolutely right. So just to maybe solidify this in my head a bit. Sure. Because we installed all the nodes, it's not making us break down that code even further. Because it's it installed the nodes Like what would happen if it didn't have the nodes? Like, do we have to develop nodes or somebody has to break it down that far? Yeah. Um, what that, that's a good, that's a good point. And I, uh, didn't cover that well. Um, what we did was download a
Like what would happen if it didn't have the nodes? Like, do we have to develop nodes or somebody has to break it down that far? Yeah. Um, what that, that's a good, that's a good point. And I, uh, didn't cover that well. Um, what we did was download a In JavaScript land, we call it packages, a package of prewritten code. That makes sense. But what if we didn't have that pre-written code like a super valid question? And, and, and the answer to that is, is what would happen if you tried to, I don't know, um, let's say it's a tool
In JavaScript land, we call it packages, a package of prewritten code. That makes sense. But what if we didn't have that pre-written code like a super valid question? And, and, and the answer to that is, is what would happen if you tried to, I don't know, um, let's say it's a tool Let's use a metaphor of a tool. Let's say we tried to, let's say we, this product with this project, we just say, I don't know, I need a hammer. Right? And we don't have that hammer on our desk. I go to reach for it. What happens? I can't use it. It's not there
Let's use a metaphor of a tool. Let's say we tried to, let's say we, this product with this project, we just say, I don't know, I need a hammer. Right? And we don't have that hammer on our desk. I go to reach for it. What happens? I can't use it. It's not there It's not there. In the context of here, if we try to use express JS without having installed express JS, our program would fail. And in case you're curious, we can actually make it fail by doing that. I might say that one from another time. But, like, I'll work on conceptualizing this
It's not there. In the context of here, if we try to use express JS without having installed express JS, our program would fail. And in case you're curious, we can actually make it fail by doing that. I might say that one from another time. But, like, I'll work on conceptualizing this I'll work on that one. Totally. Maybe it helps if we, if we try actually writing some, some express now. Cool. Yeah. Why don't we, why don't we go back to app.js? So, and let's just run, let's run, let's run our code again. Do you remember how to do it? If I don't, I can scroll up. You totally can
I'll work on that one. Totally. Maybe it helps if we, if we try actually writing some, some express now. Cool. Yeah. Why don't we, why don't we go back to app.js? So, and let's just run, let's run, let's run our code again. Do you remember how to do it? If I don't, I can scroll up. You totally can You totally can. In fact, oh, here's a trick. If you press up on your keyboard, you can cycle through different, previous commands you've written. Is it this one? That's one. Yay. So, we've still got, we've still got our app file that does the things
You totally can. In fact, oh, here's a trick. If you press up on your keyboard, you can cycle through different, previous commands you've written. Is it this one? That's one. Yay. So, we've still got, we've still got our app file that does the things And now we're going to modify that file to turn into an express server, more on that later. And we're going to turn that into a back end. So, let's help back onto VS Code and start writing some stuff. So, let's replace line one with declaring a const. And the name of this const will be express
And now we're going to modify that file to turn into an express server, more on that later. And we're going to turn that into a back end. So, let's help back onto VS Code and start writing some stuff. So, let's replace line one with declaring a const. And the name of this const will be express And its value will be what is returned by calling require. That's the one. It's a function, so it takes brackets. Which ones are brackets? Sorry. When I say brackets, I mean round brackets, like not curly brackets. And you want to remove that space. It's the space between require and the brackets
And its value will be what is returned by calling require. That's the one. It's a function, so it takes brackets. Which ones are brackets? Sorry. When I say brackets, I mean round brackets, like not curly brackets. And you want to remove that space. It's the space between require and the brackets Yeah, nice. parentheses, that's much better. Thank you, AJ. Yeah, parentheses. So, require. And then we're going to give it a string. Which is denoted by quote marks. And now we're going to give it the name of the package that we want to require
Yeah, nice. parentheses, that's much better. Thank you, AJ. Yeah, parentheses. So, require. And then we're going to give it a string. Which is denoted by quote marks. And now we're going to give it the name of the package that we want to require So, right now you've given the package name kind words, which is the one we're developing right now. Oh, so it's the express one. Exactly. So, what are we doing here? We are. We're just telling app
So, right now you've given the package name kind words, which is the one we're developing right now. Oh, so it's the express one. Exactly. So, what are we doing here? We are. We're just telling appjs, hey, take all of the express framework, all of the package, sorry, I sometimes use these terms interchangeably, take all of this package and put it make it accessible to me via this variable express. Got it. So, if we were to save and run this. Exactly
js, hey, take all of the express framework, all of the package, sorry, I sometimes use these terms interchangeably, take all of this package and put it make it accessible to me via this variable express. Got it. So, if we were to save and run this. Exactly Exactly. As agency very correctly says, you have it in your project, but it's not in the app. So, we ran our app.js and. It didn't do anything. Well, exactly. So, it didn't do anything because all we did was, hey, hey, just import this package. We didn't actually do anything with it. Okay
Exactly. As agency very correctly says, you have it in your project, but it's not in the app. So, we ran our app.js and. It didn't do anything. Well, exactly. So, it didn't do anything because all we did was, hey, hey, just import this package. We didn't actually do anything with it. Okay Okay. So, what we're going to do next is create a new variable called app, where we're going to put in our express, we're going to start up a new express app. Okay. Quick question. Why don't we have the squiggly line before this and. Which is basically. This one. Oh
Okay. So, what we're going to do next is create a new variable called app, where we're going to put in our express, we're going to start up a new express app. Okay. Quick question. Why don't we have the squiggly line before this and. Which is basically. This one. Oh This one. Oh. Like it, like, well, let's see if I do it down here or like creates it. Is it because it's a cons? So, it's out of it. Or. I'm not sure you understand the question. Sorry. Where have you seen that sometimes we need those brackets? I've seen them. I mean, I
This one. Oh. Like it, like, well, let's see if I do it down here or like creates it. Is it because it's a cons? So, it's out of it. Or. I'm not sure you understand the question. Sorry. Where have you seen that sometimes we need those brackets? I've seen them. I mean, I I mean, I. A lot of it is also going from the LinkedIn learning that I was. Learning, but it's, it was just very difficult to understand when we would or wouldn't use them. So I will ask that another time. Okay
I mean, I. A lot of it is also going from the LinkedIn learning that I was. Learning, but it's, it was just very difficult to understand when we would or wouldn't use them. So I will ask that another time. Okay Okay. And then for the next one for the variable, do I do it as no spaces between it? What is proper, like, clean coding, I think, as a term that I've heard. Sure. Yeah. I think. Yeah. And there are programs that will clean that up automatically for you. Okay. Which is kind of nice
Okay. And then for the next one for the variable, do I do it as no spaces between it? What is proper, like, clean coding, I think, as a term that I've heard. Sure. Yeah. I think. Yeah. And there are programs that will clean that up automatically for you. Okay. Which is kind of nice But what we want to do is when we're declaring a variable, for example, we'll do const space, name a variable, space equals space, and then a an expression. So we'll have, for example, const. And we're going to want to call this one app
But what we want to do is when we're declaring a variable, for example, we'll do const space, name a variable, space equals space, and then a an expression. So we'll have, for example, const. And we're going to want to call this one app And then the equals is going to be just calling express function. That is express with parentheses. They express in the parentheses or just parentheses. Express with parentheses. And then after them, after the express, sorry. You're good. There you go. Cool. So, oh, check it out. Check it out
And then the equals is going to be just calling express function. That is express with parentheses. They express in the parentheses or just parentheses. Express with parentheses. And then after them, after the express, sorry. You're good. There you go. Cool. So, oh, check it out. Check it out Check it out. Wait, wait, wait, wait, wait, go back. How'd you do that? That was so cool. You had that little popover. Yeah, let's read that. So creates an express application. The express function is a top level function exported by the express module. So it creates an express application
Check it out. Wait, wait, wait, wait, wait, go back. How'd you do that? That was so cool. You had that little popover. Yeah, let's read that. So creates an express application. The express function is a top level function exported by the express module. So it creates an express application And that application gets stored in the variable app. Go so far. Yes. Awesome. That's the types. Awesome. So let's create a new line afterwards. And we're going to use, we're going to have our app listen. So if we call app, let's write it out first and then we'll cover what it does. Act.Listen
And that application gets stored in the variable app. Go so far. Yes. Awesome. That's the types. Awesome. So let's create a new line afterwards. And we're going to use, we're going to have our app listen. So if we call app, let's write it out first and then we'll cover what it does. Act.Listen Act.Listen. Then we'll open up some parentheses. Next to it or space first. Always next. Okay. So this and check it out. See, we've got a callback. So listen, we'll pass in two. I'm mixing the term up now. Arguments. Yes. Two arguments. The first one is the port number
Act.Listen. Then we'll open up some parentheses. Next to it or space first. Always next. Okay. So this and check it out. See, we've got a callback. So listen, we'll pass in two. I'm mixing the term up now. Arguments. Yes. Two arguments. The first one is the port number So the port number is, and you've probably seen this before where you do where you start up, like the react app last week, where you had like local, local host, colon, and then a number. Yeah. We're going to define that number here. Oh, yeah. Okay
So the port number is, and you've probably seen this before where you do where you start up, like the react app last week, where you had like local, local host, colon, and then a number. Yeah. We're going to define that number here. Oh, yeah. Okay Oh, yeah. Okay. As long as it's bigger, let's say as long as it's bigger than 3000, feel free to pick one. And keep it to four digits. Very nice. Three, three, three, three, four. We'll do four. Okay. That's the spot way, you know, I feel like three, three, three is probably probably used. Sure
Oh, yeah. Okay. As long as it's bigger, let's say as long as it's bigger than 3000, feel free to pick one. And keep it to four digits. Very nice. Three, three, three, three, four. We'll do four. Okay. That's the spot way, you know, I feel like three, three, three is probably probably used. Sure Sure. We can do that. So that's our first argument. Second argument is denoted by a comma. Sorry. That's still inside the parentheses. Perfect. And now we'll define what's called a function, a callback function. Have you, have you, uh, have you, wait, wait, we're not typing callback though. Sorry
Sure. We can do that. So that's our first argument. Second argument is denoted by a comma. Sorry. That's still inside the parentheses. Perfect. And now we'll define what's called a function, a callback function. Have you, have you, uh, have you, wait, wait, we're not typing callback though. Sorry Sorry. Okay. Have you done functions before? Uh, uh, uh, uh. Yeah. I think so. I'm vaguely pretty sure I have. Okay. Have you done them with the keyword function or what's called an arrow function? Keyword function. Let's go with that then. So let's type in function. Then get some parentheses
Sorry. Okay. Have you done functions before? Uh, uh, uh, uh. Yeah. I think so. I'm vaguely pretty sure I have. Okay. Have you done them with the keyword function or what's called an arrow function? Keyword function. Let's go with that then. So let's type in function. Then get some parentheses And, uh, actually, we'll skip the parenthesis. So we'll go outside of the parenthesis, the, that first parenthesis. Yeah. And have put in a space. And now we're going to write the inside of that function, which is done with curly brackets. So great. You've got some curly's there and now hit enter
And, uh, actually, we'll skip the parenthesis. So we'll go outside of the parenthesis, the, that first parenthesis. Yeah. And have put in a space. And now we're going to write the inside of that function, which is done with curly brackets. So great. You've got some curly's there and now hit enter So now we're typing in that function. So how about we say, um, let's, let's do a console log. And we're going to console out saying now this is going to be what the user, well, what the developer will see once they've started up their app. So let's say, um, first
So now we're typing in that function. So how about we say, um, let's, let's do a console log. And we're going to console out saying now this is going to be what the user, well, what the developer will see once they've started up their app. So let's say, um, first So it's a Prax mixed in and opponents import. 3334. Don't forget. It's a string. So it needs code marks. Cool. And really quick, a string. Is that just saying, because it's like text that you see. So it's a story that's related, I promise
So it's a Prax mixed in and opponents import. 3334. Don't forget. It's a string. So it needs code marks. Cool. And really quick, a string. Is that just saying, because it's like text that you see. So it's a story that's related, I promise When I was, so I studied in university here in Austria and the German word for a string is saïnkete, which translates directly to English as character chain, right? Because a piece of text in this context is a string of characters
When I was, so I studied in university here in Austria and the German word for a string is saïnkete, which translates directly to English as character chain, right? Because a piece of text in this context is a string of characters Like everything between the quote marks is just text to be used as is. It's never to be interpreted as code. Okay. It's just like, yeah, does that make sense? Yeah, yeah, that, yes. Okay. Exactly. So that's what I suspect the etymology is
Like everything between the quote marks is just text to be used as is. It's never to be interpreted as code. Okay. It's just like, yeah, does that make sense? Yeah, yeah, that, yes. Okay. Exactly. So that's what I suspect the etymology is And I know German gets bad rap for having complicated words, but I gotta give credit to it. Saïnkete is, I mean, it's long, but it's descriptive, I like it. So yes, so we're printing out the string, listening to port 3334
And I know German gets bad rap for having complicated words, but I gotta give credit to it. Saïnkete is, I mean, it's long, but it's descriptive, I like it. So yes, so we're printing out the string, listening to port 3334 So what we've done here in line three is we're telling our express app, hey, just listen on this port, that is, just always be running, waiting for this port to get a connection. And once it's started up, call this function
So what we've done here in line three is we're telling our express app, hey, just listen on this port, that is, just always be running, waiting for this port to get a connection. And once it's started up, call this function So once the app is ready to start listening, it'll call this function, hey, console log listening to port 3334. Okay. Let's help on the terminal and run this and see what's going on. Ooh
So once the app is ready to start listening, it'll call this function, hey, console log listening to port 3334. Okay. Let's help on the terminal and run this and see what's going on. Ooh Ooh. HGC says, and it's just arbitrary versus like numbers which computer know our numbers and can do math with those. That makes sense. Okay. Cool. So you've run nodeapp.js and you can see listening to port 3334, but also you can't enter any commands right now. Because it's still listening. Yes
Ooh. HGC says, and it's just arbitrary versus like numbers which computer know our numbers and can do math with those. That makes sense. Okay. Cool. So you've run nodeapp.js and you can see listening to port 3334, but also you can't enter any commands right now. Because it's still listening. Yes Yes. So I would have to do the control C. Correct. So what's going on here? Our app is running and it's essentially turned itself into a server. And when you think of servers, you think of like big room full of computers that are like, you know, super tall and wall to wall
Yes. So I would have to do the control C. Correct. So what's going on here? Our app is running and it's essentially turned itself into a server. And when you think of servers, you think of like big room full of computers that are like, you know, super tall and wall to wall But really, I like to think of a server as a program that runs on your computer that all it does is wait for this wait for what are called requests. Right. And you probably remember this from your rest from your from your API meetups. Right
But really, I like to think of a server as a program that runs on your computer that all it does is wait for this wait for what are called requests. Right. And you probably remember this from your rest from your from your API meetups. Right Right. Where a server is just it just sits there and patiently waits. Yeah. Just wait to get together to get some kind of request. Usually these are done as HTTP requests. You've probably heard of those. Yes
Right. Where a server is just it just sits there and patiently waits. Yeah. Just wait to get together to get some kind of request. Usually these are done as HTTP requests. You've probably heard of those. Yes Yes. And that is something that I one day totally want to go into our protocols because I get that so mixed up with my time at go daddy. Yeah. It's very confusing. Yeah. No, and I mean, it's it's a lot. So yeah, this this server is currently running and waiting for requests. Okay
Yes. And that is something that I one day totally want to go into our protocols because I get that so mixed up with my time at go daddy. Yeah. It's very confusing. Yeah. No, and I mean, it's it's a lot. So yeah, this this server is currently running and waiting for requests. Okay Okay. But actually, I don't know what's going to happen. Let's let's do something. Let's let's run the program again. Okay, I'm writing notes too. Oh, yeah, remember. So now we've got a backend running. This is this is when you put your express app on a server
Okay. But actually, I don't know what's going to happen. Let's let's do something. Let's let's run the program again. Okay, I'm writing notes too. Oh, yeah, remember. So now we've got a backend running. This is this is when you put your express app on a server Sorry, when you put your express app into what's called production that it's it's live to the public. It is essentially doing this. It's just running and being like, all right, like twiddling it's thumbs waiting. Right. So now we can actually we've defined we've got a server running
Sorry, when you put your express app into what's called production that it's it's live to the public. It is essentially doing this. It's just running and being like, all right, like twiddling it's thumbs waiting. Right. So now we can actually we've defined we've got a server running We can actually interact with it. Let's go to the browser. Should I go live from BS code or just a regular browser? No, I meant a browser. Yeah. Exactly. Exactly
We can actually interact with it. Let's go to the browser. Should I go live from BS code or just a regular browser? No, I meant a browser. Yeah. Exactly. Exactly Exactly. Exactly. So you remember from the last stream, you know, you could access a server running locally on your computer with local host, colon the port number. We can do the same here
Exactly. Exactly. So you remember from the last stream, you know, you could access a server running locally on your computer with local host, colon the port number. We can do the same here Oh, can can we just like notice that part of my past Google's have been time in Austria? Because it's it's I always have to Google what time zone everybody's in. All right. So cool. And it's going to be cool. Cool. Now, we've got an error cannot get forward slash
Oh, can can we just like notice that part of my past Google's have been time in Austria? Because it's it's I always have to Google what time zone everybody's in. All right. So cool. And it's going to be cool. Cool. Now, we've got an error cannot get forward slash That's because our server is listening, but it doesn't know how to respond yet. Okay. Does that make sense? Yes. So what we're going to do next is tell it how to respond. But let's try something else just yet. Let's turn off our server. Let's turn off by control C
That's because our server is listening, but it doesn't know how to respond yet. Okay. Does that make sense? Yes. So what we're going to do next is tell it how to respond. But let's try something else just yet. Let's turn off our server. Let's turn off by control C And let's go and refresh our browser and see what we see instead. Local host refused to connect. A G Z says, did you try turning it off and on again? We're going to be doing that shortly. Cool. So yeah, exactly. So this site can be reached. Local host refused to connect. There's no server running
And let's go and refresh our browser and see what we see instead. Local host refused to connect. A G Z says, did you try turning it off and on again? We're going to be doing that shortly. Cool. So yeah, exactly. So this site can be reached. Local host refused to connect. There's no server running Right. Because it's not listening to anything. Exactly. Okay. So what we're going to do next is tell it, hey, when you get a request at this path, this is how you'll respond. So let's do that. Just create a new line between lines two and three. And we're going to define what's called a route
Right. Because it's not listening to anything. Exactly. Okay. So what we're going to do next is tell it, hey, when you get a request at this path, this is how you'll respond. So let's do that. Just create a new line between lines two and three. And we're going to define what's called a route Right. So go app. Dot get. So and it'll take two per parameters. Yes, parameters. So when we say it takes parameters, first we take, we put in our parentheses. And then it is a string, yeah. And the string is going to be the location where we'll be connecting to the right
Right. So go app. Dot get. So and it'll take two per parameters. Yes, parameters. So when we say it takes parameters, first we take, we put in our parentheses. And then it is a string, yeah. And the string is going to be the location where we'll be connecting to the right And I don't know if like I don't know if you know when you connect to a server and you just go local host 3334 for example, it connects to what's called the root route. And that root is denoted to a computer as a forward slash
And I don't know if like I don't know if you know when you connect to a server and you just go local host 3334 for example, it connects to what's called the root route. And that root is denoted to a computer as a forward slash So if you put in a forward slash here, we're saying, hey, when you, when this, when somebody connects to this app with the forward slash, that will be, that'll, that'll, that'll be the root route. So I'm good. Yes. You can also think of it like a website. Yes
So if you put in a forward slash here, we're saying, hey, when you, when this, when somebody connects to this app with the forward slash, that will be, that'll, that'll, that'll be the root route. So I'm good. Yes. You can also think of it like a website. Yes Yes. Kind of thinking of it like just as like a go daddy comparison is on like C panel was the backslash was always the root folder. Right. So yeah, yeah, period like that. Cool. Yeah
Yes. Kind of thinking of it like just as like a go daddy comparison is on like C panel was the backslash was always the root folder. Right. So yeah, yeah, period like that. Cool. Yeah Cool. Yeah. So when we go to local host 3000, then we're going to tell it all right, when that happens, our second parameter after the string is going to be how we respond. And that's going to be a call back as well. So after the string, let's put in a comma. Okay
Cool. Yeah. So when we go to local host 3000, then we're going to tell it all right, when that happens, our second parameter after the string is going to be how we respond. And that's going to be a call back as well. So after the string, let's put in a comma. Okay Okay. After the string, not after the parentheses. You're good. So after the string, let's put in a space. And we're going to define the comma space. Comma space. Yeah
Okay. After the string, not after the parentheses. You're good. So after the string, let's put in a space. And we're going to define the comma space. Comma space. Yeah Comma space. Yeah. We're going to define a call back, right, which is a function that gets called automatically when the server gets request hit with this route. And it'll be just like in line five. So we'll define a call back function. So is it app? It wouldn't have app.listen
Comma space. Yeah. We're going to define a call back, right, which is a function that gets called automatically when the server gets request hit with this route. And it'll be just like in line five. So we'll define a call back function. So is it app? It wouldn't have app.listenlisten. It'll just be a function, right? Yeah, it'll be function exactly. And so one tiny difference, well, one difference here is that this function actually does take arguments. By the way, I think in the function is missing the first n. Oh, that would help. Thanks. Cool
listen. It'll just be a function, right? Yeah, it'll be function exactly. And so one tiny difference, well, one difference here is that this function actually does take arguments. By the way, I think in the function is missing the first n. Oh, that would help. Thanks. Cool Thanks. Cool. This is, I am very, very grateful that I'm starting to hear that there are more dyslexic coders that I ever thought was out there because this has been a big reason I've never wanted to get into it because I'm like, I miss entire words at times
Thanks. Cool. This is, I am very, very grateful that I'm starting to hear that there are more dyslexic coders that I ever thought was out there because this has been a big reason I've never wanted to get into it because I'm like, I miss entire words at times And and and a lot of program interpreters do could do a better job. Could do a better job at explaining those errors. You know what I mean? Yeah. Like, there's a programming language called rust that I find does a pretty good job of being like, Hey, you typed in this
And and and a lot of program interpreters do could do a better job. Could do a better job at explaining those errors. You know what I mean? Yeah. Like, there's a programming language called rust that I find does a pretty good job of being like, Hey, you typed in this Did you mean that? And I very much appreciate that. This is not just, it's also, it's also for folks who are for whom English is not their set for a language. Yeah
Did you mean that? And I very much appreciate that. This is not just, it's also, it's also for folks who are for whom English is not their set for a language. Yeah Yeah. Like that becomes a, you know, like the num, the amount of time that I have lost to trying to tell CSS that I'm sorry, I meant color without the you in it. Yeah. A lot of things. And an AJC, I will eventually listen to your podcast
Yeah. Like that becomes a, you know, like the num, the amount of time that I have lost to trying to tell CSS that I'm sorry, I meant color without the you in it. Yeah. A lot of things. And an AJC, I will eventually listen to your podcast I think between doing like these, these teach Gen Tech lives and now I'm going to be doing them every day on, like just even doing my homework. Same time almost every day that I'm like, I don't know if I can consume more knowledge of it because it's like so hard and exciting. Yeah. That's awesome
I think between doing like these, these teach Gen Tech lives and now I'm going to be doing them every day on, like just even doing my homework. Same time almost every day that I'm like, I don't know if I can consume more knowledge of it because it's like so hard and exciting. Yeah. That's awesome That's awesome. Oh, do please. What's a podcast call that looked to maybe we can like put the URL here or something. Yes. But what we do that, yeah. So our function now takes two arguments, right? So the first one is called. What is the first one called? Oh, nice. We have it. FSjam.org. FSjam.org
That's awesome. Oh, do please. What's a podcast call that looked to maybe we can like put the URL here or something. Yes. But what we do that, yeah. So our function now takes two arguments, right? So the first one is called. What is the first one called? Oh, nice. We have it. FSjam.org. FSjam.orgorg. FSjam.org. Full stack, jam stack. Cool. Thank you. I'm going to leave that there for a few. Yeah. That's awesome. Yeah. So this one takes two arguments. The first one is called request. We can give it any name we want. We're going to call it request
org. FSjam.org. Full stack, jam stack. Cool. Thank you. I'm going to leave that there for a few. Yeah. That's awesome. Yeah. So this one takes two arguments. The first one is called request. We can give it any name we want. We're going to call it request And the second one with a comma, so comma space is going to be response. So you see after that, we've got two, two closing parentheses between them. Let's put in our curly brackets. So another opening curly bracket. That's right. Try. Give it an enter so we can get some space to write some code
And the second one with a comma, so comma space is going to be response. So you see after that, we've got two, two closing parentheses between them. Let's put in our curly brackets. So another opening curly bracket. That's right. Try. Give it an enter so we can get some space to write some code Cool. So let's. So this function here is going to be called when we try to access the forward slash, which you remember is the root route. So it's actually going to get called when you take your browser to local host, 3, 3, 4. Okay. Sounds good so far? Yes. So let's actually respond
Cool. So let's. So this function here is going to be called when we try to access the forward slash, which you remember is the root route. So it's actually going to get called when you take your browser to local host, 3, 3, 4. Okay. Sounds good so far? Yes. So let's actually respond And what we can do is take that response argument. So into line 4, we can type in response dot. We're going to call the function send. And in parentheses, we're going to send in whatever data we want to send back because a server receives a request and responds with a response. Right
And what we can do is take that response argument. So into line 4, we can type in response dot. We're going to call the function send. And in parentheses, we're going to send in whatever data we want to send back because a server receives a request and responds with a response. Right Right. Can we put a string here? Let's put a string. I need to learn how to type on this keyboard. I'm also not used to using an external keyboard. I'm always on my laptop. Yeah. And I'm like, I need to get used to this. Okay. Hmm. Perfect. So. Let's save. And let's run our server again
Right. Can we put a string here? Let's put a string. I need to learn how to type on this keyboard. I'm also not used to using an external keyboard. I'm always on my laptop. Yeah. And I'm like, I need to get used to this. Okay. Hmm. Perfect. So. Let's save. And let's run our server again So you can see listening to port 3, 3, 3, 4. So if we come back to our browser and access that, see what happens. Yay. So what happened? The server said, hey, I got this request at the root route. And I will respond with this text, which is BRB someday
So you can see listening to port 3, 3, 3, 4. So if we come back to our browser and access that, see what happens. Yay. So what happened? The server said, hey, I got this request at the root route. And I will respond with this text, which is BRB someday So then the browser says, hey, I got this text. When I get text, I usually just render it as is in the browser. Okay. Let's try something. Let's, um, let's change someday to tomorrow. And let's refresh that. And let's refresh our browser. Now you'll notice it's does, it still says BRB someday
So then the browser says, hey, I got this text. When I get text, I usually just render it as is in the browser. Okay. Let's try something. Let's, um, let's change someday to tomorrow. And let's refresh that. And let's refresh our browser. Now you'll notice it's does, it still says BRB someday That's because, uh, we did change our server, but the code that's being run is the old one. So I have to close the server. We've started the server. Okay. So let's try something else real quick before we start it up again
That's because, uh, we did change our server, but the code that's being run is the old one. So I have to close the server. We've started the server. Okay. So let's try something else real quick before we start it up again Since we're just sending text, what happens if we make that response into some HTML? I was actually going to ask that if we could like add a header. So it actually looks bigger. We totally can
Since we're just sending text, what happens if we make that response into some HTML? I was actually going to ask that if we could like add a header. So it actually looks bigger. We totally can We totally can. So do you know how, do you know how to do that offhand? I can tell you that Yere first showed me how to do that kind of thing and like a lesson day one. Nice. It exists it. I don't remember how. Totally cool. I mean, that's, that's how we learn
We totally can. So do you know how, do you know how to do that offhand? I can tell you that Yere first showed me how to do that kind of thing and like a lesson day one. Nice. It exists it. I don't remember how. Totally cool. I mean, that's, that's how we learn Um, so before the BRB inside the string, before the BRB, we'll open a less than HTML tag. Oh, it's that easy because AJC is cheating. Sorry, just a sec. It's after the quote mark. Okay. Because the HTML needs to be part of that content we're responding with. So H1. Yeah. And then after tomorrow
Um, so before the BRB inside the string, before the BRB, we'll open a less than HTML tag. Oh, it's that easy because AJC is cheating. Sorry, just a sec. It's after the quote mark. Okay. Because the HTML needs to be part of that content we're responding with. So H1. Yeah. And then after tomorrow Yeah. And that's it. Save that and run it. Yeah. Not bad. Not bad. Yeah. I wanted. So just as a refresher from my first lesson. If we want to change color or anything that you have to do in CSS. Which. Yes. Which you can technically. Right. What's called in line. Let's not do that right now
Yeah. And that's it. Save that and run it. Yeah. Not bad. Not bad. Yeah. I wanted. So just as a refresher from my first lesson. If we want to change color or anything that you have to do in CSS. Which. Yes. Which you can technically. Right. What's called in line. Let's not do that right now I just wanted to. Don't check that that was a possibility. Yeah. Yeah. No, you can, you can totally. And, and honestly, what we've just done now is how. And I'm going to sound really really, I'm very likely wrong. But a vast majority of what browsers interact with servers do is this
I just wanted to. Don't check that that was a possibility. Yeah. Yeah. No, you can, you can totally. And, and honestly, what we've just done now is how. And I'm going to sound really really, I'm very likely wrong. But a vast majority of what browsers interact with servers do is this What we just done. When you go to say Twitter.com. They've got their own little. Maybe it's not express. I think it's go. I could be wrong. Um, they've got their own little server that's like, oh, somebody's like. Like getting a whole bunch of like they gather up a whole bunch of data
What we just done. When you go to say Twitter.com. They've got their own little. Maybe it's not express. I think it's go. I could be wrong. Um, they've got their own little server that's like, oh, somebody's like. Like getting a whole bunch of like they gather up a whole bunch of data And they respond with some HTML, which we just did some CSS and some JavaScript. It responds to the browser and the browser is like, I gotcha. And then it renders it accordingly. Okay. This is a big, big, big part of how the internet works. Mind you. Mind you
And they respond with some HTML, which we just did some CSS and some JavaScript. It responds to the browser and the browser is like, I gotcha. And then it renders it accordingly. Okay. This is a big, big, big part of how the internet works. Mind you. Mind you Mind you. Mind you. So, you know, like, I'm going to say, this is, you might be thinking, well, this is fairly rudimentary. And I thought we were building an API. Let's. Let's do something a little more. Um, sophisticated now. Okay
Mind you. Mind you. So, you know, like, I'm going to say, this is, you might be thinking, well, this is fairly rudimentary. And I thought we were building an API. Let's. Let's do something a little more. Um, sophisticated now. Okay Okay. Now, I don't think we have time to start interacting with a database per say. Do we want to talk about what databases are? Yeah, let's just like mention what a database is. I can. I don't know, I can mention a database
Okay. Now, I don't think we have time to start interacting with a database per say. Do we want to talk about what databases are? Yeah, let's just like mention what a database is. I can. I don't know, I can mention a database Um, what I remember I go daddy and I would love for you to break it down from there. But is. And my head a database is kind of like just excel on steroids where it's a bunch of tables that get
Um, what I remember I go daddy and I would love for you to break it down from there. But is. And my head a database is kind of like just excel on steroids where it's a bunch of tables that get But it's like basically where it's a table where if you take a look at like let's say X Will equal whatever the input for line 4 is the column I don't know if that actually made any sense out loud, but it did in my head No, I think that's I think that's I think that's that's I think that's a good that's a good part of what a database is It's like I would I would say it's a program that Sores data It's got two frozen columns
But it's like basically where it's a table where if you take a look at like let's say X Will equal whatever the input for line 4 is the column I don't know if that actually made any sense out loud, but it did in my head No, I think that's I think that's I think that's that's I think that's a good that's a good part of what a database is It's like I would I would say it's a program that Sores data It's got two frozen columns Okay Yeah, it like The pedant in me it's gonna be say it's not always Rosen columns, but most of the time is Rosen columns What is so like just to get clarification here
Okay Yeah, it like The pedant in me it's gonna be say it's not always Rosen columns, but most of the time is Rosen columns What is so like just to get clarification here So like I can conceptualize what a database is yet What is my SQL because that comes up a lot as well MySQL is a type of database that stores Data in tables As AJC says it's relational because tables can be related to one another a user will have Say let's say we have a user table which will be up of rows one row per user and columns Different types of data for that user name last name Adress data birth email address password Stored encrypted of course
So like I can conceptualize what a database is yet What is my SQL because that comes up a lot as well MySQL is a type of database that stores Data in tables As AJC says it's relational because tables can be related to one another a user will have Say let's say we have a user table which will be up of rows one row per user and columns Different types of data for that user name last name Adress data birth email address password Stored encrypted of course Yeah, that sort of thing an order will be a different table, right? We'll be like I don't know product data purchase. So just to get like a visual on it for those visual So it would be like Ramam and it could be like job title
Yeah, that sort of thing an order will be a different table, right? We'll be like I don't know product data purchase. So just to get like a visual on it for those visual So it would be like Ramam and it could be like job title Yeah Adress and that's like a basic Database yeah, right and then my SQL is We'll just be able to find it if there's different sheets Because like we may not want to do job title on the sheet because there's different layers within job title Or like job title would be its own different like sheet
Yeah Adress and that's like a basic Database yeah, right and then my SQL is We'll just be able to find it if there's different sheets Because like we may not want to do job title on the sheet because there's different layers within job title Or like job title would be its own different like sheet Yeah, okay So my SQL is a program that that stores these tables in their in its own way So it wouldn't it wouldn't really interact with wouldn't wouldn't really interact with Excel SQL is my SQL pardon me is is Excel in a way. Yeah, I was just using this as an example
Yeah, okay So my SQL is a program that that stores these tables in their in its own way So it wouldn't it wouldn't really interact with wouldn't wouldn't really interact with Excel SQL is my SQL pardon me is is Excel in a way. Yeah, I was just using this as an example Yeah, you it So usually your backend will interact if you're storing data you will interact with a database But because we are lazy developers and we're short on time we will store our data What's the word as long as our program is running? Okay, yeah, yeah So This is for the sake of exercise
Yeah, you it So usually your backend will interact if you're storing data you will interact with a database But because we are lazy developers and we're short on time we will store our data What's the word as long as our program is running? Okay, yeah, yeah So This is for the sake of exercise It's not it's not let's say the best way to to Temporarily what's the opposite of I would say we could always Pause it and come back to this point totally because I feel like we've covered quite a bit today and sure I know my homework later this week is going to be just getting to this point again and I personally would love to have you on the show again and then we could just have for databases Yeah, totally totally so I'm then I apologize that we didn't get to do the rest part of the API the rest of the rest API It's a lot to break down
It's not it's not let's say the best way to to Temporarily what's the opposite of I would say we could always Pause it and come back to this point totally because I feel like we've covered quite a bit today and sure I know my homework later this week is going to be just getting to this point again and I personally would love to have you on the show again and then we could just have for databases Yeah, totally totally so I'm then I apologize that we didn't get to do the rest part of the API the rest of the rest API It's a lot to break down I think this is a Really really this is the cool thing about like breaking down tech to newbies is you start to find out how many layers it is to doing this one thing to be able to understand it totally And yeah, we can come back to it and yes, AJC I do want a copy and paste, but I'm trying to learn it to like what things actually do so like I don't want to do that Yes, I will say though something that I really really want to thank you for a remote is you were Saying the word on what we were going through so that way I was learning what it does a lot better So you would like say hey, we're gonna do a function So I would have to like try to remember what a function is and then like how to type it out I'm a big fan of I'm a big fan of learning by doing So I really really appreciated it
I think this is a Really really this is the cool thing about like breaking down tech to newbies is you start to find out how many layers it is to doing this one thing to be able to understand it totally And yeah, we can come back to it and yes, AJC I do want a copy and paste, but I'm trying to learn it to like what things actually do so like I don't want to do that Yes, I will say though something that I really really want to thank you for a remote is you were Saying the word on what we were going through so that way I was learning what it does a lot better So you would like say hey, we're gonna do a function So I would have to like try to remember what a function is and then like how to type it out I'm a big fan of I'm a big fan of learning by doing So I really really appreciated it I mean, I'm down if you have more time to do databases But I know it's getting late there so I don't want to like force you to do anything We can I you know, I think I think getting our Hello world that we've done just now our hello world of back end is A good stopping point also like because if we were to continue now we might have to like stop at a let's say less convenient point So If you'll have me I'd love to come back Okay, well, I just said that you'll be back sometime in the next month works for me So liitified on stream now I can't take it back
I mean, I'm down if you have more time to do databases But I know it's getting late there so I don't want to like force you to do anything We can I you know, I think I think getting our Hello world that we've done just now our hello world of back end is A good stopping point also like because if we were to continue now we might have to like stop at a let's say less convenient point So If you'll have me I'd love to come back Okay, well, I just said that you'll be back sometime in the next month works for me So liitified on stream now I can't take it back No, that sounds great. Let's see if I got this refreshing with Yeah Wonderful because there's there's one last part to what we've just done That I wanted to cover with you that I didn't really get to and that is online three we said app
No, that sounds great. Let's see if I got this refreshing with Yeah Wonderful because there's there's one last part to what we've just done That I wanted to cover with you that I didn't really get to and that is online three we said appget okay And this is what's called an HTTP method I think there's five of them There's get there's post there's put there's patch and there's delete Where does the I feel like I've also heard of pull I think get with get you pull Okay, got it
get okay And this is what's called an HTTP method I think there's five of them There's get there's post there's put there's patch and there's delete Where does the I feel like I've also heard of pull I think get with get you pull Okay, got it Yeah AJC says those are the most common ones see there's more than that But yeah, so and express lets you define How to respond not just to the path to the route but also to the method Right I was giving the funny face to what AJC said because I'm like there's more there's more
Yeah AJC says those are the most common ones see there's more than that But yeah, so and express lets you define How to respond not just to the path to the route but also to the method Right I was giving the funny face to what AJC said because I'm like there's more there's more Oh, yeah Be more there's all there is more options in that I think are related to Cross origin something something Course The mass zilla let's see if I can actually copy oh MDN It's the great resource Um, oh yeah, so there's more but the the ones that you'll be interacting with the most are get put patch Get put patch Post and delete Yeah, and these are a standard that web apps conform to so what a browser does When you say go to local host 3000 it's actually saying hey, I want the forward slash but It's also saying I'm doing a get request for the forward slash Wait, why can you repeat that one one time sure sure sure when you go to a website your browser sends a get request to the server Okay, and so we've defined how our server will respond to a get request in this route right But when for example you're in a browser and you submit a form That Sometimes takes you to another website sometimes doesn't you've seen that right like when you post a tweet You don't go to a new website you just right who just shows up This is called a post request Okay, so we're sending that request to the server so it's kind of weird because you're sending You're posting a request that that That's why I'm kind of like giving you a funny face
Oh, yeah Be more there's all there is more options in that I think are related to Cross origin something something Course The mass zilla let's see if I can actually copy oh MDN It's the great resource Um, oh yeah, so there's more but the the ones that you'll be interacting with the most are get put patch Get put patch Post and delete Yeah, and these are a standard that web apps conform to so what a browser does When you say go to local host 3000 it's actually saying hey, I want the forward slash but It's also saying I'm doing a get request for the forward slash Wait, why can you repeat that one one time sure sure sure when you go to a website your browser sends a get request to the server Okay, and so we've defined how our server will respond to a get request in this route right But when for example you're in a browser and you submit a form That Sometimes takes you to another website sometimes doesn't you've seen that right like when you post a tweet You don't go to a new website you just right who just shows up This is called a post request Okay, so we're sending that request to the server so it's kind of weird because you're sending You're posting a request that that That's why I'm kind of like giving you a funny face I'm like, yeah, no, you're good because it's confusing um Yeah, so you're sending you're sending a post request Okay, when you're editing a tweet for example, I know you can't edit tweets, but let's let's go with that for now When you're editing a tweet you're sending a put or patch request You're telling the server hey, I want to update this Okay If you delete a tweet then you're sending a delete request All of that makes sense other than it's going to take me a while to Get used to a you said a Put request no, yeah, yeah, that's gonna just I gotta wrap my like I get what you're saying, but the words I'm like Okay, it's weird
I'm like, yeah, no, you're good because it's confusing um Yeah, so you're sending you're sending a post request Okay, when you're editing a tweet for example, I know you can't edit tweets, but let's let's go with that for now When you're editing a tweet you're sending a put or patch request You're telling the server hey, I want to update this Okay If you delete a tweet then you're sending a delete request All of that makes sense other than it's going to take me a while to Get used to a you said a Put request no, yeah, yeah, that's gonna just I gotta wrap my like I get what you're saying, but the words I'm like Okay, it's weird It's super weird But all you want to know is get is for asking for data post is for sending data Got it And we're gonna when we get to the database next time We will we've defined now how to get our our our stuff, but then we're going to be Finding out how to send data to our server and um As agency correctly says We're dealing with something called crud Which is short for create read update and delete Okay It's a lot Yes, yes it is Well, we'll we'll get back to it um and we can just we can just cover Whatever we need covering next time And this is like something that I I really enjoy And For all the beautiful humans that are watching these streams or watching them, you know Um as you're going through your journey later on Sometimes just finding even if it's on Twitter uh or in Stack overflow or there's so many different resources read it that you can ask these questions that Just being able to connect the two dots like Ramon I ask you questions so I could compare it to go daddy or to an excel sheet or something that I'm familiar with So that way I can build upon or change what I've already learned and sometimes doing that of just doing um Coding by yourself that can be very difficult
It's super weird But all you want to know is get is for asking for data post is for sending data Got it And we're gonna when we get to the database next time We will we've defined now how to get our our our stuff, but then we're going to be Finding out how to send data to our server and um As agency correctly says We're dealing with something called crud Which is short for create read update and delete Okay It's a lot Yes, yes it is Well, we'll we'll get back to it um and we can just we can just cover Whatever we need covering next time And this is like something that I I really enjoy And For all the beautiful humans that are watching these streams or watching them, you know Um as you're going through your journey later on Sometimes just finding even if it's on Twitter uh or in Stack overflow or there's so many different resources read it that you can ask these questions that Just being able to connect the two dots like Ramon I ask you questions so I could compare it to go daddy or to an excel sheet or something that I'm familiar with So that way I can build upon or change what I've already learned and sometimes doing that of just doing um Coding by yourself that can be very difficult So Please comment on these please reach out to all of us. This is how we're all gonna learn is by Teaching and learning together Absolutely learning is modular We built we built connections between the different modules modules of knowledge we have in our heads Yes Yes, all right
So Please comment on these please reach out to all of us. This is how we're all gonna learn is by Teaching and learning together Absolutely learning is modular We built we built connections between the different modules modules of knowledge we have in our heads Yes Yes, all right Is there anything else you want to cover
Is there anything else you want to cover Uh, I think this is a fantastic stopping point for now Okay, let me let me reverse the question and ask is there something we covered that maybe you want to just cover one more time Oh Let me I'm actually gonna use my terminal for my recap Uh I actually wrote down notes uh change directory Cool I believe you can create a folder from Terminal as well
Uh, I think this is a fantastic stopping point for now Okay, let me let me reverse the question and ask is there something we covered that maybe you want to just cover one more time Oh Let me I'm actually gonna use my terminal for my recap Uh I actually wrote down notes uh change directory Cool I believe you can create a folder from Terminal as well You don't have to use an existing one Yes, you can type in the command mkdir Make it to rk All right, well, I'll write that one down at some point and then we looked up node, but we didn't use that so um We used node to run our app
You don't have to use an existing one Yes, you can type in the command mkdir Make it to rk All right, well, I'll write that one down at some point and then we looked up node, but we didn't use that so um We used node to run our appjs file Okay, yes, I think okay, and then we used it to install the Package and we used express Okay, and then that's where we named it and we confirmed it Yeah, yeah, I think I have a handle on it Yet it's definitely going to be something that is going to take practice You're not alone Jen any questions you have You know you can always DM me Thank you, and so Oh wow That uh a jc just said maybe I need to have the two of you on at the same time to do that We'll just keep inviting the the uh you both on and yarray because he was great as well of uh a jc just said I'd be totally out for that If you connect my the react front end and the xppi you would have full stack application And that's that's where this all just come together This by the way is called uh full stack development Okay, uh well my homework later this week is to still do my homework from last week I had a horrible migraine that it just didn't happen And also do this so for all of those who want to tune in to me doing live homework I'll be doing that on Wednesday, Thursday and Friday around this time and Okay, so apparently we'll do that a jc we'll do You know Ramon will come on again and then we'll have the two of you on together
js file Okay, yes, I think okay, and then we used it to install the Package and we used express Okay, and then that's where we named it and we confirmed it Yeah, yeah, I think I have a handle on it Yet it's definitely going to be something that is going to take practice You're not alone Jen any questions you have You know you can always DM me Thank you, and so Oh wow That uh a jc just said maybe I need to have the two of you on at the same time to do that We'll just keep inviting the the uh you both on and yarray because he was great as well of uh a jc just said I'd be totally out for that If you connect my the react front end and the xppi you would have full stack application And that's that's where this all just come together This by the way is called uh full stack development Okay, uh well my homework later this week is to still do my homework from last week I had a horrible migraine that it just didn't happen And also do this so for all of those who want to tune in to me doing live homework I'll be doing that on Wednesday, Thursday and Friday around this time and Okay, so apparently we'll do that a jc we'll do You know Ramon will come on again and then we'll have the two of you on together We'll get there. We will get there It's additive And thank you again and just so that everybody knows if you want to reach out to Ramon it is Ola underscore soy underscore milk it is uh in yeah so bad at this Yeah, I like it. I like it and My let's see if I can do it. I'm like on different here
We'll get there. We will get there It's additive And thank you again and just so that everybody knows if you want to reach out to Ramon it is Ola underscore soy underscore milk it is uh in yeah so bad at this Yeah, I like it. I like it and My let's see if I can do it. I'm like on different here There we go. Yeah You Other than when I was typing and using this mic so Thank you everyone for joining please comment on the youtube if you have questions or on twitter or unlinked in And you will answer them another time. Thank you all I
There we go. Yeah You Other than when I was typing and using this mic so Thank you everyone for joining please comment on the youtube if you have questions or on twitter or unlinked in And you will answer them another time. Thank you all I