to another episode of Teach Gen Tech. And today we have Roy coming on the show. And I can tell you this is because I thought something finally clicked and it really didn't. And luckily Roy offered to come hang out And before I have Roy talk about everything that we're doing, I do want to say that I met Roy from being part of the open source raid guild. Y'all know that I talked about D&D enough
And before I have Roy talk about everything that we're doing, I do want to say that I met Roy from being part of the open source raid guild. Y'all know that I talked about D&D enough And that Roy has our new, what are we, what are we calling you? Did you say game manager? Yeah, I mean you can call it the master tube. But usually if there's not vengeance, it's people call it game master. Like GM makes me think of like general manager. Well, I mean, that's what they are
And that Roy has our new, what are we, what are we calling you? Did you say game manager? Yeah, I mean you can call it the master tube. But usually if there's not vengeance, it's people call it game master. Like GM makes me think of like general manager. Well, I mean, that's what they are Right, that's master is the general manager, keeping everyone in line and like, setting the rules and making sure everyone does their job. This is true. This is true. And we just started, we're starting new game when I get back to town streaming more regularly called the expense
Right, that's master is the general manager, keeping everyone in line and like, setting the rules and making sure everyone does their job. This is true. This is true. And we just started, we're starting new game when I get back to town streaming more regularly called the expense And if nobody has watched the show, it's really cool. And come watch a stream on Sundays. But that's all for another day. Roy, who are you and what are we going to be learning about? Yeah, so obviously my name is Roy. I work in full stack development. I do react. Usually react on the front end
And if nobody has watched the show, it's really cool. And come watch a stream on Sundays. But that's all for another day. Roy, who are you and what are we going to be learning about? Yeah, so obviously my name is Roy. I work in full stack development. I do react. Usually react on the front end I've been doing solid. I even have my solid mug if anyone from the solid team is around it, cheering on. And on the back end, I usually do node I've been learning Go as well. So just build web apps with those languages and like the related technology
I've been doing solid. I even have my solid mug if anyone from the solid team is around it, cheering on. And on the back end, I usually do node I've been learning Go as well. So just build web apps with those languages and like the related technology And as Jen said, big fan of the expanse and running the expanse campaign. Not only if you haven't watched the show, I'd also say if you haven't read the books, the books are excellent. And they contain even more story than the shows. There's like another three seasons kind of deal
And as Jen said, big fan of the expanse and running the expanse campaign. Not only if you haven't watched the show, I'd also say if you haven't read the books, the books are excellent. And they contain even more story than the shows. There's like another three seasons kind of deal So lots and lots of stuff. I'm excited about reading the books once I'm done with the show because I feel like if I'm doing both, I'll get confused which one is which. Like the story lines will overlap too much. Yeah, for sure. I definitely recommend that
So lots and lots of stuff. I'm excited about reading the books once I'm done with the show because I feel like if I'm doing both, I'll get confused which one is which. Like the story lines will overlap too much. Yeah, for sure. I definitely recommend that Well, I'm very much looking forward to soon. I will be reading those instead. Yet
Well, I'm very much looking forward to soon. I will be reading those instead. Yet Yet. And what are we talking about today? Well, we're going to hopefully answer a bunch of your questions about hosting and how it works and what the differences are and maybe get some information to you and your listeners about what to choose depending on what the projects are. Yay
Yet. And what are we talking about today? Well, we're going to hopefully answer a bunch of your questions about hosting and how it works and what the differences are and maybe get some information to you and your listeners about what to choose depending on what the projects are. Yay Yay. And y'all, I am linking in the link to the tweet, to the Twitter, to the tweet about what I thought was accurate. But it's definitely not. Because I used to look at GoDaddy. And then when I worked at GoDaddy, it was like, there was regular, what I called regular hosting
Yay. And y'all, I am linking in the link to the tweet, to the Twitter, to the tweet about what I thought was accurate. But it's definitely not. Because I used to look at GoDaddy. And then when I worked at GoDaddy, it was like, there was regular, what I called regular hosting Because people would call in and be like, yo, I need to put my website somewhere. And we would say, cool, do you want to be able to customize it and do things? And they're like, no, I know nothing about it. I just want to be able to have a website
Because people would call in and be like, yo, I need to put my website somewhere. And we would say, cool, do you want to be able to customize it and do things? And they're like, no, I know nothing about it. I just want to be able to have a website We'd be like, great, here is a website filter, like Squarespace or Wix or something like that. And then after that, it was, you know, if they want to have a little more customization, it was like managed for press
We'd be like, great, here is a website filter, like Squarespace or Wix or something like that. And then after that, it was, you know, if they want to have a little more customization, it was like managed for press And you know, Mianner's WordPress could do a bit more FTP, but not like a ton more, there's a bit more customization. Or if they wanted all of these really cool stuff, they could go to see panel hosting, which was shared hosting. And so that's my hosting knowledge
And you know, Mianner's WordPress could do a bit more FTP, but not like a ton more, there's a bit more customization. Or if they wanted all of these really cool stuff, they could go to see panel hosting, which was shared hosting. And so that's my hosting knowledge And then there's the Versaille Netlify. And I'm just like, wait, what? You also technically host. And it's free. And I get a message of what? And this is where I got very confused. How does this work? Yeah, and there's a lot to all of that. So let's start with WordPress
And then there's the Versaille Netlify. And I'm just like, wait, what? You also technically host. And it's free. And I get a message of what? And this is where I got very confused. How does this work? Yeah, and there's a lot to all of that. So let's start with WordPress And let's start with, or not even WordPress, right? Let's start with GoDaddy. And let's start with kind of defining what a web page is the basic level, because we're going to be kind of like expanding on that as we go. So I guess a quick question for you, Jen
And let's start with, or not even WordPress, right? Let's start with GoDaddy. And let's start with kind of defining what a web page is the basic level, because we're going to be kind of like expanding on that as we go. So I guess a quick question for you, Jen What is the minimum thing you need to have an actual web page? Minimum thing. Yeah, file zill. Yeah, file zill is all you need. Yes. And I talked to many people through file zill. And SFTP and that kind of thing. I almost want to say HTML. You got it? You need an HTML file. Oh, good
What is the minimum thing you need to have an actual web page? Minimum thing. Yeah, file zill. Yeah, file zill is all you need. Yes. And I talked to many people through file zill. And SFTP and that kind of thing. I almost want to say HTML. You got it? You need an HTML file. Oh, good Oh, good. I was like, do you need a domain? And I was like, no, I don't think you technically need a domain. You can do a via an IP address. But that's the hostings I domain and the host. But a natural web page is just at the core is an HTML file
Oh, good. I was like, do you need a domain? And I was like, no, I don't think you technically need a domain. You can do a via an IP address. But that's the hostings I domain and the host. But a natural web page is just at the core is an HTML file Everything else is adding onto that, right? So you have CSS to make it look better, images that will provide visual content, or in some cases background images to make it look better. And then we add in other stuff like JavaScript on the client side or potentially the server side
Everything else is adding onto that, right? So you have CSS to make it look better, images that will provide visual content, or in some cases background images to make it look better. And then we add in other stuff like JavaScript on the client side or potentially the server side And then stuff like PHP, Ruby, Python on the server side, to allow us to have dynamic content of different types and different looks. So if we think about that with WordPress, WordPress is basically, well, it's not basically. It's all written in PHP. I don't think I ever knew that
And then stuff like PHP, Ruby, Python on the server side, to allow us to have dynamic content of different types and different looks. So if we think about that with WordPress, WordPress is basically, well, it's not basically. It's all written in PHP. I don't think I ever knew that That's all written in PHP? Yeah. I mean, the role that you were at at WordPress, yeah, it was probably one of those things where the people who knew it thought it was so obvious they wouldn't say it. And you didn't really need to know it. So you could do your job without really knowing it
That's all written in PHP? Yeah. I mean, the role that you were at at WordPress, yeah, it was probably one of those things where the people who knew it thought it was so obvious they wouldn't say it. And you didn't really need to know it. So you could do your job without really knowing it And it was the people who knew that they didn't bother saying it. And it's so crazy. And for more context of where I think there's so much confusion in this, I also helped with GoDaddy, a host scene, WordCamps, and doing WordPress-y things
And it was the people who knew that they didn't bother saying it. And it's so crazy. And for more context of where I think there's so much confusion in this, I also helped with GoDaddy, a host scene, WordCamps, and doing WordPress-y things So I kept seeing the consumer side of it, not what happened to build it, which, going into software development and coding itself is much more on the infrastructure side of what goes into building it. And that is a great call out on why I'm lost of, I don't even know it was PHP. That's cool
So I kept seeing the consumer side of it, not what happened to build it, which, going into software development and coding itself is much more on the infrastructure side of what goes into building it. And that is a great call out on why I'm lost of, I don't even know it was PHP. That's cool That's cool. Yeah, that's all good. Yeah, so it's written in PHP, like Python, like Ruby, and other languages. Every language with JavaScript is server-side rendered. So what that means is, instead of having an index
That's cool. Yeah, that's all good. Yeah, so it's written in PHP, like Python, like Ruby, and other languages. Every language with JavaScript is server-side rendered. So what that means is, instead of having an indexhtml file that you can just send directly to the client and the browser to load it, you have an index.php file. If I get sent directly to the browser, the browser's like, I don't know what to do with this, PHP, what's this stuff? So what happens is when you request that page, so like, teachjentek
html file that you can just send directly to the client and the browser to load it, you have an index.php file. If I get sent directly to the browser, the browser's like, I don't know what to do with this, PHP, what's this stuff? So what happens is when you request that page, so like, teachjentekcom or whatever, if that file on the server is an index.php file, the server will read it and it will have a module or support to execute the PHP code, do whatever the instructions are
com or whatever, if that file on the server is an index.php file, the server will read it and it will have a module or support to execute the PHP code, do whatever the instructions are Connect to a database or load information from a file or connect to a third party API and get information, whatever that is. And it'll execute all that and then it'll generate an HTML file and send the HTML file to the client. And then the client can display that. Hi, the moon
Connect to a database or load information from a file or connect to a third party API and get information, whatever that is. And it'll execute all that and then it'll generate an HTML file and send the HTML file to the client. And then the client can display that. Hi, the moon Hi, the moon. So just to make sure, because I really should just share my screen when I'm doing this, so that way people actually know, A, why I'm just staring down awkwardly at my computer and then are at my pay. Look, it says good at daddy. Yay
Hi, the moon. So just to make sure, because I really should just share my screen when I'm doing this, so that way people actually know, A, why I'm just staring down awkwardly at my computer and then are at my pay. Look, it says good at daddy. Yay Yay. So what you were saying is like, PHP goes into like a module that renders it into HTML. Is that what I heard? It's a module on the server. So I guess actually let me back up a little bit more. Any server is this generic term that can mean a lot of different things
Yay. So what you were saying is like, PHP goes into like a module that renders it into HTML. Is that what I heard? It's a module on the server. So I guess actually let me back up a little bit more. Any server is this generic term that can mean a lot of different things There's server like the hardware server, the actual computer that does stuff. But there can also be servers also used in the context of particular pieces of software
There's server like the hardware server, the actual computer that does stuff. But there can also be servers also used in the context of particular pieces of software For example, you have a website server or you have an email server, et cetera, right? So your hardware server that does web hosting will be running a web server software. When it comes to WordPress, traditionally, that was called Apache. Most places have moved over to something called an engine X
For example, you have a website server or you have an email server, et cetera, right? So your hardware server that does web hosting will be running a web server software. When it comes to WordPress, traditionally, that was called Apache. Most places have moved over to something called an engine X It doesn't really matter. But that software accepts requests, web-based requests. It looks at what file was requested, checks the C of that file's present on the server, and then will serve that file to the user. Now, serve depends on what exactly that file is
It doesn't really matter. But that software accepts requests, web-based requests. It looks at what file was requested, checks the C of that file's present on the server, and then will serve that file to the user. Now, serve depends on what exactly that file is If it's an HTML file, serve will just be sending it to the user. If it's an image or CSS file, same thing. It'll just send it to the user. If it's in this case a PHP file, that piece of web server software will first execute the PHP code and get the final result
If it's an HTML file, serve will just be sending it to the user. If it's an image or CSS file, same thing. It'll just send it to the user. If it's in this case a PHP file, that piece of web server software will first execute the PHP code and get the final result And then that final result will be an HTML file, and then send that HTML file to the user. I think that's also something that may have been very, very clear when I worked at GoDaddy, but looking back at it
And then that final result will be an HTML file, and then send that HTML file to the user. I think that's also something that may have been very, very clear when I worked at GoDaddy, but looking back at it And y'all, for context, I worked at GoDaddy in the email department and the hosting department as sales and support and team leadership for about five years. And so it's just funny to me because you said email server. And I'm like, yeah, OK. And you said hardware server. And I'm like, OK, cool
And y'all, for context, I worked at GoDaddy in the email department and the hosting department as sales and support and team leadership for about five years. And so it's just funny to me because you said email server. And I'm like, yeah, OK. And you said hardware server. And I'm like, OK, cool Totally get that. And then you said software server. And I'm like, wait, what? That's a thing. That's wait, what? Because I think back in the day, even now, I always went in that hardware and software server were like the same
Totally get that. And then you said software server. And I'm like, wait, what? That's a thing. That's wait, what? Because I think back in the day, even now, I always went in that hardware and software server were like the same And this is a big reason why Ben said that he has an extra Raspberry Pi I can build. So when I see Ben gamble next week, I'm going to get that. And then when I get home sometime next month, I am going to build it. So I understand hardware a little bit better and more interesting
And this is a big reason why Ben said that he has an extra Raspberry Pi I can build. So when I see Ben gamble next week, I'm going to get that. And then when I get home sometime next month, I am going to build it. So I understand hardware a little bit better and more interesting I think the easy comparison here is you have a Mac. You're using a Mac right now, right? So your Mac, you're using minimum three things right now. You're using the actual physical computer, which is the CPU, the hard drive, the RAM, the motherboard, et cetera, the display. That's the hardware
I think the easy comparison here is you have a Mac. You're using a Mac right now, right? So your Mac, you're using minimum three things right now. You're using the actual physical computer, which is the CPU, the hard drive, the RAM, the motherboard, et cetera, the display. That's the hardware It's not a server because it's a computer, personal computer versus a server. Then you have the operating system, which is Mac OS. And then you're using at least the web browser for StreamYards and Twitch and stuff like that
It's not a server because it's a computer, personal computer versus a server. Then you have the operating system, which is Mac OS. And then you're using at least the web browser for StreamYards and Twitch and stuff like that You're probably using a bunch of other pieces of software, but you're using at least the web browser, right? So if you think of that, you have the actual physical computer, the operating system, and then the web browser. The comparison on the server side is you have the server hardware
You're probably using a bunch of other pieces of software, but you're using at least the web browser, right? So if you think of that, you have the actual physical computer, the operating system, and then the web browser. The comparison on the server side is you have the server hardware That's just a big powerful computer, hooked up to a very powerful network. And then you have an operating system on servers. It's almost always Linux. Sometimes it's Windows, but it's mostly Linux
That's just a big powerful computer, hooked up to a very powerful network. And then you have an operating system on servers. It's almost always Linux. Sometimes it's Windows, but it's mostly Linux And then you have the piece of software that's being used on your computer as the web browser, on the flip side, on the server, it's the HTML server, the web server, right? And then your browser and that web server are communicating back and forth
And then you have the piece of software that's being used on your computer as the web browser, on the flip side, on the server, it's the HTML server, the web server, right? And then your browser and that web server are communicating back and forth I am also looking up something for comparison is, okay, yes. C-panel, which is what most of GoDaddy's content was using when they were accessing their shared hosting was C-panel as well. So that helps, yes, still Linux. Okay
I am also looking up something for comparison is, okay, yes. C-panel, which is what most of GoDaddy's content was using when they were accessing their shared hosting was C-panel as well. So that helps, yes, still Linux. Okay Okay. So C-panel is essentially a tool that lets you access a bunch of different services on the servers on GoDaddy. So C-panel let you access the FTP server to create or change FTP accounts, watching you type them and trying to say FTP or something. Right
Okay. So C-panel is essentially a tool that lets you access a bunch of different services on the servers on GoDaddy. So C-panel let you access the FTP server to create or change FTP accounts, watching you type them and trying to say FTP or something. Right Right. It'll still let you create and change FTP accounts. It'll let you access the email server and add and change email accounts. It also provides you access to an email clients. You can read emails through the web mail
Right. It'll still let you create and change FTP accounts. It'll let you access the email server and add and change email accounts. It also provides you access to an email clients. You can read emails through the web mail It'll access at least the file browser as well as some other stuff for the web server so that you can see the files that you have for the website and make changes in upload files. It'll have access to your database. Usually PHP, my admin, which is just a tool to manage your database remotely
It'll access at least the file browser as well as some other stuff for the web server so that you can see the files that you have for the website and make changes in upload files. It'll have access to your database. Usually PHP, my admin, which is just a tool to manage your database remotely So C-panel is just like an interface that brings a bunch of these management tools for all of those different software servers, right? The web server, the FTP server, the email server, the database, which is a server, your domain name server
So C-panel is just like an interface that brings a bunch of these management tools for all of those different software servers, right? The web server, the FTP server, the email server, the database, which is a server, your domain name server So it lets you access and manage all of those from one place. And just realizing, like, as you're telling me this, I'm like, I don't think I realized how many types of servers there were
So it lets you access and manage all of those from one place. And just realizing, like, as you're telling me this, I'm like, I don't think I realized how many types of servers there were This is what's a big experience with while streaming with Ben talking about how many different caching there is. Like, there is like, you know, the computer caching, then you have your browser caching, then you have like, he mentioned like seven others and it's like, oh no
This is what's a big experience with while streaming with Ben talking about how many different caching there is. Like, there is like, you know, the computer caching, then you have your browser caching, then you have like, he mentioned like seven others and it's like, oh no Okay, and I'm realizing it's the same way here. Yep. Okay. Cool. So we going back to the example you gave earlier of like, so WordPress is built with PHP. Cool. Totally didn't realize that. Now, if somebody is taking that PHP, our index
Okay, and I'm realizing it's the same way here. Yep. Okay. Cool. So we going back to the example you gave earlier of like, so WordPress is built with PHP. Cool. Totally didn't realize that. Now, if somebody is taking that PHP, our indexphp, then it is the software server that is turning it into HTML. Yep, the web server, right? So that's the server. Okay. Okay. We need a, yeah, another server. That will do index.php, right goes here. And then it comes out as HTML. Yay
php, then it is the software server that is turning it into HTML. Yep, the web server, right? So that's the server. Okay. Okay. We need a, yeah, another server. That will do index.php, right goes here. And then it comes out as HTML. Yay Yay. I'm assuming everything, all the code works and everything, of course. Well, just for the sake of today's discussion, we'll assume that they're not breaking bugs and things failing all over the place. Who knows if I'm doing it, I probably will. That's all the time everywhere. Okay
Yay. I'm assuming everything, all the code works and everything, of course. Well, just for the sake of today's discussion, we'll assume that they're not breaking bugs and things failing all over the place. Who knows if I'm doing it, I probably will. That's all the time everywhere. Okay Okay. And so, could you give me another definition or way of explaining web server? So is web server basically everything up here, except hardware? No, it's none of those. It's like, it's its own one. Yes. Email, FTP, domain, database, web server, they're all software servers. Okay
Okay. And so, could you give me another definition or way of explaining web server? So is web server basically everything up here, except hardware? No, it's none of those. It's like, it's its own one. Yes. Email, FTP, domain, database, web server, they're all software servers. Okay Okay. Well, for servers, it really like a proper term. I'm more using it to kind of like, do they show lines? Yeah. Yeah, like people don't usually call them software servers. At least not my experience. So then we have our one loud and hardware server
Okay. Well, for servers, it really like a proper term. I'm more using it to kind of like, do they show lines? Yeah. Yeah, like people don't usually call them software servers. At least not my experience. So then we have our one loud and hardware server I mean, yeah, like hard, it's just physical hardware, exactly what it is and how it looks, different in all the different cases. Okay. Cool. I think I'm following at the moment. So, WordPress is going to be shared hosting. It doesn't have to be. It doesn't have to be. We're going to get into that
I mean, yeah, like hard, it's just physical hardware, exactly what it is and how it looks, different in all the different cases. Okay. Cool. I think I'm following at the moment. So, WordPress is going to be shared hosting. It doesn't have to be. It doesn't have to be. We're going to get into that Don't worry. So, yeah. So, talking about shared hosting, companies like GoDaddy, there's Bluehost, there's SiteGround, and dozens of others. And they all specialize in WordPress hosting. Most of them offer as their primary service shared hosting. So shared hosting is a very powerful server
Don't worry. So, yeah. So, talking about shared hosting, companies like GoDaddy, there's Bluehost, there's SiteGround, and dozens of others. And they all specialize in WordPress hosting. Most of them offer as their primary service shared hosting. So shared hosting is a very powerful server That handles thousands of sites. Now, they make money on this by selling the hosting super cheap, but they also, the reason they call it shared is the resources, the CPU, the RAM, and to a lesser extent, typically the hard drive space is shared between all of the sites
That handles thousands of sites. Now, they make money on this by selling the hosting super cheap, but they also, the reason they call it shared is the resources, the CPU, the RAM, and to a lesser extent, typically the hard drive space is shared between all of the sites These companies will, they will take and put more sites on the server than the server could handle if they were busy. They assume, and rightfully so, because most WordPress sites are not very busy. They're personal sites, they're small business sites that don't see a lot of traffic
These companies will, they will take and put more sites on the server than the server could handle if they were busy. They assume, and rightfully so, because most WordPress sites are not very busy. They're personal sites, they're small business sites that don't see a lot of traffic They understand that a lot of these sites don't need a ton of resources to run regularly. So they pack a number of sites onto these servers so that they can maximize their profits. But they're in lies the problem. They're assuming that these servers aren't that busy
They understand that a lot of these sites don't need a ton of resources to run regularly. So they pack a number of sites onto these servers so that they can maximize their profits. But they're in lies the problem. They're assuming that these servers aren't that busy In some cases, if a number of the websites get busy or one or two of the sites get really busy, it can impact other sites on the server. Oh, I remember that
In some cases, if a number of the websites get busy or one or two of the sites get really busy, it can impact other sites on the server. Oh, I remember that And let's just, what's the best way to word this? One of the companies that we have talked about today is notorious for being not great at this and having a lot of performance problems by putting too many clients on their shared hosting and causing a lot of performance issues
And let's just, what's the best way to word this? One of the companies that we have talked about today is notorious for being not great at this and having a lot of performance problems by putting too many clients on their shared hosting and causing a lot of performance issues Different companies will handle that differently. Some will have more sites, some will have less sites. And so you'll see kind of a different quality in these companies, depending on how they're setting up those resources. That's not what I wanted to show up at that time
Different companies will handle that differently. Some will have more sites, some will have less sites. And so you'll see kind of a different quality in these companies, depending on how they're setting up those resources. That's not what I wanted to show up at that time So it sounds like it's kind of like airlines or movie theaters. They're going to sell extra tickets than what they actually have seats for
So it sounds like it's kind of like airlines or movie theaters. They're going to sell extra tickets than what they actually have seats for In Canada, we don't, well, maybe after the pandemic, I haven't been to the movie theater since, to be fair, but before the pandemic, we never oversilbed our movie theaters up here, but maybe it's the thing now. But definitely like airlines, yeah. Yeah
In Canada, we don't, well, maybe after the pandemic, I haven't been to the movie theater since, to be fair, but before the pandemic, we never oversilbed our movie theaters up here, but maybe it's the thing now. But definitely like airlines, yeah. Yeah Yeah. And obviously like airlines, when everyone shows up and no one cancels last minute, you have a problem. Now you have too many people for the plane and you gotta figure out what to do. If someone gets upset or you gotta pay someone or whatever
Yeah. And obviously like airlines, when everyone shows up and no one cancels last minute, you have a problem. Now you have too many people for the plane and you gotta figure out what to do. If someone gets upset or you gotta pay someone or whatever I'm really hoping you guys get your mad dog again, because she is. I like heard that this, this is the slightest sound. I'm really hoping you guys get here mad dog again, because she is. I heard that this, this is the slightest sound. I don't think I can write. Should be shared
I'm really hoping you guys get your mad dog again, because she is. I like heard that this, this is the slightest sound. I'm really hoping you guys get here mad dog again, because she is. I heard that this, this is the slightest sound. I don't think I can write. Should be shared Should be shared. Who goes that? How many are actually shared? The problem with this is like when it comes to shared hosting, there's no. The only answer is like the only answer that's 100% safe. Is would be based on how many resources you're promising
Should be shared. Who goes that? How many are actually shared? The problem with this is like when it comes to shared hosting, there's no. The only answer is like the only answer that's 100% safe. Is would be based on how many resources you're promising But that's where you move away from shared hosting and you move to other forms of hosting. Let's see what to go at least offering these days. I do not think that is how you spell guaranteed, but you know, we're going to go with it. It is a word that I've never been great at spelling
But that's where you move away from shared hosting and you move to other forms of hosting. Let's see what to go at least offering these days. I do not think that is how you spell guaranteed, but you know, we're going to go with it. It is a word that I've never been great at spelling Or maintenance. Anybody really good at spelling maintenance? Because that is also not a good word for me. Somehow I've spelled it a lot. I'm comfortable with it, but now I feel your pain. Where some of these words. Necessarily is one that I always have to like think about
Or maintenance. Anybody really good at spelling maintenance? Because that is also not a good word for me. Somehow I've spelled it a lot. I'm comfortable with it, but now I feel your pain. Where some of these words. Necessarily is one that I always have to like think about So I'm just trying to go to these offerings to see what they even. And if you want to share your screen, just let me know. I am honestly just. I'm just skimming through it really quickly. And to rewrite guaranteed. Sure, that'll work for now. Okay, so they have. I think that's what I'm going to do
So I'm just trying to go to these offerings to see what they even. And if you want to share your screen, just let me know. I am honestly just. I'm just skimming through it really quickly. And to rewrite guaranteed. Sure, that'll work for now. Okay, so they have. I think that's what I'm going to do It looks like the only options they have. That would move past shared hosting are there VPS hosting. Or they're dedicated server hosting. I'll talk about it a second. I'm going to mention when it comes to WordPress host, you're going to see a lot of managed WordPress sites
It looks like the only options they have. That would move past shared hosting are there VPS hosting. Or they're dedicated server hosting. I'll talk about it a second. I'm going to mention when it comes to WordPress host, you're going to see a lot of managed WordPress sites And that's usually something that people pay more for. Or press sites basically means that. They. The host company will update WordPress and plugins, which is generally really easy to do. And then they'll tend to add the basic free tier from a software company like security. And they'll do backups
And that's usually something that people pay more for. Or press sites basically means that. They. The host company will update WordPress and plugins, which is generally really easy to do. And then they'll tend to add the basic free tier from a software company like security. And they'll do backups And that so that's. That's what manage means. It's just some basic automated stuff. And it's not a lot. It certainly isn't. It isn't. It isn't anything on the. Unlike the server level. It's no different. It's just some management of your site. And thank you. Is it. Your. Yarm. A link
And that so that's. That's what manage means. It's just some basic automated stuff. And it's not a lot. It certainly isn't. It isn't. It isn't anything on the. Unlike the server level. It's no different. It's just some management of your site. And thank you. Is it. Your. Yarm. A link Your. Yarm. A link. When there's no spaces in people's names. I'm always guessing how to say it. Yeah, like for the follow. It's always a guess like is it meant to be part of their first name? Or is it like completely made up or like. Yeah
Your. Yarm. A link. When there's no spaces in people's names. I'm always guessing how to say it. Yeah, like for the follow. It's always a guess like is it meant to be part of their first name? Or is it like completely made up or like. Yeah Yeah. I always feel bad because I'm totally always butchering people's names. So yes, I do remember that it was like automated updates. If it's a managed WordPress. I'm pretty sure that they used to include SSLs and manage WordPress. Oh, maybe, yeah, maybe. I don't know. It wasn't like so though
Yeah. I always feel bad because I'm totally always butchering people's names. So yes, I do remember that it was like automated updates. If it's a managed WordPress. I'm pretty sure that they used to include SSLs and manage WordPress. Oh, maybe, yeah, maybe. I don't know. It wasn't like so though That's why I always got so confused. I know you do at least right now you do. I don't think I don't feel like they used to but I might be wrong. Yeah, that's why I was like, I don't know. Wait, that's not SSL SSL. I mean, that could be its own like stream. What's it SSL? Let's let's not go there
That's why I always got so confused. I know you do at least right now you do. I don't think I don't feel like they used to but I might be wrong. Yeah, that's why I was like, I don't know. Wait, that's not SSL SSL. I mean, that could be its own like stream. What's it SSL? Let's let's not go there Let's secure socket layer. It's what makes HTTP into HTTPS. Okay, anyway, that's that. So I believe you also said that there was a VPS. And there was one other one dedicated server. I'm just writing it. Yeah. So VPS is actually. VPS works kind of the same as shared hosting the differences
Let's secure socket layer. It's what makes HTTP into HTTPS. Okay, anyway, that's that. So I believe you also said that there was a VPS. And there was one other one dedicated server. I'm just writing it. Yeah. So VPS is actually. VPS works kind of the same as shared hosting the differences So VPS stands for virtual private server. So virtual private server, you take that. That big, powerful hardware server. And you slice it up into essentially like think of like slicing it up into slices of pi. In the case of VPS, they can be different slices
So VPS stands for virtual private server. So virtual private server, you take that. That big, powerful hardware server. And you slice it up into essentially like think of like slicing it up into slices of pi. In the case of VPS, they can be different slices One slice could be small and it has one virtual CPU core. You know, four gigs of RAM and like 50 gigabytes of SSD space. And then another one could be a little bit bigger. And it's twice that to virtual CPU cores eight gigs of RAM 100 gigs of space
One slice could be small and it has one virtual CPU core. You know, four gigs of RAM and like 50 gigabytes of SSD space. And then another one could be a little bit bigger. And it's twice that to virtual CPU cores eight gigs of RAM 100 gigs of space The key with this is that those whatever your VPS service settings are, those are yours. You pay for them and you have them. They're not shared with anyone. So if you are supposed to have four gigs of RAM, you'll have access to four gigs of RAM
The key with this is that those whatever your VPS service settings are, those are yours. You pay for them and you have them. They're not shared with anyone. So if you are supposed to have four gigs of RAM, you'll have access to four gigs of RAM So you don't have to worry about other sites affecting the performance of your site. And the only reason you would run out of resources is that your site gets busier. And you would need to upgrade your VPS to something more powerful. And if I remember correctly. Oh, thanks Ryan
So you don't have to worry about other sites affecting the performance of your site. And the only reason you would run out of resources is that your site gets busier. And you would need to upgrade your VPS to something more powerful. And if I remember correctly. Oh, thanks Ryan Oh, thanks Ryan. I am grateful that people do like my handwriting because I'm like, I don't know what I would do if I couldn't be writing all this out because I was like. It helps my brain so much. I write stuff out, but no, I feel sorry for anyone who has to try to read my handwriting
Oh, thanks Ryan. I am grateful that people do like my handwriting because I'm like, I don't know what I would do if I couldn't be writing all this out because I was like. It helps my brain so much. I write stuff out, but no, I feel sorry for anyone who has to try to read my handwriting It's really funny. It's really funny. If my mom ever caught one of these dreams and saw my handwriting, she would still tell me I have horrible handwriting. But that's because I never properly learned cursive. But there's like words that you'll see that I write that are like half cursive half
It's really funny. It's really funny. If my mom ever caught one of these dreams and saw my handwriting, she would still tell me I have horrible handwriting. But that's because I never properly learned cursive. But there's like words that you'll see that I write that are like half cursive half Yeah, I do that too. Do they still teach cursive in school? I have no clue. I'm so curious. I've been at a school for a very long time and I have no kids to or learning so couldn't tell you. Maybe someone in chat knows. Yes, somebody on chat please. Real us this because I am very, very curious
Yeah, I do that too. Do they still teach cursive in school? I have no clue. I'm so curious. I've been at a school for a very long time and I have no kids to or learning so couldn't tell you. Maybe someone in chat knows. Yes, somebody on chat please. Real us this because I am very, very curious I'm moving this over because I feel like something. I'm not sure if I can read it. I'm not sure if I can read it. That also needs to be added here, which I think is another part of the confusion. I didn't want to just default go to go daddy color. So it's like you. I didn't agree. Is
I'm moving this over because I feel like something. I'm not sure if I can read it. I'm not sure if I can read it. That also needs to be added here, which I think is another part of the confusion. I didn't want to just default go to go daddy color. So it's like you. I didn't agree. Is I didn't agree. Is. When it's like a managed word press. It's definitely not as much to technical knowledge needed. When going to. A like a C panel or shared hosting like that or like VPS is you need somebody that can manage. The resources better. So
I didn't agree. Is. When it's like a managed word press. It's definitely not as much to technical knowledge needed. When going to. A like a C panel or shared hosting like that or like VPS is you need somebody that can manage. The resources better. So So. When somebody called in for a hosting and they set up like C panel is what we'll call it. It was like. Go daddy. And this is five years plus years ago. Y'all I don't know what they currently offer. Is like their shared hosting would be like cool
So. When somebody called in for a hosting and they set up like C panel is what we'll call it. It was like. Go daddy. And this is five years plus years ago. Y'all I don't know what they currently offer. Is like their shared hosting would be like cool If you're having some issues with the resources will help you figure it out. Where like with the VPS if you're having issues with your resources. Your shit out of luck. Like go figure it out yourself. You have to have more of an admin. And I believe it was the same with a dedicated server. Yeah
If you're having some issues with the resources will help you figure it out. Where like with the VPS if you're having issues with your resources. Your shit out of luck. Like go figure it out yourself. You have to have more of an admin. And I believe it was the same with a dedicated server. Yeah Yeah. That sounds about right. Generally with VPS you're going to take more ownership of setting it up. Yourself. That said I honestly would never recommend using like. Like any of the big word press host like. Go daddy. Blue host. Site ground, etc. I wouldn't recommend doing a VPS through them
Yeah. That sounds about right. Generally with VPS you're going to take more ownership of setting it up. Yourself. That said I honestly would never recommend using like. Like any of the big word press host like. Go daddy. Blue host. Site ground, etc. I wouldn't recommend doing a VPS through them So. Actually I guess I should. I should have covered this in the intro. But before I got into full stack development for a while. I did. I built WordPress sites for small businesses. I never did that. That's so cool. I always just think Roy is a wealth of knowledge. And when I'm stuck on stuff
So. Actually I guess I should. I should have covered this in the intro. But before I got into full stack development for a while. I did. I built WordPress sites for small businesses. I never did that. That's so cool. I always just think Roy is a wealth of knowledge. And when I'm stuck on stuff I just listen to everybody playing like Abe Hex and stuff. And when I can hear that there's a break. I'll just ask them questions while they're doing that. So I'm just like. So you used to use just knowing lots of stuff. But that makes a lot of sense. So
I just listen to everybody playing like Abe Hex and stuff. And when I can hear that there's a break. I'll just ask them questions while they're doing that. So I'm just like. So you used to use just knowing lots of stuff. But that makes a lot of sense. So So. So I still have a few clients that I'm handling their sites for. They'll be. They'll be moving to other other people in the WordPress field. By end of next month because I've been. Obviously I've been away from doing WordPress stuff. And I'm just kind of cycling that down
So. So I still have a few clients that I'm handling their sites for. They'll be. They'll be moving to other other people in the WordPress field. By end of next month because I've been. Obviously I've been away from doing WordPress stuff. And I'm just kind of cycling that down But for years now I've had my own VPS. From digital ocean. Running it's. Like ridiculous uptime. And then I use a service called run cloud, which is kind of targeted towards. WordPress users. And it manages the VPS for me. So it sets up user accounts. It sets up. Database stuff. It sets up
But for years now I've had my own VPS. From digital ocean. Running it's. Like ridiculous uptime. And then I use a service called run cloud, which is kind of targeted towards. WordPress users. And it manages the VPS for me. So it sets up user accounts. It sets up. Database stuff. It sets up It sets up. You know, web applications. It's like C panel. But for VPS. And so it just makes it really easy to manage the server side of things. I can actually. I don't know if it's training. Yeah, let's share the screen. I can show this. D. D. And thank you Ryan. I appreciate it
It sets up. You know, web applications. It's like C panel. But for VPS. And so it just makes it really easy to manage the server side of things. I can actually. I don't know if it's training. Yeah, let's share the screen. I can show this. D. D. And thank you Ryan. I appreciate it I appreciate it. Find out if they're. Still learning cursive. And that I think is another question that I'm going to write down for a little later on is. Let me grab that. So this is this is my run cloud dashboard. I still just have three client sites here. So it's just. It's winding down
I appreciate it. Find out if they're. Still learning cursive. And that I think is another question that I'm going to write down for a little later on is. Let me grab that. So this is this is my run cloud dashboard. I still just have three client sites here. So it's just. It's winding down It's winding down. And then what I have, you can see I'm running PHP. My admin. And I've got like a. A tool installed here to. To let me manage those sites. I just have a lot more sites. So this would let me manage. I think I think at 25 sites at one point. So let me manage them all at once
It's winding down. And then what I have, you can see I'm running PHP. My admin. And I've got like a. A tool installed here to. To let me manage those sites. I just have a lot more sites. So this would let me manage. I think I think at 25 sites at one point. So let me manage them all at once But I can go in here and like I can go in and, you know, add a new database for a new site. Oh my gosh. Add a new system users. Change passwords. And then. I set up. SSH so that I can connect to the server. And then web applications. So this is. You know, creating the actual web application
But I can go in here and like I can go in and, you know, add a new database for a new site. Oh my gosh. Add a new system users. Change passwords. And then. I set up. SSH so that I can connect to the server. And then web applications. So this is. You know, creating the actual web application So like if I do deploy new web app. I can go WordPress or PHP. My admin. And then you know, give it a name. Give it a domain, et cetera. And then deploy it. With backups and everything like that. So just it manages everything. I can choose my. My PHP version. All this stuff in here
So like if I do deploy new web app. I can go WordPress or PHP. My admin. And then you know, give it a name. Give it a domain, et cetera. And then deploy it. With backups and everything like that. So just it manages everything. I can choose my. My PHP version. All this stuff in here You want to know something. Really funny that just clicked. Sure. So I knew from my time at. I wrote out of you that you know, you wouldn't. Like something like manage WordPress or see panel or any of these. They had a database. My sequel. And then they would. You'd have to log in to PHP. My admin
You want to know something. Really funny that just clicked. Sure. So I knew from my time at. I wrote out of you that you know, you wouldn't. Like something like manage WordPress or see panel or any of these. They had a database. My sequel. And then they would. You'd have to log in to PHP. My admin My admin. You go manage. The server. Or manage the database. Why did that not click four weeks ago when I started leered in Postgres? You have to have the server. You have to have the client. Yeah. When some of my back looks, you're like that. So obvious and retrospect. It is
My admin. You go manage. The server. Or manage the database. Why did that not click four weeks ago when I started leered in Postgres? You have to have the server. You have to have the client. Yeah. When some of my back looks, you're like that. So obvious and retrospect. It is It is. It is completely obvious. And I'm just like. Really. Really. Like. I'm going to. I'm going to. I'm going to. I'm going to. I'm going to. I'm going to. There. in my. Thank you. Come on. Oh my god. So very. Well, I. I use postgres as my database in most cases. Postgres clients
It is. It is completely obvious. And I'm just like. Really. Really. Like. I'm going to. I'm going to. I'm going to. I'm going to. I'm going to. I'm going to. There. in my. Thank you. Come on. Oh my god. So very. Well, I. I use postgres as my database in most cases. Postgres clients Postgres clients. Definitely aren't quite as nice as. PHP. My. For. For. For us to out. My astral. All Maria D.B. hopefully remember to look at a play-drewn because I feel like that is definitely something to look into
Postgres clients. Definitely aren't quite as nice as. PHP. My. For. For. For us to out. My astral. All Maria D.B. hopefully remember to look at a play-drewn because I feel like that is definitely something to look into One thing that is also coming to mind is that you were talking, oh I feel like I need to ask you first about dedicated server and then I will go back to asking you about. DataGate server really is just go daddy, upselling services. I think I'm just looking here
One thing that is also coming to mind is that you were talking, oh I feel like I need to ask you first about dedicated server and then I will go back to asking you about. DataGate server really is just go daddy, upselling services. I think I'm just looking here I'm pretty sure that the best way to think of dedicated server is just yeah
I'm pretty sure that the best way to think of dedicated server is just yeah So you may hear this term called bare metal servers and essentially what that is is you're renting the hardware, the bare metal because servers are made of metal plus PCBs and silicone and other stuff but metal and then you choose what operating system you build your server from the ground up
So you may hear this term called bare metal servers and essentially what that is is you're renting the hardware, the bare metal because servers are made of metal plus PCBs and silicone and other stuff but metal and then you choose what operating system you build your server from the ground up It would be like you going to the store and buying the parts for a computer right and they slapped together the computer but they don't put any software on it
It would be like you going to the store and buying the parts for a computer right and they slapped together the computer but they don't put any software on it You bring it home and now do you install Windows, do you install Linux, do you install something else, which version do you install, which Linux do you install. So this one, Y'all I talked about Tyler on again off again. That's my party to the S-Bad user
You bring it home and now do you install Windows, do you install Linux, do you install something else, which version do you install, which Linux do you install. So this one, Y'all I talked about Tyler on again off again. That's my party to the S-Bad user Yeah and he also used to work at GoDaddy and was a lot more into the technical side of things but it was more of the it's hard to compare it to what I'm learning now because he went in a completely different direction and it but I know that I can ask him about the dedicated server and I think this is a good way that I can knowledge check because I'm like I think so but I feel like it still wasn't like bare metal
Yeah and he also used to work at GoDaddy and was a lot more into the technical side of things but it was more of the it's hard to compare it to what I'm learning now because he went in a completely different direction and it but I know that I can ask him about the dedicated server and I think this is a good way that I can knowledge check because I'm like I think so but I feel like it still wasn't like bare metal It was like they just had a more allotment. I don't know. I don't remember. I'll have to ask him about it but you still need to have somebody to log in and set up and manage all of it. It's not something that a hosting provider would do
It was like they just had a more allotment. I don't know. I don't remember. I'll have to ask him about it but you still need to have somebody to log in and set up and manage all of it. It's not something that a hosting provider would do Okay so this is making sense so I guess I didn't need to move that all the way over. We'll move that back. Great. Actually looking at GoDaddy they do offer fully managed one where they manage it but yeah. There's still stuff they didn't manage. At least back then when they had fully managed
Okay so this is making sense so I guess I didn't need to move that all the way over. We'll move that back. Great. Actually looking at GoDaddy they do offer fully managed one where they manage it but yeah. There's still stuff they didn't manage. At least back then when they had fully managed Well I mean reasonably there's a there's a point where you want to do stuff that they just don't deal with right. Yeah. That's that's kind of a different discussion. Right
Well I mean reasonably there's a there's a point where you want to do stuff that they just don't deal with right. Yeah. That's that's kind of a different discussion. Right Right. So would you say that digital ocean is like kind of an almost an in between before we go to Versailles and Netlify because digital ocean can they because they can do Docker as well right? You can install Docker on digital ocean. Digital ocean
Right. So would you say that digital ocean is like kind of an almost an in between before we go to Versailles and Netlify because digital ocean can they because they can do Docker as well right? You can install Docker on digital ocean. Digital ocean Digital ocean. Let's not call digital ocean in between because digital ocean offers a few different things. They offer VPS. They offer a kind of Versailles Netlify like service. It's definitely not as mature as involved and then yeah you can do you can do like Docker and stuff like that
Digital ocean. Let's not call digital ocean in between because digital ocean offers a few different things. They offer VPS. They offer a kind of Versailles Netlify like service. It's definitely not as mature as involved and then yeah you can do you can do like Docker and stuff like that So it's it's its own one but I think before we go any further there's still a couple things you want to touch touch on
So it's it's its own one but I think before we go any further there's still a couple things you want to touch touch on So when you're talking about nice soil yeah I mean if you saw what I was sharing there with RunCloud that was off digital ocean all those sites were on there so I definitely use digital ocean bunch myself too
So when you're talking about nice soil yeah I mean if you saw what I was sharing there with RunCloud that was off digital ocean all those sites were on there so I definitely use digital ocean bunch myself too Yeah I didn't configure myself I couldn't be bothered I just let RunCloud handle it so that I could save time and money and sanity but I've you know set up engine X a few times
Yeah I didn't configure myself I couldn't be bothered I just let RunCloud handle it so that I could save time and money and sanity but I've you know set up engine X a few times But yeah so when you when you talk about GoDaddy if you talk about a VPS a lot of hosting options what you're talking about is a single server in a single location somewhere in the world
But yeah so when you when you talk about GoDaddy if you talk about a VPS a lot of hosting options what you're talking about is a single server in a single location somewhere in the world For example my digital ocean VPS is in Toronto Toronto Canada so if someone was trying to connect to my server from California or further away like Australia or Europe there's going to be a delay because while the internet's fast it still can take you know a chunk of a second to make that transit profile that's required for requests that's made and that adds up right so it's there's all sorts of things that can affect performance one of them is just waiting as the client to get a response from the server and the further that that response has to travel the bigger that delay is when you start talking about performance for websites you'll see things like time to first bite which is essentially I'm the first you've heard that term before yeah and then we have to do a god it was in where we had to have them run on their computer if it was even hitting the site because they're not or something like that there's a bunch of things you could have used yeah something like that the first bite is is a good metric what what time the first bite is is I send a request to a web server what is the time in milliseconds until I get the first bite of a response the first the first hit of a response because that's that's that time to first bite like let's say you're going from Australia to Toronto Canada and back that time the first bite could easily be 500 yes exactly the first taste of the bite that time to easily be 500 or more milliseconds it's like that's of a significant travel time for data depending on the user that work depending on the the server some of that is how quickly the server responds when they get the request but the key there is that you know that time to first bite is is time before the user starts to get any information and the longer that time is the longer the delay will be for any request now if you think of a WordPress site the content right the index page the the blog articles the WooCommerce products the whatever right that stuff is all dynamic that and it updates sometimes frequently sometimes frequently it depends on the site sometimes yearly you know it depends on the particular site but other things don't update there might be a new version but it's a separate version that's images and CSS right CSS can get updated but essentially we tend to treat it as a new version for the sake of caching and then images same idea something to be aware of when we talk about this is if you link to the same image right if you're if your browser links to the same image and it already has a copy it'll say well I've already downloaded a copy I'm not going to download a new copy same with JavaScript files same with CSS files so on when we get to JavaScript tooling one of the things that happens is when we generate the CSS files the JavaScript files the tooling gives it like a hash code in the file name so the file names are always different and the browser will update the or get the new version of the file anytime you change if you're just editing a CSS file the browser won't automatically update it but anyway the key is most of this stuff doesn't change often or at all so we start using a content delivery network a CDN so what a CDN is so I have my my before we go to the CDN just to go back to the caching and things like that which ones did you say that it normally caches is it any type of CSS or HTML or images CSS JavaScript files and images okay because is that mostly just on WordPress sites or would that be on any type of that's the browser behavior okay that's okay and that's going to be even if they were on something like that left over seller now same thing yeah it's the the browser behavior I just wanted to make sure like the browser is based on file name it doesn't it doesn't really know whether it's a WordPress site or you know a react site it just is like hey that's an image and I have already gotten a copy of the image with that name I don't need to I don't need to grab a new copy I'm just going to use the save copy and if anybody hosts with Lipson which is a podcast host they really do it with images so even for the brand new episode that you're putting out if the image itself that you're uploading is called the same it will use the old image and put it out to all of your other stuff yes anybody wanted to know that was really awkward when I first realized that so it caches HTML CSS not HTML okay actually instead of that I'm going to do this so that way I can really see that it doesn't do HTML you know it's CSS images and JavaScript it's weird to spell out JavaScript okay and again just to note that that caching is based on file name sweet okay cool okay so we look at the site it's comprised of HTML CSS images JavaScript the CSS images in JavaScript don't tend to change they also tend to be larger files than HTML which means it takes longer for them to get transferred over the network so in order to improve performance I have my server in Toronto Canada what I can do is engage the services of content delivery network and it will cache those CSS images JavaScript it can even cache HTML but we'll talk about that more later and what they will do the so if you have content content being CSS images JavaScript you have delivery which we'll talk about in a second and then you have network network means that you have servers all over the world oops and let me just see if I can find a quick image and cdn can also help on security campaign so I know this to you in the stream your chat you can open that up on your on your end okay cool can we second you I really should have just been doing it like this from the beginning but I try to make it like bigger for everyone but it has to make the most sense okay so this is actually from an image from cloud cloud players article on what a content delivery network is what we can see is you have the origin server that's the orange one that all the orange arrows point to and then you have the cdn server so those are the blue rectangles and then you have the users with their little fake laptops so in the case of using a cdn what it does is it takes those images JavaScript files CSS files and it stores them on all of those cdn servers and there's more than these this shows five just so the images and through spammy but it would it would have cloud there has I imagine probably several dozen around the world so what ends up happening is you're always going to be close to a cdn server or relatively close to a cdn server so when you visit that website in Toronto and get the HTML file and your browser looks or it says oh I need seven images two CSS files and four JavaScript files the request goes to a local cdn that your request gets to a lot faster it has a very fast time to first bite and it delivers those assets really quickly a content delivery network so we understand the content part the network part the delivery part is these are optimized to deliver the data to the user very quickly the whole idea is to get that content to the user as quickly as possible and cdn are used behind the scenes all over the place discord has a cdn so anything that is like all the images and stuff like that that are part of discord whether that's user avatars whether that's you know discord banners images that are uploaded into into discord itself they're all spread around on discord cdn amazon uses a cdn extensively so that they can deliver web pages very quickly if you think of an amazon web page it should be slow to low because they're they're they have like 50 images and they're huge but their cdn delivers that now that that content very very quickly youtube is a great example youtube is delivering videos which are huge files but they deliver through their video cdn quickly so this is a way to improve performance and understand what a cdn is will help with when we start talking about versal and netlify because they they expand upon this oh okay oh yeah hello everyone how's it going and that's exciting i look look down look away and everybody comes to show up i appreciate that and hello hello all your beautiful humans we are hanging out talking about oh it's cutting garden yay well raiden run thanks for coming over we are talking about hosting because if y'all want to see a really fun tweet that i may or may not have made early or last week that was slightly embarrassing of when you feel like you're getting stuff and then you really don't that is what we are working on learning about with and anybody that doesn't have twitter nor want to this is the tweet of so when something gets deployed on versal or netlify are they actually hosting this site or they not because it's gaining a grabbing the content from get hub a lot of that like kind of weird knowledge comes from my time at godaddy i was there for five years i was in hosting it fails in support and it was much more taught about like how do you talk about it how do you sell it to people that are not normally as technical we'll go with that so it was a really hard comparison to what i've been learning so far since having teach gen tech of this is what it actually is and to catch you up and Roy now we're going to see if i can knowledge check myself we are going over we started with just a bit of godaddy thing so that way we could go okay cool get my like based knowledge out there and get an understanding check of like you know a website at least needs html got it and yes y'all i do know about domains and ssls and you know dns and all that it's helpful when talking to a customer but not always helpful when i'm just trying to get level up my technical expertise so yes we might go through some basics uh we talked about that there is many different servers in a past dream with ben gamble i've talked about uh i'm learning a lot more about data and types of data because data is one of those things that a lot of people talk about yet not always go into detail about and you can see a bit more about that here and to keep going down the list we started talking about shared hosting it's like when we somebody decides that they want to sell the seats in an airplane but then sell more seats and they actually have room for hoping not everybody shows up and that's what shared hosting does a lot of time uh and then we talked about manor's wordpress vp vps of like virtual private server dedicated servers and right now we are going on to cdn's and caching and what cdn's do is that a good recap that's yeah that's a solid recap wait and thank you everyone for the follows i appreciate it and as it heads up this week particularly we are talking about yes a lot of my channel is towards beginners i'm learning all of this slide this week is like really really beginner friendly because tomorrow we're also talking about what is an api and today we're talking about hosting um so a little bit more of the beginner level than some of our other streams where we talk about what are some of the more technical ones that have talked about i'm trying to think uh what's your picture oh yeah we talk about tiscript every other week i really enjoy tiscript uh that one's fun and yeah yeah so we do a lot of random topics kubernetes docker oh yeah okay back to cdn world all right so we have our content delivery network cloud smr cloud cloud flare gave us this very very lovely description of of photo of how it works uh around how close you are to the original server based on a cdn will repeat it would you say no they literally copy the files it's yeah it's they so like your all the cdn nodes will have copies of those files and till there's a new copy available um so when you there's options for like when you're updating your site to invalidate your cdn cache which basically says okay well let's go and get new copies of all of that all of those files that tosses deals often and gets the new copies but yeah i know i literally the the assets that are being cash on the cdn are copied from the origin server and then stored on the cdn okay and they're like i'm simplifying it simplifying how they get there because actually typically what happens is typically the first visitor from from afar will will connect to a cdn node the cdn node will typically see are those assets cash if not then it will go and get them from the origin server cash them and send them to the user at the same time but you know like for how it works that's we don't I don't really want to get too much into that um the cdn is a cache it's not it's like oh yeah yeah no matter what okay yep that's the only minute since i've um because it i just remember having to like talk people through having to clear at the cdn but then this is kind of went to another question of what about site lock is the i don't even know if site lock is still a thing let's let's find out is what i'm remembering as having like it didn't know where but then it also had a cdn as well and it's something that go daddy worked with and i don't know if that is accurate at all uh oh hi oh looks like pollution oh well that's i wanted the drop down thanks but no thanks yeah so it includes a content delivery network yeah so it does the it does a lot of security stuff that'll look for um now where uh work so the one of the things like just this is a quick tangent one of the things with WordPress sites is a lot of times they're not updated regularly um and then when they fall behind their plugins uh we'll have security vulnerabilities exposed those plugins don't get updated and the site is vulnerable to an attack if you ever go and look through the logs for WordPress site you'll see dozens hundreds of scripted attacks so the you know people who are who have malicious intent will just go and try to find all of these domains that they can and we'll just take all of these vulnerability attacks and just script them and just run them blindly against the site they don't know if your WordPress site has WooCommerce they don't know if it has plugin x then even know if your site has WordPress they just run a bunch of attacks to see if any of them work um is that going to be different different than a DDoS attack yes okay yeah so these ones are attempting to use the vulnerability to gain you know access or control of your site right so they can change the content so they can you know display some crypto scam or whatever it is they want to do um you know in some way take over the site and take over the content um whereas DDoS is uh so like DOS is denial of service DDoS is distributed to the channel of service meaning there's multiple computers involved in the attack and the whole idea with DDoS is just that it makes your site non-responsive so that your services can't be used by anyone so you know someone was trying to DDoS ping uh over the last couple of weeks um and the whole if they had had been successful which they weren't they were not even close to successful but if they had been successful ping wouldn't have worked it would have been non-responsive because it would have been overloaded interesting okay well uh there is lots to learn there and I'm just kind of putting these as side notes literally they're off to the side yeah they're definitely intense we definitely want to spend long yeah so if we go back to the scene yep so the scene and we're I think we're we're done with we're good there I think the last piece of the go daddy host thing to talk about um is just super simple and that's how do you get your WordPress site on to go daddy right you you know you set it up locally you have it working um or maybe you just need to move it from one hosting site to another you would upload that via ftp which is file transfer protocol and that copies the files from your computer or from another computer to your server so you know something really funny what while working at go daddy I did not realize that you built things on your computer and then uploaded them like local host 3000 or whatever you set your local host up no idea yep did not know that was a thing with with WordPress it doesn't need to be because like a huge part of the WordPress marketplace is install WordPress install somewhere between five and 30 plugins I would say depending on your setup and they take care of all of the kind of functionality um and that includes and then you also have themes which can like the advanced themes can let you do all of the visual configuration right in WordPress so you don't need to edit CSS files you just go into the theme file and you can uh or the theme admin panel and you can you know configure the visual side of your site so WordPress allows people to to build a site completely without needing to do local development or to do any like actual programming um a huge number of WordPress sites exist and no one has done any programming specific to their site obviously some will build all the plugins and WordPress and that's not but no one did any specific engineer related to their site they just you know plugins were installed and whether then like interfaces dashboards inside WordPress were used and everything gets configured but obviously in some cases especially bigger sites there's lots of custom development that's done and the key here is with with FTP because we'll talk about it from a different angle later is there has to be some way to move the files if you're doing local development to the host and FTP is one option I'm missing a word move site to site and y'all for who are new to the channel again welcome as a heads up I am wonderfully horribly dyslexic and I miss words I also misspell like almost everything so if you like chat what are you writing before warned I will have probably just didn't even realize I did it so feel free to let me know if something is misspelled or missing something as I write my notes on all this or if something is not legible and again thank you everybody for the follows I see the last to you is mark and lurk lurk mode activated I like that name that is a pretty dope name all right so FTP moves shit we got that isn't there a size limit for FTP like you can't do like over 25 megabytes or something and there can be a size limit based on server configuration but generally speaking there's no like the FTP protocol doesn't have an actual size limit okay cool and you said there was something else you wanted to mention about that one no that's all that's just yeah that's just how to get the files from the local computer to to the server because we will kind of talk about that process from a different angle we get to want to talk about herself uh file limit I'll size limit okay where do we go to now now we can go to verse oh my goodness look at all these notes I'm gonna maybe move on this stuff over maybe that doesn't select everything and this gracious there we go and we'll just move it up here with everything else hmm yay okay that was fun that was shared hosting and now we're on verse cell let's get excited about some verse cell so verse cell is a tool that wraps a bunch of these things together um and it does it to make it easier to manage your site it makes it easier to develop your site and so that you don't have to worry about a lot of this stuff okay so we'll start with we'll kind of work backwards because with verse cell you're not going to create there's no like when you know when you're setting up to verse cell you don't get to create a site on verse cell right uh you know you have to transfer something to verse cell and the way that that's done is is GitHub or you can just get lab or bitpuck it I think is the other one I can remember the proper name for it and so this is what we talk about the difference between FTP and you know Git so Git is get is a way to take essentially to take snapshots of your code as you work on it and then also to take those snapshots and move them to a remote repo where they can be merged with work from other people so if you and I are working on something together and we have that in the same Git repo and we both upload changes to the site those changes can be merged together Git tries to be smart about it and it says oh well gen work time index
For example my digital ocean VPS is in Toronto Toronto Canada so if someone was trying to connect to my server from California or further away like Australia or Europe there's going to be a delay because while the internet's fast it still can take you know a chunk of a second to make that transit profile that's required for requests that's made and that adds up right so it's there's all sorts of things that can affect performance one of them is just waiting as the client to get a response from the server and the further that that response has to travel the bigger that delay is when you start talking about performance for websites you'll see things like time to first bite which is essentially I'm the first you've heard that term before yeah and then we have to do a god it was in where we had to have them run on their computer if it was even hitting the site because they're not or something like that there's a bunch of things you could have used yeah something like that the first bite is is a good metric what what time the first bite is is I send a request to a web server what is the time in milliseconds until I get the first bite of a response the first the first hit of a response because that's that's that time to first bite like let's say you're going from Australia to Toronto Canada and back that time the first bite could easily be 500 yes exactly the first taste of the bite that time to easily be 500 or more milliseconds it's like that's of a significant travel time for data depending on the user that work depending on the the server some of that is how quickly the server responds when they get the request but the key there is that you know that time to first bite is is time before the user starts to get any information and the longer that time is the longer the delay will be for any request now if you think of a WordPress site the content right the index page the the blog articles the WooCommerce products the whatever right that stuff is all dynamic that and it updates sometimes frequently sometimes frequently it depends on the site sometimes yearly you know it depends on the particular site but other things don't update there might be a new version but it's a separate version that's images and CSS right CSS can get updated but essentially we tend to treat it as a new version for the sake of caching and then images same idea something to be aware of when we talk about this is if you link to the same image right if you're if your browser links to the same image and it already has a copy it'll say well I've already downloaded a copy I'm not going to download a new copy same with JavaScript files same with CSS files so on when we get to JavaScript tooling one of the things that happens is when we generate the CSS files the JavaScript files the tooling gives it like a hash code in the file name so the file names are always different and the browser will update the or get the new version of the file anytime you change if you're just editing a CSS file the browser won't automatically update it but anyway the key is most of this stuff doesn't change often or at all so we start using a content delivery network a CDN so what a CDN is so I have my my before we go to the CDN just to go back to the caching and things like that which ones did you say that it normally caches is it any type of CSS or HTML or images CSS JavaScript files and images okay because is that mostly just on WordPress sites or would that be on any type of that's the browser behavior okay that's okay and that's going to be even if they were on something like that left over seller now same thing yeah it's the the browser behavior I just wanted to make sure like the browser is based on file name it doesn't it doesn't really know whether it's a WordPress site or you know a react site it just is like hey that's an image and I have already gotten a copy of the image with that name I don't need to I don't need to grab a new copy I'm just going to use the save copy and if anybody hosts with Lipson which is a podcast host they really do it with images so even for the brand new episode that you're putting out if the image itself that you're uploading is called the same it will use the old image and put it out to all of your other stuff yes anybody wanted to know that was really awkward when I first realized that so it caches HTML CSS not HTML okay actually instead of that I'm going to do this so that way I can really see that it doesn't do HTML you know it's CSS images and JavaScript it's weird to spell out JavaScript okay and again just to note that that caching is based on file name sweet okay cool okay so we look at the site it's comprised of HTML CSS images JavaScript the CSS images in JavaScript don't tend to change they also tend to be larger files than HTML which means it takes longer for them to get transferred over the network so in order to improve performance I have my server in Toronto Canada what I can do is engage the services of content delivery network and it will cache those CSS images JavaScript it can even cache HTML but we'll talk about that more later and what they will do the so if you have content content being CSS images JavaScript you have delivery which we'll talk about in a second and then you have network network means that you have servers all over the world oops and let me just see if I can find a quick image and cdn can also help on security campaign so I know this to you in the stream your chat you can open that up on your on your end okay cool can we second you I really should have just been doing it like this from the beginning but I try to make it like bigger for everyone but it has to make the most sense okay so this is actually from an image from cloud cloud players article on what a content delivery network is what we can see is you have the origin server that's the orange one that all the orange arrows point to and then you have the cdn server so those are the blue rectangles and then you have the users with their little fake laptops so in the case of using a cdn what it does is it takes those images JavaScript files CSS files and it stores them on all of those cdn servers and there's more than these this shows five just so the images and through spammy but it would it would have cloud there has I imagine probably several dozen around the world so what ends up happening is you're always going to be close to a cdn server or relatively close to a cdn server so when you visit that website in Toronto and get the HTML file and your browser looks or it says oh I need seven images two CSS files and four JavaScript files the request goes to a local cdn that your request gets to a lot faster it has a very fast time to first bite and it delivers those assets really quickly a content delivery network so we understand the content part the network part the delivery part is these are optimized to deliver the data to the user very quickly the whole idea is to get that content to the user as quickly as possible and cdn are used behind the scenes all over the place discord has a cdn so anything that is like all the images and stuff like that that are part of discord whether that's user avatars whether that's you know discord banners images that are uploaded into into discord itself they're all spread around on discord cdn amazon uses a cdn extensively so that they can deliver web pages very quickly if you think of an amazon web page it should be slow to low because they're they're they have like 50 images and they're huge but their cdn delivers that now that that content very very quickly youtube is a great example youtube is delivering videos which are huge files but they deliver through their video cdn quickly so this is a way to improve performance and understand what a cdn is will help with when we start talking about versal and netlify because they they expand upon this oh okay oh yeah hello everyone how's it going and that's exciting i look look down look away and everybody comes to show up i appreciate that and hello hello all your beautiful humans we are hanging out talking about oh it's cutting garden yay well raiden run thanks for coming over we are talking about hosting because if y'all want to see a really fun tweet that i may or may not have made early or last week that was slightly embarrassing of when you feel like you're getting stuff and then you really don't that is what we are working on learning about with and anybody that doesn't have twitter nor want to this is the tweet of so when something gets deployed on versal or netlify are they actually hosting this site or they not because it's gaining a grabbing the content from get hub a lot of that like kind of weird knowledge comes from my time at godaddy i was there for five years i was in hosting it fails in support and it was much more taught about like how do you talk about it how do you sell it to people that are not normally as technical we'll go with that so it was a really hard comparison to what i've been learning so far since having teach gen tech of this is what it actually is and to catch you up and Roy now we're going to see if i can knowledge check myself we are going over we started with just a bit of godaddy thing so that way we could go okay cool get my like based knowledge out there and get an understanding check of like you know a website at least needs html got it and yes y'all i do know about domains and ssls and you know dns and all that it's helpful when talking to a customer but not always helpful when i'm just trying to get level up my technical expertise so yes we might go through some basics uh we talked about that there is many different servers in a past dream with ben gamble i've talked about uh i'm learning a lot more about data and types of data because data is one of those things that a lot of people talk about yet not always go into detail about and you can see a bit more about that here and to keep going down the list we started talking about shared hosting it's like when we somebody decides that they want to sell the seats in an airplane but then sell more seats and they actually have room for hoping not everybody shows up and that's what shared hosting does a lot of time uh and then we talked about manor's wordpress vp vps of like virtual private server dedicated servers and right now we are going on to cdn's and caching and what cdn's do is that a good recap that's yeah that's a solid recap wait and thank you everyone for the follows i appreciate it and as it heads up this week particularly we are talking about yes a lot of my channel is towards beginners i'm learning all of this slide this week is like really really beginner friendly because tomorrow we're also talking about what is an api and today we're talking about hosting um so a little bit more of the beginner level than some of our other streams where we talk about what are some of the more technical ones that have talked about i'm trying to think uh what's your picture oh yeah we talk about tiscript every other week i really enjoy tiscript uh that one's fun and yeah yeah so we do a lot of random topics kubernetes docker oh yeah okay back to cdn world all right so we have our content delivery network cloud smr cloud cloud flare gave us this very very lovely description of of photo of how it works uh around how close you are to the original server based on a cdn will repeat it would you say no they literally copy the files it's yeah it's they so like your all the cdn nodes will have copies of those files and till there's a new copy available um so when you there's options for like when you're updating your site to invalidate your cdn cache which basically says okay well let's go and get new copies of all of that all of those files that tosses deals often and gets the new copies but yeah i know i literally the the assets that are being cash on the cdn are copied from the origin server and then stored on the cdn okay and they're like i'm simplifying it simplifying how they get there because actually typically what happens is typically the first visitor from from afar will will connect to a cdn node the cdn node will typically see are those assets cash if not then it will go and get them from the origin server cash them and send them to the user at the same time but you know like for how it works that's we don't I don't really want to get too much into that um the cdn is a cache it's not it's like oh yeah yeah no matter what okay yep that's the only minute since i've um because it i just remember having to like talk people through having to clear at the cdn but then this is kind of went to another question of what about site lock is the i don't even know if site lock is still a thing let's let's find out is what i'm remembering as having like it didn't know where but then it also had a cdn as well and it's something that go daddy worked with and i don't know if that is accurate at all uh oh hi oh looks like pollution oh well that's i wanted the drop down thanks but no thanks yeah so it includes a content delivery network yeah so it does the it does a lot of security stuff that'll look for um now where uh work so the one of the things like just this is a quick tangent one of the things with WordPress sites is a lot of times they're not updated regularly um and then when they fall behind their plugins uh we'll have security vulnerabilities exposed those plugins don't get updated and the site is vulnerable to an attack if you ever go and look through the logs for WordPress site you'll see dozens hundreds of scripted attacks so the you know people who are who have malicious intent will just go and try to find all of these domains that they can and we'll just take all of these vulnerability attacks and just script them and just run them blindly against the site they don't know if your WordPress site has WooCommerce they don't know if it has plugin x then even know if your site has WordPress they just run a bunch of attacks to see if any of them work um is that going to be different different than a DDoS attack yes okay yeah so these ones are attempting to use the vulnerability to gain you know access or control of your site right so they can change the content so they can you know display some crypto scam or whatever it is they want to do um you know in some way take over the site and take over the content um whereas DDoS is uh so like DOS is denial of service DDoS is distributed to the channel of service meaning there's multiple computers involved in the attack and the whole idea with DDoS is just that it makes your site non-responsive so that your services can't be used by anyone so you know someone was trying to DDoS ping uh over the last couple of weeks um and the whole if they had had been successful which they weren't they were not even close to successful but if they had been successful ping wouldn't have worked it would have been non-responsive because it would have been overloaded interesting okay well uh there is lots to learn there and I'm just kind of putting these as side notes literally they're off to the side yeah they're definitely intense we definitely want to spend long yeah so if we go back to the scene yep so the scene and we're I think we're we're done with we're good there I think the last piece of the go daddy host thing to talk about um is just super simple and that's how do you get your WordPress site on to go daddy right you you know you set it up locally you have it working um or maybe you just need to move it from one hosting site to another you would upload that via ftp which is file transfer protocol and that copies the files from your computer or from another computer to your server so you know something really funny what while working at go daddy I did not realize that you built things on your computer and then uploaded them like local host 3000 or whatever you set your local host up no idea yep did not know that was a thing with with WordPress it doesn't need to be because like a huge part of the WordPress marketplace is install WordPress install somewhere between five and 30 plugins I would say depending on your setup and they take care of all of the kind of functionality um and that includes and then you also have themes which can like the advanced themes can let you do all of the visual configuration right in WordPress so you don't need to edit CSS files you just go into the theme file and you can uh or the theme admin panel and you can you know configure the visual side of your site so WordPress allows people to to build a site completely without needing to do local development or to do any like actual programming um a huge number of WordPress sites exist and no one has done any programming specific to their site obviously some will build all the plugins and WordPress and that's not but no one did any specific engineer related to their site they just you know plugins were installed and whether then like interfaces dashboards inside WordPress were used and everything gets configured but obviously in some cases especially bigger sites there's lots of custom development that's done and the key here is with with FTP because we'll talk about it from a different angle later is there has to be some way to move the files if you're doing local development to the host and FTP is one option I'm missing a word move site to site and y'all for who are new to the channel again welcome as a heads up I am wonderfully horribly dyslexic and I miss words I also misspell like almost everything so if you like chat what are you writing before warned I will have probably just didn't even realize I did it so feel free to let me know if something is misspelled or missing something as I write my notes on all this or if something is not legible and again thank you everybody for the follows I see the last to you is mark and lurk lurk mode activated I like that name that is a pretty dope name all right so FTP moves shit we got that isn't there a size limit for FTP like you can't do like over 25 megabytes or something and there can be a size limit based on server configuration but generally speaking there's no like the FTP protocol doesn't have an actual size limit okay cool and you said there was something else you wanted to mention about that one no that's all that's just yeah that's just how to get the files from the local computer to to the server because we will kind of talk about that process from a different angle we get to want to talk about herself uh file limit I'll size limit okay where do we go to now now we can go to verse oh my goodness look at all these notes I'm gonna maybe move on this stuff over maybe that doesn't select everything and this gracious there we go and we'll just move it up here with everything else hmm yay okay that was fun that was shared hosting and now we're on verse cell let's get excited about some verse cell so verse cell is a tool that wraps a bunch of these things together um and it does it to make it easier to manage your site it makes it easier to develop your site and so that you don't have to worry about a lot of this stuff okay so we'll start with we'll kind of work backwards because with verse cell you're not going to create there's no like when you know when you're setting up to verse cell you don't get to create a site on verse cell right uh you know you have to transfer something to verse cell and the way that that's done is is GitHub or you can just get lab or bitpuck it I think is the other one I can remember the proper name for it and so this is what we talk about the difference between FTP and you know Git so Git is get is a way to take essentially to take snapshots of your code as you work on it and then also to take those snapshots and move them to a remote repo where they can be merged with work from other people so if you and I are working on something together and we have that in the same Git repo and we both upload changes to the site those changes can be merged together Git tries to be smart about it and it says oh well gen work time indexhtml and roi work time index.cs there's no conflicts there I can just merge these but let's say we both work on index
html and roi work time index.cs there's no conflicts there I can just merge these but let's say we both work on indexhtml it'll be like okay well what what lines and what code did gen change oh she changed lines 50 to 100 roi worked on 173 to 300 okay there's no conflict there they worked on different code I can merge those in some cases you work on the same code and then you have to do a you know a merge conflict where you have to choose what code to keep or how to merge those lines but ultimately you end up with those different pieces of work being merged into one on that remote repo and then once that's done everyone who's working on the project can download the new copy via get pull and everyone has the most up to date code so Git obviously has a bunch of things in place to transfer the files from your local computer to a remote repo which is going back to the servers we were talking about you have a get server GitHub is a get server you could if you had a company that was large enough for one to manage it themselves you could install a get server on your own computer your own like you know harbor server and then have your own internal repo okay so um so you can have like just to because I know I was writing at the same time I have to repeat that back to you we can they use a get server and you can have your own get server if you want to yeah like uh like bare metal get server or a um or just like a larger account I guess you well you can you install you can install it on however you want it you could do it on a bare metal server where you would have to sell the operating system first or you could do it on a VPS there's certainly a bunch of different ways to do that but you can you can run your own get server if you wanted to and do you get this question of uh oh desktop okay uh no get desktop is a client application as far as I know I haven't I don't use the GUI ones too often but I'm pretty sure get desktop is a hundred percent client side I don't think it runs any server side stuff oh this is a link to the to the get docs on setting up the server I don't really want to go into that too much because it's not super relevant to work to like kind of the the specifics of what we're talking about today but essentially you're setting up um you know a server using just command line get um and then and then anyone can connect to that and use that as a everypo um a huge number of people you use GitHub because obviously GitHub already has a bunch of stuff in place um to to handle that uh you know you can use this up projects you can set up organizations you have you can give access to people um tons of stuff and then you also don't have to worry about um you know managing all of the costs if you're if your repo is large and stuff like that GitHub is is pretty like it's free for the most part if you need to pay for it it's pretty pretty reasonably priced as well um unless you you know unless you get into an enterprise or whatever and if you're in enterprise you're making enough money hopefully for your company that the enter the cost of the enterprise doesn't even matter but the key is that at some point you end up with you know a remote repository we'll talk about it from GitHub side of things um you end up with a remote repository that has the code for your web app your project in place and usually that most up-to-date is on something like your main branch um so for cell when you're setting up for cell in order to to make things easier on developers to make things easier to set up for cell initially and to make things easy to to use for cell and to update for cell over time it connects with something like your GitHub account or specifically your repo and your GitHub account so when you set up for cell you'll you'll link it to a specific repo it assumes by default that the most up-to-date code is in main you can change that it does a really good job of of detecting what framework you're using so if you if your repo is solid JS it's going to recognize that it's solid JS if it's next
html it'll be like okay well what what lines and what code did gen change oh she changed lines 50 to 100 roi worked on 173 to 300 okay there's no conflict there they worked on different code I can merge those in some cases you work on the same code and then you have to do a you know a merge conflict where you have to choose what code to keep or how to merge those lines but ultimately you end up with those different pieces of work being merged into one on that remote repo and then once that's done everyone who's working on the project can download the new copy via get pull and everyone has the most up to date code so Git obviously has a bunch of things in place to transfer the files from your local computer to a remote repo which is going back to the servers we were talking about you have a get server GitHub is a get server you could if you had a company that was large enough for one to manage it themselves you could install a get server on your own computer your own like you know harbor server and then have your own internal repo okay so um so you can have like just to because I know I was writing at the same time I have to repeat that back to you we can they use a get server and you can have your own get server if you want to yeah like uh like bare metal get server or a um or just like a larger account I guess you well you can you install you can install it on however you want it you could do it on a bare metal server where you would have to sell the operating system first or you could do it on a VPS there's certainly a bunch of different ways to do that but you can you can run your own get server if you wanted to and do you get this question of uh oh desktop okay uh no get desktop is a client application as far as I know I haven't I don't use the GUI ones too often but I'm pretty sure get desktop is a hundred percent client side I don't think it runs any server side stuff oh this is a link to the to the get docs on setting up the server I don't really want to go into that too much because it's not super relevant to work to like kind of the the specifics of what we're talking about today but essentially you're setting up um you know a server using just command line get um and then and then anyone can connect to that and use that as a everypo um a huge number of people you use GitHub because obviously GitHub already has a bunch of stuff in place um to to handle that uh you know you can use this up projects you can set up organizations you have you can give access to people um tons of stuff and then you also don't have to worry about um you know managing all of the costs if you're if your repo is large and stuff like that GitHub is is pretty like it's free for the most part if you need to pay for it it's pretty pretty reasonably priced as well um unless you you know unless you get into an enterprise or whatever and if you're in enterprise you're making enough money hopefully for your company that the enter the cost of the enterprise doesn't even matter but the key is that at some point you end up with you know a remote repository we'll talk about it from GitHub side of things um you end up with a remote repository that has the code for your web app your project in place and usually that most up-to-date is on something like your main branch um so for cell when you're setting up for cell in order to to make things easier on developers to make things easier to set up for cell initially and to make things easy to to use for cell and to update for cell over time it connects with something like your GitHub account or specifically your repo and your GitHub account so when you set up for cell you'll you'll link it to a specific repo it assumes by default that the most up-to-date code is in main you can change that it does a really good job of of detecting what framework you're using so if you if your repo is solid JS it's going to recognize that it's solid JS if it's nextjs it'll it'll 100% recognize next.js um because if for anyone who's listening who doesn't know next
js it'll it'll 100% recognize next.js um because if for anyone who's listening who doesn't know nextjs is is written and and managed by for cell um so they obviously they obviously make sure next works flawlessly um it'll recognize you know remix or anything like that um and then when it recognizes that stuff it automatically will use the the default build and you know build commands for that um so it configures the projects of generally if you're using like any sort of normal framework um and you haven't done any sort of weird configuration changes it can it can detect that and set that up for you and it takes just a few seconds so what per cell will do is it watches GitHub I shall give you a second to uh I want to say language it's uh framework uh yeah you're right framework or uh yeah it's called framework technically it can also do like um you can you can technically do like create read act app which isn't a framework but it doesn't really matter framework's line uh to answer returners question you could deploy next
js is is written and and managed by for cell um so they obviously they obviously make sure next works flawlessly um it'll recognize you know remix or anything like that um and then when it recognizes that stuff it automatically will use the the default build and you know build commands for that um so it configures the projects of generally if you're using like any sort of normal framework um and you haven't done any sort of weird configuration changes it can it can detect that and set that up for you and it takes just a few seconds so what per cell will do is it watches GitHub I shall give you a second to uh I want to say language it's uh framework uh yeah you're right framework or uh yeah it's called framework technically it can also do like um you can you can technically do like create read act app which isn't a framework but it doesn't really matter framework's line uh to answer returners question you could deploy nextjs very easily to to you should be able to put it very easily onto for cell or nullify you just have to add it to a GitHub repo and then connect for cell and nullify to that GitHub repo that should be deployed without any issue um that's what I was just thinking because if we go to not Verizon we don't want to go to Verizon I used to work there too that's fine we'll just uh okay we don't need to look at that but like do you have um returner do you have it on a server or do you have it on just local because I don't know about get desktop if it's not set up correctly because it does ask you to link it to your GitHub like you have to authenticate sure we're gonna say that's all right you have to authenticate into your GitHub for example and tell it which one to load to so that's how I have mindset up and it tells me which GitHub project that I need it to go to which repo to go to
js very easily to to you should be able to put it very easily onto for cell or nullify you just have to add it to a GitHub repo and then connect for cell and nullify to that GitHub repo that should be deployed without any issue um that's what I was just thinking because if we go to not Verizon we don't want to go to Verizon I used to work there too that's fine we'll just uh okay we don't need to look at that but like do you have um returner do you have it on a server or do you have it on just local because I don't know about get desktop if it's not set up correctly because it does ask you to link it to your GitHub like you have to authenticate sure we're gonna say that's all right you have to authenticate into your GitHub for example and tell it which one to load to so that's how I have mindset up and it tells me which GitHub project that I need it to go to which repo to go to Yep um returner I would say that if you're getting errors there's there's probably a couple of things that you can look at number one if you have put anything into a
Yep um returner I would say that if you're getting errors there's there's probably a couple of things that you can look at number one if you have put anything into aemb file you want to go into Vercel or Netlify to the project where you're trying to deploy and there'll be settings Gen can show us she goes to click on website on Vercel. Where oh like I don't know where that is there's a lot of things. Click on settings
emb file you want to go into Vercel or Netlify to the project where you're trying to deploy and there'll be settings Gen can show us she goes to click on website on Vercel. Where oh like I don't know where that is there's a lot of things. Click on settings Click on settings. And then environment variables so if you have anything in a .emb file you would go in here in Vercel and there's an equivalent in Netlify and you would add those key value pairs in here your
Click on settings. And then environment variables so if you have anything in a .emb file you would go in here in Vercel and there's an equivalent in Netlify and you would add those key value pairs in here youremb file won't be getting uploaded to or shouldn't be getting uploaded to GitHub and even if it is Vercel won't read the contents of it so you want to put those the
emb file won't be getting uploaded to or shouldn't be getting uploaded to GitHub and even if it is Vercel won't read the contents of it so you want to put those theemb values in here that's one thing to look at locally you can run your next build command so that should be mpm run build or mpx space next space build and it'll build that's the same process that happens when it tries to deploy on next the build process is different than the mpm run dev the development server the mpm build mpm run build is more strict and will often error out on things that the build the development server doesn't error on so if you get errors doing the mpm run build you can check those errors and look at resolving them they could be TypeScript errors or things like ReactStrick related errors or stuff like that so you can you can take a look at that if you can do an mpm run build without errors and you've uploaded your 
emb values in here that's one thing to look at locally you can run your next build command so that should be mpm run build or mpx space next space build and it'll build that's the same process that happens when it tries to deploy on next the build process is different than the mpm run dev the development server the mpm build mpm run build is more strict and will often error out on things that the build the development server doesn't error on so if you get errors doing the mpm run build you can check those errors and look at resolving them they could be TypeScript errors or things like ReactStrick related errors or stuff like that so you can you can take a look at that if you can do an mpm run build without errors and you've uploaded your emb files you should be able to deploy without problems but yeah I don't certainly want to help you but at the same time it's we don't want to turn this into a troubleshooting stream at least not yet maybe later on after maybe later on yeah eventually um it's just something that I will say that I've run into I built my site with astro and I have had it where it would run locally but it wouldn't deploy on herself that's why I was just looking up my logs and I don't remember what it was but it took me like an hour to of that to Google to try to figure out what it was and it was like a file wasn't uploading properly or something like that I don't remember but yes it can happen but those logs will definitely definitely help you out yeah so with with all of this is when you when you're getting set up um if you if you're looking at trying to diagnose problems one of the first things you should always do with any of the frameworks is run their build command so when you run mpm run dev on your next or your astro or whatever locally it runs a development server a development server doesn't build the js bundles and the css bundles the same way as you need for an actual the develop like a development a actual production server you just reminded me um sorry to interrupts but it was I think it was a javascript error that I had to update my javascript because it wasn't reading the most recent version of like type script or something like that yeah it could be anything like that the key is the build step is when you do mpm run build it's going to build all of those javascript bundles css files etc the way it would for deploying it um so what have basically the differences when you are developing it doesn't build those files because what it wants to be able to do is on on most of frameworks let's do a hot module reload meaning when you make a change on one of your files and you save it your development server says oh you changed this file or you changed that file it reads those changes and it automatically injects them into your you know your your development server and what you're looking at locally so if you change your css and you save it will automatically update your project and where you're looking at it locally in in the browser like logos 3000 or whatever you'll immediately see that update and be able to see what's going on um but that part of that is because it doesn't go and build a css file uh you know in the the sense of the way it will when it gets deployed but the build command will do that so it'll take and build an actual css file so if you're working with say tailwind and you do an mpm run build command and you look at the build folder after you'll find an actual index that css or styles that css wherever you call it you'll you'll find that actual file with all of your styles in it and you you know you could take a look at them and you'll find the actual rendered html file you'll find like it's it's going to be a small file but it'll be there you'll find your javascript files and they'll all be in their their build one so yeah anytime you're having a problem deploying do your build command locally and check your errors because that's one of the things that's going to happen when you deploy in vrsel which is what we're going to talk about so you've said if you're vrsel account you've linked it to your um linked it to your GitHub repo right yes you what what vrsel is going to do is say okay I am going to take a copy of the code that is in the main branch and I am going pull it over to vrsel I am going to do your the mpm install install the packages I then I'm going to do an mpm run build or or equivalent commands like and I'll keep saying mpm run build but that can be different depending on the framework actually um it'll do the mpm run build command and build the deployable assets and then we'll take that and we will add it to our edge network which we'll talk about in more detail and we'll make that live so people can can access the site so if you're in vrsel you can look at your build logs and that's the process of what it's doing there um did I just say I feel like I wasn't that far off because it basically I was like yo it's just running npm run build right but you know the edge network you also in your original tweet had thought it was running it on GitHub which it's not because it's pulling the information from GitHub because I didn't know about edge network because I was like well this is this the run build this before the edge network yeah yeah and that's why I'm like I didn't I didn't know it existed so I was like where else could the content have come from right that's why I'm excited to jump right me yeah okay so yeah so then it takes those those uh built files so you you know you have your core HTML file in the case of like something like react um as all your CSS files your JavaScript files your images etc and it makes them available for people to visit the site and so now people can visit your website and and and access it now this is where it starts to get a little more complicated because you know when we were talking go daddy and WordPress we talked about server side rendering everything that's php is server side rendered because the browser can't render it JavaScript gets into this uh weird not weird but this more complicated situation where you can have server side rendered like basically like php you can have static site generation which you can also do with php and WordPress but it also includes client site or what's uh often referred to as single page applications okay um if you're using next by default it is a single page application a spa if you're using astro by default it's a static site generator by default I think actually only the static site generator so the key here is depending on the framework and depending on how you have it configured the behavior can be a little bit different so we'll talk about next and it's like default version first and it's so it's it's a spa single page application so what that means is there's an index
emb files you should be able to deploy without problems but yeah I don't certainly want to help you but at the same time it's we don't want to turn this into a troubleshooting stream at least not yet maybe later on after maybe later on yeah eventually um it's just something that I will say that I've run into I built my site with astro and I have had it where it would run locally but it wouldn't deploy on herself that's why I was just looking up my logs and I don't remember what it was but it took me like an hour to of that to Google to try to figure out what it was and it was like a file wasn't uploading properly or something like that I don't remember but yes it can happen but those logs will definitely definitely help you out yeah so with with all of this is when you when you're getting set up um if you if you're looking at trying to diagnose problems one of the first things you should always do with any of the frameworks is run their build command so when you run mpm run dev on your next or your astro or whatever locally it runs a development server a development server doesn't build the js bundles and the css bundles the same way as you need for an actual the develop like a development a actual production server you just reminded me um sorry to interrupts but it was I think it was a javascript error that I had to update my javascript because it wasn't reading the most recent version of like type script or something like that yeah it could be anything like that the key is the build step is when you do mpm run build it's going to build all of those javascript bundles css files etc the way it would for deploying it um so what have basically the differences when you are developing it doesn't build those files because what it wants to be able to do is on on most of frameworks let's do a hot module reload meaning when you make a change on one of your files and you save it your development server says oh you changed this file or you changed that file it reads those changes and it automatically injects them into your you know your your development server and what you're looking at locally so if you change your css and you save it will automatically update your project and where you're looking at it locally in in the browser like logos 3000 or whatever you'll immediately see that update and be able to see what's going on um but that part of that is because it doesn't go and build a css file uh you know in the the sense of the way it will when it gets deployed but the build command will do that so it'll take and build an actual css file so if you're working with say tailwind and you do an mpm run build command and you look at the build folder after you'll find an actual index that css or styles that css wherever you call it you'll you'll find that actual file with all of your styles in it and you you know you could take a look at them and you'll find the actual rendered html file you'll find like it's it's going to be a small file but it'll be there you'll find your javascript files and they'll all be in their their build one so yeah anytime you're having a problem deploying do your build command locally and check your errors because that's one of the things that's going to happen when you deploy in vrsel which is what we're going to talk about so you've said if you're vrsel account you've linked it to your um linked it to your GitHub repo right yes you what what vrsel is going to do is say okay I am going to take a copy of the code that is in the main branch and I am going pull it over to vrsel I am going to do your the mpm install install the packages I then I'm going to do an mpm run build or or equivalent commands like and I'll keep saying mpm run build but that can be different depending on the framework actually um it'll do the mpm run build command and build the deployable assets and then we'll take that and we will add it to our edge network which we'll talk about in more detail and we'll make that live so people can can access the site so if you're in vrsel you can look at your build logs and that's the process of what it's doing there um did I just say I feel like I wasn't that far off because it basically I was like yo it's just running npm run build right but you know the edge network you also in your original tweet had thought it was running it on GitHub which it's not because it's pulling the information from GitHub because I didn't know about edge network because I was like well this is this the run build this before the edge network yeah yeah and that's why I'm like I didn't I didn't know it existed so I was like where else could the content have come from right that's why I'm excited to jump right me yeah okay so yeah so then it takes those those uh built files so you you know you have your core HTML file in the case of like something like react um as all your CSS files your JavaScript files your images etc and it makes them available for people to visit the site and so now people can visit your website and and and access it now this is where it starts to get a little more complicated because you know when we were talking go daddy and WordPress we talked about server side rendering everything that's php is server side rendered because the browser can't render it JavaScript gets into this uh weird not weird but this more complicated situation where you can have server side rendered like basically like php you can have static site generation which you can also do with php and WordPress but it also includes client site or what's uh often referred to as single page applications okay um if you're using next by default it is a single page application a spa if you're using astro by default it's a static site generator by default I think actually only the static site generator so the key here is depending on the framework and depending on how you have it configured the behavior can be a little bit different so we'll talk about next and it's like default version first and it's so it's it's a spa single page application so what that means is there's an indexhtml file it has some SEO stuff and then it just has like an empty div with an ID and the JavaScript that's part of react will look for that ID and then it the JavaScript will create all of these divs and headers and stuff like that um you just said it was just a single page application. Yep
html file it has some SEO stuff and then it just has like an empty div with an ID and the JavaScript that's part of react will look for that ID and then it the JavaScript will create all of these divs and headers and stuff like that um you just said it was just a single page application. Yep Yep that's what like if you go and look at uh next you'll find that there's a public folder and in actually next not like that I don't think I can't remember anymore the musting of the frameworks I think next just auto generate it now but you end up with just a single app look at an index page with an empty div where the content will be injected and so the application will um which is the JavaScript will generate the page on the client so the browser is running the JavaScript and that JavaScript says hey creative div okay inside of that div create another div and give it these CSS classes and inside of that div give it a h1 tag and then this text like teach gen tech and then close that and close that div and let's create another div and call that give that some some other CSS classes and then inside of there let's add this content for a blog post and it's a render all of this and then it takes all of that rendered HTML and it shoves it into that empty div
Yep that's what like if you go and look at uh next you'll find that there's a public folder and in actually next not like that I don't think I can't remember anymore the musting of the frameworks I think next just auto generate it now but you end up with just a single app look at an index page with an empty div where the content will be injected and so the application will um which is the JavaScript will generate the page on the client so the browser is running the JavaScript and that JavaScript says hey creative div okay inside of that div create another div and give it these CSS classes and inside of that div give it a h1 tag and then this text like teach gen tech and then close that and close that div and let's create another div and call that give that some some other CSS classes and then inside of there let's add this content for a blog post and it's a render all of this and then it takes all of that rendered HTML and it shoves it into that empty div Okay and then if the the client clicks on another link in the application so they want to go to a different page it renders that new page takes all the content for that new page erases what's in the div that top level div in the index file and shoves in the new HTML
Okay and then if the the client clicks on another link in the application so they want to go to a different page it renders that new page takes all the content for that new page erases what's in the div that top level div in the index file and shoves in the new HTML Oh okay hold on before you keep going in in in in let me rewrite this so I can in in in in in in in okay so it would be an index dot yes with index h and oh it would be index dot yeah okay let's add ht and oh and then it would be with empty empty div and then if I then the rest of them would be like a dot j as like it could be gandot j s and no it wouldn't be anything like that no so that's that's where you you want to this is what's complicated with sp a there would be no JavaScript files or HTML files that relate to what we think of as pages it's a single page index
Oh okay hold on before you keep going in in in in let me rewrite this so I can in in in in in in in okay so it would be an index dot yes with index h and oh it would be index dot yeah okay let's add ht and oh and then it would be with empty empty div and then if I then the rest of them would be like a dot j as like it could be gandot j s and no it wouldn't be anything like that no so that's that's where you you want to this is what's complicated with sp a there would be no JavaScript files or HTML files that relate to what we think of as pages it's a single page indexhtml what happens is inside of the JavaScript code it says what route is the user trying to access so the you know slashes your your main route like what you would get if you went to teach ndeck tech
html what happens is inside of the JavaScript code it says what route is the user trying to access so the you know slashes your your main route like what you would get if you went to teach ndeck techcom and then there would be another route slash blog or slash about or slash content and so you have you have some sort of router package that manages that in the case of next that's file based routing so this is people get confused with next because you create these files like oh if I want to have a contact page I create a file called contact contact dot j s or j s x or t s or t s x but there's not actually a page when that next application is built if it's being built as a spa all of that JavaScript just gets moved into a bundle and then there's router that says oh you're trying to go to slash blog will render the HTML for slash blog but there's no corresponding file it's all handled in JavaScript
com and then there would be another route slash blog or slash about or slash content and so you have you have some sort of router package that manages that in the case of next that's file based routing so this is people get confused with next because you create these files like oh if I want to have a contact page I create a file called contact contact dot j s or j s x or t s or t s x but there's not actually a page when that next application is built if it's being built as a spa all of that JavaScript just gets moved into a bundle and then there's router that says oh you're trying to go to slash blog will render the HTML for slash blog but there's no corresponding file it's all handled in JavaScript Where would you write it? Write what? The information that it's rendering
Where would you write it? Write what? The information that it's rendering You write it in in the case of next you would write it in a blog dot t s file or a slash blog slash whatever file but when it's the key is that during the build process all of that JavaScript gets amalgamated into just bundles that get loaded by index. HTML
You write it in in the case of next you would write it in a blog dot t s file or a slash blog slash whatever file but when it's the key is that during the build process all of that JavaScript gets amalgamated into just bundles that get loaded by index. HTML HTML. Okay so I think I understand this better now. So it's going to be a blog like this it would be we'll say um teach and tech dot j ts and then whatever is here on change colors. Yay colors
HTML. Okay so I think I understand this better now. So it's going to be a blog like this it would be we'll say um teach and tech dot j ts and then whatever is here on change colors. Yay colors Yay colors. Let's do purple whatever is written in file goodness gracious please ignore the dog and yay thank you for another follow uh whatever is written in the file will be built in the index dot HTML in that dev. Not quick so let's move that blog thing down
Yay colors. Let's do purple whatever is written in file goodness gracious please ignore the dog and yay thank you for another follow uh whatever is written in the file will be built in the index dot HTML in that dev. Not quick so let's move that blog thing down Okay give me a second to get the dog out of the room so yes. Doggo you need to go this way. Oh. Yeah. She has a little lady so she's going to be a lady there. Kick her out of my office for now. Okay so you said move the blog. Yeah move that down so we have some room. Now I gotta move my p back
Okay give me a second to get the dog out of the room so yes. Doggo you need to go this way. Oh. Yeah. She has a little lady so she's going to be a lady there. Kick her out of my office for now. Okay so you said move the blog. Yeah move that down so we have some room. Now I gotta move my p back There we go. All right so what happens is when we do the build command you'll end up with something like index.js so we'll call it index.js it may it can be named differently but index.jsm will load index.js Okay so you're going to do like I would do like a little like L arrow down from index
There we go. All right so what happens is when we do the build command you'll end up with something like index.js so we'll call it index.js it may it can be named differently but index.jsm will load index.js Okay so you're going to do like I would do like a little like L arrow down from indexjsmell and say index.js and then you can just in brackets say like create a journey build step
jsmell and say index.js and then you can just in brackets say like create a journey build step Okay and then everything below so your your blog page your index you like your your main page your video page your blog articles your contact page everything else during the build step will get turned into JavaScript and get put into index.js
Okay and then everything below so your your blog page your index you like your your main page your video page your blog articles your contact page everything else during the build step will get turned into JavaScript and get put into index.jsjs. Again, simple find that process because it will probably split index.js into multiple files to keep them bring too big and they'll be tree shaking and stuff like that but we don't we don't need to get into that in this case
js. Again, simple find that process because it will probably split index.js into multiple files to keep them bring too big and they'll be tree shaking and stuff like that but we don't we don't need to get into that in this case We're just the general senses all of that react code is converted to JavaScript playing JavaScript and put into index.js. Okay this is totally making sense
We're just the general senses all of that react code is converted to JavaScript playing JavaScript and put into index.js. Okay this is totally making sense Just gonna move stuff so okay and then you said let me move these notes to another page move down here thank you and then you said anything else you wanted to talk about after the SPAs? Yeah so you now have the index
Just gonna move stuff so okay and then you said let me move these notes to another page move down here thank you and then you said anything else you wanted to talk about after the SPAs? Yeah so you now have the indexjsmell file you have your JavaScript files you have your CSS files so those get served to the client so you get the client gets the index
jsmell file you have your JavaScript files you have your CSS files so those get served to the client so you get the client gets the indexjsmell file it says hey go get these JavaScript files go get these CSS files and those images files and all of that code is constantly executed on the client right so it's a SPAs our client side so everything is on that user's computer
jsmell file it says hey go get these JavaScript files go get these CSS files and those images files and all of that code is constantly executed on the client right so it's a SPAs our client side so everything is on that user's computer This is one of the reasons that for example something like Prisma won't run in this part of your application because it's client side and in order for Prisma to run you would have to send every user the username password and access information to your database and then someone who's being malicious could just read that and be like oh well there's the username and password to access Jen's database and I can just go in there and delete her stuff from modify it and now all the sudden her front page shows pictures of Elon and cryptocurrency scams and Jen's like oh no that's not what I wanted to show the world that sucks so yeah this is all all in the client side and again client side means they're your browser specifically browser okay all right so now JavaScript applications can also be server side rendered so server side rendered means that you when a request comes in for a particular page the server will load the JavaScript for that page and render it on the server so this is similar to WordPress right when you visit a page for WordPress the web server renders that page and sends it to the user so the same process is happening here you know obviously different language and whatnot but the same general process it is taking that that route that you're asking for so slash blog slash tj s tj t and says hey what JavaScript do I need to make to render this page okay let's execute that JavaScript create the index
This is one of the reasons that for example something like Prisma won't run in this part of your application because it's client side and in order for Prisma to run you would have to send every user the username password and access information to your database and then someone who's being malicious could just read that and be like oh well there's the username and password to access Jen's database and I can just go in there and delete her stuff from modify it and now all the sudden her front page shows pictures of Elon and cryptocurrency scams and Jen's like oh no that's not what I wanted to show the world that sucks so yeah this is all all in the client side and again client side means they're your browser specifically browser okay all right so now JavaScript applications can also be server side rendered so server side rendered means that you when a request comes in for a particular page the server will load the JavaScript for that page and render it on the server so this is similar to WordPress right when you visit a page for WordPress the web server renders that page and sends it to the user so the same process is happening here you know obviously different language and whatnot but the same general process it is taking that that route that you're asking for so slash blog slash tj s tj t and says hey what JavaScript do I need to make to render this page okay let's execute that JavaScript create the indextjml or not the index.tj.t file and then send that to that that complete html file to the user
tjml or not the index.tj.t file and then send that to that that complete html file to the user Okay so and hello hello happy to see you um okay so I think where I'm a little stuck and I don't I honestly don't know if I had this on the show which is something that of course like we hear about client side or server side or in my head hydration goes into this
Okay so and hello hello happy to see you um okay so I think where I'm a little stuck and I don't I honestly don't know if I had this on the show which is something that of course like we hear about client side or server side or in my head hydration goes into this We're going to talk to high it's a server side rendering will have hard duration we're going to get there in a second I wanted to make just waiting for you to kind of ask the questions about server side rendering
We're going to talk to high it's a server side rendering will have hard duration we're going to get there in a second I wanted to make just waiting for you to kind of ask the questions about server side rendering I guess what I don't get is when it's on the client side does that mean local only? What do you mean by local only
I guess what I don't get is when it's on the client side does that mean local only? What do you mean by local only Um because you said it has to do with our browser I guess where I'm having a hard time picturing is if it's on client side like it's not going to load till it gets to their computer and then it's going to load where this server side is going to load before it even goes through
Um because you said it has to do with our browser I guess where I'm having a hard time picturing is if it's on client side like it's not going to load till it gets to their computer and then it's going to load where this server side is going to load before it even goes through Correct. The interwebs. Correct. After interwebs before interwebs. Before. Yep. Okay. That is so here's a very simple five person of it. It's super simple but so here's why this matters and why server side rendering is often chosen for performance
Correct. The interwebs. Correct. After interwebs before interwebs. Before. Yep. Okay. That is so here's a very simple five person of it. It's super simple but so here's why this matters and why server side rendering is often chosen for performance So let's say that this SPA app needs to get information from a database right and it's the load blog posts it needs to load user information etc right or whatever the case is right it needs to load information from a database
So let's say that this SPA app needs to get information from a database right and it's the load blog posts it needs to load user information etc right or whatever the case is right it needs to load information from a database As we said generally it won't access the database directly because of security issues. There are a few exceptions like you can do like firestore but generally you don't access your database directly from the client side. So in this case right with the SPA
As we said generally it won't access the database directly because of security issues. There are a few exceptions like you can do like firestore but generally you don't access your database directly from the client side. So in this case right with the SPA Why do you have rent oh right it's right see how you're writing it confusing for a second. So in the case of the SPA you go and visit or like I go and visit teach gen tech right. It sends me the HTML it sends me those JavaScript bundles CSS bundles initial images
Why do you have rent oh right it's right see how you're writing it confusing for a second. So in the case of the SPA you go and visit or like I go and visit teach gen tech right. It sends me the HTML it sends me those JavaScript bundles CSS bundles initial images My browser starts to render that JavaScript and it says oh well in order to display this page correctly you need to go and get the 10 most recent blog posts. So now my browser says okay based on the JavaScript I need to access the web server the API that you're going to talk about tomorrow
My browser starts to render that JavaScript and it says oh well in order to display this page correctly you need to go and get the 10 most recent blog posts. So now my browser says okay based on the JavaScript I need to access the web server the API that you're going to talk about tomorrow So we don't want to go into this too much because you can ask all those API questions tomorrow it'll access the API which is your will be your server side right so in this is where we talk about full stack development right so full stack development you have front end development which is building the pages you have that development which is the server that interacts with the database or third party APIs and then you have full stack that does both
So we don't want to go into this too much because you can ask all those API questions tomorrow it'll access the API which is your will be your server side right so in this is where we talk about full stack development right so full stack development you have front end development which is building the pages you have that development which is the server that interacts with the database or third party APIs and then you have full stack that does both So I thought I was side note just because alien alien. I will get it right one of these days. This is his theme. Although okay yeah that's right he was the one who made that that theme nice
So I thought I was side note just because alien alien. I will get it right one of these days. This is his theme. Although okay yeah that's right he was the one who made that that theme nice Yeah yeah eventually he will be on the show we will see that schedule but I just wanted to you know showcase that because it's very exciting. I really like this theme. Okay please continue
Yeah yeah eventually he will be on the show we will see that schedule but I just wanted to you know showcase that because it's very exciting. I really like this theme. Okay please continue Right so this this SBA says okay well I need to contact the API the back-insurber and get the 10 most recent blog posts
Right so this this SBA says okay well I need to contact the API the back-insurber and get the 10 most recent blog posts Oh I also need to go and get you know whatever some of you know her her three most recent projects I need to get her last five tweets whatever the cases right so it it has to go and get this information
Oh I also need to go and get you know whatever some of you know her her three most recent projects I need to get her last five tweets whatever the cases right so it it has to go and get this information So now it has to send requests to your back-insurber for that information your back-insurber gets that request processes the request and sends that information back using the form of like JSON and then that client will read that JSON take that information so those 10 blog posts and it will say okay here's the information you ask for and it'll it'll render you know your blog preview 10 times one for each of the posts
So now it has to send requests to your back-insurber for that information your back-insurber gets that request processes the request and sends that information back using the form of like JSON and then that client will read that JSON take that information so those 10 blog posts and it will say okay here's the information you ask for and it'll it'll render you know your blog preview 10 times one for each of the posts So now if you're thinking about this in terms of like how how does this affect performance the user had to request the the JavaScript first that had to be sent to the user before the page could be rendered another request had to be sent to the server to go and get this blog post information to get these projects right and then so the client has to sit and wait right so the client's waiting will that process happens and that information returns
So now if you're thinking about this in terms of like how how does this affect performance the user had to request the the JavaScript first that had to be sent to the user before the page could be rendered another request had to be sent to the server to go and get this blog post information to get these projects right and then so the client has to sit and wait right so the client's waiting will that process happens and that information returns Okay then it can render that information and hopefully render the whole page hopefully there's nothing else it needs to do. So server side rendering what happens is because you're rendering on the server the server immediately says I need 10 blog posts
Okay then it can render that information and hopefully render the whole page hopefully there's nothing else it needs to do. So server side rendering what happens is because you're rendering on the server the server immediately says I need 10 blog posts Now in most cases it's going to be faster for the server in this case like Versel to contact the database which is going to be on another another server right so you're learning my SQL you might look at a database that's hosted on something like planet scale
Now in most cases it's going to be faster for the server in this case like Versel to contact the database which is going to be on another another server right so you're learning my SQL you might look at a database that's hosted on something like planet scale Yeah right so your database is on a different physical server than Versel it's on this planet sales server it's almost for sure faster for Versel to contact your database than the client
Yeah right so your database is on a different physical server than Versel it's on this planet sales server it's almost for sure faster for Versel to contact your database than the client Versels are already on like enterprise level networking, planet skills on enterprise level networking, the users on like whatever networking they have you know some DSL package where they're phone or whatever right
Versels are already on like enterprise level networking, planet skills on enterprise level networking, the users on like whatever networking they have you know some DSL package where they're phone or whatever right So oh yeah of course should actually not say planet scale because you're okay I wasn't going to correct it. By no it's yep you work for a company that provides that so yes what's the the it's Evian? Ivan. I know
So oh yeah of course should actually not say planet scale because you're okay I wasn't going to correct it. By no it's yep you work for a company that provides that so yes what's the the it's Evian? Ivan. I know I know. Like I'd be an yeah I would never guess I've been looking at that for being a like a guy from Toronto Canada but anyway I have it. Yeah so yes. It was made upward it's not something that means something and finish or anything. Oh okay
I know. Like I'd be an yeah I would never guess I've been looking at that for being a like a guy from Toronto Canada but anyway I have it. Yeah so yes. It was made upward it's not something that means something and finish or anything. Oh okay Oh okay. And so yes um the problem makes more sense to pronounce it that way to finish people than than me I would guess but maybe not I don't know who knows
Oh okay. And so yes um the problem makes more sense to pronounce it that way to finish people than than me I would guess but maybe not I don't know who knows I don't correct people when they say it I'm just like yeah whatever because yeah yeah if you need to tell me that was Ivan I would like Ivan would be like my 50th guest probably but anyway. Yeah I know it's everyone is like that that's why I don't even like okay so
I don't correct people when they say it I'm just like yeah whatever because yeah yeah if you need to tell me that was Ivan I would like Ivan would be like my 50th guest probably but anyway. Yeah I know it's everyone is like that that's why I don't even like okay so So for cells going to be faster to contact Ivan's DB get that data and it's almost for sure going to be faster to render the page than the client's browser right that's not always true sometimes the user has a monster computer at home and they know they're you know they've got everything optimized and stuff like that like like my computer is ridiculous because I have it optimized for gaming and it's I spent way too much money on it but that's not the average person and certainly like your phone isn't going to render faster than you know a server
So for cells going to be faster to contact Ivan's DB get that data and it's almost for sure going to be faster to render the page than the client's browser right that's not always true sometimes the user has a monster computer at home and they know they're you know they've got everything optimized and stuff like that like like my computer is ridiculous because I have it optimized for gaming and it's I spent way too much money on it but that's not the average person and certainly like your phone isn't going to render faster than you know a server So for cell says oh I need this template close hit up Ivan get the template post render the page and then send that that rendered HTML file to the user
So for cell says oh I need this template close hit up Ivan get the template post render the page and then send that that rendered HTML file to the user So what you haven't had is that extra back and forth right the user in content for cell get some information and then have to contact for cell again who then contacted Ivan who then got the database information who then sent it back right so there's a whole lot more back and forth with an SPA potentially whereas with server side rendering a lot of that initial back and forth is handled between servers before the page is rendered
So what you haven't had is that extra back and forth right the user in content for cell get some information and then have to contact for cell again who then contacted Ivan who then got the database information who then sent it back right so there's a whole lot more back and forth with an SPA potentially whereas with server side rendering a lot of that initial back and forth is handled between servers before the page is rendered So that can be a lot more performant. I'm giving up on my squares but well we want to have one that comes down to render page you want to go back to you want to have that arrow go back to for cell and then an arrow from for cell to say render page but yeah it's it's good
So that can be a lot more performant. I'm giving up on my squares but well we want to have one that comes down to render page you want to go back to you want to have that arrow go back to for cell and then an arrow from for cell to say render page but yeah it's it's good Okay that's where sorry I didn't know where my uh okay there we go so it goes like this and and I'm gonna like this and then it will send a different arrow what can I do pink like this back to for cell and render this and then you will do a orange one and then it's here to here
Okay that's where sorry I didn't know where my uh okay there we go so it goes like this and and I'm gonna like this and then it will send a different arrow what can I do pink like this back to for cell and render this and then you will do a orange one and then it's here to here Yep that's yay in a very ugly way of viewing it I will rewrite it later. That's okay the key here is you only have that one orange arrow from for cell to the user
Yep that's yay in a very ugly way of viewing it I will rewrite it later. That's okay the key here is you only have that one orange arrow from for cell to the user Oh where okay where at the spa you would have for cell to the user user back to for cell to Ivan Ivan to herself herself back to the user. I feel like it's starting to click but now I really want to draw these out because these little images for some reason really help my head understand stuff
Oh where okay where at the spa you would have for cell to the user user back to for cell to Ivan Ivan to herself herself back to the user. I feel like it's starting to click but now I really want to draw these out because these little images for some reason really help my head understand stuff Yep well you draw that route I'm just gonna step away from about 45 seconds I'll be right back. Do it and then we're gonna see if I got it right. We'll find out. Oh let's see and I feel like we can definitely draw some bigger squares
Yep well you draw that route I'm just gonna step away from about 45 seconds I'll be right back. Do it and then we're gonna see if I got it right. We'll find out. Oh let's see and I feel like we can definitely draw some bigger squares So so we have the browser and then it has to go to the cell which is the server and then eat and then it has to ask for I'm gonna say this is the order we'll find out. Blog post
So so we have the browser and then it has to go to the cell which is the server and then eat and then it has to ask for I'm gonna say this is the order we'll find out. Blog post Blog post. Does that want to see what that blog post is? It's a new blog post and then we have to do do do do do do do do do Ivan the scratch database and then it needs to go active or so I think should be versed to Ivan Ivan to blog post blog post to herself
Blog post. Does that want to see what that blog post is? It's a new blog post and then we have to do do do do do do do do do Ivan the scratch database and then it needs to go active or so I think should be versed to Ivan Ivan to blog post blog post to herself So but where does it put the request? Well so what's gonna happen is you're gonna have the browser go to Versel for sell back to the browser. So I guess the blog post square you is that the request for the blog post or the content for the blog post? No it's the request
So but where does it put the request? Well so what's gonna happen is you're gonna have the browser go to Versel for sell back to the browser. So I guess the blog post square you is that the request for the blog post or the content for the blog post? No it's the request Okay so yeah so it should be arrow from browser to Versel then arrow from Versel to browser and to Ivan. We know then arrow to the blog post request or Versel I guess that's how you want to map it out. I would go blog post request then to Versel then to Ivan. Oh okay okay that makes sense
Okay so yeah so it should be arrow from browser to Versel then arrow from Versel to browser and to Ivan. We know then arrow to the blog post request or Versel I guess that's how you want to map it out. I would go blog post request then to Versel then to Ivan. Oh okay okay that makes sense I think I can leave you alone you. Welcome to your new home and then you go to Versel. We're just gonna make a lot of boxes and then we wrote. I would keep for somewhere it was that that's a good spot for it. Okay so we got Versel
I think I can leave you alone you. Welcome to your new home and then you go to Versel. We're just gonna make a lot of boxes and then we wrote. I would keep for somewhere it was that that's a good spot for it. Okay so we got Versel So to double check that I know it goes from long we request the blog post. No no so the initial one is browser to Versel and then Versel back to the browser. Okay and then oh because it has to check it. Yep and then we do
So to double check that I know it goes from long we request the blog post. No no so the initial one is browser to Versel and then Versel back to the browser. Okay and then oh because it has to check it. Yep and then we do Yep and then we do. So now when it's executing the JavaScript it says oh crap I need 10 blog posts so now you have that blog post request and then that goes to Versel. Meantiversel. Versel says okay I need that information from Ivan. Yeah let me go to Ivan. Back to Versel
Yep and then we do. So now when it's executing the JavaScript it says oh crap I need 10 blog posts so now you have that blog post request and then that goes to Versel. Meantiversel. Versel says okay I need that information from Ivan. Yeah let me go to Ivan. Back to Versel Back to Versel. Back to Versel and Ivan says here's the information and then Versel sends it back to the browser. I guess you could send it through the blog post request if you wanted to but yeah. That's not complicated at all
Back to Versel. Back to Versel and Ivan says here's the information and then Versel sends it back to the browser. I guess you could send it through the blog post request if you wanted to but yeah. That's not complicated at all Not at all and remember that that process occurs for every piece of data you need from your database which on a more complicated site could be many pieces. Yeah we're about to do SSSG. We'll see if we're going to file SSR first and then we'll get SSG. Um I'm okay let me put that this is spa
Not at all and remember that that process occurs for every piece of data you need from your database which on a more complicated site could be many pieces. Yeah we're about to do SSSG. We'll see if we're going to file SSR first and then we'll get SSG. Um I'm okay let me put that this is spa This is is do do do do do and this would just be called SSR right? Yep. SSR in my self a nice thing. Okay there we go I'm slowly slowly picking up what you're putting down
This is is do do do do do and this would just be called SSR right? Yep. SSR in my self a nice thing. Okay there we go I'm slowly slowly picking up what you're putting down Yep so we can see that SSR has the potential to be a lot faster one because there's less back and forth and back and forth that occurs is at the very start of the process and between servers
Yep so we can see that SSR has the potential to be a lot faster one because there's less back and forth and back and forth that occurs is at the very start of the process and between servers So we end up being able to render the page a lot quicker and certainly with less network requests especially between the user and Versel. So the last part of Versel before we moved to SSG is hydration
So we end up being able to render the page a lot quicker and certainly with less network requests especially between the user and Versel. So the last part of Versel before we moved to SSG is hydration So hydration is essentially like you so the first part of SSR sends an HTML page to the user right? There's no JavaScript yet. Right. So the hydration is essentially then taking and saying okay we've served a static HTML page but we need to add that astro or that react or that solid JS code
So hydration is essentially like you so the first part of SSR sends an HTML page to the user right? There's no JavaScript yet. Right. So the hydration is essentially then taking and saying okay we've served a static HTML page but we need to add that astro or that react or that solid JS code So it comes in a step later so the the HTML page gets rendered on the user's browser and they're like oh cool here's the content they start to scroll through it and then what's happening and the next step in the background is the server and the browser are grabbing that JavaScript and it basically attaching it to the HTML so that all of the interactivity that you would want from React or whatever the case is is now present
So it comes in a step later so the the HTML page gets rendered on the user's browser and they're like oh cool here's the content they start to scroll through it and then what's happening and the next step in the background is the server and the browser are grabbing that JavaScript and it basically attaching it to the HTML so that all of the interactivity that you would want from React or whatever the case is is now present So you might have interactivity on like a button it gets attached as that React code comes in. Okay. Give me a second because I'm also like just trying to understand where we're at right now because okay so we have the before the user browser all of this happens so it goes Versel
So you might have interactivity on like a button it gets attached as that React code comes in. Okay. Give me a second because I'm also like just trying to understand where we're at right now because okay so we have the before the user browser all of this happens so it goes Versel Yes I'm rewriting the other one that we already have to 10 blog posts or I'm just going to say log posts request. That's if I can actually write and then it goes to Ivan the database and then back to Versel and then it would render the page and be in the browser. Okay. Evening
Yes I'm rewriting the other one that we already have to 10 blog posts or I'm just going to say log posts request. That's if I can actually write and then it goes to Ivan the database and then back to Versel and then it would render the page and be in the browser. Okay. Evening Okay. Evening. So let me draw my errors. Browser. Goodness gracious. So we're going to have some hot pink it's going to be great. You go to a dish and then we go like this and then we're going to have a different color that will go all the way back to Versel and we want to green sure why not
Okay. Evening. So let me draw my errors. Browser. Goodness gracious. So we're going to have some hot pink it's going to be great. You go to a dish and then we go like this and then we're going to have a different color that will go all the way back to Versel and we want to green sure why not Then you render and then you go to the browser. Thank you for holding that was a lot and now when we're talking about hydration, hydration will add it to like after the database part or would it be like after the browser. After the browser
Then you render and then you go to the browser. Thank you for holding that was a lot and now when we're talking about hydration, hydration will add it to like after the database part or would it be like after the browser. After the browser After the browser. Yep so in this case the users now received an HTML file and it has all the blog posts and all the content right it's a complete page. So I'm just going to say browser. Each email then. And then after that is then all of this will be added with like you said JavaScript and
After the browser. Yep so in this case the users now received an HTML file and it has all the blog posts and all the content right it's a complete page. So I'm just going to say browser. Each email then. And then after that is then all of this will be added with like you said JavaScript and So no it's all the JavaScript CSS has already been sent images. All that in the HTML. So I'm just I know this is extra but HTML. CSS images. Already sent. So the JavaScript is now going to. You're going to go out to the JavaScript and then go back to the browser
So no it's all the JavaScript CSS has already been sent images. All that in the HTML. So I'm just I know this is extra but HTML. CSS images. Already sent. So the JavaScript is now going to. You're going to go out to the JavaScript and then go back to the browser Yeah sort of yeah it's it's kind of happening in the background so and that's the important thing to understand is like when you're looking at a server side rendered page you're getting
Yeah sort of yeah it's it's kind of happening in the background so and that's the important thing to understand is like when you're looking at a server side rendered page you're getting The user's getting an HTML page and it pops up quickly and they're like oh cool and then you know in the background as a follow-up step hydration occurs and that's. Versel or the host finishing the request and sending the JavaScript and the JavaScript attaching itself to the HTML page
The user's getting an HTML page and it pops up quickly and they're like oh cool and then you know in the background as a follow-up step hydration occurs and that's. Versel or the host finishing the request and sending the JavaScript and the JavaScript attaching itself to the HTML page Because essentially react. Like in a production. Environment has a bunch of event listeners attached to the page and those event listeners point to different parts of different pieces of JavaScript
Because essentially react. Like in a production. Environment has a bunch of event listeners attached to the page and those event listeners point to different parts of different pieces of JavaScript So at this point it's rendering that like excuse that JavaScript and attaching those event listeners and making the page interactive in the way that you would expect for react or whatever it is. Okay we said that the SPA is probably like a next JS so server side would be like react
So at this point it's rendering that like excuse that JavaScript and attaching those event listeners and making the page interactive in the way that you would expect for react or whatever it is. Okay we said that the SPA is probably like a next JS so server side would be like react No next JS does service next JS does all three that's one of the reason I'm using this example. The default behavior for next JS is SPA. You have to choose to do SSR or SPA in react in next. And like react like if you use react with no framework no next no remix no aestro etc
No next JS does service next JS does all three that's one of the reason I'm using this example. The default behavior for next JS is SPA. You have to choose to do SSR or SPA in react in next. And like react like if you use react with no framework no next no remix no aestro etc You use just like vanilla react it is an SPA. What about what's beat? Beat is an SPA you can there is some server server side rendering I don't know if there's any SGA or SSG with a feet off hand
You use just like vanilla react it is an SPA. What about what's beat? Beat is an SPA you can there is some server server side rendering I don't know if there's any SGA or SSG with a feet off hand I asked because I one of the first ones that I did with Anthony Kim Polo was beats a build system because we did a react app with Viet and Versailles
I asked because I one of the first ones that I did with Anthony Kim Polo was beats a build system because we did a react app with Viet and Versailles Yep yep generally speaking most people treat V as a build system which is build your react app and then you it will build the JavaScript bundles the CSS bundles etc it's very fast and very efficient at doing it
Yep yep generally speaking most people treat V as a build system which is build your react app and then you it will build the JavaScript bundles the CSS bundles etc it's very fast and very efficient at doing it Okay okay we're going to ask about build systems later let me go put that on my that's not how you select it helps if I can eat okay so cool I feel like I'm getting it all right and then we have SSG after this yep okay I honestly have no idea any of these really existed like that they officially existed I've heard of them but didn't know what they meant I'm so excited so much drawing today all right so let's get to the message G server side gathering generated that's not server side static site generation okay so is stuff like website builder or wix in that kind of stuff is that SSG sorry wix or what like go daddy's website builder wix where's that stuff no I don't think and I don't know actually specifically how they work under the hood I don't really look at it and I think the answers probably know for all of them they're probably more server side rendered and Rex just said no as well so thank you Rex okay so you're saying that you they are probably SSRs yep that's that's my guess like I don't I especially with go daddy I really know nothing about go daddy's site builder and wix and squares based I'm pretty sure that my default or SSR but they might have some form of SSG I'm not sure I'm that's why we'll put crops yeah SSR we're not gonna also probably doesn't matter because you probably have no choice with them so like if you use them we don't understand yeah not to try to fix stuff just understand okay so static site like aster aster was yep aster was an example and then next allows you to do static site generation so static site generation is this idea that your site has information that you're loading from a database or third party APIs but that that information doesn't change very often so your great example is like you're you know you're or my personal sites we don't update our projects or our blog posts all that often I certainly don't I should be we probably should be but most people don't so okay and I mean even even the general sets even if you write a blog post a week that's still really infrequent for this stuff so you you know your site isn't changing certainly every hour every day you don't need you don't need to go and and have your users querying your database to to get updated information because you are writing blog posts every hour contrasts this to a similar idea like a you know a new site which is essentially like very similar to a blog site in kind of a general sense it's a whole bunch of you know stories posts but a new site is going to be adding new sites every few minutes potentially or more frequently depending on how big the site is and they're going to be editing past stories so their content is going to be you know a lot more dynamic than your personal site so blog you know your personal site portfolio's blog sites are good examples of sites that can be relatively static doc sites you know the docs for astro for next etc tend to be relatively static as well stuff like that so the idea with static site generation is when you do your build step all of the pages that you want to static the generate are created then so the the interesting thing with next is you can choose on a page by page basis which are SBA which are SSR which are SSG so you could have three different pages in your next project and you could choose a different a different behavior for each one if you want to so in in the case of my portfolio site most of my portfolio site is statically generated all my blog posts my projects the index page etc the one page that it isn't is I have a page that shows Spotify information what I've been listening to what I'm currently listening to if I'm listening to something you know popular albums that page is handled as an SBA because it wants to get updated information okay so when you when you're setting up next and you have a bunch of pages that you want to be statically generated you set them up to be statically generated and when that build step occurs that's when they're created so this happens well before the user would request the page um side note that does not go to this page but it's going to help especially with uh the conference I have going on um is next a meta framework uh yeah I think I think next is to react as next is to you I honestly the whole framework meta framework meta meta framework stuff people chat about it and it's like I don't know it's next is definitely a framework um I don't know if it yeah I think it does because I think it goes beyond just react I think it meta frameworks or stuff that include routing and and whatnot um but yeah next does a ton of stuff and it's getting you more complicated to in the future that's okay yeah I wrote my note to go look into it later um okay so I like that I can I wrote down that it can be um mattering on the page it can be all of those oh excuse you I don't I don't want this done goodbye um so something that I just realized that I don't think I understand from these graphics is what is considered the build step that's that mpm run build so we talked about how versel when you're deploying will grab a copy of your repo the typically the main branch right it'll do the mpm install it's right there at the top of your page by the way if you didn't see it yeah yeah yeah I guess where do I go from as a oh I forget I can do this where does this go in this after after an edge network this is after edge network okay yep same with ssr and ssg ssv is actually split into two parts so there is there is during the build step there is create the static pages so create HTML versions of the pages and then those get put on the edge network so if you do so the comparison is if you do next as an spa you'll end up with one HTML file that index that HTML file your javascript files your css files and those will go on to your onto the edge network and get served to the users in the case of ssg you could have dozens of um HTML files for all the pages that you marked to be statically generated and then you know you may still have some other like you still may have your you know how obviously you'll have your indexed HTML file you may have some pages that are handled outside of ssg like I said you can do a page by page so those will be handled by that indexed HTML file and your javascript whereas the the ones that were statically generated like you know block
Okay okay we're going to ask about build systems later let me go put that on my that's not how you select it helps if I can eat okay so cool I feel like I'm getting it all right and then we have SSG after this yep okay I honestly have no idea any of these really existed like that they officially existed I've heard of them but didn't know what they meant I'm so excited so much drawing today all right so let's get to the message G server side gathering generated that's not server side static site generation okay so is stuff like website builder or wix in that kind of stuff is that SSG sorry wix or what like go daddy's website builder wix where's that stuff no I don't think and I don't know actually specifically how they work under the hood I don't really look at it and I think the answers probably know for all of them they're probably more server side rendered and Rex just said no as well so thank you Rex okay so you're saying that you they are probably SSRs yep that's that's my guess like I don't I especially with go daddy I really know nothing about go daddy's site builder and wix and squares based I'm pretty sure that my default or SSR but they might have some form of SSG I'm not sure I'm that's why we'll put crops yeah SSR we're not gonna also probably doesn't matter because you probably have no choice with them so like if you use them we don't understand yeah not to try to fix stuff just understand okay so static site like aster aster was yep aster was an example and then next allows you to do static site generation so static site generation is this idea that your site has information that you're loading from a database or third party APIs but that that information doesn't change very often so your great example is like you're you know you're or my personal sites we don't update our projects or our blog posts all that often I certainly don't I should be we probably should be but most people don't so okay and I mean even even the general sets even if you write a blog post a week that's still really infrequent for this stuff so you you know your site isn't changing certainly every hour every day you don't need you don't need to go and and have your users querying your database to to get updated information because you are writing blog posts every hour contrasts this to a similar idea like a you know a new site which is essentially like very similar to a blog site in kind of a general sense it's a whole bunch of you know stories posts but a new site is going to be adding new sites every few minutes potentially or more frequently depending on how big the site is and they're going to be editing past stories so their content is going to be you know a lot more dynamic than your personal site so blog you know your personal site portfolio's blog sites are good examples of sites that can be relatively static doc sites you know the docs for astro for next etc tend to be relatively static as well stuff like that so the idea with static site generation is when you do your build step all of the pages that you want to static the generate are created then so the the interesting thing with next is you can choose on a page by page basis which are SBA which are SSR which are SSG so you could have three different pages in your next project and you could choose a different a different behavior for each one if you want to so in in the case of my portfolio site most of my portfolio site is statically generated all my blog posts my projects the index page etc the one page that it isn't is I have a page that shows Spotify information what I've been listening to what I'm currently listening to if I'm listening to something you know popular albums that page is handled as an SBA because it wants to get updated information okay so when you when you're setting up next and you have a bunch of pages that you want to be statically generated you set them up to be statically generated and when that build step occurs that's when they're created so this happens well before the user would request the page um side note that does not go to this page but it's going to help especially with uh the conference I have going on um is next a meta framework uh yeah I think I think next is to react as next is to you I honestly the whole framework meta framework meta meta framework stuff people chat about it and it's like I don't know it's next is definitely a framework um I don't know if it yeah I think it does because I think it goes beyond just react I think it meta frameworks or stuff that include routing and and whatnot um but yeah next does a ton of stuff and it's getting you more complicated to in the future that's okay yeah I wrote my note to go look into it later um okay so I like that I can I wrote down that it can be um mattering on the page it can be all of those oh excuse you I don't I don't want this done goodbye um so something that I just realized that I don't think I understand from these graphics is what is considered the build step that's that mpm run build so we talked about how versel when you're deploying will grab a copy of your repo the typically the main branch right it'll do the mpm install it's right there at the top of your page by the way if you didn't see it yeah yeah yeah I guess where do I go from as a oh I forget I can do this where does this go in this after after an edge network this is after edge network okay yep same with ssr and ssg ssv is actually split into two parts so there is there is during the build step there is create the static pages so create HTML versions of the pages and then those get put on the edge network so if you do so the comparison is if you do next as an spa you'll end up with one HTML file that index that HTML file your javascript files your css files and those will go on to your onto the edge network and get served to the users in the case of ssg you could have dozens of um HTML files for all the pages that you marked to be statically generated and then you know you may still have some other like you still may have your you know how obviously you'll have your indexed HTML file you may have some pages that are handled outside of ssg like I said you can do a page by page so those will be handled by that indexed HTML file and your javascript whereas the the ones that were statically generated like you know blockhtml or contact
html or contacthtml those will be served as HTML to the user from the edge network and then that's as far as I got on what you just said yes so let me copy the whole of our cell to edge network part and bring it down to your ssg section email Cheers bly bly aces okay so you want like a arrow down from that rpm build and that's where you will say render render pages as HTML files or something to that effect
html those will be served as HTML to the user from the edge network and then that's as far as I got on what you just said yes so let me copy the whole of our cell to edge network part and bring it down to your ssg section email Cheers bly bly aces okay so you want like a arrow down from that rpm build and that's where you will say render render pages as HTML files or something to that effect Okay. And then off of the edge network you now have server rendered pages plus JavaScript plus CSS plus images. So because it does this first or during the build. It renders the pages as HTML files. The next step goes to the edge network and then it does. The SSR stuff
Okay. And then off of the edge network you now have server rendered pages plus JavaScript plus CSS plus images. So because it does this first or during the build. It renders the pages as HTML files. The next step goes to the edge network and then it does. The SSR stuff The SSR stuff. No, no, it doesn't need to do SSR. The HTML files already exist with SSG. It's pre-created them. Okay. So then it goes the edge netch work then to somebody's browser. Yeah, so that's yeah, it's going to the edge network is now going to serve. Those HTML files directly
The SSR stuff. No, no, it doesn't need to do SSR. The HTML files already exist with SSG. It's pre-created them. Okay. So then it goes the edge netch work then to somebody's browser. Yeah, so that's yeah, it's going to the edge network is now going to serve. Those HTML files directly Doesn't have to render them. I can just simply serve them or send them to the user. So SSG is almost like less complicated than what's going on up here. Right. That part on the SSG where it says render pages as HTML files
Doesn't have to render them. I can just simply serve them or send them to the user. So SSG is almost like less complicated than what's going on up here. Right. That part on the SSG where it says render pages as HTML files That'll do the whole contact Ivan contact third party API is et cetera and get the data. So where would we put like the browser request, like the blog request? You wouldn't it's so what happens is you when you're setting up SSG in next and you know, it automatically does it
That'll do the whole contact Ivan contact third party API is et cetera and get the data. So where would we put like the browser request, like the blog request? You wouldn't it's so what happens is you when you're setting up SSG in next and you know, it automatically does it Well, you never changes. Well, yeah, you set up. So in in next you add extra functions to your your route components. So like SSR gets that get server side props. And I feel like they changed the SSG once it's a last look, but I used to be get static props. What I feel like they changed it
Well, you never changes. Well, yeah, you set up. So in in next you add extra functions to your your route components. So like SSR gets that get server side props. And I feel like they changed the SSG once it's a last look, but I used to be get static props. What I feel like they changed it So let me just double check. As I'm not going to worry about this really matter. You add these these functions and those are server side functions, which. By existing they say, oh, there's get server side props that's going to server side render the page
So let me just double check. As I'm not going to worry about this really matter. You add these these functions and those are server side functions, which. By existing they say, oh, there's get server side props that's going to server side render the page Oh, there's the function for SSG that's going to statically generate the page. And in those functions, you handle, you know, your your request to get your data, right? So in that function, you would say you would write your code to connect your database and query for your 10 blog posts
Oh, there's the function for SSG that's going to statically generate the page. And in those functions, you handle, you know, your your request to get your data, right? So in that function, you would say you would write your code to connect your database and query for your 10 blog posts And then you return that query data. From that function and then that data gets brought in as a prop to your your actual page. And then it can use it to render it. I'm going to say, OK. Because like what you're saying does make sense up the same time this last part is not clicking, but
And then you return that query data. From that function and then that data gets brought in as a prop to your your actual page. And then it can use it to render it. I'm going to say, OK. Because like what you're saying does make sense up the same time this last part is not clicking, but We don't have a lot. Yeah, it's super important to understand that last part though. Like so essentially you have like you have like an extra function on you know on your. So like so next you do it's kind of like a story you have, you know, a Txx or JSX or whatever file for each
We don't have a lot. Yeah, it's super important to understand that last part though. Like so essentially you have like you have like an extra function on you know on your. So like so next you do it's kind of like a story you have, you know, a Txx or JSX or whatever file for each Right, so you let's say you have your blog index one. So you have a blog. Txx file. And so you write your component, which is how it's going to be displayed. How you're going to, you know, create a grid of those posts or a list of those posts or whatever
Right, so you let's say you have your blog index one. So you have a blog. Txx file. And so you write your component, which is how it's going to be displayed. How you're going to, you know, create a grid of those posts or a list of those posts or whatever But then, but you know separate from that you have a function that says, hey, we're going to render this as a static page. In order to do that, I need to I need to provide. These 10 blog posts as data for that process. So let's connect to database get those 10 blog posts
But then, but you know separate from that you have a function that says, hey, we're going to render this as a static page. In order to do that, I need to I need to provide. These 10 blog posts as data for that process. So let's connect to database get those 10 blog posts And have that data available to the. Renewing process. So then when you do mpm run build. During that build process. So literally during that build process that code will get executed during the build process you'll connect to the database and get those 10 blog posts. And you'll get that data
And have that data available to the. Renewing process. So then when you do mpm run build. During that build process. So literally during that build process that code will get executed during the build process you'll connect to the database and get those 10 blog posts. And you'll get that data I think I just need more room to. And then I can put what I think you're saying. So when it's doing the build and render pages as HTML. And this is when it is going through and. Going to PG admin or PG database. Any APIs. And what are you doing? Thank you
I think I just need more room to. And then I can put what I think you're saying. So when it's doing the build and render pages as HTML. And this is when it is going through and. Going to PG admin or PG database. Any APIs. And what are you doing? Thank you So what are you doing? I'm not going to do JavaScript. All that images. No, well, I mean. It's not not necessarily images that you're going to. You don't know the images will be there. There's nothing. It doesn't do anything with the images. Okay. Yeah. As it renders
So what are you doing? I'm not going to do JavaScript. All that images. No, well, I mean. It's not not necessarily images that you're going to. You don't know the images will be there. There's nothing. It doesn't do anything with the images. Okay. Yeah. As it renders As it renders. As it renders those pages, it'll connect to your database as needed and query information or a third party API like you're connecting to get the weather information on a given day or something like that. Whatever it is. You know, make those queries
As it renders. As it renders those pages, it'll connect to your database as needed and query information or a third party API like you're connecting to get the weather information on a given day or something like that. Whatever it is. You know, make those queries Get that information and use that information when it creates those HTML pages. And then you can use the weather. In fact, let's use the weather example. This will probably help to make. To make sense, right? So let's say you work on your website today
Get that information and use that information when it creates those HTML pages. And then you can use the weather. In fact, let's use the weather example. This will probably help to make. To make sense, right? So let's say you work on your website today And you decide that you want to display the weather, right? So you write some code to go and get the current weather for your your hometown, right? But then you decide to server server. Sorry, statically generate the page. So then what happens is when you you you take your code you're done
And you decide that you want to display the weather, right? So you write some code to go and get the current weather for your your hometown, right? But then you decide to server server. Sorry, statically generate the page. So then what happens is when you you you take your code you're done You're like, that looks good. You committed to your repo and push it up to GitHub for cell says, oh, new changes. Perhaps you're a new copy of your repo from GitHub. Does the MPM install MPM bill. During the bill process, it says, oh, I'm statically generating these pages
You're like, that looks good. You committed to your repo and push it up to GitHub for cell says, oh, new changes. Perhaps you're a new copy of your repo from GitHub. Does the MPM install MPM bill. During the bill process, it says, oh, I'm statically generating these pages So it creates those pages. During that process, it connects to the weather API and gets the weather for today, right? When it does it. So you're like, what's your weather? 10. Well, your Fahrenheit. So it's like, I don't know, whatever. 50 degrees or something like that
So it creates those pages. During that process, it connects to the weather API and gets the weather for today, right? When it does it. So you're like, what's your weather? 10. Well, your Fahrenheit. So it's like, I don't know, whatever. 50 degrees or something like that Sonny and 50 degrees where you're at today. So it's statically generated these pages and it shows that weather at the time that it does that build step. Now, let's say I visit your page on Wednesday and it has gotten really cold and snowy and cloudy
Sonny and 50 degrees where you're at today. So it's statically generated these pages and it shows that weather at the time that it does that build step. Now, let's say I visit your page on Wednesday and it has gotten really cold and snowy and cloudy Because the page was statically generated, I will at least initially see sunny and 50 degrees. Hydration, you know, when that JavaScript gets attached after initial load will probably update that depending on how you built the page. But you should update that
Because the page was statically generated, I will at least initially see sunny and 50 degrees. Hydration, you know, when that JavaScript gets attached after initial load will probably update that depending on how you built the page. But you should update that And then it should flip to the new, it should re-create the API live and get the new information. But it should initially at least statically generated page will have today's weather. That makes sense. I think so. I think I'm there. Pretty sure. Need all of us to be out of my way. Sure. Works
And then it should flip to the new, it should re-create the API live and get the new information. But it should initially at least statically generated page will have today's weather. That makes sense. I think so. I think I'm there. Pretty sure. Need all of us to be out of my way. Sure. Works Sure. Works. You can go there. As then. So. So I think that's something is. GitHub. You commit. It goes to herself. Or so says, okay, let me grab all the content. We'll make sure it's good. Because it updates all content. And then it's like cool. Let's do NPM and sell NPM run build
Sure. Works. You can go there. As then. So. So I think that's something is. GitHub. You commit. It goes to herself. Or so says, okay, let me grab all the content. We'll make sure it's good. Because it updates all content. And then it's like cool. Let's do NPM and sell NPM run build And we're going to check the database and API. There's any new content. If there is, then we'll put it on to the static page. If it's. So to be correct, it doesn't check for new content. It just gets the current copy of the content. It doesn't care whether it's new or not
And we're going to check the database and API. There's any new content. If there is, then we'll put it on to the static page. If it's. So to be correct, it doesn't check for new content. It just gets the current copy of the content. It doesn't care whether it's new or not It just as you want the 10 most recent blog posts, it doesn't. It's not. It's not. It's not. It's not. It'll still do the page, the rendering and the data request. Whether the, you know, the current build already had that. Because it's building a fresh copy. It has no idea what was built
It just as you want the 10 most recent blog posts, it doesn't. It's not. It's not. It's not. It's not. It'll still do the page, the rendering and the data request. Whether the, you know, the current build already had that. Because it's building a fresh copy. It has no idea what was built Seven days ago, right? Okay. And. It doesn't know that you have the same blog post as seven days ago. It's not. The same. They're still building. It needs all the information. And that is. We'll copy the current page and then it'll put it to the user's browser as a. Nope. And so now
Seven days ago, right? Okay. And. It doesn't know that you have the same blog post as seven days ago. It's not. The same. They're still building. It needs all the information. And that is. We'll copy the current page and then it'll put it to the user's browser as a. Nope. And so now Nope. And so now. So now when the user visits one of your pages, the edge network that's hosting the page says, oh, you want the contact page? There you go, or you want the blog index page? There you go. It doesn't, the edge network and for sale don't need to server side render it
Nope. And so now. So now when the user visits one of your pages, the edge network that's hosting the page says, oh, you want the contact page? There you go, or you want the blog index page? There you go. It doesn't, the edge network and for sale don't need to server side render it It's already been statically generated. So it just sends that blog index, that HTML file with the blog index straight to the user. OK. And then if there is like an API or something like the weather, it's the hydration that's going to update the static page
It's already been statically generated. So it just sends that blog index, that HTML file with the blog index straight to the user. OK. And then if there is like an API or something like the weather, it's the hydration that's going to update the static page Sure, yeah, depending on how you set up the page, but it should update the page. Yes. OK. So I get part one of like, you know, shared hosting and all of that. And then I get part two of like what we were saying that for sale does with the SPA and SSR and SSG. But um
Sure, yeah, depending on how you set up the page, but it should update the page. Yes. OK. So I get part one of like, you know, shared hosting and all of that. And then I get part two of like what we were saying that for sale does with the SPA and SSR and SSG. But um But um. What just shared hosting too is like the VPS or managed WordPress or are those all just like how often do they get updated? Or they all just. So most of those so again, you have to remember that when you start talking about WordPress. Um. It has nothing to do with the hosting
But um. What just shared hosting too is like the VPS or managed WordPress or are those all just like how often do they get updated? Or they all just. So most of those so again, you have to remember that when you start talking about WordPress. Um. It has nothing to do with the hosting It has to do instead with what the project is. So if I put. If I if I want to statically generate a re a react website using next and then deploy that onto a VPS, I could do that. OK. And then it would only get updated when I deploy it again. Right. OK. It depends. It depends. It depends. Right
It has to do instead with what the project is. So if I put. If I if I want to statically generate a re a react website using next and then deploy that onto a VPS, I could do that. OK. And then it would only get updated when I deploy it again. Right. OK. It depends. It depends. It depends. Right It depends. Right. So this whole SPA SSR SSG. That's not specifically next next is doing that. But that's not specifically next that can happen when you deploy your react application or whatever your JavaScript application, your astro application to other types of services as well. Right
It depends. Right. So this whole SPA SSR SSG. That's not specifically next next is doing that. But that's not specifically next that can happen when you deploy your react application or whatever your JavaScript application, your astro application to other types of services as well. Right Right. So I do 100% take your astro application, build your website. Right. And you're like, OK, it's working perfectly. You do the astro build command, which is probably MPM run build. That has to double check that off my head. Um. I should have pretty sure it's MPM run build because some feet
Right. So I do 100% take your astro application, build your website. Right. And you're like, OK, it's working perfectly. You do the astro build command, which is probably MPM run build. That has to double check that off my head. Um. I should have pretty sure it's MPM run build because some feet And then astro will build a static. Yeah, I thought so. Since I remember the video, I was like, yeah, thank you. I'm really sorry for confirming. Astro will build. Static pages. And bundle your JavaScript and your CSS
And then astro will build a static. Yeah, I thought so. Since I remember the video, I was like, yeah, thank you. I'm really sorry for confirming. Astro will build. Static pages. And bundle your JavaScript and your CSS And you could then take that build and actually deploy it on go daddy via FTP on a here shared hosting account. But then when you make a new commit, it's not going to. So I got to do the build locally again. And you would have to up to FTP, which is yes, yes, exactly. That's not fun at all
And you could then take that build and actually deploy it on go daddy via FTP on a here shared hosting account. But then when you make a new commit, it's not going to. So I got to do the build locally again. And you would have to up to FTP, which is yes, yes, exactly. That's not fun at all Is it? It's much nicer to have her sell just do it automatically. So all of these more modern tooling that we are hosted. We use for sell, netlify, railway, render, etc. They almost all have a step with a handle who wrapping that information from GitHub. And deploying it. There are ways to
Is it? It's much nicer to have her sell just do it automatically. So all of these more modern tooling that we are hosted. We use for sell, netlify, railway, render, etc. They almost all have a step with a handle who wrapping that information from GitHub. And deploying it. There are ways to There are ways to. So no, there are ways to. To integrate, get into other hosting and stuff like that. But usually it's not as smooth. Or it's painless. Especially the setup process. I'm thinking. I'm thinking of it as the one thing. I was writing it as a note, not but I like that
There are ways to. So no, there are ways to. To integrate, get into other hosting and stuff like that. But usually it's not as smooth. Or it's painless. Especially the setup process. I'm thinking. I'm thinking of it as the one thing. I was writing it as a note, not but I like that Yeah, the answer is. Like you know, if you if you look at go daddy now, there's probably a way to enter to have an interface with a GitHub account. I don't know how well that works. I haven't. Touched get on, you know, go daddy or
Yeah, the answer is. Like you know, if you if you look at go daddy now, there's probably a way to enter to have an interface with a GitHub account. I don't know how well that works. I haven't. Touched get on, you know, go daddy or hosting I haven't tried to do that kind of stuff for a few years now so I don't know what the modern tooling looks like when I tried it before usually the setup was annoying at and kind of getting everything working. So do things like for cell charge based on usage then or room? Usage
hosting I haven't tried to do that kind of stuff for a few years now so I don't know what the modern tooling looks like when I tried it before usually the setup was annoying at and kind of getting everything working. So do things like for cell charge based on usage then or room? Usage Yeah so it's they actually keep copies of like every deployment you've ever made I believe I released a lot of them
Yeah so it's they actually keep copies of like every deployment you've ever made I believe I released a lot of them I've never bothered to check how far back it goes but it certainly goes certainly goes a long way back but they're pricing you if you go to if you look at it you get you're paying for bandwidth you're paying for team members who can use it and you're paying for their serverless function requests and execution which is something else to talk about but yeah I'm like I feel like I am tapped out on the knowledge side yeah we went through a tongue and I loved it and there's so much going on right now
I've never bothered to check how far back it goes but it certainly goes certainly goes a long way back but they're pricing you if you go to if you look at it you get you're paying for bandwidth you're paying for team members who can use it and you're paying for their serverless function requests and execution which is something else to talk about but yeah I'm like I feel like I am tapped out on the knowledge side yeah we went through a tongue and I loved it and there's so much going on right now So the one last thing that is we we've we've mentioned this whole edge network so edge network is essentially these is what to think about it is like a CDN for Versel so you're taking unlike you know GoDaddy's shared hosting which is in one physical location with Versel or Netlify you're automatically deploying your files to places all over the world to quote unquote the edge the edge of the network near the user is what what that kind of is trying to go like hint at so that Versel you know all of that stuff that CDN stuff etc is all taking care of for you the same way they automatically take care of a free SSL sir you don't have to worry about that or pay for that that's all taking care of for you so if you're deploying to Versel you're automatically deploying to a CDN and your users are automatically going to have a CDN node that is close or relatively close to them so that the performance will be good and then when you deploy again it will update all of those CDN nodes so your website is you know updated across the edge network okay like it does make sense but I'm like I'm cute will she brains right now we've got over a lot so but it's so helpful because without revisiting what I was previously taught like it wouldn't have connected as well so I really really appreciate that I will be uploading all my lovely notes in a more legible way later and these are the types of things I'm excited about getting up and running on my website because when I have photos like these it's going to be easier just to make sure they're linked and that people can read them when they need to then just images but kind of a mess and a half will will work through that process eventually so much knowledge the squares it's definitely the squares that help understanding what's going on for sure and it also makes sense where what hydration does a lot better than I've ever understood it before and I was like I'll react I will hear people talk about hydration and like I was like what what what is hydration and then when I when I finally was like oh I should go understand it I was like oh that's so simple to understand why didn't I Google it like five months ago but it's it's a key thing it also I feel like doesn't always make sense at least for me this was really helpful seeing the little graphics to go with it because I could understand the process where if it's in text format I'm just like you're telling me something but I don't have little boxes or visuals that should be what it is everyone learns differently for sure and yeah like the other thing too is like a lot of courses that'll teach react or whatever they don't teach this stuff because it's it's not part of the language or the framework and it's not it's not it's boring right a lot of courses they see a lot of people that come out of school or come out of like courses and they have no idea how to like deploy stuff or handle deployment errors and stuff like that they're like oh I just did MPM run dev and that's all I ever had to do in my boot camp like how do I make it go live and and there's just one all great information on that I am laughing because you're like yeah it's boring and stuff is like I just found this all so fascinating but I'm also sorry I should call it's boring if you were sitting down to learn react you're like why am I learning about hosting right like I want to learn about react make things go bur on the screen don't talk about hosting to me that is fair that is fair and thank you everyone for joining today like we got a really dope raid we've had people stay and hang out and yeah I stream very very like one two four times a week somewhere around this time frame yet next week and a week after I am out of town I am going to Portugal and Munich and hosting forage nation for view nation through view school so at the online conference you can see me there if you want to come hang out that week but we still have a few more streams this week and yeah now to go through all this is there anything we missed that you wanted to make sure we tackled today I mean like to like this is just a lot of kind of high level stuff like I said we're simplifying a lot of it there this is all of this stuff is exceptionally detailed so I think really the key is like go through it figure out what questions you still have and you know maybe we can do fall-up stream or at least the fall-up talk and go over them I guess the only other minor thing I would add just running was listening and I think you kind of asked about it earlier it's like pricing is like why does go daddy charge for everything versus you know why why do you get to get stuff free from Purcell the answer with with all of these tools like Purcell of Netlify I've been just launched their free tier planet scale railway etc they all have a free tier because there's a whole bunch of developers that are building projects and learning stuff and if they can use these tools for free and get used to you know how good railway is or how good for cell is then they will advocate to use those when they join companies or if their side project becomes successful they'll move from a free tier to a paid tier etc so it's a and realistically a lot of the stuff that gets hosted on the free tiers isn't isn't very active and isn't using a lot of resources typically some people try to scan the system so railway rail has like they have like a free tier and you can deploy like a node app or or whatever you want including a database and they recently had to change how they like some of the terms on their free tier because people are getting a I don't I don't know the exact details but people are getting around the database limitations on the free tier by recreating their database every hour so they can use they didn't have to pay so they yeah free tier with with railway now means you can only create five databases among so that people can't do that but most people just are not that active rather than actually to that not people their projects are not that active so you don't have to pay a lot to house all these projects but what you do is make friends and fans with the developers who will hopefully all turn into not all the many will turn into paying customers on the road and that's how they make their money and adding to that I think a big reason why other like it's been considered like old school hosting or shared hosting has a cost is it's a lot of it is done for you like for C panel they automatically set it up to connect to your database so you don't have to manually do that stuff at least that's my envisioning of why they would have it but I'm part of that too if you think about go daddy is that if I knew nothing about websites I'm I don't know I I own a bakery store and I'm like I want to do my own website I Google and I'm like how to have my own website and like the first result is go daddy like create your own website without having to learn any programming for 499 a month so I click on that and all of a sudden I end up with a WordPress website I haven't had to learn programming I haven't had to understand hosting I haven't had to upload anything I just now have a WordPress website and I'm like oh okay cool and like figured out from there hopefully or hopefully not or go daddy wants to do it because they probably want to flip you on other services but yeah that's kind of how it's like a different environment like with React yeah 100% yeah like there's lots of people who are gonna who run WordPress site super successfully it's not it's not there's no knock on that it's just a different different approach no one like there's no there's no situation where you're like hey I know nothing about websites and I wanted to play it and then you end up with a React website that works not like not reasonably like it just doesn't you know you that you don't hit up a host and for cells not like oh here's your React website and now you can just go configure it like that it does it's two very different sides of web development and one of the things with WordPress is that you can literally build an entire WordPress website with e-commerce and like all sorts of stuff like you can do like a learning that like a learning site with courses you can do all of this stuff and never never write a line of code because all of the tools are there whether it's themes like in WordPress itself which is you know great for a lot of people and a lot of businesses but also not great for other people so you know that's what we have all these different options I personally but that's me you know like I know how to I know how to troubleshoot WordPress I know how to help people once a WordPress site is developed not also in that building it from scratch ever never successfully done that yeah and that's really funny to me especially being part of Wordcamp and yes so everyone go follow Ruin on Twitter so you have somewhere that you can go bug him to come back from the show and also make sure that you subscribe on YouTube and follow and if you feel so willing subscribe here as well and I will link YouTube and I need to go find your Twitter and then that is easy but you know I'm still gonna go go grab it to link it and then last but not least y'all I'm gonna rage you over to Chris Griffin because I know that he's always doing some fun content over there and thank you everyone for joining and hit me up on Twitter on YouTube if you have questions you want to see us go into a specific direction and yeah see you later everyone bye
So the one last thing that is we we've we've mentioned this whole edge network so edge network is essentially these is what to think about it is like a CDN for Versel so you're taking unlike you know GoDaddy's shared hosting which is in one physical location with Versel or Netlify you're automatically deploying your files to places all over the world to quote unquote the edge the edge of the network near the user is what what that kind of is trying to go like hint at so that Versel you know all of that stuff that CDN stuff etc is all taking care of for you the same way they automatically take care of a free SSL sir you don't have to worry about that or pay for that that's all taking care of for you so if you're deploying to Versel you're automatically deploying to a CDN and your users are automatically going to have a CDN node that is close or relatively close to them so that the performance will be good and then when you deploy again it will update all of those CDN nodes so your website is you know updated across the edge network okay like it does make sense but I'm like I'm cute will she brains right now we've got over a lot so but it's so helpful because without revisiting what I was previously taught like it wouldn't have connected as well so I really really appreciate that I will be uploading all my lovely notes in a more legible way later and these are the types of things I'm excited about getting up and running on my website because when I have photos like these it's going to be easier just to make sure they're linked and that people can read them when they need to then just images but kind of a mess and a half will will work through that process eventually so much knowledge the squares it's definitely the squares that help understanding what's going on for sure and it also makes sense where what hydration does a lot better than I've ever understood it before and I was like I'll react I will hear people talk about hydration and like I was like what what what is hydration and then when I when I finally was like oh I should go understand it I was like oh that's so simple to understand why didn't I Google it like five months ago but it's it's a key thing it also I feel like doesn't always make sense at least for me this was really helpful seeing the little graphics to go with it because I could understand the process where if it's in text format I'm just like you're telling me something but I don't have little boxes or visuals that should be what it is everyone learns differently for sure and yeah like the other thing too is like a lot of courses that'll teach react or whatever they don't teach this stuff because it's it's not part of the language or the framework and it's not it's not it's boring right a lot of courses they see a lot of people that come out of school or come out of like courses and they have no idea how to like deploy stuff or handle deployment errors and stuff like that they're like oh I just did MPM run dev and that's all I ever had to do in my boot camp like how do I make it go live and and there's just one all great information on that I am laughing because you're like yeah it's boring and stuff is like I just found this all so fascinating but I'm also sorry I should call it's boring if you were sitting down to learn react you're like why am I learning about hosting right like I want to learn about react make things go bur on the screen don't talk about hosting to me that is fair that is fair and thank you everyone for joining today like we got a really dope raid we've had people stay and hang out and yeah I stream very very like one two four times a week somewhere around this time frame yet next week and a week after I am out of town I am going to Portugal and Munich and hosting forage nation for view nation through view school so at the online conference you can see me there if you want to come hang out that week but we still have a few more streams this week and yeah now to go through all this is there anything we missed that you wanted to make sure we tackled today I mean like to like this is just a lot of kind of high level stuff like I said we're simplifying a lot of it there this is all of this stuff is exceptionally detailed so I think really the key is like go through it figure out what questions you still have and you know maybe we can do fall-up stream or at least the fall-up talk and go over them I guess the only other minor thing I would add just running was listening and I think you kind of asked about it earlier it's like pricing is like why does go daddy charge for everything versus you know why why do you get to get stuff free from Purcell the answer with with all of these tools like Purcell of Netlify I've been just launched their free tier planet scale railway etc they all have a free tier because there's a whole bunch of developers that are building projects and learning stuff and if they can use these tools for free and get used to you know how good railway is or how good for cell is then they will advocate to use those when they join companies or if their side project becomes successful they'll move from a free tier to a paid tier etc so it's a and realistically a lot of the stuff that gets hosted on the free tiers isn't isn't very active and isn't using a lot of resources typically some people try to scan the system so railway rail has like they have like a free tier and you can deploy like a node app or or whatever you want including a database and they recently had to change how they like some of the terms on their free tier because people are getting a I don't I don't know the exact details but people are getting around the database limitations on the free tier by recreating their database every hour so they can use they didn't have to pay so they yeah free tier with with railway now means you can only create five databases among so that people can't do that but most people just are not that active rather than actually to that not people their projects are not that active so you don't have to pay a lot to house all these projects but what you do is make friends and fans with the developers who will hopefully all turn into not all the many will turn into paying customers on the road and that's how they make their money and adding to that I think a big reason why other like it's been considered like old school hosting or shared hosting has a cost is it's a lot of it is done for you like for C panel they automatically set it up to connect to your database so you don't have to manually do that stuff at least that's my envisioning of why they would have it but I'm part of that too if you think about go daddy is that if I knew nothing about websites I'm I don't know I I own a bakery store and I'm like I want to do my own website I Google and I'm like how to have my own website and like the first result is go daddy like create your own website without having to learn any programming for 499 a month so I click on that and all of a sudden I end up with a WordPress website I haven't had to learn programming I haven't had to understand hosting I haven't had to upload anything I just now have a WordPress website and I'm like oh okay cool and like figured out from there hopefully or hopefully not or go daddy wants to do it because they probably want to flip you on other services but yeah that's kind of how it's like a different environment like with React yeah 100% yeah like there's lots of people who are gonna who run WordPress site super successfully it's not it's not there's no knock on that it's just a different different approach no one like there's no there's no situation where you're like hey I know nothing about websites and I wanted to play it and then you end up with a React website that works not like not reasonably like it just doesn't you know you that you don't hit up a host and for cells not like oh here's your React website and now you can just go configure it like that it does it's two very different sides of web development and one of the things with WordPress is that you can literally build an entire WordPress website with e-commerce and like all sorts of stuff like you can do like a learning that like a learning site with courses you can do all of this stuff and never never write a line of code because all of the tools are there whether it's themes like in WordPress itself which is you know great for a lot of people and a lot of businesses but also not great for other people so you know that's what we have all these different options I personally but that's me you know like I know how to I know how to troubleshoot WordPress I know how to help people once a WordPress site is developed not also in that building it from scratch ever never successfully done that yeah and that's really funny to me especially being part of Wordcamp and yes so everyone go follow Ruin on Twitter so you have somewhere that you can go bug him to come back from the show and also make sure that you subscribe on YouTube and follow and if you feel so willing subscribe here as well and I will link YouTube and I need to go find your Twitter and then that is easy but you know I'm still gonna go go grab it to link it and then last but not least y'all I'm gonna rage you over to Chris Griffin because I know that he's always doing some fun content over there and thank you everyone for joining and hit me up on Twitter on YouTube if you have questions you want to see us go into a specific direction and yeah see you later everyone bye