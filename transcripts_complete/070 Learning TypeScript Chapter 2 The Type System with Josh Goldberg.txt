Hello, hello beautiful humans. Welcome to another episode of Teach Gen Tech. And we are currently working on. I feel like I always need to do this when when I talk about it. Of learning typescript with Josh. Hey. It's very exciting and I have. That was confusing. I was going in the suction mode I had YouTube, you know, up just in case I needed something there and I was like, I'm hearing myself talk. This is really weird. It is very weird and very distracting yet. Hello for those who are new to joining us. Welcome. Welcome
I had YouTube, you know, up just in case I needed something there and I was like, I'm hearing myself talk. This is really weird. It is very weird and very distracting yet. Hello for those who are new to joining us. Welcome. Welcome Welcome. Welcome. Josh wrote a really cool book that I was trying to show you of learning typescript
Welcome. Welcome. Josh wrote a really cool book that I was trying to show you of learning typescript What? I feel like I almost want to ask at the very beginning of every time we meet of like, how would you describe typescript? The answer is going to change every time as I learn and grow like a human. I'd say typescript is a superset of JavaScript in meaning that that's the technical term
What? I feel like I almost want to ask at the very beginning of every time we meet of like, how would you describe typescript? The answer is going to change every time as I learn and grow like a human. I'd say typescript is a superset of JavaScript in meaning that that's the technical term The human term is. TypeScript is like JavaScript, but it adds a lot of really useful features that let you describe what your code is supposed to do, which means it can both help you write code and also let you know when you're messing up. I like it. I like it
The human term is. TypeScript is like JavaScript, but it adds a lot of really useful features that let you describe what your code is supposed to do, which means it can both help you write code and also let you know when you're messing up. I like it. I like it I like it. And you just reminded me that at some point I want to write a blog or do a video of like, what is a meta framework, a framework, a superset and then a compiler. I'm like, all of those terms, like I'm still like, okay, cool
I like it. And you just reminded me that at some point I want to write a blog or do a video of like, what is a meta framework, a framework, a superset and then a compiler. I'm like, all of those terms, like I'm still like, okay, cool I can't mostly, mostly know what I'm doing, like talking about, but like at the same time, like, yeah, no, I got to look all this up. Let's add transpilers, linters, formatters, language services. There's just a bajillion terms that people throw around and they all have reasonable meanings
I can't mostly, mostly know what I'm doing, like talking about, but like at the same time, like, yeah, no, I got to look all this up. Let's add transpilers, linters, formatters, language services. There's just a bajillion terms that people throw around and they all have reasonable meanings It's not like any real rocket science, but like on their own, you got to learn them. You got to understand where they come from. Yeah, to do that. We are more or more times until it really sinks in that of your community or any people, you know, just stop to learn. That is a great call out to you
It's not like any real rocket science, but like on their own, you got to learn them. You got to understand where they come from. Yeah, to do that. We are more or more times until it really sinks in that of your community or any people, you know, just stop to learn. That is a great call out to you Wood, the way I understand linter is it's something that will tell you it's kind of like prettier in VS code in the fact that it tells you if you have something that's incorrect or not a specific format that is a defined role
Wood, the way I understand linter is it's something that will tell you it's kind of like prettier in VS code in the fact that it tells you if you have something that's incorrect or not a specific format that is a defined role So what type script be a linker? You've activated my trap card as they say. So there was three, three tools that roughly fit into the description you said and you are right. They look at your code and they let you know if something is wrong and they all kind of blends together
So what type script be a linker? You've activated my trap card as they say. So there was three, three tools that roughly fit into the description you said and you are right. They look at your code and they let you know if something is wrong and they all kind of blends together A formatter is the simplest of them. A formatter just looks at the stuff that doesn't change the meaning of your code. White space, tabs, spaces and lines, semi-colons. All that stuff should not change how your code runs and a formatter just helps you write the code that's pretty and consistent
A formatter is the simplest of them. A formatter just looks at the stuff that doesn't change the meaning of your code. White space, tabs, spaces and lines, semi-colons. All that stuff should not change how your code runs and a formatter just helps you write the code that's pretty and consistent Hence the new video. So yeah, in VS code, a lot of people do what I do, which is they make it so that prettier runs on save whenever I hit save it formats the file
Hence the new video. So yeah, in VS code, a lot of people do what I do, which is they make it so that prettier runs on save whenever I hit save it formats the file If I hit save in the file doesn't format, I know I messed up my syntax somewhere, which is actually really useful when you're learning a language. Yeah. The next step is linters
If I hit save in the file doesn't format, I know I messed up my syntax somewhere, which is actually really useful when you're learning a language. Yeah. The next step is linters linters operate with a large set of rules, things like don't have an unused variable, don't name things and all caps or whatever. You can get some pretty advanced linters, especially when you have custom things that people write for their own projects
linters operate with a large set of rules, things like don't have an unused variable, don't name things and all caps or whatever. You can get some pretty advanced linters, especially when you have custom things that people write for their own projects linters should not work on formatting because the formatters do got linters aren't going to do it as well. They're slower, they're more powerful, so they're not as good at the edge case of formatting
linters should not work on formatting because the formatters do got linters aren't going to do it as well. They're slower, they're more powerful, so they're not as good at the edge case of formatting But they are really nice and configurable because in most entries you can toggle rules on or off, change their severities. A lot of rules have options. Like you could allow unused variables that match a specific name or whatever. So that's linters
But they are really nice and configurable because in most entries you can toggle rules on or off, change their severities. A lot of rules have options. Like you could allow unused variables that match a specific name or whatever. So that's linters So that's linters. So I'll pause there because that's like a big point of content and confusion and at least the JavaScript page of community of use formatting and ESL int for lintin and a lot of things
So that's linters. So I'll pause there because that's like a big point of content and confusion and at least the JavaScript page of community of use formatting and ESL int for lintin and a lot of things And I think that's a good call out of like just the examples of what they do because I totally thought that's pretty or was a linter as well. And Ben just joined. So hi, Ben. What do you think? We're talking about that. I asked I was like, OK, so a linter. Oh, my light just fell. I can stay there
And I think that's a good call out of like just the examples of what they do because I totally thought that's pretty or was a linter as well. And Ben just joined. So hi, Ben. What do you think? We're talking about that. I asked I was like, OK, so a linter. Oh, my light just fell. I can stay there I can stay there. We're going for a new motif. If they were doing it, if a is TypeScript a linter. And that's where the entire conversation started here. So we have prettier is an example of a formatter. Yes, lint is an example of a linter, which does not actually do formatting such as spacing
I can stay there. We're going for a new motif. If they were doing it, if a is TypeScript a linter. And that's where the entire conversation started here. So we have prettier is an example of a formatter. Yes, lint is an example of a linter, which does not actually do formatting such as spacing But it does a linter does like capitalization or incorrect. Would you say syntax for that one or is that syntax prettier? That would be the language. I will note that ESL int can do formatting, but it can't do it well
But it does a linter does like capitalization or incorrect. Would you say syntax for that one or is that syntax prettier? That would be the language. I will note that ESL int can do formatting, but it can't do it well And every linter maintenance team that I've ever seen, including the ESL int job script team and the TypeScript ESL int team that I'm on strongly recommend don't use a linter for formatting
And every linter maintenance team that I've ever seen, including the ESL int job script team and the TypeScript ESL int team that I'm on strongly recommend don't use a linter for formatting Another example would be like in TypeScript ESL, we have rules that verify using the right TypeScript or JavaScript syntax for things. So like we can tell you don't use this specific type of loop over an array because that's unsafe use this other type of loop that will prevent some bugs
Another example would be like in TypeScript ESL, we have rules that verify using the right TypeScript or JavaScript syntax for things. So like we can tell you don't use this specific type of loop over an array because that's unsafe use this other type of loop that will prevent some bugs But then the third tier then is yes, the language. The language makes sure that things are correct in both syntax and in TypeScript case typeings
But then the third tier then is yes, the language. The language makes sure that things are correct in both syntax and in TypeScript case typeings Like if you say a variable is a string and then give it a number, the syntax might be correct, but I could well yell at you saying no, you said it's a string, don't give it a number
Like if you say a variable is a string and then give it a number, the syntax might be correct, but I could well yell at you saying no, you said it's a string, don't give it a number Okay, that's a great example of how TypeScript doesn't compare to I honestly thought that like prettier or ESL int actually did that, not that it was TypeScript that did that to tell it that it's a wrong, wrong variable
Okay, that's a great example of how TypeScript doesn't compare to I honestly thought that like prettier or ESL int actually did that, not that it was TypeScript that did that to tell it that it's a wrong, wrong variable Is that how I would say it? It depends how technically precise you want to get someone who worked on the language could probably give you a better answer than me on the very specific. But yeah, that's what I would say
Is that how I would say it? It depends how technically precise you want to get someone who worked on the language could probably give you a better answer than me on the very specific. But yeah, that's what I would say I would say, okay, this does bring to my all my questions for chapter two and y'all I'm going to show this really quick. We're going to see if we can show this of how I end up studying before we do this and we're Josh ends up coming in is me, me, me, I have to stream
I would say, okay, this does bring to my all my questions for chapter two and y'all I'm going to show this really quick. We're going to see if we can show this of how I end up studying before we do this and we're Josh ends up coming in is me, me, me, I have to stream Oh, oh, okay, you're not going to be able to read my handwriting because I think it puts it backwards and upside down. Let's try. Yeah, there we go
Oh, oh, okay, you're not going to be able to read my handwriting because I think it puts it backwards and upside down. Let's try. Yeah, there we go Yeah, there we go. But I actually take notes in the book and I use a screen reader to read the book to me because I'm dyslexic, but this helps me remember what parts I was getting stuck at. And that's currently what we're going to be working on today
Yeah, there we go. But I actually take notes in the book and I use a screen reader to read the book to me because I'm dyslexic, but this helps me remember what parts I was getting stuck at. And that's currently what we're going to be working on today So I just, if anybody wants to see the like notes I'm taking, happy to do photos or show you again, but that's really, really awkward. So it is not going to be permanent and let's see. We got a comment on let's see can cancer I max cancer I max
So I just, if anybody wants to see the like notes I'm taking, happy to do photos or show you again, but that's really, really awkward. So it is not going to be permanent and let's see. We got a comment on let's see can cancer I max cancer I max Is that anywhere close to right on your name? Would it be fair to say that a lender gives you a list of things to fix, but a format or will actually fix them? That's a good question. I'll verbally say what I said in the chat
Is that anywhere close to right on your name? Would it be fair to say that a lender gives you a list of things to fix, but a format or will actually fix them? That's a good question. I'll verbally say what I said in the chat A format or will basically always fix it for you and do it very quickly and in a standardized way. A lender allows a list of rules to run. Each rule may produce complaints and each of those complaints may have a fix available
A format or will basically always fix it for you and do it very quickly and in a standardized way. A lender allows a list of rules to run. Each rule may produce complaints and each of those complaints may have a fix available Like in ESLints, there's a really popular plugin ESL plugin simple import sort that I'd like that sorts your imports. It has an auto fixer that can sort your imports for you. But other things like hey, you used a function in a place that you should have just made it a class or vice versa
Like in ESLints, there's a really popular plugin ESL plugin simple import sort that I'd like that sorts your imports. It has an auto fixer that can sort your imports for you. But other things like hey, you used a function in a place that you should have just made it a class or vice versa Like that might be more complex and the rule might not be able to quickly or easily suggest a fix for it. Very cool. Thank you. And something else that I do want to shout out that I actually didn't scroll to the beginning of chapter two is I will also bring this up on screen
Like that might be more complex and the rule might not be able to quickly or easily suggest a fix for it. Very cool. Thank you. And something else that I do want to shout out that I actually didn't scroll to the beginning of chapter two is I will also bring this up on screen So you guys so everyone can see at least what area we're in on the chapter. So, do, do, do, do, I'm getting there. Get in there. Share this screen. We are on chapter two, the tight system. And I would say question number one
So you guys so everyone can see at least what area we're in on the chapter. So, do, do, do, do, I'm getting there. Get in there. Share this screen. We are on chapter two, the tight system. And I would say question number one Tell me what your like why this chapter like what was your intent to this chapter and why you created it. Please. Sure, you're very polite. I appreciate you. I will also note that I'm in my brother's house. Hence my potato quality camera. And he has two small children
Tell me what your like why this chapter like what was your intent to this chapter and why you created it. Please. Sure, you're very polite. I appreciate you. I will also note that I'm in my brother's house. Hence my potato quality camera. And he has two small children So I am eating granola bites and we'll soon all muted be enjoying a little bit of unsweetened apple puree. Nice. Oh, as another side note, it is on your Twitter. So hopefully I'm not crossing the line saying this. If anybody notices that Josh may look up and there was like a really red eyeball
So I am eating granola bites and we'll soon all muted be enjoying a little bit of unsweetened apple puree. Nice. Oh, as another side note, it is on your Twitter. So hopefully I'm not crossing the line saying this. If anybody notices that Josh may look up and there was like a really red eyeball He's okay. Please explain. Yeah, sorry. Thank you for bringing this up. I was going to and I forgot. Content warning. Not very much. I had LASIK, which is like a now rather standard eye surgery that makes it so you don't need glasses or contacts anymore for the most part
He's okay. Please explain. Yeah, sorry. Thank you for bringing this up. I was going to and I forgot. Content warning. Not very much. I had LASIK, which is like a now rather standard eye surgery that makes it so you don't need glasses or contacts anymore for the most part Apparently until you're in your 40s, I need reading glasses like everyone else. So I've that to look forward to. But the side effect of LASIK is pain free. Totally fine. It's just your eyes get red
Apparently until you're in your 40s, I need reading glasses like everyone else. So I've that to look forward to. But the side effect of LASIK is pain free. Totally fine. It's just your eyes get red Especially if you have like a really strong like flinch slash blink instincts like I do like if anything goes near my eyes. I'm all over. So now my eyes look like a vampire or zombie costume, which is great. I have been wearing sunglasses indoors so that people don't look at me and think, oh no
Especially if you have like a really strong like flinch slash blink instincts like I do like if anything goes near my eyes. I'm all over. So now my eyes look like a vampire or zombie costume, which is great. I have been wearing sunglasses indoors so that people don't look at me and think, oh no I'm now that guy. So if you ever see some wearing sunglasses indoors, they might have just had LASIK two days ago. But you know, pain free. Totally fine. I got my Twitter for some cool pics. We did like double check that Josh is okay to straighten today. Oh yeah, that was real nice about this
I'm now that guy. So if you ever see some wearing sunglasses indoors, they might have just had LASIK two days ago. But you know, pain free. Totally fine. I got my Twitter for some cool pics. We did like double check that Josh is okay to straighten today. Oh yeah, that was real nice about this I was like, oh, let's do this. I'm so excited. Yeah. Okay. The type system. Thank you for that caveat. And what is the type system? Why do you make this chapter and tell us a little bit about it, please? Sure. It all started when I tried to learn TypeScript
I was like, oh, let's do this. I'm so excited. Yeah. Okay. The type system. Thank you for that caveat. And what is the type system? Why do you make this chapter and tell us a little bit about it, please? Sure. It all started when I tried to learn TypeScript And I think a lot of explanations of TypeScript, either assume people already understand what a type system is from another line. Like C sharp or C++. Or they kind of gloss over the concept of a type system and then jump into more syntax things
And I think a lot of explanations of TypeScript, either assume people already understand what a type system is from another line. Like C sharp or C++. Or they kind of gloss over the concept of a type system and then jump into more syntax things But I don't like that because I think if you're going to understand how TypeScript works, you should really understand how TypeScript works
But I don't like that because I think if you're going to understand how TypeScript works, you should really understand how TypeScript works Like what is it looking for in your code and why does it give you errors that it gets? So in this chapter, I cover the foundation of the logic that TypeScript uses to look at your code, understand the code, and then maybe yell at you about the code
Like what is it looking for in your code and why does it give you errors that it gets? So in this chapter, I cover the foundation of the logic that TypeScript uses to look at your code, understand the code, and then maybe yell at you about the code And the type system refers to the understanding that type builds up of all the things that exist variables functions, et cetera. And the types that they might be like string number, et cetera. Does that sound good so far? Yeah
And the type system refers to the understanding that type builds up of all the things that exist variables functions, et cetera. And the types that they might be like string number, et cetera. Does that sound good so far? Yeah I don't know why it just decided that it was going to show it on the other screen. But yes, please can. Something that I didn't realize and this is a great reminder as well for everyone. So I am still learning JavaScript. I'm still learning programming languages. I have built my own site
I don't know why it just decided that it was going to show it on the other screen. But yes, please can. Something that I didn't realize and this is a great reminder as well for everyone. So I am still learning JavaScript. I'm still learning programming languages. I have built my own site I can figure out a lot of it. But things like what we'll go through later on is like, what do you use null or undefined for questions for another time? So that being said, if some of the questions I ask seem like they're not TypeScript related, they're JavaScript related, that is why
I can figure out a lot of it. But things like what we'll go through later on is like, what do you use null or undefined for questions for another time? So that being said, if some of the questions I ask seem like they're not TypeScript related, they're JavaScript related, that is why And also, I had no idea that TypeScript, like type systems, happened outside of JavaScript. I didn't know that C++ or C sharp both used it as well. Oh, yeah. I didn't know that
And also, I had no idea that TypeScript, like type systems, happened outside of JavaScript. I didn't know that C++ or C sharp both used it as well. Oh, yeah. I didn't know that I didn't know that. Oh, really? There were three main popular languages out of quite a few, but three main popular ones people use that for the longest time did not have any concept of types or type system built in JavaScript Python Ruby
I didn't know that. Oh, really? There were three main popular languages out of quite a few, but three main popular ones people use that for the longest time did not have any concept of types or type system built in JavaScript Python Ruby I guess PHP is there, but it had some like really small ones many years ago. There are also other languages, but those are three main ones and all three of these main languages in terms of like how many people use in the industry
I guess PHP is there, but it had some like really small ones many years ago. There are also other languages, but those are three main ones and all three of these main languages in terms of like how many people use in the industry Now have very popular type systems available for them because they're so gosh darn useful. But almost every other language out there, C++, Rust, Go, Java, all these really popular languages have type systems
Now have very popular type systems available for them because they're so gosh darn useful. But almost every other language out there, C++, Rust, Go, Java, all these really popular languages have type systems And one of the big flaws in JavaScript that gets mentioned in chapter one of the book is that because it doesn't have a definitive way to describe what stuff is supposed to be. When you have like hundreds or even thousands of files that can get really difficult to manage your code
And one of the big flaws in JavaScript that gets mentioned in chapter one of the book is that because it doesn't have a definitive way to describe what stuff is supposed to be. When you have like hundreds or even thousands of files that can get really difficult to manage your code So the type system is something that lets you manage your code because you have good ways to describe what stuff is supposed to be. Got it. Thank you. Okay. Can I just say your mic is really good because it literally heard the bag. And I'm kind of impressed. I'm impressed with the mic though
So the type system is something that lets you manage your code because you have good ways to describe what stuff is supposed to be. Got it. Thank you. Okay. Can I just say your mic is really good because it literally heard the bag. And I'm kind of impressed. I'm impressed with the mic though We have another question. Sometimes type script can infer what you mean and other times you have strictly to type. I'm not sure I understand that yet. Does that make sense to you Josh? It does. The way tech Twitter works is someone will make a joke about something
We have another question. Sometimes type script can infer what you mean and other times you have strictly to type. I'm not sure I understand that yet. Does that make sense to you Josh? It does. The way tech Twitter works is someone will make a joke about something Someone else will notice the nugget of truth or lie in the joke. Normally truth and then make it insightful comments about it. And the people will repeat this over and over joke comment joke comment until it's a full blown meme for the duration of one week
Someone else will notice the nugget of truth or lie in the joke. Normally truth and then make it insightful comments about it. And the people will repeat this over and over joke comment joke comment until it's a full blown meme for the duration of one week We are currently in that cycle about I think two days in maybe three at most. And then we will talk about the right way to indicate types of the type system. We will learn in this chapter that in many cases type script can just read your code and understand what's supposed to happen
We are currently in that cycle about I think two days in maybe three at most. And then we will talk about the right way to indicate types of the type system. We will learn in this chapter that in many cases type script can just read your code and understand what's supposed to happen But in some cases you need to or can opt into being more explicit. And tech Twitter is all it lays about it. People are posting everywhere. It's this whole thing. It will die down in a week. So you recorded a video for I've never waited into these stupid discussions before apologies
But in some cases you need to or can opt into being more explicit. And tech Twitter is all it lays about it. People are posting everywhere. It's this whole thing. It will die down in a week. So you recorded a video for I've never waited into these stupid discussions before apologies It's not a stupid discussion. The topic is very smart. The way people are discussing it is stupid. This particular question I quite like and I really appreciate you asking. Thank you. Thank you, cancer. Yay. Okay. Cool. But yeah, we'll see later in the chapter like more nuance around it
It's not a stupid discussion. The topic is very smart. The way people are discussing it is stupid. This particular question I quite like and I really appreciate you asking. Thank you. Thank you, cancer. Yay. Okay. Cool. But yeah, we'll see later in the chapter like more nuance around it And I am posting also really quick for those who want to stay along. Even if you can't join on the Fridays that we stream. I just linked the repo. And that will keep track of all of our streams, all the dates as well as any projects when I get to them when I get to them. I'll be in there. Okay
And I am posting also really quick for those who want to stay along. Even if you can't join on the Fridays that we stream. I just linked the repo. And that will keep track of all of our streams, all the dates as well as any projects when I get to them when I get to them. I'll be in there. Okay Okay. So we talked a bit about like what your plan for this. What is the types a bit about what a type system is. Or how it might be used. But it's something that you said like right here. And I'm just like
Okay. So we talked a bit about like what your plan for this. What is the types a bit about what a type system is. Or how it might be used. But it's something that you said like right here. And I'm just like And I'm just like. I thought this was interesting in the fact of a type is a description of what job script value shape might be by shape. I mean, which properties and methods exist in on a value and built in type of operator would describe it
And I'm just like. I thought this was interesting in the fact of a type is a description of what job script value shape might be by shape. I mean, which properties and methods exist in on a value and built in type of operator would describe it And I thought that was a good way of like visualizing it. And also to anyone that is like doesn't like learning from books. I am one of those people. Josh is a really good writer and actually made it funny. Which I appreciate it. So as someone that likes to just wing it and figure things out
And I thought that was a good way of like visualizing it. And also to anyone that is like doesn't like learning from books. I am one of those people. Josh is a really good writer and actually made it funny. Which I appreciate it. So as someone that likes to just wing it and figure things out I found that this one is actually worth reading. So I'm having fun finding more and more books like that. So in this example, you said let when you create a variable with an initial value, a rea, let's see your equal a rea. And you also go in in
I found that this one is actually worth reading. So I'm having fun finding more and more books like that. So in this example, you said let when you create a variable with an initial value, a rea, let's see your equal a rea. And you also go in in I know I'm going to be skipping around a little bit of that let a first name be Whitney. And those I'm just going to pause on it caught confused me a little bit. But I think it might have to do with. Oh, I can't. Okay. Like the seven basic kind of primitives and JavaScript
I know I'm going to be skipping around a little bit of that let a first name be Whitney. And those I'm just going to pause on it caught confused me a little bit. But I think it might have to do with. Oh, I can't. Okay. Like the seven basic kind of primitives and JavaScript And then which ones typescript understand. I get bullion string number. And I feel like. No undefined. Big and simple are things that I haven't really run into very much or are connecting the dots. Do you help explain those a little bit? For example, sure
And then which ones typescript understand. I get bullion string number. And I feel like. No undefined. Big and simple are things that I haven't really run into very much or are connecting the dots. Do you help explain those a little bit? For example, sure Yeah, I will say that the only one that actually matters in the vast majority 99.99% of JavaScript code is the difference between null and undefined. Big and simple are things you will almost never use. I can't remember the last time I've used symbol
Yeah, I will say that the only one that actually matters in the vast majority 99.99% of JavaScript code is the difference between null and undefined. Big and simple are things you will almost never use. I can't remember the last time I've used symbol I don't think I've ever actually used a big and I wrote a game engine before that was available. So big and it's like number, but it doesn't round. So it's really good for math. It like goes. Oh. Okay. Like, like, not like a floating point number. Like one point. Okay. Okay
I don't think I've ever actually used a big and I wrote a game engine before that was available. So big and it's like number, but it doesn't round. So it's really good for math. It like goes. Oh. Okay. Like, like, not like a floating point number. Like one point. Okay. Okay Okay. Okay. Because y'all on opposite Fridays, I'm also learning Python from the bare basics as well. And we just went over that now spacing what is called, but there's a different number instead of I think it's actually called int. If I remember correctly. I thought it was what is double floats
Okay. Okay. Because y'all on opposite Fridays, I'm also learning Python from the bare basics as well. And we just went over that now spacing what is called, but there's a different number instead of I think it's actually called int. If I remember correctly. I thought it was what is double floats Yeah. Yeah. So there is a variant of what is a basically like a whole number. And then what can be like fractions. So interesting. Okay. So that's a connection for me. Simple. We can just get more. It doesn't matter. It's not relevant in this book. I we don't even need to have gone over big
Yeah. Yeah. So there is a variant of what is a basically like a whole number. And then what can be like fractions. So interesting. Okay. So that's a connection for me. Simple. We can just get more. It doesn't matter. It's not relevant in this book. I we don't even need to have gone over big I just think they're cool. And yeah, then I feel like they're good for like, I have a code type stuff. Yeah. Yeah. Yeah. There are projects that use them. Like there's a reason why their jobs for people work on it. But we won't get into that in the book
I just think they're cool. And yeah, then I feel like they're good for like, I have a code type stuff. Yeah. Yeah. Yeah. There are projects that use them. Like there's a reason why their jobs for people work on it. But we won't get into that in the book Now, I feel like I kind of want to like tweet that up. Then like, who's actually use these things? Okay. Um, I'll have some language has the concept of something like null for nil. What is Python call? Is it? I just forget. No, no. I don't know if I'm that far in Python. I don't know
Now, I feel like I kind of want to like tweet that up. Then like, who's actually use these things? Okay. Um, I'll have some language has the concept of something like null for nil. What is Python call? Is it? I just forget. No, no. I don't know if I'm that far in Python. I don't know I don't know. So I'll keep you posted. I know they call it none with a capital and then it's Python. The only one. So you have a variable and you don't assign it an initial value. Let's say you just write the code like let's singer semi colon. No equals a wreath up or Whitney or anything
I don't know. So I'll keep you posted. I know they call it none with a capital and then it's Python. The only one. So you have a variable and you don't assign it an initial value. Let's say you just write the code like let's singer semi colon. No equals a wreath up or Whitney or anything What is stored in that variable before you give it a value? The answer is undefined. So in JavaScript, the default. There's nothing here is called undefined. JavaScript also has another thing that is basically the same idea. There's nothing here called nil
What is stored in that variable before you give it a value? The answer is undefined. So in JavaScript, the default. There's nothing here is called undefined. JavaScript also has another thing that is basically the same idea. There's nothing here called nil And it is incredibly annoying to me and many people that JavaScript has two ways to describe. There's nothing here. And people get into these heated debates about when you should use one of the other undefined to many is when there's nothing there and value
And it is incredibly annoying to me and many people that JavaScript has two ways to describe. There's nothing here. And people get into these heated debates about when you should use one of the other undefined to many is when there's nothing there and value Nil is when there is a value and it's nothing. The difference between those two makes no sense to me on most. But you know, some of us prefer. So one of the big. I'd say language mistakes in JavaScript is having two things that mean almost the same thing
Nil is when there is a value and it's nothing. The difference between those two makes no sense to me on most. But you know, some of us prefer. So one of the big. I'd say language mistakes in JavaScript is having two things that mean almost the same thing And to just say that back to you, even though they're both confusing, it's like this example of let singer equal a wreatha. And if a wreatha was missing, it would come up as undefined. Yes. There are a lot of bold browser APIs that return null, not undefined when there are no results for something
And to just say that back to you, even though they're both confusing, it's like this example of let singer equal a wreatha. And if a wreatha was missing, it would come up as undefined. Yes. There are a lot of bold browser APIs that return null, not undefined when there are no results for something For example, document.query selector searches the browser document or the page for something matching a query. And if no, DOM elements are found, it returns null. Not undefined. That's just the way we live our lives. Reach. And what up, rivet. Haven't seen you for a while
For example, document.query selector searches the browser document or the page for something matching a query. And if no, DOM elements are found, it returns null. Not undefined. That's just the way we live our lives. Reach. And what up, rivet. Haven't seen you for a while Oh, I should talk about this. Y'all for anybody that's in Denver, gang is gone is at the end of the month. And there it's a tabletop conference, con conference. I always get that forget that comic con is probably like. A comic conference. But I'm very excited and I'm going
Oh, I should talk about this. Y'all for anybody that's in Denver, gang is gone is at the end of the month. And there it's a tabletop conference, con conference. I always get that forget that comic con is probably like. A comic conference. But I'm very excited and I'm going And yeah, it's going to be, it's going to be really awesome. The TT RPG convention. It's going to be fun. Yeah. Cool. It's going to be. It's not bad that I really, I really despise playing most board games. I had a friend group that kept playing them over and over
And yeah, it's going to be, it's going to be really awesome. The TT RPG convention. It's going to be fun. Yeah. Cool. It's going to be. It's not bad that I really, I really despise playing most board games. I had a friend group that kept playing them over and over And I hope one of them is listening so they feel shame about this. And it really ruined it for me. So now I have like one, one, one some month tolerance for it. Unless it's Katan. I can tolerate Katan. I don't think I've ever played. Oh, I was in a Twitter space where they were talking about it
And I hope one of them is listening so they feel shame about this. And it really ruined it for me. So now I have like one, one, one some month tolerance for it. Unless it's Katan. I can tolerate Katan. I don't think I've ever played. Oh, I was in a Twitter space where they were talking about it The D&D crew was talking about it. I've heard really boring things like not a lot of people really like Katan. It's not, it's not, it's objectively not. The best of them. Like it's older. It's, it's classic. It's good
The D&D crew was talking about it. I've heard really boring things like not a lot of people really like Katan. It's not, it's not, it's objectively not. The best of them. Like it's older. It's, it's classic. It's good It's good. A lot of people have a fundamentals for the D&D, The ones that are used in to this kind of game range, the bass pitch, and some pirate Worldover onu certainly videotwical, entertainers and cans, sort of. For private. And you were talking, uh, sort of drugiejita
It's good. A lot of people have a fundamentals for the D&D, The ones that are used in to this kind of game range, the bass pitch, and some pirate Worldover onu certainly videotwical, entertainers and cans, sort of. For private. And you were talking, uh, sort of drugiejita That part of the kind of efficience is, I could say, for real. You know, a lot of people don't really understand one thing. MTG. Magic, the gathering. Heck yes. Yeah. Yeah. I used to play, but everybody let me borrow their decks to play to like help them compete against themselves
That part of the kind of efficience is, I could say, for real. You know, a lot of people don't really understand one thing. MTG. Magic, the gathering. Heck yes. Yeah. Yeah. I used to play, but everybody let me borrow their decks to play to like help them compete against themselves So I'd have really good decks, but that was many, many moons ago. All right. Type script. Type script. This is, that was really helpful. So thank you
So I'd have really good decks, but that was many, many moons ago. All right. Type script. Type script. This is, that was really helpful. So thank you This was definitely something that also, I think, really helps to know, is this something that I need to go down a rabbit hole to research more
This was definitely something that also, I think, really helps to know, is this something that I need to go down a rabbit hole to research more Like knowing me, I would have been like, oh, I need to go like figure out what a symbol is for, why I would use a symbol, that kind of thing, and it may not be something that's actually useful
Like knowing me, I would have been like, oh, I need to go like figure out what a symbol is for, why I would use a symbol, that kind of thing, and it may not be something that's actually useful And okay, scrolling, scrolling, and y'all, you can buy this book online if we're going too fast. This is just kind of review, give you some ideas of what each chapter is and answer any questions that we have. And y'all are welcome to continue asking questions
And okay, scrolling, scrolling, and y'all, you can buy this book online if we're going too fast. This is just kind of review, give you some ideas of what each chapter is and answer any questions that we have. And y'all are welcome to continue asking questions So I'm really happy that cancer has been. So thank you. All right. The next questions. Okay
So I'm really happy that cancer has been. So thank you. All right. The next questions. Okay Okay. So this one is, kind of goes with the Arifa part that I had in here of the error is take the following snippet in which TypeScript is emitting a type error about the member, a member property being an arosely in it. Aroniously. Incorrectly. Aronally-as-ly called as a function. Aroniously
Okay. So this one is, kind of goes with the Arifa part that I had in here of the error is take the following snippet in which TypeScript is emitting a type error about the member, a member property being an arosely in it. Aroniously. Incorrectly. Aronally-as-ly called as a function. Aroniously Aroniously. I have an un for all that may not know. I am very, very, very dyslexic and part of a lot of dyslexia for people is not knowing like how to break down words to sound them out. For sturdied. So streaming and reading out loud is like really fun and not fun. Fun. Alright
Aroniously. I have an un for all that may not know. I am very, very, very dyslexic and part of a lot of dyslexia for people is not knowing like how to break down words to sound them out. For sturdied. So streaming and reading out loud is like really fun and not fun. Fun. Alright Fun. Alright. So let first name equal Whitney. I know I'm not using all the symbols and things. First name dot length with the brackets. And this expression is not callable. Type number has no call signatures. So all of these answers totally made sense
Fun. Alright. So let first name equal Whitney. I know I'm not using all the symbols and things. First name dot length with the brackets. And this expression is not callable. Type number has no call signatures. So all of these answers totally made sense What I was a bit confused on is would it be like first name with the brackets and quotes to be proper? I'm going to nitpick you and I apologize in advance. It's going to help me. You're saying brackets. I would call it parentheses
What I was a bit confused on is would it be like first name with the brackets and quotes to be proper? I'm going to nitpick you and I apologize in advance. It's going to help me. You're saying brackets. I would call it parentheses As we get into a raise it'll where we have both brackets and parentheses on the line. It just it helps me having the right like internal monologue for things. I don't know about you, but I'm one of the people that has a very omnipresent internal monologue. And that's how I think
As we get into a raise it'll where we have both brackets and parentheses on the line. It just it helps me having the right like internal monologue for things. I don't know about you, but I'm one of the people that has a very omnipresent internal monologue. And that's how I think Yeah, no, that's I love that because we all learn so differently. That is very, very helpful to have these conversations. And thank you for the follow. I don't know how to say your name, but I'll show it on here. I'm going to add a Robini, Femia, Aropina. Thank you. All right. Very mild typo
Yeah, no, that's I love that because we all learn so differently. That is very, very helpful to have these conversations. And thank you for the follow. I don't know how to say your name, but I'll show it on here. I'm going to add a Robini, Femia, Aropina. Thank you. All right. Very mild typo Very mild typo. I'm noticing just noticing now the books not wrong. I'm just there should be a period on that second line of the comment type number has no call signatures. The first line has a period. The second line doesn't
Very mild typo. I'm noticing just noticing now the books not wrong. I'm just there should be a period on that second line of the comment type number has no call signatures. The first line has a period. The second line doesn't These are the things you notice when you write a book wait a few months and then come back to it. Anyway, so the problem is in JavaScript. If you want to get the length of a string, it's just the thing dot length. It's not a fine. It's a it's a member property. Okay
These are the things you notice when you write a book wait a few months and then come back to it. Anyway, so the problem is in JavaScript. If you want to get the length of a string, it's just the thing dot length. It's not a fine. It's a it's a member property. Okay Okay. So adding in the parentheses is wrong. And TypeScript, one of the flaws of TypeScript, like the big things they've been trying to work on last three years is that a lot of its error messages are like two technical. They are accurate and precise, but not super clear
Okay. So adding in the parentheses is wrong. And TypeScript, one of the flaws of TypeScript, like the big things they've been trying to work on last three years is that a lot of its error messages are like two technical. They are accurate and precise, but not super clear And what it's saying here is type number has no call signatures, meaning I TypeScript have not been told that there's any allowed way to call length. Which those things are called signatures, a call signature. Because there's no call signature, I don't think this can be called as a function
And what it's saying here is type number has no call signatures, meaning I TypeScript have not been told that there's any allowed way to call length. Which those things are called signatures, a call signature. Because there's no call signature, I don't think this can be called as a function IE, it is not callable. And those four things are how we got to that conclusion. Okay, thank you. And I'm hoping this makes it a little easier, something I probably should have started doing earlier. So you can see where we are on the screen. And find this. There we go. Okay, that part makes sense
IE, it is not callable. And those four things are how we got to that conclusion. Okay, thank you. And I'm hoping this makes it a little easier, something I probably should have started doing earlier. So you can see where we are on the screen. And find this. There we go. Okay, that part makes sense And I'm going kinds of errors. And I think you just went through it. Syntax. Oh, this is fun. I just will auto do it. Syntax and type, like that made sense of like syntax errors are like if they're missing the quotes. And a type error is if it's not the correct type, like in my mind, it made sense
And I'm going kinds of errors. And I think you just went through it. Syntax. Oh, this is fun. I just will auto do it. Syntax and type, like that made sense of like syntax errors are like if they're missing the quotes. And a type error is if it's not the correct type, like in my mind, it made sense This one didn't necessarily make sense to me, but we did skip that exercise and go never mind. Because it had classes and me and classes don't get along yet of this one is for type errors, it would be like if I try to use a number instead of a string, right? Yeah, that type of thing
This one didn't necessarily make sense to me, but we did skip that exercise and go never mind. Because it had classes and me and classes don't get along yet of this one is for type errors, it would be like if I try to use a number instead of a string, right? Yeah, that type of thing A Syntax error is something that stops the runtime from being able to execute your code in the first place. Like if you have a lot of lessons, something like that. A type error is your code is syntactically valid, but type crypt is pretty sure you screwed up. Okay, okay. Cool
A Syntax error is something that stops the runtime from being able to execute your code in the first place. Like if you have a lot of lessons, something like that. A type error is your code is syntactically valid, but type crypt is pretty sure you screwed up. Okay, okay. Cool Okay, okay. Cool. Now what? And y'all, I just ended up like in the last couple of weeks, I was like, I need a job, I need a portfolio. So I started building a site with Astro and they are a meta framework, a JavaScript meta framework. And it uses type script until when CSS
Okay, okay. Cool. Now what? And y'all, I just ended up like in the last couple of weeks, I was like, I need a job, I need a portfolio. So I started building a site with Astro and they are a meta framework, a JavaScript meta framework. And it uses type script until when CSS So I kind of ended up using type script. So what we're going into that as we go, I mentioned that because I realized the assignability and I think I tried assigning stuff in my website, which is exciting. So assignability
So I kind of ended up using type script. So what we're going into that as we go, I mentioned that because I realized the assignability and I think I tried assigning stuff in my website, which is exciting. So assignability So assignability. This made sense of let first name equal carol, first name equal Joan of it followed along because they are the same type. Not like it doesn't need to be the same string, but they are the string. Like they don't have to both say Carol, they can
So assignability. This made sense of let first name equal carol, first name equal Joan of it followed along because they are the same type. Not like it doesn't need to be the same string, but they are the string. Like they don't have to both say Carol, they can And that it follows along, meaning that, okay, cool. If we do let first name be Carol, that's a string, first name equal Joan, that's a string. Let last name be king, that's a string. Last name equal true
And that it follows along, meaning that, okay, cool. If we do let first name be Carol, that's a string, first name equal Joan, that's a string. Let last name be king, that's a string. Last name equal true That's because everything is a string until you added a Boolean in there and TypeScript does not like mismatches. Yeah. So all of that made sense and like why types are, you know, you can change types around and that type of thing
That's because everything is a string until you added a Boolean in there and TypeScript does not like mismatches. Yeah. So all of that made sense and like why types are, you know, you can change types around and that type of thing So all this made sense and this is a big place where type annotations and like not needing to have like doing too much on. I'm just making sure I didn't actually write a note for this, but I'm like, I feel like this is something I was supposed to write a note for
So all this made sense and this is a big place where type annotations and like not needing to have like doing too much on. I'm just making sure I didn't actually write a note for this, but I'm like, I feel like this is something I was supposed to write a note for Because this is to say, um, here assigning, I'm highlighting what I'm reading here, assigning the evolving any variable rocker is first assigned as string, which means it has a string methods such as to uppercase but then involved to a number
Because this is to say, um, here assigning, I'm highlighting what I'm reading here, assigning the evolving any variable rocker is first assigned as string, which means it has a string methods such as to uppercase but then involved to a number Oh, could you explain this area and your what's going on a bit more please. Sure. We declare this variable rocker rock on. Um, in fact, this is the sign of the rock on sign is the sign of the horns like the devil horns. That's where that comes from. Cool piece of trivia
Oh, could you explain this area and your what's going on a bit more please. Sure. We declare this variable rocker rock on. Um, in fact, this is the sign of the rock on sign is the sign of the horns like the devil horns. That's where that comes from. Cool piece of trivia So we declare this variable rocker and TypeScript doesn't know what's supposed to go in it. We haven't indicated to TypeScript what it's supposed to contain
So we declare this variable rocker and TypeScript doesn't know what's supposed to go in it. We haven't indicated to TypeScript what it's supposed to contain So to start, TypeScript considers it to be type any, which is a type that'll keep coming up and I'll get more and more angry towards as the book goes on. And he says, I don't know, just let me do whatever I want. Anything
So to start, TypeScript considers it to be type any, which is a type that'll keep coming up and I'll get more and more angry towards as the book goes on. And he says, I don't know, just let me do whatever I want. Anything Anything. When we on the next line of code assign a string to rocker TypeScript knows, okay, they have assigned a string rocker is now type string. So you can call methods like to uppercase that exists on string. Okay
Anything. When we on the next line of code assign a string to rocker TypeScript knows, okay, they have assigned a string rocker is now type string. So you can call methods like to uppercase that exists on string. Okay Okay. But a variable that is what's called an evolving any meaning it wasn't given an initial value or type. So it's just been assumed to be the type that was given is allowed to be a new type or given a new type of value. So rocker equals a number is totally fine
Okay. But a variable that is what's called an evolving any meaning it wasn't given an initial value or type. So it's just been assumed to be the type that was given is allowed to be a new type or given a new type of value. So rocker equals a number is totally fine And at that point, TypeScript evolves its understanding. It switches it from string to number because it sees we never said what's supposed to be. And now we've switched it from string to number. Is that and so what you're looking for? Yes
And at that point, TypeScript evolves its understanding. It switches it from string to number because it sees we never said what's supposed to be. And now we've switched it from string to number. Is that and so what you're looking for? Yes And to compare, let's see if I can actually make this smaller. This might be hard for everyone to see. So we're just going to, you know, do it this way. So the reason this one didn't end up being any and it has to stay a string is because it's let first name equal something
And to compare, let's see if I can actually make this smaller. This might be hard for everyone to see. So we're just going to, you know, do it this way. So the reason this one didn't end up being any and it has to stay a string is because it's let first name equal something And that's why it's associating with it. So it can't be changed. But if it was let first name, would you put equal any or just let first name. Ah, you're skipping ahead. You're asking how to how to give it a particular type to a variable
And that's why it's associating with it. So it can't be changed. But if it was let first name, would you put equal any or just let first name. Ah, you're skipping ahead. You're asking how to how to give it a particular type to a variable And if you don't have an initial value, there is a syntax that you can use to tell TypeScript what is supposed to go in the variable. And that syntax is called type annotations and comes up in the middle page. Okay. And that's where we got here
And if you don't have an initial value, there is a syntax that you can use to tell TypeScript what is supposed to go in the variable. And that syntax is called type annotations and comes up in the middle page. Okay. And that's where we got here Here, there we go, of let rocker and let rocker doesn't have it is not assigning to anything. So therefore, instead of saying to equals whatever equals and for that example. So we technically don't need to put that it equals a string. We could tell it that it equals a word
Here, there we go, of let rocker and let rocker doesn't have it is not assigning to anything. So therefore, instead of saying to equals whatever equals and for that example. So we technically don't need to put that it equals a string. We could tell it that it equals a word And therefore, it knows it's a string. Yes. Yes. So like this one says let first name equal carol. It doesn't need to be let first name equal string. That's correct. Because the way that you tell TypeScript the type is something isn't within equals. It's with a colon. If you don't have a value
And therefore, it knows it's a string. Yes. Yes. So like this one says let first name equal carol. It doesn't need to be let first name equal string. That's correct. Because the way that you tell TypeScript the type is something isn't within equals. It's with a colon. If you don't have a value So you can either say let first name equals carol or let first name colon string. And both of those things would tell TypeScript that first name is supposed to be a string. And I'm going to bring this up for rivets, but I'm writing that down really quick
So you can either say let first name equals carol or let first name colon string. And both of those things would tell TypeScript that first name is supposed to be a string. And I'm going to bring this up for rivets, but I'm writing that down really quick Yes, I would say that evolving any variables are generally bad ish. I don't think we actually have a lint rule against them in TypeScript. I personally try to avoid them. I honestly just try to make variables const whenever possible
Yes, I would say that evolving any variables are generally bad ish. I don't think we actually have a lint rule against them in TypeScript. I personally try to avoid them. I honestly just try to make variables const whenever possible Even if I'm not in a project that uses the const syntax overlets, I generally try not to mutate variables over time because it then gets hard to keep track of them. So most of the time I end up not having evolving any is
Even if I'm not in a project that uses the const syntax overlets, I generally try not to mutate variables over time because it then gets hard to keep track of them. So most of the time I end up not having evolving any is I'm hesitant to say no it's bad or yes it's good or whatever because it's not something that people end up doing a lot so we don't have too many hard feelings on it. But eventually there will probably be some week long Twitter flame war about it. And then we'll see who really cares
I'm hesitant to say no it's bad or yes it's good or whatever because it's not something that people end up doing a lot so we don't have too many hard feelings on it. But eventually there will probably be some week long Twitter flame war about it. And then we'll see who really cares Okay, to see if I can recap that to understand, even though there's technically that's technically possible is it considered bad to change types on a variable is what rivet asks. And what you're saying is, even though we can, we don't necessarily always want to use it as a moving variable
Okay, to see if I can recap that to understand, even though there's technically that's technically possible is it considered bad to change types on a variable is what rivet asks. And what you're saying is, even though we can, we don't necessarily always want to use it as a moving variable We want to have it as like we're going to define it such as let. First name equal Carol just so that way it's defined as a string and we don't have to worry about it moving or changing. Yeah, yeah, skip your code simpler easy to understand. Okay, okay, it's hard enough to understand code as it is
We want to have it as like we're going to define it such as let. First name equal Carol just so that way it's defined as a string and we don't have to worry about it moving or changing. Yeah, yeah, skip your code simpler easy to understand. Okay, okay, it's hard enough to understand code as it is Let's not make it harder for our developers. Yes. And then just said so tired of the flame wars. Yeah. I mean, lucky enough for being a beginner is you know, I am still learning it all. I don't get them when they're there. Some of them I'm starting to get, which is kind of exciting. Okay
Let's not make it harder for our developers. Yes. And then just said so tired of the flame wars. Yeah. I mean, lucky enough for being a beginner is you know, I am still learning it all. I don't get them when they're there. Some of them I'm starting to get, which is kind of exciting. Okay Okay. So this is let me scroll down here so that way y'all can see where I'm going. All right. So we have let rocker colon string and we're still talking about the type annotations and this is where and then the unnecessary annotations, which I think is very interesting. And this also helps
Okay. So this is let me scroll down here so that way y'all can see where I'm going. All right. So we have let rocker colon string and we're still talking about the type annotations and this is where and then the unnecessary annotations, which I think is very interesting. And this also helps This is where I was. This connected what I was asking about at the beginning with Arifa. I'm like you answered it throughout the chapter. That was kind of fun. Yeah. What I'm wondering and would love to kind of show you what I'm was doing with my side
This is where I was. This connected what I was asking about at the beginning with Arifa. I'm like you answered it throughout the chapter. That was kind of fun. Yeah. What I'm wondering and would love to kind of show you what I'm was doing with my side So give me a second because I'm not used to how to do this with so many screens. No. Now we're just going to do this. Okay. There we go. I use a rectangle for that. I am. Yeah. Yeah. I'm just not used to it yet. So I got rectangle, which y'all is a really great app
So give me a second because I'm not used to how to do this with so many screens. No. Now we're just going to do this. Okay. There we go. I use a rectangle for that. I am. Yeah. Yeah. I'm just not used to it yet. So I got rectangle, which y'all is a really great app You should definitely check it out. But then I also got art, the new browser. So between the two. I don't know what I'm doing. Yeah. It's very awkward. But before we go into what my questions are going to be a cancer asked when building a function for the first time and it takes some parameters
You should definitely check it out. But then I also got art, the new browser. So between the two. I don't know what I'm doing. Yeah. It's very awkward. But before we go into what my questions are going to be a cancer asked when building a function for the first time and it takes some parameters Do you start with type any and work backward towards stricter typing. I will like I'll answer it in the general of when I write code in general such as functions or variables. Such as parameters, functions variables. Do I start with type any work backwards
Do you start with type any and work backward towards stricter typing. I will like I'll answer it in the general of when I write code in general such as functions or variables. Such as parameters, functions variables. Do I start with type any work backwards If I need to generally when I write code, I try to first think in my head what type is stuff going to be. There is eventually going to be a term someone comes up with. Like type driven development that doesn't have the same acronym as test driven developments
If I need to generally when I write code, I try to first think in my head what type is stuff going to be. There is eventually going to be a term someone comes up with. Like type driven development that doesn't have the same acronym as test driven developments But I try to think in terms of like what what are my values, what types can they be and then how do I represent that type system. So if I know the type of something, I will write it. Even if it's slightly wrong, I'll write it, get the code to have correct syntax and then fix the type errors
But I try to think in terms of like what what are my values, what types can they be and then how do I represent that type system. So if I know the type of something, I will write it. Even if it's slightly wrong, I'll write it, get the code to have correct syntax and then fix the type errors But if I don't know the type, yeah, totally reasonable to write any like you can you can say colon space any as a type or something rather than colon string or colon number
But if I don't know the type, yeah, totally reasonable to write any like you can you can say colon space any as a type or something rather than colon string or colon number And if you don't know the type yet, it is better to say any and just know that as a to do for yourself later than to freeze and not write your code at all. So totally fine to use any joint developments. I just would not recommend allowing them to persist in your code base
And if you don't know the type yet, it is better to say any and just know that as a to do for yourself later than to freeze and not write your code at all. So totally fine to use any joint developments. I just would not recommend allowing them to persist in your code base I was listing and then forgot what I was going to write down. What did you say was parameters again like I think you said like. String or something
I was listing and then forgot what I was going to write down. What did you say was parameters again like I think you said like. String or something This question is specific to function parameters, but my answer is the same for function parameters variables anything that might need a type of invitation. OK. Fun fact arguments are what you give to a function
This question is specific to function parameters, but my answer is the same for function parameters variables anything that might need a type of invitation. OK. Fun fact arguments are what you give to a function You give a function and arguments parameters is when the function declares what it takes in. They're not the same term. And no one ever remembers that. This is why coding is so confusing, but at the same time it's like when you finally start getting it, it can start to make sense
You give a function and arguments parameters is when the function declares what it takes in. They're not the same term. And no one ever remembers that. This is why coding is so confusing, but at the same time it's like when you finally start getting it, it can start to make sense It just takes while. OK. So what we are looking for. Yay. Yay. Thanks to Josh. My pleasure. Answer. Things to me joy every time. Um, so I built a site and I got a theme to start it off from Astro, which is a meta framework
It just takes while. OK. So what we are looking for. Yay. Yay. Thanks to Josh. My pleasure. Answer. Things to me joy every time. Um, so I built a site and I got a theme to start it off from Astro, which is a meta framework And what I was doing is so I will go a little backwards is they have all of these components and I was like, I really, really like this code component. But it doesn't have anything in here that I can change and you know manipulate what's showing up on the screen
And what I was doing is so I will go a little backwards is they have all of these components and I was like, I really, really like this code component. But it doesn't have anything in here that I can change and you know manipulate what's showing up on the screen I was like, OK, so I had to go find where this was. And this is when I started figuring out the imports. I was like, OK, so we go to data, we go to code. And then we have our code adjacent and they're in a very specific format. And I'm like, OK, cool
I was like, OK, so I had to go find where this was. And this is when I started figuring out the imports. I was like, OK, so we go to data, we go to code. And then we have our code adjacent and they're in a very specific format. And I'm like, OK, cool Well, I'll just keep doing this, you know, whatever. And it has this index file. And I'm like, OK, so I figured out enough that the for it's the importing the code site and from types and that there's sites data from code. So dot JSON and it exports as get code
Well, I'll just keep doing this, you know, whatever. And it has this index file. And I'm like, OK, so I figured out enough that the for it's the importing the code site and from types and that there's sites data from code. So dot JSON and it exports as get code I'm like, OK, I feel like I understand this enough. But this does not help me put the dates. I really wanted my stream schedule to have the dates and to give y'all a, you know, a visual because that's always helpful for me of. So there we go. I got a portfolio. Code. This is what it looks like
I'm like, OK, I feel like I understand this enough. But this does not help me put the dates. I really wanted my stream schedule to have the dates and to give y'all a, you know, a visual because that's always helpful for me of. So there we go. I got a portfolio. Code. This is what it looks like It looks beautiful. I really wanted it everywhere. So there's I was like, cool. I'm going to like make more of these. And we have writing. We have speaking all look great. These were very easy to duplicate. They all do the same thing. They're all the same sizes. Awesome. Very nice. Thanks
It looks beautiful. I really wanted it everywhere. So there's I was like, cool. I'm going to like make more of these. And we have writing. We have speaking all look great. These were very easy to duplicate. They all do the same thing. They're all the same sizes. Awesome. Very nice. Thanks Very nice. Thanks. For my live stream. I want dates. I really want dates. They need dates. And it didn't let me do dates. I was very, very agitated. Case anybody wants to know how I code a lot of it is me yelling at my laptop
Very nice. Thanks. For my live stream. I want dates. I really want dates. They need dates. And it didn't let me do dates. I was very, very agitated. Case anybody wants to know how I code a lot of it is me yelling at my laptop I don't know if I can actually do live coding instead of just learning because I just yell at my laptop. And so what ended up happening is I followed. I was like, oh, there is a type. I'm going to go investigate. And this is how what goes through my head
I don't know if I can actually do live coding instead of just learning because I just yell at my laptop. And so what ended up happening is I followed. I was like, oh, there is a type. I'm going to go investigate. And this is how what goes through my head And I'm like, oh, look at all of these types. They do things. And they do, they do things. So I actually created a thing of export interface stream site. And I added date. I have I got it to work. It clearly works. I'm very excited about this
And I'm like, oh, look at all of these types. They do things. And they do, they do things. So I actually created a thing of export interface stream site. And I added date. I have I got it to work. It clearly works. I'm very excited about this I'm really so excited that I figured out how to make it work. But I don't actually know what I did in the fact that we end up going through. I can see if I can make both of these big enough to ask my next question. Let's see if this works now. And no, no
I'm really so excited that I figured out how to make it work. But I don't actually know what I did in the fact that we end up going through. I can see if I can make both of these big enough to ask my next question. Let's see if this works now. And no, no And no, no. Do we want to do this? No, oh, it's because. Oh, whoa, I don't know how I did that, but that is really cool. It's got. I would like to know what shortcut you just pressed because it looks really useful. Is that an on-screen magnifier accessibility thing? Yeah. But I think it was from
And no, no. Do we want to do this? No, oh, it's because. Oh, whoa, I don't know how I did that, but that is really cool. It's got. I would like to know what shortcut you just pressed because it looks really useful. Is that an on-screen magnifier accessibility thing? Yeah. But I think it was from View view. I don't know. Oh, show magnifier. It is the. The thing next to the one. Is that till I actually know what I'm right about that. I think it's called till the you are right. I think I don't know. That's what people have told me. Oh, this is fine. I feel like we. Okay. So my question is
View view. I don't know. Oh, show magnifier. It is the. The thing next to the one. Is that till I actually know what I'm right about that. I think it's called till the you are right. I think I don't know. That's what people have told me. Oh, this is fine. I feel like we. Okay. So my question is So my question is. I think I'm going to have to go through this. So we got type shapes coming up. But we also have modules. And I know you said like there are some that aren't that important in here. And I'm really glad that we're talking about this. But I'm like. So there's type shapes
So my question is. I think I'm going to have to go through this. So we got type shapes coming up. But we also have modules. And I know you said like there are some that aren't that important in here. And I'm really glad that we're talking about this. But I'm like. So there's type shapes There's modules. I also have in here components. And I did something here with my. Type script. And I don't actually know what all these separate. Even me. Or if they're connected. It's funny because chapter seven is what covers interfaces. And I believe we're on chapter two today. So. Yes
There's modules. I also have in here components. And I did something here with my. Type script. And I don't actually know what all these separate. Even me. Or if they're connected. It's funny because chapter seven is what covers interfaces. And I believe we're on chapter two today. So. Yes So. Yes. Jump in ahead. I will also note that the difference between a script and a module in JavaScript is not useful. In most of them, like it's not something that comes up more than one search twice
So. Yes. Jump in ahead. I will also note that the difference between a script and a module in JavaScript is not useful. In most of them, like it's not something that comes up more than one search twice I forget whether I mentioned in the book that this is like not something that you need to pay a lot of attention to. But it's like just barely useful enough that we have to include it. So yeah, a module is a file that imports or exports. I believe I think that's a technical definition
I forget whether I mentioned in the book that this is like not something that you need to pay a lot of attention to. But it's like just barely useful enough that we have to include it. So yeah, a module is a file that imports or exports. I believe I think that's a technical definition So if there's like an import statement or an export statement, it's a module. Oh, so with that mean that my gliming go back up here to index it imports. And it in X. So it's definitely a module. Yes. Okay. And a rivet calls the tilde and eyebrow or the eyebrow
So if there's like an import statement or an export statement, it's a module. Oh, so with that mean that my gliming go back up here to index it imports. And it in X. So it's definitely a module. Yes. Okay. And a rivet calls the tilde and eyebrow or the eyebrow And Ben said that the magnifying class is especially nifty for street. I agree. Y'all, I should. I just don't know which way we're going on this. But, but it only works in PDF. I'm pretty sure. Let's magnify. Yeah. It doesn't go all the way over to my. So it's just for this
And Ben said that the magnifying class is especially nifty for street. I agree. Y'all, I should. I just don't know which way we're going on this. But, but it only works in PDF. I'm pretty sure. Let's magnify. Yeah. It doesn't go all the way over to my. So it's just for this But that's still pretty cool. Okay. So the index file is like a module because it has an import and export. Sure. And you all you need is one of them to qualify as a module. Oh. Okay. So any file that has an import and or an export is considered a module. Nifty. Okay. Cool
But that's still pretty cool. Okay. So the index file is like a module because it has an import and export. Sure. And you all you need is one of them to qualify as a module. Oh. Okay. So any file that has an import and or an export is considered a module. Nifty. Okay. Cool Nifty. Okay. Cool. And then you also asked about components, which is like a totally separate concept. A component is a like an idea in a lot of UI frameworks. And where it is a single area of your view that takes in some information and renders UI output. So like your header would be a component
Nifty. Okay. Cool. And then you also asked about components, which is like a totally separate concept. A component is a like an idea in a lot of UI frameworks. And where it is a single area of your view that takes in some information and renders UI output. So like your header would be a component Right. Like I'm understanding what you're saying. But I'm like, I don't know how to write that for notes. Sure. I like the way that react does its description of components. I realize that this is like the fifth flame or I might be entering here
Right. Like I'm understanding what you're saying. But I'm like, I don't know how to write that for notes. Sure. I like the way that react does its description of components. I realize that this is like the fifth flame or I might be entering here But in react to a lot of components, the most common way to describe them now is with a function. It takes in some information and literally returns a description of the HTML that is output. Now that there are like technically in some cases, it was like react from native level up
But in react to a lot of components, the most common way to describe them now is with a function. It takes in some information and literally returns a description of the HTML that is output. Now that there are like technically in some cases, it was like react from native level up And reality, it's like you take in some information and you return the the DOM or the description of the DOM that is a result. So that is like a really common way to think of and describe a component. Okay. Cool. I like that. And then we also talked a bit about. Where did I get this? Oh. Hold on
And reality, it's like you take in some information and you return the the DOM or the description of the DOM that is a result. So that is like a really common way to think of and describe a component. Okay. Cool. I like that. And then we also talked a bit about. Where did I get this? Oh. Hold on Hold on. Hold on. We have a reason to use a magnifying glass. Now let me. Oh, I guess I should just like actually use it. Okay. So a module is a file with the top level export import. That makes sense. And a script is every file that's not a module
Hold on. Hold on. We have a reason to use a magnifying glass. Now let me. Oh, I guess I should just like actually use it. Okay. So a module is a file with the top level export import. That makes sense. And a script is every file that's not a module So if it doesn't have an import or an export, it's a script. That's all the other files. So this dot json is technically a script because it doesn't say that it's importing or exporting anywhere. It's neither. I guess modules. Because it's a database. Models
So if it doesn't have an import or an export, it's a script. That's all the other files. So this dot json is technically a script because it doesn't say that it's importing or exporting anywhere. It's neither. I guess modules. Because it's a database. Models Models. I don't know if I actually say this in the book. This is only modules and script is only referring to code files like jst. So code that json is just like some file on your system that is not part of the JavaScript understanding
Models. I don't know if I actually say this in the book. This is only modules and script is only referring to code files like jst. So code that json is just like some file on your system that is not part of the JavaScript understanding Now, they're adding in ways to the language to like really nicely interact with data files like json. But like this is not JavaScript code. This is data or database. Like you said. Okay. I'm trying to think so I probably don't have anything that doesn't import
Now, they're adding in ways to the language to like really nicely interact with data files like json. But like this is not JavaScript code. This is data or database. Like you said. Okay. I'm trying to think so I probably don't have anything that doesn't import Yeah, most code bases basically every file is a module scripts are really mostly from old code bases. Mostly. Completely. That's JavaScript. It's my random. Random file on your system that someone else might interact with. It's not only for JavaScript, you said right? Yeah
Yeah, most code bases basically every file is a module scripts are really mostly from old code bases. Mostly. Completely. That's JavaScript. It's my random. Random file on your system that someone else might interact with. It's not only for JavaScript, you said right? Yeah JavaScript and languages like type script that about JavaScript. Interesting. Interesting. Okay. Okay. So that's that's all making sense. And. I think that was actually the the bit that. I think that was not the end of the part that weren't making sense. Although I do think if you could
JavaScript and languages like type script that about JavaScript. Interesting. Interesting. Okay. Okay. So that's that's all making sense. And. I think that was actually the the bit that. I think that was not the end of the part that weren't making sense. Although I do think if you could Is there something and I have a feeling it might be more about like type shapes or the annotations or like unnecessary annotations. Like you answered all of my questions. Thank you
Is there something and I have a feeling it might be more about like type shapes or the annotations or like unnecessary annotations. Like you answered all of my questions. Thank you Thank you. So I think that's the only way to get to the other parts that you think that a lot of people may miss or you really want to drive home that we should talk about. Yes. Cancer at 12 18 my time
Thank you. So I think that's the only way to get to the other parts that you think that a lot of people may miss or you really want to drive home that we should talk about. Yes. Cancer at 12 18 my time Message something that I like one third answered and then we kind of like said we'll get to later. Sometimes type. I don't have the ability to. To focus on the thing. But sometimes types you can infer what you mean and other times you have to strictly type
Message something that I like one third answered and then we kind of like said we'll get to later. Sometimes type. I don't have the ability to. To focus on the thing. But sometimes types you can infer what you mean and other times you have to strictly type Can you talk about that if it's not outside what you're already talking about? That's very much. Okay. Okay. Do you want me to show something in the book? Yes, please. We're working well. We're like on the same web. That's about to ask. Yeah. There's the section on unnecessary type annotations
Can you talk about that if it's not outside what you're already talking about? That's very much. Okay. Okay. Do you want me to show something in the book? Yes, please. We're working well. We're like on the same web. That's about to ask. Yeah. There's the section on unnecessary type annotations I think a little earlier. I have. Yeah. And yeah. So this. This is a good example of we are telling TypeScript something that it already can figure out on its own. It's like me telling you. Okay. I'm going to tell you a string. The value is Tina. Like you know it's a string
I think a little earlier. I have. Yeah. And yeah. So this. This is a good example of we are telling TypeScript something that it already can figure out on its own. It's like me telling you. Okay. I'm going to tell you a string. The value is Tina. Like you know it's a string So there's no need to tell TypeScripts this. There are cases where it's useful to use explicit type annotations such as variables that don't have an initial value. And as you go through the book, we'll see some places where it is anywhere from somewhat useful to tell TypeScript type
So there's no need to tell TypeScripts this. There are cases where it's useful to use explicit type annotations such as variables that don't have an initial value. And as you go through the book, we'll see some places where it is anywhere from somewhat useful to tell TypeScript type Are you really debatably to totally necessary you should really do it? In general, the rule of thumb is. Use explicit type information or annotations like explicitly type the stuff out as little as possible. Give me just a second. Sure. I will be right back. I'll do crowd work
Are you really debatably to totally necessary you should really do it? In general, the rule of thumb is. Use explicit type information or annotations like explicitly type the stuff out as little as possible. Give me just a second. Sure. I will be right back. I'll do crowd work I'll do crowd work. So what's the deal with the bees? Anyone up to anything fun this weekend? If you hear a child yelling and it's my niece, Liel, she is very serious. I'd like to take this moment to give a shout out to maybe looking at home. It's going to say, Massachusetts
I'll do crowd work. So what's the deal with the bees? Anyone up to anything fun this weekend? If you hear a child yelling and it's my niece, Liel, she is very serious. I'd like to take this moment to give a shout out to maybe looking at home. It's going to say, Massachusetts What are you looking for? I am like a year and a half. Board game night. Ben you're killing me. We covered this. That sounds lovely. Thank you, cancer. I'm glad it was worthwhile for you. Yay. I've been trying to get my wife into magic to gathering. It's been really slow. She already plays D&D
What are you looking for? I am like a year and a half. Board game night. Ben you're killing me. We covered this. That sounds lovely. Thank you, cancer. I'm glad it was worthwhile for you. Yay. I've been trying to get my wife into magic to gathering. It's been really slow. She already plays D&D So it's not like a nerd thing. It's just like this specific game takes a while for her to get into. She doesn't like math. Like the small numbers. Good. No friendships ruined. That game is a reputation. What are you going to play? Hi. Hi, I just want to say sorry everyone
So it's not like a nerd thing. It's just like this specific game takes a while for her to get into. She doesn't like math. Like the small numbers. Good. No friendships ruined. That game is a reputation. What are you going to play? Hi. Hi, I just want to say sorry everyone So my grandma, my grandma went into surgery this morning and my mom was like, okay, I'll text you when it's she's done just to let you know everything's okay. And I'm like, okay, cool. And then it comes up that my mom's calling me
So my grandma, my grandma went into surgery this morning and my mom was like, okay, I'll text you when it's she's done just to let you know everything's okay. And I'm like, okay, cool. And then it comes up that my mom's calling me Oh my god, what happened? My mom's like, I forgot I said I would text you. Great. So everything's good. Y'all, we're good. But apologies for the interruption. Good news. My grand is okay. And I'm happy to see that you guys are going back to the the D&D magic and and can't on. Conversation
Oh my god, what happened? My mom's like, I forgot I said I would text you. Great. So everything's good. Y'all, we're good. But apologies for the interruption. Good news. My grand is okay. And I'm happy to see that you guys are going back to the the D&D magic and and can't on. Conversation Conversation. It's always a fun one. I'm happy to see that. I'm happy to see that. I'm happy to see that. We're. My audio broke before I even heard you finishing this. Did you have anything else to add about the. So I can't infer. Yeah, final
Conversation. It's always a fun one. I'm happy to see that. I'm happy to see that. I'm happy to see that. We're. My audio broke before I even heard you finishing this. Did you have anything else to add about the. So I can't infer. Yeah, final Yeah, final. I get that annoying Bluetooth thing where if like a call comes in everything stops. Yeah, final conclusion. In general. Use as little explicit stuff as possible. Get away with it as much as you can letting TypeScript in for everything
Yeah, final. I get that annoying Bluetooth thing where if like a call comes in everything stops. Yeah, final conclusion. In general. Use as little explicit stuff as possible. Get away with it as much as you can letting TypeScript in for everything Because TypeScript is normally at least as smart and often smarter than you. Then there are cases where if you use what seems like a reasonable explicit type annotation, you will just be reducing TypeScripts understanding
Because TypeScript is normally at least as smart and often smarter than you. Then there are cases where if you use what seems like a reasonable explicit type annotation, you will just be reducing TypeScripts understanding You'll be telling it's something more general and less specific than what it would have thought. But know the cases when it is useful to tell TypeScript something explicitly because sometimes it is better. And we will see a few cases one or two per chapter maybe as we go through the book
You'll be telling it's something more general and less specific than what it would have thought. But know the cases when it is useful to tell TypeScript something explicitly because sometimes it is better. And we will see a few cases one or two per chapter maybe as we go through the book Right now the tech Twitter flame war thing is on function return types like when you have a function should you explicitly tell TypeScript the type of what it returns and the answer. Not my answer the answer be correct answer. He says knowing he's going to yell that is only what it benefits you
Right now the tech Twitter flame war thing is on function return types like when you have a function should you explicitly tell TypeScript the type of what it returns and the answer. Not my answer the answer be correct answer. He says knowing he's going to yell that is only what it benefits you Okay. I like it. And I also something that I realize that we might have glossed over a little bit. That may be worth. I'm going to ask you to do the recap of it of types shapes. Because we didn't actually spend time on it
Okay. I like it. And I also something that I realize that we might have glossed over a little bit. That may be worth. I'm going to ask you to do the recap of it of types shapes. Because we didn't actually spend time on it And I think that's actually the only part of the chapter that I was like, I don't think that makes sense. But I would like you to explain it. So I could see it but actually it's us. Yeah. Um, TypeScript knows not just whether you are a primitive type
And I think that's actually the only part of the chapter that I was like, I don't think that makes sense. But I would like you to explain it. So I could see it but actually it's us. Yeah. Um, TypeScript knows not just whether you are a primitive type By the way, the word primitive is very important because later on we'll see the things that are different. A primitive type is like string number and so on. TypeScript also understands object shapes
By the way, the word primitive is very important because later on we'll see the things that are different. A primitive type is like string number and so on. TypeScript also understands object shapes And if you have an object, TypeScript will make sure you're not accessing members or properties of it that don't exist. Um, the example in this code, the second one, let's share equals first name last name. If you try to say share
And if you have an object, TypeScript will make sure you're not accessing members or properties of it that don't exist. Um, the example in this code, the second one, let's share equals first name last name. If you try to say sharemiddle name type to pull yell at you because it knows you declared an object that only has first name last name. Not middle name. So similar to how TypeScript can do a signability checks like Boolean versus number. It also does property existence checks does middle name exist on share
middle name type to pull yell at you because it knows you declared an object that only has first name last name. Not middle name. So similar to how TypeScript can do a signability checks like Boolean versus number. It also does property existence checks does middle name exist on share So that's what you were looking for. Are you now looking for a file you can like try to find an object and do object. A.S.D. F.A.S.D.F. to see if it triggers anything. No, it's your what you're saying makes sense more of. These are things that I don't necessarily
So that's what you were looking for. Are you now looking for a file you can like try to find an object and do object. A.S.D. F.A.S.D.F. to see if it triggers anything. No, it's your what you're saying makes sense more of. These are things that I don't necessarily I don't know how to make it like do what I needed to do because I messed around with it enough. But since these are all you have like first like just these brackets that were already called for this is why dates weren't working. Because it was outside of the shape
I don't know how to make it like do what I needed to do because I messed around with it enough. But since these are all you have like first like just these brackets that were already called for this is why dates weren't working. Because it was outside of the shape You are putting words to when I learned so I can actually talk about it and know how to Google it. I don't know what they were called shapes. Like nothing in here. Call them shapes. I think I think the technical term is typically object types
You are putting words to when I learned so I can actually talk about it and know how to Google it. I don't know what they were called shapes. Like nothing in here. Call them shapes. I think I think the technical term is typically object types Well, the shape would be all three of these together that was written out that I named type stream. So I named it down here. Like it says export code site. It had these three. So this is a shape. But my date didn't fit in the shape. So I created a new shape that has all of these types in them. Yep
Well, the shape would be all three of these together that was written out that I named type stream. So I named it down here. Like it says export code site. It had these three. So this is a shape. But my date didn't fit in the shape. So I created a new shape that has all of these types in them. Yep Yep. All the properties. We're all on chapter two. I'm excited. I mean, you're on chapter seven. But you know. We're on chapter two. This is something that I've definitely learned for myself in my own learning style is if I have to just stick with the bare basics
Yep. All the properties. We're all on chapter two. I'm excited. I mean, you're on chapter seven. But you know. We're on chapter two. This is something that I've definitely learned for myself in my own learning style is if I have to just stick with the bare basics It doesn't make sense yet because unless I can see how it fits into the big picture for myself. I'm just like, okay, cool. This doesn't make any sense yet
It doesn't make sense yet because unless I can see how it fits into the big picture for myself. I'm just like, okay, cool. This doesn't make any sense yet Where bouncing back and forth where like if I were to read all of chapter seven probably won't make sense because I don't understand chapter one through six. But this one part. It really does help with putting two and two together
Where bouncing back and forth where like if I were to read all of chapter seven probably won't make sense because I don't understand chapter one through six. But this one part. It really does help with putting two and two together Now, is there anything else that you wanted to cover before we wrap up today? Let me go down to the summary. I think that would also help to see if anybody else has any questions. I don't think the magnifying glass is big enough. Oh, oh, it's adaptive. Very nice. There we go
Now, is there anything else that you wanted to cover before we wrap up today? Let me go down to the summary. I think that would also help to see if anybody else has any questions. I don't think the magnifying glass is big enough. Oh, oh, it's adaptive. Very nice. There we go There we go. That is the summary for today. If anybody has questions or something you want us to go into more detail, we, I know we talked previously about like doing the projects online once my mouse is done being over here
There we go. That is the summary for today. If anybody has questions or something you want us to go into more detail, we, I know we talked previously about like doing the projects online once my mouse is done being over here I will link them because I feel like it's going to be more important to go through the chapter and ask questions like next week. I think after I do the homework, if I have questions, all ask questions. But not necessarily that something that we need to do on stream
I will link them because I feel like it's going to be more important to go through the chapter and ask questions like next week. I think after I do the homework, if I have questions, all ask questions. But not necessarily that something that we need to do on stream But if you all have questions, I would really like to make sure that we get those answered because I know having access to a human to ask answer questions is so valuable. Yeah. No, this all sounds good to me. I got nothing else
But if you all have questions, I would really like to make sure that we get those answered because I know having access to a human to ask answer questions is so valuable. Yeah. No, this all sounds good to me. I got nothing else I got nothing else. I'm just reading through the paper on the side to make sure I haven't missed anything. But sounds good. Great. Awesome. Then let me go back to our normal screen. And I also want to make sure that we really share the GitHub repo because it has all the links
I got nothing else. I'm just reading through the paper on the side to make sure I haven't missed anything. But sounds good. Great. Awesome. Then let me go back to our normal screen. And I also want to make sure that we really share the GitHub repo because it has all the links So that way you can know where to look at all of the book, where to get the book, the chapter projects, chapter summaries. It is all in one area. And also if you did not patch chapter one, that will also be in there. And there we go. And just want to say shout out to everybody who joined today
So that way you can know where to look at all of the book, where to get the book, the chapter projects, chapter summaries. It is all in one area. And also if you did not patch chapter one, that will also be in there. And there we go. And just want to say shout out to everybody who joined today And thank you so much for asking questions because these are questions I may not know to ask either because I am coming from more of a beginner point of view. And TypeScript I found is hard for a lot of people. No matter where they are. And they're coming. Yeah. It's been very
And thank you so much for asking questions because these are questions I may not know to ask either because I am coming from more of a beginner point of view. And TypeScript I found is hard for a lot of people. No matter where they are. And they're coming. Yeah. It's been very It's been very. It's good to have people learning in public like the way you're doing. I think it really helps. It helps show off the learning and it also just helps show off different ways of learning. I think it's really. Yeah. And. Thank you. Thank you
It's been very. It's good to have people learning in public like the way you're doing. I think it really helps. It helps show off the learning and it also just helps show off different ways of learning. I think it's really. Yeah. And. Thank you. Thank you Thank you. So next week is going to be a regular scheduling of Monday is Miss Monday with Laura where we literally just hang out and talk about random tech things or life or
Thank you. So next week is going to be a regular scheduling of Monday is Miss Monday with Laura where we literally just hang out and talk about random tech things or life or And then Tuesday is going to be probably whatever I'm working on or no stream because that's what I like to do on Tuesdays Wednesdays is the mental health and neuro diversity Twitter space
And then Tuesday is going to be probably whatever I'm working on or no stream because that's what I like to do on Tuesdays Wednesdays is the mental health and neuro diversity Twitter space And Thursday is open source with distribute aid and last but not least Friday next Friday is Python because we do it every other Friday of learning a language
And Thursday is open source with distribute aid and last but not least Friday next Friday is Python because we do it every other Friday of learning a language And this is something that I am very, very proud of putting on the site that I got it figured out the entire reason I started looking more into the typescript stuff. If you would like to know the stream schedule. Oh, yeah. Ben's going to think about getting into streaming on Tuesday
And this is something that I am very, very proud of putting on the site that I got it figured out the entire reason I started looking more into the typescript stuff. If you would like to know the stream schedule. Oh, yeah. Ben's going to think about getting into streaming on Tuesday That's what everybody should be doing on Tuesday. Do it. If you're not doing it yet, that's what you should do on Tuesday. And. Ooh, ooh. I. Yes, please. Yes, yes. All the questions. All the questions. I think this is. Ben, we've talked about questions I've already had for you to
That's what everybody should be doing on Tuesday. Do it. If you're not doing it yet, that's what you should do on Tuesday. And. Ooh, ooh. I. Yes, please. Yes, yes. All the questions. All the questions. I think this is. Ben, we've talked about questions I've already had for you to I've got so many questions already. All right, I will be writing the list. And also, if you want to stay up to date with this stream schedule, there is that. I'm like, reading it and I'm like. Yes, yes, yes. All right, y'all, you are about to get rated. Because that's always important
I've got so many questions already. All right, I will be writing the list. And also, if you want to stay up to date with this stream schedule, there is that. I'm like, reading it and I'm like. Yes, yes, yes. All right, y'all, you are about to get rated. Because that's always important And result is currently streaming from GitHub. And it's all the reason. So she is doing open source Fridays. That is something she's always done. And this month, I love the fact that she is making sure that it is. Black maintainers for black history. So something really dope
And result is currently streaming from GitHub. And it's all the reason. So she is doing open source Fridays. That is something she's always done. And this month, I love the fact that she is making sure that it is. Black maintainers for black history. So something really dope Make sure you go support. And. What? This isn't unable to read. Well, I wanted to read. Maybe I'm not going to be able to. Root. Really. Well, I know. I'm also clicking the wrong link as we go over there. I'm hitting the plus sign. Well, I guess. I wonder if they have rates off. Okay
Make sure you go support. And. What? This isn't unable to read. Well, I wanted to read. Maybe I'm not going to be able to. Root. Really. Well, I know. I'm also clicking the wrong link as we go over there. I'm hitting the plus sign. Well, I guess. I wonder if they have rates off. Okay Okay. Well, we will read into the alt F four string. Pretty cool over there. If you don't like it, go check out GitHub. That's what we'll go with. That's what we'll go with. All right, y'all. Thank you so much. Let's see if this rate goes through. It says it's going to go through
Okay. Well, we will read into the alt F four string. Pretty cool over there. If you don't like it, go check out GitHub. That's what we'll go with. That's what we'll go with. All right, y'all. Thank you so much. Let's see if this rate goes through. It says it's going to go through So thank you again. And have a wonderful weekend. And we'll see you next week.
So thank you again. And have a wonderful weekend. And we'll see you next week.