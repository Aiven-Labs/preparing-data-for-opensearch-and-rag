Hello, hello beautiful humans. Welcome to a later episode and another episode of Teach Gen Tech. If anybody was wondering, I'm not always the greatest our communicating schedules is really what it comes down to, but we may be changing times altogether If this time works better for people, I don't know. Tell me, tell me what you all think. Today we have Eddie on this show and Eddie, please introduce yourself in what you're teaching us today. Yeah, so my name is Eddie Zoneski. I'm a software engineer at a company called Chain Guard
If this time works better for people, I don't know. Tell me, tell me what you all think. Today we have Eddie on this show and Eddie, please introduce yourself in what you're teaching us today. Yeah, so my name is Eddie Zoneski. I'm a software engineer at a company called Chain Guard I'm a maintainer for the Kubernetes project and the Sixth Door project, which are both pretty big-go projects. And I'm teaching you go. Yay! Oh, and I totally forgot to change the background y'all. So like, you should definitely see that here in a moment if I can click the right thing
I'm a maintainer for the Kubernetes project and the Sixth Door project, which are both pretty big-go projects. And I'm teaching you go. Yay! Oh, and I totally forgot to change the background y'all. So like, you should definitely see that here in a moment if I can click the right thing That's actually so y'all, Eddie was like open to like doing, here we go, learning about going. Eddie was open to teaching basically anything. He was just like, whatever, let's just do this. And I know that I do a lot of JavaScript, also a lot of Python and different frameworks in JavaScript
That's actually so y'all, Eddie was like open to like doing, here we go, learning about going. Eddie was open to teaching basically anything. He was just like, whatever, let's just do this. And I know that I do a lot of JavaScript, also a lot of Python and different frameworks in JavaScript Yet I keep hearing about it. I'm like, and Eddie was actually the first person to tell me about go when we met at Oganis. Was it the orbit meetup? Yeah, it was. Yeah, the orbit meetup in Denver. And it was right when this was like probably like three or four months ago
Yet I keep hearing about it. I'm like, and Eddie was actually the first person to tell me about go when we met at Oganis. Was it the orbit meetup? Yeah, it was. Yeah, the orbit meetup in Denver. And it was right when this was like probably like three or four months ago I'm trying to get into Devoral and he was like, oh, talking about go. And I'm like, what's going on? I don't even know what was the language. There's a lot of languages. I don't know that in our language. So I'm excited to hear about it because it's, I think I just heard of a company called Charm
I'm trying to get into Devoral and he was like, oh, talking about go. And I'm like, what's going on? I don't even know what was the language. There's a lot of languages. I don't know that in our language. So I'm excited to hear about it because it's, I think I just heard of a company called Charm And I think they build on go to. Yes. And that's another reason why I was very curious about it because I was like, Charm looks so cool. Plus they have the best names ever. I saw them on a live stream with GitHub with Resel
And I think they build on go to. Yes. And that's another reason why I was very curious about it because I was like, Charm looks so cool. Plus they have the best names ever. I saw them on a live stream with GitHub with Resel And I'm like, I just, I want to, I want to be able to do that someday because they have the coolest names. That's how they got me caught. But what up, homie? Yay. Somebody was able to change their schedule. So I know we talked about that we're going to work on doing this with VS code
And I'm like, I just, I want to, I want to be able to do that someday because they have the coolest names. That's how they got me caught. But what up, homie? Yay. Somebody was able to change their schedule. So I know we talked about that we're going to work on doing this with VS code And then I completely forgot what the plugin was. So let me Google that. If that doesn't work, we can use my little editor thingy. Okay. Well, I will share my screen so people can actually see this happening
And then I completely forgot what the plugin was. So let me Google that. If that doesn't work, we can use my little editor thingy. Okay. Well, I will share my screen so people can actually see this happening Because I feel like, and y'all, I do think being able to Google is a, is a skill because me and my Googles don't always work, which is, I find pretty hilarious. But it's not always hilarious for everyone else. So, yes, code five share. That's what we're going to go with. Yay
Because I feel like, and y'all, I do think being able to Google is a, is a skill because me and my Googles don't always work, which is, I find pretty hilarious. But it's not always hilarious for everyone else. So, yes, code five share. That's what we're going to go with. Yay Yay. And do you have the link in the marketplace? This is marketplace. Okay. I'm sending you this. I'm installing VS code. Oh, hey, yeah
Yay. And do you have the link in the marketplace? This is marketplace. Okay. I'm sending you this. I'm installing VS code. Oh, hey, yeah Oh, hey, yeah. And just so everybody else knows I asked to do it in VS code still, even though there's other options, because something that I've realized that does make it harder to learn is having to always switch tools
Oh, hey, yeah. And just so everybody else knows I asked to do it in VS code still, even though there's other options, because something that I've realized that does make it harder to learn is having to always switch tools Because then I'm like learning the tool where a lot of other people have used the tools I use is just not their go to tool. So, ease. That's why I use them everywhere. Oh my gosh. I mean, and them me and them me. I don't know. I don't know about that
Because then I'm like learning the tool where a lot of other people have used the tools I use is just not their go to tool. So, ease. That's why I use them everywhere. Oh my gosh. I mean, and them me and them me. I don't know. I don't know about that Laura, I was telling you about when she's on for Python. And I ran into them. I didn't mean to. It was, I was very stuck. All right. Let's see. Live share. Okay. I'm installing that. Sweet. And I need to make a folder and things and stuff. Okay. I have this installed. Sweet
Laura, I was telling you about when she's on for Python. And I ran into them. I didn't mean to. It was, I was very stuck. All right. Let's see. Live share. Okay. I'm installing that. Sweet. And I need to make a folder and things and stuff. Okay. I have this installed. Sweet Sweet. Do you want to make the folder? Do you want me to make the folder? Let's have you make it. Okay. It's weird. I automatically went to terminal to go make a folder. I don't know if that's normal. That's what I do. I feel like enough people have been on that. I've like, teach me how to do this
Sweet. Do you want to make the folder? Do you want me to make the folder? Let's have you make it. Okay. It's weird. I automatically went to terminal to go make a folder. I don't know if that's normal. That's what I do. I feel like enough people have been on that. I've like, teach me how to do this That I'm like, oh, this is weird. Okay. Code. Although I was just on a PC and is it still okay or yeah, MKDIR to make a new folder? Yes. Okay. Okay. And we will call this. Nice. And then something that I was talking about last last stream was there is this. B
That I'm like, oh, this is weird. Okay. Code. Although I was just on a PC and is it still okay or yeah, MKDIR to make a new folder? Yes. Okay. Okay. And we will call this. Nice. And then something that I was talking about last last stream was there is this. B B. Well, I guess I should ask this because this kind of screwed us up when I was learning a bit of Svelte is, should I go ahead and create a repo here through command line first or should I install in then make a repo? I would just do it locally first. Okay. Easy enough. I like that. Idea
B. Well, I guess I should ask this because this kind of screwed us up when I was learning a bit of Svelte is, should I go ahead and create a repo here through command line first or should I install in then make a repo? I would just do it locally first. Okay. Easy enough. I like that. Idea I like that. Idea. All right. Well. But fun fact that CLI tool is actually built and go. Oh, that's fun. Okay. What? What? Why? Okay. And fix it. Okay. Yes. Oh, my goodness. Yes. And how do I share this now? I think it's at the bottom there. Oh, live share
I like that. Idea. All right. Well. But fun fact that CLI tool is actually built and go. Oh, that's fun. Okay. What? What? Why? Okay. And fix it. Okay. Yes. Oh, my goodness. Yes. And how do I share this now? I think it's at the bottom there. Oh, live share Oh, live share. Where it says live share? Yeah, that would be. What? What do you find in? I have to do that too. Authorize. What? It's signed me in with GitHub and now I'm at GoDaddy Office 365. And I have Gmail. This is a confusing. All right. Let's see. Starting signing it. Can we go? Okay. Fine
Oh, live share. Where it says live share? Yeah, that would be. What? What do you find in? I have to do that too. Authorize. What? It's signed me in with GitHub and now I'm at GoDaddy Office 365. And I have Gmail. This is a confusing. All right. Let's see. Starting signing it. Can we go? Okay. Fine Fine. Fine. We'll just start from scratch really quick. Do what every developer does and turn it off and on again. I think I have to have the S code open for this. But we'll find out. Yay. Live share. You've signed in with GitHub. Oh, wow. Please be my friend. Okay. Okay. Okay. Copy. Paste
Fine. Fine. We'll just start from scratch really quick. Do what every developer does and turn it off and on again. I think I have to have the S code open for this. But we'll find out. Yay. Live share. You've signed in with GitHub. Oh, wow. Please be my friend. Okay. Okay. Okay. Copy. Paste Okay. Copy. Paste. All right. So I might click it. Hopefully it. Oh, give me. Oh, I can continue right from the web browser. That's cool. Oh, hey. Let's see if this works. Am I connected? I. Yes. So. Yay. Hey, we got there. Okay. So and yes, homie, I totally think that my. My
Okay. Copy. Paste. All right. So I might click it. Hopefully it. Oh, give me. Oh, I can continue right from the web browser. That's cool. Oh, hey. Let's see if this works. Am I connected? I. Yes. So. Yay. Hey, we got there. Okay. So and yes, homie, I totally think that my. My My. My Mac is just hates on me right now because I just got it back yesterday. I spent many hours at the Apple store last two weeks. It's been fun. But I'm glad to have it back. All right. So I guess I need that back over here because I need to install it
My. My Mac is just hates on me right now because I just got it back yesterday. I spent many hours at the Apple store last two weeks. It's been fun. But I'm glad to have it back. All right. So I guess I need that back over here because I need to install it So do you have home brew installed? Not yet. Okay. That was all my. I'm going to need it. No. Okay. I don't know which. Do you have Apple Silicon or Intel? Intel. Intel. And X86 641. Okay. Thank you. I think it's a little bit more. At least it's what I mean. Do this. This way instead of over
So do you have home brew installed? Not yet. Okay. That was all my. I'm going to need it. No. Okay. I don't know which. Do you have Apple Silicon or Intel? Intel. Intel. And X86 641. Okay. Thank you. I think it's a little bit more. At least it's what I mean. Do this. This way instead of over Manline since I don't because you have to have. What does home brew do since you're here? I'm just going to ask you random questions as we go. That's fine. So home brew is a package manager. So you would normally just type brew install go and it would do all of this for you
Manline since I don't because you have to have. What does home brew do since you're here? I'm just going to ask you random questions as we go. That's fine. So home brew is a package manager. So you would normally just type brew install go and it would do all of this for you So when you want to clean them up. So package manager will keep track of every file that gets put anywhere on your system. And so if you decide I hate go I never want to do it again. You can brew on install go and it will clean everything up. Interesting. And how do I say the name? I can't. Can't
So when you want to clean them up. So package manager will keep track of every file that gets put anywhere on your system. And so if you decide I hate go I never want to do it again. You can brew on install go and it will clean everything up. Interesting. And how do I say the name? I can't. Can't Can't. Canning me is what we're going with. And my bad if I totally but you're doing name said it's a really bad package manager. Is that kind of but Volta only does it for. JavaScript and node. But isn't that a kind of like a package manager to. I've never heard of Volta before
Can't. Canning me is what we're going with. And my bad if I totally but you're doing name said it's a really bad package manager. Is that kind of but Volta only does it for. JavaScript and node. But isn't that a kind of like a package manager to. I've never heard of Volta before Is that an MPM client? It is a. Office script tool manager. Oh, okay. So sure. Yeah. You could consider that. That's very specific for node it looks like. Yeah. Okay. Oh yeah, that would be cool. Thank you, homie. I. I did have a to do list that I was going to do
Is that an MPM client? It is a. Office script tool manager. Oh, okay. So sure. Yeah. You could consider that. That's very specific for node it looks like. Yeah. Okay. Oh yeah, that would be cool. Thank you, homie. I. I did have a to do list that I was going to do And then Eddie and I like figured out schedules and we're like we're doing this today. But Anthony created like a. Just just for me to be able to start get started on like all these installs today. So. I closed it. But I think go is here now. So let's see can you open your terminal up? Yes. And
And then Eddie and I like figured out schedules and we're like we're doing this today. But Anthony created like a. Just just for me to be able to start get started on like all these installs today. So. I closed it. But I think go is here now. So let's see can you open your terminal up? Yes. And And. Type reload. Okay, that might be a different thing. Just close this and open a new one. Easy enough. Yeah. Do that. So this was all my two lists today too was to actually there's like so many different versions that you can do with this. I was like, that's so cool. Then it won't be boring
And. Type reload. Okay, that might be a different thing. Just close this and open a new one. Easy enough. Yeah. Do that. So this was all my two lists today too was to actually there's like so many different versions that you can do with this. I was like, that's so cool. Then it won't be boring All right. So you want me to teach you lots of different things, right? Sure. One of the biggest tricks that I. I do a lot of mentoring for a different code schools and I work in a lot of beginners. And so typing out paths in your terminal is not something you want to spend your time doing
All right. So you want me to teach you lots of different things, right? Sure. One of the biggest tricks that I. I do a lot of mentoring for a different code schools and I work in a lot of beginners. And so typing out paths in your terminal is not something you want to spend your time doing So just type CD for me. You can enter. So that's going to go back to your home directory. So if you do CD. And then space hit tab on the keyboard. And then type in like DE. And then hit tab. And then hit tab. And then CO you might have to do D. Cool. And then tab again. Yeah, you got it
So just type CD for me. You can enter. So that's going to go back to your home directory. So if you do CD. And then space hit tab on the keyboard. And then type in like DE. And then hit tab. And then hit tab. And then CO you might have to do D. Cool. And then tab again. Yeah, you got it Yeah, you got it. So you want to tap complete everything. You want to type as little as possible in that terminal. And most commands will actually have tab completion to help you with the command that you're typing. So it'll know the flags to pass it or it will know what it can do. So that's cool
Yeah, you got it. So you want to tap complete everything. You want to type as little as possible in that terminal. And most commands will actually have tab completion to help you with the command that you're typing. So it'll know the flags to pass it or it will know what it can do. So that's cool So that's cool. Yeah. So that's looking in your path. It's kind of a list of places to look for programs to call. And so that is showing you all the programs that you can call those are all named MK something. Yeah, seeing how it would come up with MK. Yeah, MK directory. Make directory
So that's cool. Yeah. So that's looking in your path. It's kind of a list of places to look for programs to call. And so that is showing you all the programs that you can call those are all named MK something. Yeah, seeing how it would come up with MK. Yeah, MK directory. Make directory Make directory. Oh, yeah, this was fun. All right. And then I'm trying to think of. How to check. Like how would you check if to see if go installed? Yeah. So we're going to type which go. Which which that which which which which. Cool. So which is the command
Make directory. Oh, yeah, this was fun. All right. And then I'm trying to think of. How to check. Like how would you check if to see if go installed? Yeah. So we're going to type which go. Which which that which which which which. Cool. So which is the command So I mentioned that path thing before. So if you type echo space dollar capital path. Dollar sign. All capital. So this is going to show you your path. So this is a list of folders on your computer that whatever you run a command, it's going to search through starting from the left to the right
So I mentioned that path thing before. So if you type echo space dollar capital path. Dollar sign. All capital. So this is going to show you your path. So this is a list of folders on your computer that whatever you run a command, it's going to search through starting from the left to the right Oh. And so you see here go is actually been added to your path at the end. Interesting. And so the which command so you can have conflicting programs sometimes. Right. You can have multiple programs named go for example
Oh. And so you see here go is actually been added to your path at the end. Interesting. And so the which command so you can have conflicting programs sometimes. Right. You can have multiple programs named go for example And so typing which go will show you which command is going to be called when you type go. All right. You can do which dash a and will show you all the programs name go. There's I go on forever. But you have go now. Yay. We can go. Let's go. Okay. So let's start with go version. Just type that out
And so typing which go will show you which command is going to be called when you type go. All right. You can do which dash a and will show you all the programs name go. There's I go on forever. But you have go now. Yay. We can go. Let's go. Okay. So let's start with go version. Just type that out Just type that out. Make sure. Cool. So that's the other way. Right. So we checked it's a binary is there. And now we're checking to make sure you have the latest version installed. Yay
Just type that out. Make sure. Cool. So that's the other way. Right. So we checked it's a binary is there. And now we're checking to make sure you have the latest version installed. Yay Yay. And so we mentioned earlier right so one of the big differences between go and JavaScript is going to be that go is a statically type language. And so statically typed is you know in JavaScript when you write a function you just say hey this takes in a variable
Yay. And so we mentioned earlier right so one of the big differences between go and JavaScript is going to be that go is a statically type language. And so statically typed is you know in JavaScript when you write a function you just say hey this takes in a variable And you don't really tell your program what kind of variable it's expecting. And there's no enforcement so I could call your function and give it a string or a number or a Julian
And you don't really tell your program what kind of variable it's expecting. And there's no enforcement so I could call your function and give it a string or a number or a Julian And it'll just just take it and it could be what you're intending and it could be what you weren't intending but it will call it and run it until maybe something breaks. And that's what we call dynamic typing right and Python is the same way
And it'll just just take it and it could be what you're intending and it could be what you weren't intending but it will call it and run it until maybe something breaks. And that's what we call dynamic typing right and Python is the same way Type script is a kind of like a statically type version of of JavaScript that has some other features built in and and Python actually has some typings now that you can add into so
Type script is a kind of like a statically type version of of JavaScript that has some other features built in and and Python actually has some typings now that you can add into so I personally I did a lot of JavaScript back in the day and moving to a statically type language that just makes you feel better because your editor is going to do magic stuff for you because it's going to know what your function is expecting to take in or return and can kind of help you with more auto completion
I personally I did a lot of JavaScript back in the day and moving to a statically type language that just makes you feel better because your editor is going to do magic stuff for you because it's going to know what your function is expecting to take in or return and can kind of help you with more auto completion That being said and I don't think these have anything to do with each other but it's like for some reason it stuck in my head as somehow connected of a compiler language. And I don't know what else there is. What is the compiler language. So go is a compiled language
That being said and I don't think these have anything to do with each other but it's like for some reason it stuck in my head as somehow connected of a compiler language. And I don't know what else there is. What is the compiler language. So go is a compiled language And so when you when you're using JavaScript for example that's that's what we call an interpreted language. So there's a JavaScript interpreter that will slurp in your JavaScript text file and it will kind of read it and execute it and it'll do all sorts of different parsing and all this
And so when you when you're using JavaScript for example that's that's what we call an interpreted language. So there's a JavaScript interpreter that will slurp in your JavaScript text file and it will kind of read it and execute it and it'll do all sorts of different parsing and all this But for that JavaScript code to run you have to have a JavaScript interpreter. So you have to have Python installed. Right. So with a compile language like go you can compile all of your code your whole project down to a single binary
But for that JavaScript code to run you have to have a JavaScript interpreter. So you have to have Python installed. Right. So with a compile language like go you can compile all of your code your whole project down to a single binary And I can send that to you and as long as you have the same architecture that I built that binary for right so if you have a Mac on Intel. So I can build you a binary and you don't have to have go installed actually it'll just run because it kind of has the go by areas have a runtime built in
And I can send that to you and as long as you have the same architecture that I built that binary for right so if you have a Mac on Intel. So I can build you a binary and you don't have to have go installed actually it'll just run because it kind of has the go by areas have a runtime built in So you compile to some type of like machine language that something can run like like Java for example is a compiled language technically right. It compiles out to like Java class files that a JVM will run
So you compile to some type of like machine language that something can run like like Java for example is a compiled language technically right. It compiles out to like Java class files that a JVM will run Then there's also the whole thing of like transpiling which is big in the JavaScript world where you can transpile your new fancy JavaScript code down to older code that can run in older browsers. So you're going from like one thing to another
Then there's also the whole thing of like transpiling which is big in the JavaScript world where you can transpile your new fancy JavaScript code down to older code that can run in older browsers. So you're going from like one thing to another But compiled is just different parts of like the compiling step where like linking and all this other jazz but it's just the idea that you can build down to like usually like a single binary or some byte code. Okay. That makes some sense like it makes sense but it doesn't make sense
But compiled is just different parts of like the compiling step where like linking and all this other jazz but it's just the idea that you can build down to like usually like a single binary or some byte code. Okay. That makes some sense like it makes sense but it doesn't make sense So I'm going back to and what did you call that go is that JavaScript stomp again the statically typed. Yeah, so static typed. Going back to that just to repeat back is that means that. Compare to also like Python like in Python, you can tell it to share or like this exponent can
So I'm going back to and what did you call that go is that JavaScript stomp again the statically typed. Yeah, so static typed. Going back to that just to repeat back is that means that. Compare to also like Python like in Python, you can tell it to share or like this exponent can Or sorry, I'm trying to think back on what we're currently working on it's. Like we can make five equal a food for example or something like that because so it can be very open and to discretion where go is like not like that. Yeah, go will be very strict
Or sorry, I'm trying to think back on what we're currently working on it's. Like we can make five equal a food for example or something like that because so it can be very open and to discretion where go is like not like that. Yeah, go will be very strict So when we declare a variable as a string, it can only ever be a string. Okay, okay, that's okay. I'm starting to connect. Yeah, I'm starting to connect. Okay. So let's do one more thing to your terminal here. Let's initialize a go project just like you know you would run like npm in it
So when we declare a variable as a string, it can only ever be a string. Okay, okay, that's okay. I'm starting to connect. Yeah, I'm starting to connect. Okay. So let's do one more thing to your terminal here. Let's initialize a go project just like you know you would run like npm in it So with go we're going to do go mod in it. And then we're going to give it a project name. And so this is generally most go projects are just GitHub paths. So do like GitHub.com slash your username slash let's go. You said GitHub got username. dot com dot com. Yeah, most go go packages are URLs
So with go we're going to do go mod in it. And then we're going to give it a project name. And so this is generally most go projects are just GitHub paths. So do like GitHub.com slash your username slash let's go. You said GitHub got username. dot com dot com. Yeah, most go go packages are URLs Do slashes. Sorry. Okay, yeah, that makes more sense. Use a name and then do the project name. So whatever you want to call it. I'm still having fun with let's go. That's great. Cool. Yeah, so now see we have that go mod file
Do slashes. Sorry. Okay, yeah, that makes more sense. Use a name and then do the project name. So whatever you want to call it. I'm still having fun with let's go. That's great. Cool. Yeah, so now see we have that go mod file That's kind of going to keep track of our dependencies and build our project. And it's a lot better than how go used to be. Okay. So that created the project. Yep. Oh, I can look at me. I can type around in here. Yes, yes. It's a lot of fun
That's kind of going to keep track of our dependencies and build our project. And it's a lot better than how go used to be. Okay. So that created the project. Yep. Oh, I can look at me. I can type around in here. Yes, yes. It's a lot of fun It's a lot of fun. Yeah, I so yeah, I would I personally would have no idea where to go with this because I'm used to like. Even in like all the JavaScript language frameworks that I've been learning, it would have like way more files and a lot more content in it just to install something
It's a lot of fun. Yeah, I so yeah, I would I personally would have no idea where to go with this because I'm used to like. Even in like all the JavaScript language frameworks that I've been learning, it would have like way more files and a lot more content in it just to install something Oh, yeah. Yeah, well, we'll get to dependencies at some point. See, one of the big differences is specifically between go and JavaScript is go has a very large standard library built in. JavaScript is a very small standard library and API surface
Oh, yeah. Yeah, well, we'll get to dependencies at some point. See, one of the big differences is specifically between go and JavaScript is go has a very large standard library built in. JavaScript is a very small standard library and API surface So, you know, most go developers will use the baked in things because they're there, right? I don't have to go install a library to do it in each like a build a web app, right? I can just use the standard library because it's like real feature packed
So, you know, most go developers will use the baked in things because they're there, right? I don't have to go install a library to do it in each like a build a web app, right? I can just use the standard library because it's like real feature packed So you actually wind up using a lot less dependencies when you're ready and go. Okay. Create a new file. We'll just call this main.go. And oh, yeah, click that install button there. This again install some go tools and stuff. Go please. Yeah, do install all see if that works. Yeah, there we go
So you actually wind up using a lot less dependencies when you're ready and go. Okay. Create a new file. We'll just call this main.go. And oh, yeah, click that install button there. This again install some go tools and stuff. Go please. Yeah, do install all see if that works. Yeah, there we go Yeah, there we go. Oh, God. It's doing all the things. Yeah, that's okay. This is you need to see compiler. It looks like. I should really just start adding to the list of things I need to install
Yeah, there we go. Oh, God. It's doing all the things. Yeah, that's okay. This is you need to see compiler. It looks like. I should really just start adding to the list of things I need to install So any that you suggest, I will share with you what I already have suggested and home he has one for me now. So I'm like, I just I end up having to. I'm cursed with technology. So me and having to get a new laptop or hard reset my laptop is not a new thing
So any that you suggest, I will share with you what I already have suggested and home he has one for me now. So I'm like, I just I end up having to. I'm cursed with technology. So me and having to get a new laptop or hard reset my laptop is not a new thing So I really should come up with a list that is like, make sure you do all of this, Jen, to make your laptop work for you. Yeah. Well, one day you'll transition to a point where you can get a new laptop
So I really should come up with a list that is like, make sure you do all of this, Jen, to make your laptop work for you. Yeah. Well, one day you'll transition to a point where you can get a new laptop Probably one run one script and you'll have your full work environment set up to get really such what I have. Oh, that's cool. Hold me has a question wondering when you started what influence do you become a go developer do you use JavaScript as well? Yeah, up until I don't even know when 2016ish
Probably one run one script and you'll have your full work environment set up to get really such what I have. Oh, that's cool. Hold me has a question wondering when you started what influence do you become a go developer do you use JavaScript as well? Yeah, up until I don't even know when 2016ish I would have considered myself a node developer. I did a ton of back end JavaScript. I also played around with React at one point. It made me learn a little bit more about front end because wraps a pretty fun thing to do
I would have considered myself a node developer. I did a ton of back end JavaScript. I also played around with React at one point. It made me learn a little bit more about front end because wraps a pretty fun thing to do And I started working in the containers and Kubernetes and cloud native world and most of that tooling is all written and go. And so that kind of just led me to learn go and start working on things like Kubernetes and Terraform and some other big, you know, go tools out there and
And I started working in the containers and Kubernetes and cloud native world and most of that tooling is all written and go. And so that kind of just led me to learn go and start working on things like Kubernetes and Terraform and some other big, you know, go tools out there and I love it as language. I still love JavaScript as language. You know, it has its faults just like everything. You'll learn a lot of the go faults pretty quickly. But yeah, I, it's
I love it as language. I still love JavaScript as language. You know, it has its faults just like everything. You'll learn a lot of the go faults pretty quickly. But yeah, I, it's But yeah, I, it's. You know what I was younger in a mature is just like all like PHP is awful like JavaScript is all for and you can't just get to point where you're like these are just tools right and the more tools you have in the toolbox. And it's way better
But yeah, I, it's. You know what I was younger in a mature is just like all like PHP is awful like JavaScript is all for and you can't just get to point where you're like these are just tools right and the more tools you have in the toolbox. And it's way better You know, for certain things, I would still write a web application and in node over go. If I needed to prototype something much quicker. And you'll kind of feel the pain at some point. It's been kind of cool where I think I've learned more
You know, for certain things, I would still write a web application and in node over go. If I needed to prototype something much quicker. And you'll kind of feel the pain at some point. It's been kind of cool where I think I've learned more Yes, it can be very, very confusing as I'm getting started, but like looking at Python compared to JavaScript, I'm understanding JavaScript better. And it's that's, I really hope you don't take 15 minutes. We can switch to probably mine if we need to
Yes, it can be very, very confusing as I'm getting started, but like looking at Python compared to JavaScript, I'm understanding JavaScript better. And it's that's, I really hope you don't take 15 minutes. We can switch to probably mine if we need to But on that note, actually, one of my favorite classes when I was in school was called principles of programming languages. And the whole point of that class is it taught you how to learn programming languages, which is exactly what you just said
But on that note, actually, one of my favorite classes when I was in school was called principles of programming languages. And the whole point of that class is it taught you how to learn programming languages, which is exactly what you just said And the more you learn the easier it is to learn new languages. Like I did a Ruby, you know, many moons ago and at one point I had to write some pearl and I've never done pearl before, but Ruby was inspired a lot by Pearl, especially like their syntaxes and variables
And the more you learn the easier it is to learn new languages. Like I did a Ruby, you know, many moons ago and at one point I had to write some pearl and I've never done pearl before, but Ruby was inspired a lot by Pearl, especially like their syntaxes and variables And I was like, Oh, like now I get where Ruby got this from. Like this is familiar to me. I can figure this out. Yeah, yeah. And that's a, that's a big, so next week we're going to have a Britney was on on Tuesday talking about Svelte and then Anthony, who has been on the show quite a bit
And I was like, Oh, like now I get where Ruby got this from. Like this is familiar to me. I can figure this out. Yeah, yeah. And that's a, that's a big, so next week we're going to have a Britney was on on Tuesday talking about Svelte and then Anthony, who has been on the show quite a bit I like to call him like my, my internet big brother. And I think it's really cool to see. Is maybe we should switch to your computer because mine is just struggle busing. It's definitely something that so next week they're going to compare and talk about react versus Svelte
I like to call him like my, my internet big brother. And I think it's really cool to see. Is maybe we should switch to your computer because mine is just struggle busing. It's definitely something that so next week they're going to compare and talk about react versus Svelte There's, oh, you might know this is there some type of platform that you're aware of for VS code or something that tells you what language something's written in because like in JavaScript, you can, you'll have some HTML, you'll have some CSS, you may have TypeScript and JavaScript
There's, oh, you might know this is there some type of platform that you're aware of for VS code or something that tells you what language something's written in because like in JavaScript, you can, you'll have some HTML, you'll have some CSS, you may have TypeScript and JavaScript And it would be really helpful if a line just told you like, Hey, if a line is this color or has this dot or something, then it's TypeScript just to learn because I'm like, I can read the code and figure out what it's going to execute
And it would be really helpful if a line just told you like, Hey, if a line is this color or has this dot or something, then it's TypeScript just to learn because I'm like, I can read the code and figure out what it's going to execute But then it's not always making sense that what languages are going into that. Yeah, there's, there's parsers, there's syntax, highlighters and other tools that will pick it up. You could probably paste it. There's probably a web app you could paste it and they'll tell you what language it is
But then it's not always making sense that what languages are going into that. Yeah, there's, there's parsers, there's syntax, highlighters and other tools that will pick it up. You could probably paste it. There's probably a web app you could paste it and they'll tell you what language it is Okay, that's cool. And then getting this started. Cool. Sorry, what are you going to say? I don't know. That is the fun part of, of life. So I mean is like, I don't know, it's not going to be perfect to school. I do want to go back to. I sent you the link. Okay
Okay, that's cool. And then getting this started. Cool. Sorry, what are you going to say? I don't know. That is the fun part of, of life. So I mean is like, I don't know, it's not going to be perfect to school. I do want to go back to. I sent you the link. Okay Okay. Is it going to open in my VS code or my web browser or what are you going to do? No, I don't know. I'll just move it over here. Continue in web. Let's do that because now you want me to sign in again. Good news gracious
Okay. Is it going to open in my VS code or my web browser or what are you going to do? No, I don't know. I'll just move it over here. Continue in web. Let's do that because now you want me to sign in again. Good news gracious Good news gracious. This highlights a great pain point when it comes to getting started with developing. It's gotten so complicated
Good news gracious. This highlights a great pain point when it comes to getting started with developing. It's gotten so complicated There are other tools that when I work with students, I usually use like, repal tools, you're like one off editors, but you're getting a development environment set up as complicated. Okay, I'm going to go back to my screen. All right. I will reshare my screen here shortly. There we go. Yay
There are other tools that when I work with students, I usually use like, repal tools, you're like one off editors, but you're getting a development environment set up as complicated. Okay, I'm going to go back to my screen. All right. I will reshare my screen here shortly. There we go. Yay There we go. Yay. I will leave so helps if I actually make the right screen. Now it's really big. Yay. What was your, you don't have use a name? Yeah. So I created this go mod file, so we should be on the same page. I see it. There we go. Yeah. So I'm going to create that main.go
There we go. Yay. I will leave so helps if I actually make the right screen. Now it's really big. Yay. What was your, you don't have use a name? Yeah. So I created this go mod file, so we should be on the same page. I see it. There we go. Yeah. So I'm going to create that main.gogo. And so the way go does everything is with packages. So packages kind of just going to be a folder in our case, right? It's like a folder of software. You get like sub packages and other complicated stuff, but for our point, would I would just say a package is a folder
go. And so the way go does everything is with packages. So packages kind of just going to be a folder in our case, right? It's like a folder of software. You get like sub packages and other complicated stuff, but for our point, would I would just say a package is a folder So our first package is going to be the main package. So if you want to go type in their package main. And main is a special reserved package name. I see it even knows it. So this is the entry point to your program. So this will be like your index JS
So our first package is going to be the main package. So if you want to go type in their package main. And main is a special reserved package name. I see it even knows it. So this is the entry point to your program. So this will be like your index JS This will be the, you know, the program, the file that ever all your code is going to start in. Okay. And so we also need to create declare a function. And so to do that and go, you're going to say funk. And then space and call this main again, special function name, open closed parentheses
This will be the, you know, the program, the file that ever all your code is going to start in. Okay. And so we also need to create declare a function. And so to do that and go, you're going to say funk. And then space and call this main again, special function name, open closed parentheses And it will curly brace. Oh, outside the print. Sorry. Is that. No, like you, like you wouldn't JavaScript for you open a curly. Okay. I like how auto creates the other ones, but it doesn't auto delete them. Yeah. I'll just clean up a little. There we go. Cool. Right. So we got our funk name
And it will curly brace. Oh, outside the print. Sorry. Is that. No, like you, like you wouldn't JavaScript for you open a curly. Okay. I like how auto creates the other ones, but it doesn't auto delete them. Yeah. I'll just clean up a little. There we go. Cool. Right. So we got our funk name And see because of my name is there. And so if we saved this file and run it right now, it should actually just work. And actually, I don't think you have a. You don't have a terminal. Do you. I'm going to turn on. Interesting. No, no
And see because of my name is there. And so if we saved this file and run it right now, it should actually just work. And actually, I don't think you have a. You don't have a terminal. Do you. I'm going to turn on. Interesting. No, no No, no. How do I open a terminal in the code? I know in VS code itself, but I'm oh, there you go. Yay. Oh, yeah. You're using the real VS code. You see that? Oh, you can't get cool. All right. The problem's a little messed up, but it'll work for now. Right. So now if we run go run on this mean
No, no. How do I open a terminal in the code? I know in VS code itself, but I'm oh, there you go. Yay. Oh, yeah. You're using the real VS code. You see that? Oh, you can't get cool. All right. The problem's a little messed up, but it'll work for now. Right. So now if we run go run on this mean Go file. Oh, we didn't see it. We manually save it here. Cool. So our program. Go run is kind of like your, your almost interpreter. It'll compile the program and then run that executable. And so we say go run and it just kind of ran the file and do anything yet
Go file. Oh, we didn't see it. We manually save it here. Cool. So our program. Go run is kind of like your, your almost interpreter. It'll compile the program and then run that executable. And so we say go run and it just kind of ran the file and do anything yet So let's make it print out Hello world as this tradition. And so the way we do that with go is with the package called format or FMT. So if you inside that main function. And you just come down a line. And then do FMT. FMT. Print line. Yeah, you use that tab completion that comes up. There you go
So let's make it print out Hello world as this tradition. And so the way we do that with go is with the package called format or FMT. So if you inside that main function. And you just come down a line. And then do FMT. FMT. Print line. Yeah, you use that tab completion that comes up. There you go There you go. Right. And so the go tooling is really cool. So it imported the package for you because it knew what you were using. So if you open a parentheses now. It's going to tell you everything about this function and everything it takes in. So this will take in anything
There you go. Right. And so the go tooling is really cool. So it imported the package for you because it knew what you were using. So if you open a parentheses now. It's going to tell you everything about this function and everything it takes in. So this will take in anything Which is kind of like a wild card type and go. So will it automatically do the print because it's in here? Yes. Hey. So that's not going to work. And can you guess why? Yeah, click away. I'm going to save that. Let's see if you're editor yells at you. Yeah, I need to save it
Which is kind of like a wild card type and go. So will it automatically do the print because it's in here? Yes. Hey. So that's not going to work. And can you guess why? Yeah, click away. I'm going to save that. Let's see if you're editor yells at you. Yeah, I need to save it So I have a squiggly red line under what's inside this function. Is it? Oh, because I didn't put the these things. Yes. The these things that totally made sense. So that's not going to work either, but I'm not going to expect you to guess this one
So I have a squiggly red line under what's inside this function. Is it? Oh, because I didn't put the these things. Yes. The these things that totally made sense. So that's not going to work either, but I'm not going to expect you to guess this one So there's a difference between a single quote and a double quote and go. Oh, I didn't know that like that's weird because the rest of them are like pretty. Yeah, like interchangeable. So the single quote and go is for what we call a ruin, which is like a single character. It's like a char. Okay
So there's a difference between a single quote and a double quote and go. Oh, I didn't know that like that's weird because the rest of them are like pretty. Yeah, like interchangeable. So the single quote and go is for what we call a ruin, which is like a single character. It's like a char. Okay Okay. And so the double quotes are very string. Okay. So now if we save this and run it, we will see. It's a print it out. Yay. And so we can also do a go build. And that's going to build us the file name there. So you see, let's go with compile
Okay. And so the double quotes are very string. Okay. So now if we save this and run it, we will see. It's a print it out. Yay. And so we can also do a go build. And that's going to build us the file name there. So you see, let's go with compile And so that green that green tells you it's an executable and you terminal. And so I can run that and it will run as the same
And so that green that green tells you it's an executable and you terminal. And so I can run that and it will run as the same And so if I could actually send this to you, if I built it for Mac, I'm running on Linux, but I could build this for Mac, send it to you in an email and you could download and run it basically. Interesting. Yeah, it's cool. And so let's see what's that
And so if I could actually send this to you, if I built it for Mac, I'm running on Linux, but I could build this for Mac, send it to you in an email and you could download and run it basically. Interesting. Yeah, it's cool. And so let's see what's that This is probably one of the smallest go programs we can do. So we can look how big it is. One point eight megabytes, which is kind of big. And that's one of the complaints that you hear about go sometimes. Go does wind up with a little bit bigger binaries
This is probably one of the smallest go programs we can do. So we can look how big it is. One point eight megabytes, which is kind of big. And that's one of the complaints that you hear about go sometimes. Go does wind up with a little bit bigger binaries Because the entire go runtime gets compiled into your program. Okay. And this is making sense. And I guess now I just have like a pure curiosity thing of like actually seeing it in action. Other than something small like this
Because the entire go runtime gets compiled into your program. Okay. And this is making sense. And I guess now I just have like a pure curiosity thing of like actually seeing it in action. Other than something small like this Is there something are you working on something that you may be able to show us and like what some of the functions look like in go that you're currently building. Sure. You have a project
Is there something are you working on something that you may be able to show us and like what some of the functions look like in go that you're currently building. Sure. You have a project You have a project. You can share your screen and let me know because I feel like that would be really cool and something I actually should ask for more often is actually seeing how
You have a project. You can share your screen and let me know because I feel like that would be really cool and something I actually should ask for more often is actually seeing how Like yes, we're starting to see how it looks like with the getting started with it, but how people are actually using it, especially since you said this is how they build Kubernetes. Home you said great question mark. Now you got me lost. Well, all right. So I think I'm sharing my screen
Like yes, we're starting to see how it looks like with the getting started with it, but how people are actually using it, especially since you said this is how they build Kubernetes. Home you said great question mark. Now you got me lost. Well, all right. So I think I'm sharing my screen Hey, there we go. Oh, I think you're sharing yours. No, that is my screen. Hold on. What's going on? That's the wrong screen. Let me share my other screen. The perils of two monitors. Oh, yeah. I have three. Two external monitors and my, my own. So I get, I get mixed up all the time
Hey, there we go. Oh, I think you're sharing yours. No, that is my screen. Hold on. What's going on? That's the wrong screen. Let me share my other screen. The perils of two monitors. Oh, yeah. I have three. Two external monitors and my, my own. So I get, I get mixed up all the time So I can show you some Kubernetes code. Definitely a complicated code base. But it'll give you a good idea. A QC TL, which I think you've used before, right? The command line tools for Kubernetes. Not yet. Not yet. Okay. Well, QC TL is the command line tool for Kubernetes
So I can show you some Kubernetes code. Definitely a complicated code base. But it'll give you a good idea. A QC TL, which I think you've used before, right? The command line tools for Kubernetes. Not yet. Not yet. Okay. Well, QC TL is the command line tool for Kubernetes And that's what I primarily work on. The way this is structured is we have different like sub commands in here. So I can see commands for creating something or deleting something. Right. I can show you what the command for the leading looks like. So we got all these imports, right? So
And that's what I primarily work on. The way this is structured is we have different like sub commands in here. So I can see commands for creating something or deleting something. Right. I can show you what the command for the leading looks like. So we got all these imports, right? So These are like your built-ins. Right. So they, they have no like URL in them. So these are part of the standard library. And these are external libraries that we've pulled in. So these are kind of all the internal Kubernetes libraries that we use to build things
These are like your built-ins. Right. So they, they have no like URL in them. So these are part of the standard library. And these are external libraries that we've pulled in. So these are kind of all the internal Kubernetes libraries that we use to build things And so let's see what's exciting looking thing. So this is a type, this is a struct in Kubernetes. So we talked about types, right? So you have your basic types of string. We have like six different number types. We have integers that are 64 bits long integers that are 32 bits long
And so let's see what's exciting looking thing. So this is a type, this is a struct in Kubernetes. So we talked about types, right? So you have your basic types of string. We have like six different number types. We have integers that are 64 bits long integers that are 32 bits long I think there's a bit integer and then there is unsigned integers, which are, they can't be negative, but they can hold a much larger number because they're much longer
I think there's a bit integer and then there is unsigned integers, which are, they can't be negative, but they can hold a much larger number because they're much longer And so then there's Booleans and we have a whole bunch of other types, right? Another one of these basic types is what we call a struct. This is basically the closest you can get to the class you would use in JavaScript or Python
And so then there's Booleans and we have a whole bunch of other types, right? Another one of these basic types is what we call a struct. This is basically the closest you can get to the class you would use in JavaScript or Python Python has some other conventions that you could use, but struct is like an object, right? It's like a JavaScript object. And so this is just kind of declaring a type, name the lead options for the delete command here. And it is a pipe struct. And then this is declared with a field name
Python has some other conventions that you could use, but struct is like an object, right? It's like a JavaScript object. And so this is just kind of declaring a type, name the lead options for the delete command here. And it is a pipe struct. And then this is declared with a field name So these are the fields that are in this struct. So it has a labels like their field with the string. That's a pipe string. The lead is a Boolean, should delete now by all these different types, integers. Time is a duration, right? This is another type. This is how we represent time and go
So these are the fields that are in this struct. So it has a labels like their field with the string. That's a pipe string. The lead is a Boolean, should delete now by all these different types, integers. Time is a duration, right? This is another type. This is how we represent time and go It can send so far. Yes. Cool. And so this is the kind of the constructor for that new delete command. So when this gets added to the whole CLI and runtime, I hope you know this is what gets called. It takes in this factory type here. So this is from another package, just command you till
It can send so far. Yes. Cool. And so this is the kind of the constructor for that new delete command. So when this gets added to the whole CLI and runtime, I hope you know this is what gets called. It takes in this factory type here. So this is from another package, just command you till And it is a factory, right, which is an interface, which is another type in go. Interface is kind of like a contract that your struct can implement. And it can say it fulfills that interface. We don't have to talk too much about them today. Same thing here, like this takes in a stream. Right
And it is a factory, right, which is an interface, which is another type in go. Interface is kind of like a contract that your struct can implement. And it can say it fulfills that interface. We don't have to talk too much about them today. Same thing here, like this takes in a stream. Right Right. And this is your standard in and standard out. This is what your terminal will read in or print out. That's a struct. Interesting on and that does make me think of another question. Like, can you show us side by side or an example of how go
Right. And this is your standard in and standard out. This is what your terminal will read in or print out. That's a struct. Interesting on and that does make me think of another question. Like, can you show us side by side or an example of how go Makes you use those specific like there's you can't have the same type of verity. The same type of variables or changes that you would in JavaScript and what those would look like. Yeah, let's pop back to your your editor here. And make this bigger. That look okay. Thank you. So
Makes you use those specific like there's you can't have the same type of verity. The same type of variables or changes that you would in JavaScript and what those would look like. Yeah, let's pop back to your your editor here. And make this bigger. That look okay. Thank you. So Thank you. So. And so I can write a function here, right. So you should be writing this, but we'll give you a pass now because we are in a situation. I'll just call this function green. Right. So this is going to take in a name, which is a string that's going to return another string
Thank you. So. And so I can write a function here, right. So you should be writing this, but we'll give you a pass now because we are in a situation. I'll just call this function green. Right. So this is going to take in a name, which is a string that's going to return another string That's me so far. Yes. So this is how we declare the return type. So this says my function must return a string. If you see here, it's pissed off because we're not returning a string yet. Right. Missing return. So if I go to return, let's say like the number three
That's me so far. Yes. So this is how we declare the return type. So this says my function must return a string. If you see here, it's pissed off because we're not returning a string yet. Right. Missing return. So if I go to return, let's say like the number three It's going to be pissed off again because cannot use three as an integer as a string. So it knows it's supposed to return a string. So immediately we can see like the protection that's put in place. And so now let's call that and let's just say, we'll return. I'm going to join a string
It's going to be pissed off again because cannot use three as an integer as a string. So it knows it's supposed to return a string. So immediately we can see like the protection that's put in place. And so now let's call that and let's just say, we'll return. I'm going to join a string We'll say hello and your name. Pass that name there. So this is kind of like string interpolation. You can do this in JavaScript and Python. So for send ass says, hey, plug in a string value for this token here. Use name is that right? So that's pretty deaf. It's going to return us a string
We'll say hello and your name. Pass that name there. So this is kind of like string interpolation. You can do this in JavaScript and Python. So for send ass says, hey, plug in a string value for this token here. Use name is that right? So that's pretty deaf. It's going to return us a string It's not popping up. There you go. Right. Okay. So this is like the we call this like format string. And so now inside here, let's just call greed. And we'll say we'll put jet in there. And it sends so far. It does in the fact that it sounds weird, but it doesn't. Okay. Like it makes sense
It's not popping up. There you go. Right. Okay. So this is like the we call this like format string. And so now inside here, let's just call greed. And we'll say we'll put jet in there. And it sends so far. It does in the fact that it sounds weird, but it doesn't. Okay. Like it makes sense But this is like, I think the cool thing about seeing something so new of. Like it's going to take some time to sink in. This is one of my favorite things about. Learning this text side of things because it's like it's so simple. It makes sense yet at the same time. It doesn't make sense
But this is like, I think the cool thing about seeing something so new of. Like it's going to take some time to sink in. This is one of my favorite things about. Learning this text side of things because it's like it's so simple. It makes sense yet at the same time. It doesn't make sense And I think that's a bit of where I'm at. So yes, it makes sense to it doesn't make sense. Okay. Well, if we run this, you'll see it works, right? So this hello plugs in the name. But again, if I try to pass three into that function, it's going to be mad
And I think that's a bit of where I'm at. So yes, it makes sense to it doesn't make sense. Okay. Well, if we run this, you'll see it works, right? So this hello plugs in the name. But again, if I try to pass three into that function, it's going to be mad It's going to tell me you can't use three here. It's supposed to be a string. Right? If I'm not used to having to save a file. There we go. Right? So if I try to run it, it's going to give me that same error. Cannot use three, which is an untyped imager as a string value to argument. Okay
It's going to tell me you can't use three here. It's supposed to be a string. Right? If I'm not used to having to save a file. There we go. Right? So if I try to run it, it's going to give me that same error. Cannot use three, which is an untyped imager as a string value to argument. Okay Okay. Right? And so. This is a simple example, but you can see like this is given me protection. Like I'm not going to hit any bugs where my function is expecting a string. And I give it a three. It won't run. Now I'm curious. If we do that, though, it'll still turn it to a string
Okay. Right? And so. This is a simple example, but you can see like this is given me protection. Like I'm not going to hit any bugs where my function is expecting a string. And I give it a three. It won't run. Now I'm curious. If we do that, though, it'll still turn it to a string So therefore it'll work. That'll be the string three. Okay. Cool. Cool. Yeah. It makes sense. It makes sense. I'm getting there. Okay. We want to go next. I don't know. I don't know what to ask because it's like at the same time. It's. I'm not going to say that. This happened
So therefore it'll work. That'll be the string three. Okay. Cool. Cool. Yeah. It makes sense. It makes sense. I'm getting there. Okay. We want to go next. I don't know. I don't know what to ask because it's like at the same time. It's. I'm not going to say that. This happened This happened. So I told you how last week I started talking about Kubernetes and Docker. And it was way over my head. I definitely didn't have the questions to ask because it's like it's so new. Yeah. Because of like learning about that last week
This happened. So I told you how last week I started talking about Kubernetes and Docker. And it was way over my head. I definitely didn't have the questions to ask because it's like it's so new. Yeah. Because of like learning about that last week And one of the speeches that I heard in a Denver startup week. The way that when you were looking at all the Kubernetes stuff and it had all the commands for it. I'm like, oh, that totally makes more sense. And that's why I chose to talk about that
And one of the speeches that I heard in a Denver startup week. The way that when you were looking at all the Kubernetes stuff and it had all the commands for it. I'm like, oh, that totally makes more sense. And that's why I chose to talk about that I think this is the one is, I don't know if I wanted to talk about that. Because it's, because it's for Kubernetes. Compared to if you were coding. I wouldn't have put two and two together. Without this like. Way of
I think this is the one is, I don't know if I wanted to talk about that. Because it's, because it's for Kubernetes. Compared to if you were coding. I wouldn't have put two and two together. Without this like. Way of Way of. The overwhelm, like, just getting an idea of something before actually going into it. What is something that you think we should know about go that would interest people. Yeah, so one of the, one of the things that trips people up a lot is what we call pointers
Way of. The overwhelm, like, just getting an idea of something before actually going into it. What is something that you think we should know about go that would interest people. Yeah, so one of the, one of the things that trips people up a lot is what we call pointers Right? And so you've done JavaScript before and you know how we're, let's say we do this, right? Let me see if I can store a JavaScript. So I'm going to say, I'll just say function main. Function do work or something. Okay, so and we'll call many down here. And so I'm going to
Right? And so you've done JavaScript before and you know how we're, let's say we do this, right? Let me see if I can store a JavaScript. So I'm going to say, I'll just say function main. Function do work or something. Okay, so and we'll call many down here. And so I'm going to Create a new object, right? Right, a JavaScript object. So I'll say object equals name Eddie. Right? And then this will take in that object. So do work with object. And we'll print out that object afterwards. Okay, you with me so far? Yes
Create a new object, right? Right, a JavaScript object. So I'll say object equals name Eddie. Right? And then this will take in that object. So do work with object. And we'll print out that object afterwards. Okay, you with me so far? Yes Okay, so in here, I'm going to say object dot name equals gen. Okay, and so when I go to run this. See what happened there? Right, I declared my variable here. So I said, this is a constant named object. And you're familiar with constants in JavaScript. Yeah, so I can't reassign that
Okay, so in here, I'm going to say object dot name equals gen. Okay, and so when I go to run this. See what happened there? Right, I declared my variable here. So I said, this is a constant named object. And you're familiar with constants in JavaScript. Yeah, so I can't reassign that But I print it out. I pass it to this function. And then I print out the same variable, right? So I didn't like, I didn't give that other function my variable. Right? I said, I called it with it. But I didn't intend for it to do something to it. Is that expected behavior for you? Okay
But I print it out. I pass it to this function. And then I print out the same variable, right? So I didn't like, I didn't give that other function my variable. Right? I said, I called it with it. But I didn't intend for it to do something to it. Is that expected behavior for you? Okay Let's give another example, right? So let's get a bit of object. We'll say what is called this like numb. It's supposed to be the number three. And we'll do the same thing here. We'll print out numb. Right. And so inside here, I'll say numb is equal to seven. Cool
Let's give another example, right? So let's get a bit of object. We'll say what is called this like numb. It's supposed to be the number three. And we'll do the same thing here. We'll print out numb. Right. And so inside here, I'll say numb is equal to seven. Cool Cool. When I run this, what's going to happen? What's going to be the output? I thought that I would have been the number three. Both times. I don't. It is the number three. So why was it different when we did it with an object? I don't know
Cool. When I run this, what's going to happen? What's going to be the output? I thought that I would have been the number three. Both times. I don't. It is the number three. So why was it different when we did it with an object? I don't know You see, you see the problem, right? You see what we read into? Because of. Oh, be. Holy. In single, say, object name equals. And then you see the number three. And then you see the number three. Why did it? It is the same thing. I reassigned the variable. I was passed
You see, you see the problem, right? You see what we read into? Because of. Oh, be. Holy. In single, say, object name equals. And then you see the number three. And then you see the number three. Why did it? It is the same thing. I reassigned the variable. I was passed I was passed. Oh, so it's saying that like you reassigned everything, but because the first one was the number three, that's how go makes it like it's going to make it stick to its guns, no matter how many other times you redo things
I was passed. Oh, so it's saying that like you reassigned everything, but because the first one was the number three, that's how go makes it like it's going to make it stick to its guns, no matter how many other times you redo things So this is where we get into another principle of like programming, and then we get into another principle of programming. So, what is the number three? Have you heard that term before? So. A JavaScript has a mixture of both. And so pass by value is where I'm, this is passed by value
So this is where we get into another principle of like programming, and then we get into another principle of programming. So, what is the number three? Have you heard that term before? So. A JavaScript has a mixture of both. And so pass by value is where I'm, this is passed by value So when I'm giving it a number three, number is a primitive, right? So that is a, like an actual number, like the type of number is a. It's a value. Right. So that's a value. It doesn't get the original variable I gave it. But with an object. And I take this object. And I call it with this object
So when I'm giving it a number three, number is a primitive, right? So that is a, like an actual number, like the type of number is a. It's a value. Right. So that's a value. It doesn't get the original variable I gave it. But with an object. And I take this object. And I call it with this object And JavaScript are passed by reference. But this is actually taking in a reference to the original variable. But when I'm you take that reference, I'm actually mutating the original variable. And I'm just saying, you're words may sense, but it's not syncing in yet. But that's why I'm like
And JavaScript are passed by reference. But this is actually taking in a reference to the original variable. But when I'm you take that reference, I'm actually mutating the original variable. And I'm just saying, you're words may sense, but it's not syncing in yet. But that's why I'm like It's so weird. Like it's not going to click now. But then later on, somebody else will say something. I'm like, oh, my God, I finally, like understood it. Yeah. This is a lot. It's interesting. It's like. So there's two different. There's two. What I'm getting at is there's two different types of
It's so weird. Like it's not going to click now. But then later on, somebody else will say something. I'm like, oh, my God, I finally, like understood it. Yeah. This is a lot. It's interesting. It's like. So there's two different. There's two. What I'm getting at is there's two different types of So it's passed by value, passed by reference. So JavaScript has a mix of the two objects in JavaScript. They're always passed by reference. So I call when I hand it to another function, it gets a reference to the original object
So it's passed by value, passed by reference. So JavaScript has a mix of the two objects in JavaScript. They're always passed by reference. So I call when I hand it to another function, it gets a reference to the original object When I pass it a number or a other primitive, right? If I just had a regular string, that's also a value. So if I give that to a function, it gets a copy of that value. And so where I'm going with this is when we do things and go. I can create a variable here
When I pass it a number or a other primitive, right? If I just had a regular string, that's also a value. So if I give that to a function, it gets a copy of that value. And so where I'm going with this is when we do things and go. I can create a variable here I can be more explicit in how this works. So I can say, a bar string or a bar name string is. Eddie, right? We'll do the same thing. Maybe. I'm declared, but not used, right? So, okay. So sidetrack. Go is very strict on a lot of things. It's very conventional
I can be more explicit in how this works. So I can say, a bar string or a bar name string is. Eddie, right? We'll do the same thing. Maybe. I'm declared, but not used, right? So, okay. So sidetrack. Go is very strict on a lot of things. It's very conventional There's, there's like basically one way to do things and go. And it checks. So this is actually a check for an unused variable. And so this actually won't even run. It won't compile. It won't run because you're not allowed to have unused variables and go
There's, there's like basically one way to do things and go. And it checks. So this is actually a check for an unused variable. And so this actually won't even run. It won't compile. It won't run because you're not allowed to have unused variables and go So there's like a lot of those little safety features that kind of help you write better code. So it's going to be mad until I use that variable. So I'm going to say name and here. But this is going to work as expected. Okay. We run that. We get hello at the. With me. Yes
So there's like a lot of those little safety features that kind of help you write better code. So it's going to be mad until I use that variable. So I'm going to say name and here. But this is going to work as expected. Okay. We run that. We get hello at the. With me. Yes With me. Yes. And I think something that. Is also making it click more now that you're doing it over here is. Like if. With JavaScript, it would also like if we got the same type of error, we would have to use like a console log or something like that
With me. Yes. And I think something that. Is also making it click more now that you're doing it over here is. Like if. With JavaScript, it would also like if we got the same type of error, we would have to use like a console log or something like that If we haven't completed it out yet, just so that way. It compiled it to. Yeah. Yeah. It would give you like undefined warnings or other things. Okay. So this is, this is starting click. And so that actually leaves me to one of the pain points and go that I find
If we haven't completed it out yet, just so that way. It compiled it to. Yeah. Yeah. It would give you like undefined warnings or other things. Okay. So this is, this is starting click. And so that actually leaves me to one of the pain points and go that I find Is go has no concept of undefined or no. Oh, okay. So everything in go has a default value. And so if I say var, you know, S string. Value of S here is going to be the default value of a string. So if I go print this out, it's going to be an empty string. That's the default value for string
Is go has no concept of undefined or no. Oh, okay. So everything in go has a default value. And so if I say var, you know, S string. Value of S here is going to be the default value of a string. So if I go print this out, it's going to be an empty string. That's the default value for string Let's say that S was actually an integer. If you think the default value of an integer is. Zero zero. Okay. And so. The pain point I have here is. When I'm working with this variable. I can't tell if it was set to zero or if it is the default value of zero
Let's say that S was actually an integer. If you think the default value of an integer is. Zero zero. Okay. And so. The pain point I have here is. When I'm working with this variable. I can't tell if it was set to zero or if it is the default value of zero And so that comes around to bite you in like very certain situations. Where you know, you're like, I'm not sure if I was past like. I work on CLI tools, right? So if you say. Do something. You know, maybe. Let's say you write a sleep command that'll just sleep for like a number. You give it
And so that comes around to bite you in like very certain situations. Where you know, you're like, I'm not sure if I was past like. I work on CLI tools, right? So if you say. Do something. You know, maybe. Let's say you write a sleep command that'll just sleep for like a number. You give it You give it. Let's say you give it zero seconds. I have no idea if you passed in zero or if it defaulted to zero. And so that leads to problems are like, let's say that. You know, when you when it zero, it should sleep forever. Well, if you say sleep zero, you want to sleep zero seconds
You give it. Let's say you give it zero seconds. I have no idea if you passed in zero or if it defaulted to zero. And so that leads to problems are like, let's say that. You know, when you when it zero, it should sleep forever. Well, if you say sleep zero, you want to sleep zero seconds Like, you know, could wind up sleeping forever and. Yeah. Real quick. So, how many asked us? So if I change a reference to a variable, I just change the variable that points to the value. When I change the value, I change the actual value
Like, you know, could wind up sleeping forever and. Yeah. Real quick. So, how many asked us? So if I change a reference to a variable, I just change the variable that points to the value. When I change the value, I change the actual value Is that correct? Change the variable that points to the value. Almost a. So I the reference is pointing to the same. So, if you change the rep, if you change what it points to. You're changing the original pointer. So I can actually reassign that object. It's let me do the seat go
Is that correct? Change the variable that points to the value. Almost a. So I the reference is pointing to the same. So, if you change the rep, if you change what it points to. You're changing the original pointer. So I can actually reassign that object. It's let me do the seat go It'll make a little more sense here. So where I'm going is right. We have the string. And so if I do the same thing here. So let's say that. I say. Name. Equals. Gen. Right. And I return name. And then we'll just. I don't know what this printout. Regular name in here. I
It'll make a little more sense here. So where I'm going is right. We have the string. And so if I do the same thing here. So let's say that. I say. Name. Equals. Gen. Right. And I return name. And then we'll just. I don't know what this printout. Regular name in here. I I. So I'm going to call a great pass it name. It's going to set name equal to Jen in return name. Right. So this is its own copy here. So when I run this. It wasn't reassigned to Jen. It didn't reassign this variable to Jen. It assigned this one. Right. This here. Because this is a
I. So I'm going to call a great pass it name. It's going to set name equal to Jen in return name. Right. So this is its own copy here. So when I run this. It wasn't reassigned to Jen. It didn't reassign this variable to Jen. It assigned this one. Right. This here. Because this is a Because this is a. This is a value that got passed in. If I want this to be a pass by reference, we use something called a pointer and go. And so this is used in C and other languages too. So I can say that name is actually going to be a pointer to a string
Because this is a. This is a value that got passed in. If I want this to be a pass by reference, we use something called a pointer and go. And so this is used in C and other languages too. So I can say that name is actually going to be a pointer to a string And we declare that with the little percent sign here. And the star sign. So string is going to. It's going to work on. I'll just say string equals Eddie. So this is inferred typing and go. So this colon equals. I don't have to declare the type ahead of time
And we declare that with the little percent sign here. And the star sign. So string is going to. It's going to work on. I'll just say string equals Eddie. So this is inferred typing and go. So this colon equals. I don't have to declare the type ahead of time It will just know from the right side that this is a string. This is what we wind up using usually. And so now I have string. I don't know. I shouldn't call that string. He said name. Right. So name equals Eddie. So inside of here, let's say I called Greek
It will just know from the right side that this is a string. This is what we wind up using usually. And so now I have string. I don't know. I shouldn't call that string. He said name. Right. So name equals Eddie. So inside of here, let's say I called Greek I want Greek to take it a pointer to a string now. And we'll do what we did before. Print out name. So Greek has to take it a pointer. I said right. So the star says this should be a pointer, which is a reference. So I can say, hey, pass a reference to this variable
I want Greek to take it a pointer to a string now. And we'll do what we did before. Print out name. So Greek has to take it a pointer. I said right. So the star says this should be a pointer, which is a reference. So I can say, hey, pass a reference to this variable That's where we use the ampersand. This actually gives it the memory address to this variable. Still listening. I am. And another thing that. Just kind of hit me is the fact that. I think this is where especially for newbies that don't like
That's where we use the ampersand. This actually gives it the memory address to this variable. Still listening. I am. And another thing that. Just kind of hit me is the fact that. I think this is where especially for newbies that don't like When you start in the coding world, people aren't necessarily explaining like what language to start with. Because. When you start, they're all really complicated. Yeah. But what you would use a language for and kind of what
When you start in the coding world, people aren't necessarily explaining like what language to start with. Because. When you start, they're all really complicated. Yeah. But what you would use a language for and kind of what It's almost like what logically make sense to them is kind of where I'm getting. Like some to some people what you're doing right now is going to make so much more logical sense. And then what JavaScript does for example. So. Absolutely. Yes, because. Okay, because it's pointing to the second one
It's almost like what logically make sense to them is kind of where I'm getting. Like some to some people what you're doing right now is going to make so much more logical sense. And then what JavaScript does for example. So. Absolutely. Yes, because. Okay, because it's pointing to the second one Therefore, it's going to basically ignore the first one. Right. And though the first one is the declared one. Right. Well, it's that this. This actually is this one. They're the same one because I gave it this address of this one. So it took in a pointer to that original variable
Therefore, it's going to basically ignore the first one. Right. And though the first one is the declared one. Right. Well, it's that this. This actually is this one. They're the same one because I gave it this address of this one. So it took in a pointer to that original variable This is what we call a D reference. So this just says, hey, set. Because this value name by itself, if I print out name in here. It's going to be a memory address. Which you probably haven't seen before. Have you. No. This is a this is a hexadetsal memory address
This is what we call a D reference. So this just says, hey, set. Because this value name by itself, if I print out name in here. It's going to be a memory address. Which you probably haven't seen before. Have you. No. This is a this is a hexadetsal memory address This is how virtual memory is represented on your computer. So it's got think of your you know your RAM sticks. They're just like rows and rows and rows of addresses that can hold values. And so this is an address to one piece of your RAM stick in your computer
This is how virtual memory is represented on your computer. So it's got think of your you know your RAM sticks. They're just like rows and rows and rows of addresses that can hold values. And so this is an address to one piece of your RAM stick in your computer I don't know why I find this so fascinating how confused I can get. Like learning this stuff. But like it's seriously. It's. Yeah, it's beyond me at the moment yet at the same time. It slightly makes sense, which is so weird
I don't know why I find this so fascinating how confused I can get. Like learning this stuff. But like it's seriously. It's. Yeah, it's beyond me at the moment yet at the same time. It slightly makes sense, which is so weird But this is complicated, right? Like we're this is not I wouldn't call pointers to be beginning of learning. So you can go. Especially while you're learning programming in general. But this is one of the major characteristics of the language. Okay. Right. And so here I said, right
But this is complicated, right? Like we're this is not I wouldn't call pointers to be beginning of learning. So you can go. Especially while you're learning programming in general. But this is one of the major characteristics of the language. Okay. Right. And so here I said, right So this is printed out the name, which is the address. Right. That's what we got there. And then I say, I want you to actually change the value at that address. And that's where that little dereferd star comes in. That says change the value of name to be Jen
So this is printed out the name, which is the address. Right. That's what we got there. And then I say, I want you to actually change the value at that address. And that's where that little dereferd star comes in. That says change the value of name to be Jen And then change this variable because we see it printed out twice. Interesting. All right. You want me to downshift a little bit? I'm a little easier. Yes, please. Okay. Let me just ask the first print of Jen was the main brackets due to the pointer. The second print was from the Greek brackets
And then change this variable because we see it printed out twice. Interesting. All right. You want me to downshift a little bit? I'm a little easier. Yes, please. Okay. Let me just ask the first print of Jen was the main brackets due to the pointer. The second print was from the Greek brackets I think it's the same. I think it's the same. I think it's the same. That's the same. Yeah. That's the return. Yeah. I'm just returning. That's the same. We could ignore that if we. I did a confusing. But yes, you get the idea. Okay. So. What have you
I think it's the same. I think it's the same. I think it's the same. That's the same. Yeah. That's the return. Yeah. I'm just returning. That's the same. We could ignore that if we. I did a confusing. But yes, you get the idea. Okay. So. What have you So. What have you. What do you want to build? You want to build something very simple. I would say most times when people are like wanting to come on the show and want to build. So that's what I want to do. I want to build something very simple. Okay. Just so that way it gives a reference to you
So. What have you. What do you want to build? You want to build something very simple. I would say most times when people are like wanting to come on the show and want to build. So that's what I want to do. I want to build something very simple. Okay. Just so that way it gives a reference to you Something to build and can edit. So have you done back end. Web apps before or just the front-end part. Mostly. Oh, that's a good question. Have you done node servers or Python servers? No. Okay. I feel like you need to come back on the show now. I think that's what we're going to do
Something to build and can edit. So have you done back end. Web apps before or just the front-end part. Mostly. Oh, that's a good question. Have you done node servers or Python servers? No. Okay. I feel like you need to come back on the show now. I think that's what we're going to do We're going to do a lot of that stuff. But a lot of people have been doing much more front end. Yeah. And I get I like a front end. I think it's really cool. But I would say even to what we were talking about earlier. Like if you're talking about. Actually question
We're going to do a lot of that stuff. But a lot of people have been doing much more front end. Yeah. And I get I like a front end. I think it's really cool. But I would say even to what we were talking about earlier. Like if you're talking about. Actually question Actually question. My thought went from a statement to a question. Midway through. Because like things like databases and APIs and that kind of thing are going to be more back end. And that's really where my mind goes, especially when
Actually question. My thought went from a statement to a question. Midway through. Because like things like databases and APIs and that kind of thing are going to be more back end. And that's really where my mind goes, especially when But it's not as easy to learn is what I'm realizing as where I'm like. Because seeing how something is. I don't think like not compiled like the languages, but like a database is compiled and put out to the front end or an API. You know, is linked and put out to the front end. Is really cool
But it's not as easy to learn is what I'm realizing as where I'm like. Because seeing how something is. I don't think like not compiled like the languages, but like a database is compiled and put out to the front end or an API. You know, is linked and put out to the front end. Is really cool Is really cool. Like when we. But. It is really like more of I'm curious how stuff works. Yeah, I wouldn't say back end is more complicated. It's just different. So no, I don't think I've done a lot of back end to like actually say whether or not to compare the two. Okay. Interesting
Is really cool. Like when we. But. It is really like more of I'm curious how stuff works. Yeah, I wouldn't say back end is more complicated. It's just different. So no, I don't think I've done a lot of back end to like actually say whether or not to compare the two. Okay. Interesting Okay. Interesting. I don't know whether it's a super overload you by doing that or we can pivot to something else. I would say we can pause. I would say we can pause. I would say we can pause. I would say we can pause because I think this is
Okay. Interesting. I don't know whether it's a super overload you by doing that or we can pivot to something else. I would say we can pause. I would say we can pause. I would say we can pause. I would say we can pause because I think this is It definitely is we went through the complexities, which oddly I really enjoy doing even when I don't understand it. And homie said front end. So I'm guessing that means that majority of things have done our front end. Because homie has been here for. I want to say like at least
It definitely is we went through the complexities, which oddly I really enjoy doing even when I don't understand it. And homie said front end. So I'm guessing that means that majority of things have done our front end. Because homie has been here for. I want to say like at least I think that's what I think is the most important thing. I think that's the most important thing. 25 of the 38 shows that I've done. So. It's definitely something that. Now I'm a lot more curious about. I think that I've only done something with MongoDB once. Okay. So
I think that's what I think is the most important thing. I think that's the most important thing. 25 of the 38 shows that I've done. So. It's definitely something that. Now I'm a lot more curious about. I think that I've only done something with MongoDB once. Okay. So Okay. So. Look, can I show you one more thing before we. Yeah. I'll show you what a. I'll show you what a. Web server would look like and go just real quick. We use the HP library, right? And I'm going to. Type this out quick. So. This is a. What we call like a HTTP handler
Okay. So. Look, can I show you one more thing before we. Yeah. I'll show you what a. I'll show you what a. Web server would look like and go just real quick. We use the HP library, right? And I'm going to. Type this out quick. So. This is a. What we call like a HTTP handler This is a comment for any kind of backend programming. So what do you do? This is a. This is the question. This is kind of how we approach building Web apps. So this is going to say when a HTTP request. So when your browser makes a request to the route of the domain. Right so when your
This is a comment for any kind of backend programming. So what do you do? This is a. This is the question. This is kind of how we approach building Web apps. So this is going to say when a HTTP request. So when your browser makes a request to the route of the domain. Right so when your Right so when your. Browser here. So if we now we have like Google.com right. Well, there's actually like a magic hidden flash at the end of Google.com there. Right. So that way it may go to the index file
Right so when your. Browser here. So if we now we have like Google.com right. Well, there's actually like a magic hidden flash at the end of Google.com there. Right. So that way it may go to the index file to like, and I think that is something that luckily, that file structure I learned from hosting at GoDaddy when I worked in hosting there, but it is something that other than that, I'm like, okay, I get file structure, yay. Yeah, so this is a, okay, so you understand that. So that's the pattern
to like, and I think that is something that luckily, that file structure I learned from hosting at GoDaddy when I worked in hosting there, but it is something that other than that, I'm like, okay, I get file structure, yay. Yeah, so this is a, okay, so you understand that. So that's the pattern So that would go to your file on the disk if there was index, right, HTML. I'm just going to send back a message, and then I'm going to start up the web server, go into port is yet. Yes. Okay, so I'm going to say port 8080 here. But this is kind of like the basic hello world of a web app in Go
So that would go to your file on the disk if there was index, right, HTML. I'm just going to send back a message, and then I'm going to start up the web server, go into port is yet. Yes. Okay, so I'm going to say port 8080 here. But this is kind of like the basic hello world of a web app in Go Oh, let me make sure it works. I'm going to go, there you go, see I got the hello world from the back. And? I just sent back the string hello world
Oh, let me make sure it works. I'm going to go, there you go, see I got the hello world from the back. And? I just sent back the string hello world I could have done something while, like we'll just say HTML, body, H1, hello world, H1, body, do you know, would that look right? Yee, and close that one, right? Yeah, thank you. So this came back as HTML, we can see in the, that's the H1
I could have done something while, like we'll just say HTML, body, H1, hello world, H1, body, do you know, would that look right? Yee, and close that one, right? Yeah, thank you. So this came back as HTML, we can see in the, that's the H1 See, that's what I'm wondering if like there's an app that would go into what you just wrote to be able to be like, this is HTML and this is go from like a website
See, that's what I'm wondering if like there's an app that would go into what you just wrote to be able to be like, this is HTML and this is go from like a website Not from a website, but just looking at the coding, because yes, I could tell that like it says HTML but you know, when you're doing JavaScript, type script and HTML, it may not be as obvious. So that's why I'm like, I wonder if there's like an app somewhere out there that does that
Not from a website, but just looking at the coding, because yes, I could tell that like it says HTML but you know, when you're doing JavaScript, type script and HTML, it may not be as obvious. So that's why I'm like, I wonder if there's like an app somewhere out there that does that That's fine, something's that. I have this probably a extension that I really like. To do it more in like VS code, then or like whatever I'm coding in compared to the web app, but I mean, that could be the same type of thing. Yes, for sure. This one, Chrome extensions called WAPILIZER
That's fine, something's that. I have this probably a extension that I really like. To do it more in like VS code, then or like whatever I'm coding in compared to the web app, but I mean, that could be the same type of thing. Yes, for sure. This one, Chrome extensions called WAPILIZER By here, that's a good example. So this can look at a website or web app and tell you the technology that it's using. Oh, that's cool. Here you can tell Airbnb's using React. This is using Ruby on Rails. Some other bits in here is Google Analytics on it. Interesting
By here, that's a good example. So this can look at a website or web app and tell you the technology that it's using. Oh, that's cool. Here you can tell Airbnb's using React. This is using Ruby on Rails. Some other bits in here is Google Analytics on it. Interesting Interesting. Yeah, I like this extension a lot. Most days, things are just like a stag HTML site and so you can't tell what their backend is, but sometimes it can detect from like a header or something that this is Ruby on Rails. Got it. All right. Yeah, it's just called WAPILIZER. Interesting
Interesting. Yeah, I like this extension a lot. Most days, things are just like a stag HTML site and so you can't tell what their backend is, but sometimes it can detect from like a header or something that this is Ruby on Rails. Got it. All right. Yeah, it's just called WAPILIZER. Interesting Interesting. I don't know where the, there you go. So that's what a web app would look like and go. And so you could build your React app and read that file from the disk and serve it here or like build it as a single string if you wanted to here. It's the same kind of deal
Interesting. I don't know where the, there you go. So that's what a web app would look like and go. And so you could build your React app and read that file from the disk and serve it here or like build it as a single string if you wanted to here. It's the same kind of deal Like this is just a web server serving something to a request. Interesting. Okay. And then homey asked another question and did this answer it? That's pretty easy
Like this is just a web server serving something to a request. Interesting. Okay. And then homey asked another question and did this answer it? That's pretty easy Can you explain why you normally choose node over web server to build this? It goes back to like the right tool, right job kind of thing
Can you explain why you normally choose node over web server to build this? It goes back to like the right tool, right job kind of thing I think that node does something, do you know what a web socket is? Have you learned that one yet? Like I know what it is, but I don't know what it is at the same time
I think that node does something, do you know what a web socket is? Have you learned that one yet? Like I know what it is, but I don't know what it is at the same time It's really annoying being a part of like API stuff because I'm like, I know what it is, but do I, do I? Homey knows and that's what matters because he's the one asking the question. Yeah
It's really annoying being a part of like API stuff because I'm like, I know what it is, but do I, do I? Homey knows and that's what matters because he's the one asking the question. Yeah Yeah. So if I ever had to do anything with web sockets, I would probably just use node because it's like socket IO and like the node JavaScript experience for web sockets is just such a good experience. Now like that's the tool I would use for that job
Yeah. So if I ever had to do anything with web sockets, I would probably just use node because it's like socket IO and like the node JavaScript experience for web sockets is just such a good experience. Now like that's the tool I would use for that job At the end, I go is probably going to be more performant if you need a really performant web app just because it's a statically compiled language. And go has, go is a concurrent language too, which we didn't talk about a lot. So you know about the event loop in JavaScript
At the end, I go is probably going to be more performant if you need a really performant web app just because it's a statically compiled language. And go has, go is a concurrent language too, which we didn't talk about a lot. So you know about the event loop in JavaScript So JavaScript is single threaded. Right now there's like worker threads that you can kind of do with JavaScript is single threaded. Only one thing runs at a time. Right. With go, we have like a concurrency built into the language
So JavaScript is single threaded. Right now there's like worker threads that you can kind of do with JavaScript is single threaded. Only one thing runs at a time. Right. With go, we have like a concurrency built into the language So if I want to do something concurrently to another thing, I can start two functions and they'll both run at the same time. There's a whole like that's actually goes strong
So if I want to do something concurrently to another thing, I can start two functions and they'll both run at the same time. There's a whole like that's actually goes strong So is anything to do with like concurrency or distributed language types, distributed networking and server types of? That's where it goes really shines
So is anything to do with like concurrency or distributed language types, distributed networking and server types of? That's where it goes really shines What? Okay, I'm going to have to do it all on what I'm thinking of because it's very confusing in the fact of when I'm learning this stuff and I'm like, wait, this question did make sense and then I'm thinking about it and it doesn't make sense
What? Okay, I'm going to have to do it all on what I'm thinking of because it's very confusing in the fact of when I'm learning this stuff and I'm like, wait, this question did make sense and then I'm thinking about it and it doesn't make sense So it's, I am enjoying the learning of all of this and thank you for at least explaining a bit about, more about why people talk about go
So it's, I am enjoying the learning of all of this and thank you for at least explaining a bit about, more about why people talk about go I may not fully explain, understand like, all of the fun like things you were doing, but it's enough to be like, okay, now I understand why somebody is why these are built with go instead of with like JavaScript or Python because those, I would say when I was asking people what languages I should learn, everybody like my first language, almost everyone was like JavaScript or Python
I may not fully explain, understand like, all of the fun like things you were doing, but it's enough to be like, okay, now I understand why somebody is why these are built with go instead of with like JavaScript or Python because those, I would say when I was asking people what languages I should learn, everybody like my first language, almost everyone was like JavaScript or Python Those were the main two
Those were the main two And so learning what like go does or at some point it would be cool if I could learn like what some, like if they're even used, but a C sharp or C++ or C even or like Java, like what are those differences? Like those are all things that like why do we still use them but nobody starts with them
And so learning what like go does or at some point it would be cool if I could learn like what some, like if they're even used, but a C sharp or C++ or C even or like Java, like what are those differences? Like those are all things that like why do we still use them but nobody starts with them Yeah, you saw a lot of it today, right? You don't wanna have to worry about pass by reference, pass by value. Yeah. Pointers, types, all these other things, right? So I agree completely. When people are learning Java to program, I tell them Python or JavaScript as well
Yeah, you saw a lot of it today, right? You don't wanna have to worry about pass by reference, pass by value. Yeah. Pointers, types, all these other things, right? So I agree completely. When people are learning Java to program, I tell them Python or JavaScript as well Yeah, so that's, this at least is answering why and this is like something, I think and you and I talked about this when we first met and I've talked about this before, I think I would really struggle going through a course because I don't always understand
Yeah, so that's, this at least is answering why and this is like something, I think and you and I talked about this when we first met and I've talked about this before, I think I would really struggle going through a course because I don't always understand I'm like, I need to know the why of why don't we do this? What does it do enough
I'm like, I need to know the why of why don't we do this? What does it do enough So that way I can go, okay, let me refocus on what I'm supposed to be learning because it's like really, really hard for me not to just go down the deep end of wanting to go, okay, I'm suddenly gonna go like go and go because it's cool and I don't know it, why does everyone say no? Yeah
So that way I can go, okay, let me refocus on what I'm supposed to be learning because it's like really, really hard for me not to just go down the deep end of wanting to go, okay, I'm suddenly gonna go like go and go because it's cool and I don't know it, why does everyone say no? Yeah So thank you for at least solving that curiosity and homie said exactly, I feel like I have a better general understanding of where to go. No, JS kind of fit into the tech ego. Yeah, of course
So thank you for at least solving that curiosity and homie said exactly, I feel like I have a better general understanding of where to go. No, JS kind of fit into the tech ego. Yeah, of course Yeah, of course. And that's just a great way of saying it is that's what I am working on learning homie is like the tech ecosystem because I don't think that's explained really well anywhere. At least that I've seen
Yeah, of course. And that's just a great way of saying it is that's what I am working on learning homie is like the tech ecosystem because I don't think that's explained really well anywhere. At least that I've seen Yeah, I think so again, I work with a lot of students and beginners and so learning different languages is cool but you definitely should get a foundation for basics of programming, right
Yeah, I think so again, I work with a lot of students and beginners and so learning different languages is cool but you definitely should get a foundation for basics of programming, right Which you have, you're learning and you're working on like every language has an if statement, every language has some kind of for loop or while loop
Which you have, you're learning and you're working on like every language has an if statement, every language has some kind of for loop or while loop Actually, that's what we're working on in Python right now. So it's been really cool to have Laura on this show because it's giving me some structure. We were going every other Monday, we're now gonna do it every Monday to as we're going through the, automate the boring stuff book
Actually, that's what we're working on in Python right now. So it's been really cool to have Laura on this show because it's giving me some structure. We were going every other Monday, we're now gonna do it every Monday to as we're going through the, automate the boring stuff book And it's cool because it's like, okay, I don't think I could ever sit through a class or a course if it was just this. I would be like, I'm out, I'm done because I tried going to school for this. Yeah, now that it's like, okay, I have this one dedicated day and I can learn about everything else
And it's cool because it's like, okay, I don't think I could ever sit through a class or a course if it was just this. I would be like, I'm out, I'm done because I tried going to school for this. Yeah, now that it's like, okay, I have this one dedicated day and I can learn about everything else It like really happily comes together. I don't know how else to explain it. I'm like, I can do the complex stuff and learn the basics at the same time. I don't know. Yeah, we had a summer intern and he spent a good chunk of it learning and reading, automate the boring stuff
It like really happily comes together. I don't know how else to explain it. I'm like, I can do the complex stuff and learn the basics at the same time. I don't know. Yeah, we had a summer intern and he spent a good chunk of it learning and reading, automate the boring stuff And yeah, I've heard great things. So it is so cool. Al is a, his books are also very funny. And when I watch his livestream, I always just want to ask him to show the kittens that he is fostering at the moment. That's awesome. But yeah, Eddie, I think this is good for today
And yeah, I've heard great things. So it is so cool. Al is a, his books are also very funny. And when I watch his livestream, I always just want to ask him to show the kittens that he is fostering at the moment. That's awesome. But yeah, Eddie, I think this is good for today I definitely learned a lot. I know we have quite a few viewers. So if anybody has any questions, before I see if I can rage you into distribute AIDS OSS stream. I have fun now that I've learned how to raid. Huh. I've done it twice before I think, like twice ever
I definitely learned a lot. I know we have quite a few viewers. So if anybody has any questions, before I see if I can rage you into distribute AIDS OSS stream. I have fun now that I've learned how to raid. Huh. I've done it twice before I think, like twice ever Yeah, but yeah, I'm definitely happy to come back. And so what I actually had planned, I didn't know where along you were and your journey so far. But what I had planned today was to build a URL shortener, like Bittley or something. That would have been cool
Yeah, but yeah, I'm definitely happy to come back. And so what I actually had planned, I didn't know where along you were and your journey so far. But what I had planned today was to build a URL shortener, like Bittley or something. That would have been cool Yeah, I think that would have weighed too much right now. Yes. But when you're ready for it, I can come back and that's what we can do. Sweet. Do you, are you aware of QuickJS in that framework? No. Well, Mishko, who built Angular and AngularJS, has come out with Quick
Yeah, I think that would have weighed too much right now. Yes. But when you're ready for it, I can come back and that's what we can do. Sweet. Do you, are you aware of QuickJS in that framework? No. Well, Mishko, who built Angular and AngularJS, has come out with Quick And he was on the show, like, how would I say one of my first five people on the show? And he was like, let's do hacker news. And the person that I like to call my internet big brother of Anthony was like, don't do that. You don't even know that a hacker news existed
And he was on the show, like, how would I say one of my first five people on the show? And he was like, let's do hacker news. And the person that I like to call my internet big brother of Anthony was like, don't do that. You don't even know that a hacker news existed So it has been a lot of fun to learn all of this. Yeah. It definitely has been so. And that's what I tell beginners too, is as you're learning to get the basics first, and then as you're learning new things, pick a project that you're going to do in every language or framework
So it has been a lot of fun to learn all of this. Yeah. It definitely has been so. And that's what I tell beginners too, is as you're learning to get the basics first, and then as you're learning new things, pick a project that you're going to do in every language or framework And so my project for learning a new language is I build a URL shortener, right? I use a little database called SQLite. And it kind of touches everything, right? Like it has to write to the disk. It uses a database. It serves a web app
And so my project for learning a new language is I build a URL shortener, right? I use a little database called SQLite. And it kind of touches everything, right? Like it has to write to the disk. It uses a database. It serves a web app For front-end frameworks, when I was doing more front-end, I would build my own version of Giffy using Giffy's API, which was really easy to do, actually. You can use their search or the random API. And so that was my like, hello world for JavaScript frameworks
For front-end frameworks, when I was doing more front-end, I would build my own version of Giffy using Giffy's API, which was really easy to do, actually. You can use their search or the random API. And so that was my like, hello world for JavaScript frameworks I will say that there is an app I really want to build, but I don't know what goes into it to even like start. And I don't even know if the app's already thing
I will say that there is an app I really want to build, but I don't know what goes into it to even like start. And I don't even know if the app's already thing I just wanted to do something of, so every Wednesday, I host a Twitter space that people can like DM me and tell me that they want to be tagged every week. Basically, I just want something that I can like paste the Twitter space into
I just wanted to do something of, so every Wednesday, I host a Twitter space that people can like DM me and tell me that they want to be tagged every week. Basically, I just want something that I can like paste the Twitter space into And it takes like all of the people and tag them and just create it. Instead of me having to like copy and paste it, but I'm like, I get that I would probably want to use the Twitter API. And my guess is some type of database to be able to keep track of all of the people that have submitted
And it takes like all of the people and tag them and just create it. Instead of me having to like copy and paste it, but I'm like, I get that I would probably want to use the Twitter API. And my guess is some type of database to be able to keep track of all of the people that have submitted But I don't even know how where I would start because I don't know what goes into doing something like that or even what to Google. Yeah, well, when you're ready for that, we can absolutely do that. Because that is something that would be extremely helpful in my world
But I don't even know how where I would start because I don't know what goes into doing something like that or even what to Google. Yeah, well, when you're ready for that, we can absolutely do that. Because that is something that would be extremely helpful in my world So because right now I just have them in and excel file and copy and paste it. It's a really fun thing. But cool. Well, thank you so much for being on the show today, Eddie. And we're going to see if I can actually do this raid. Eh? No, no, I didn't do it right. Let's see. Ne-ne-ne-ne
So because right now I just have them in and excel file and copy and paste it. It's a really fun thing. But cool. Well, thank you so much for being on the show today, Eddie. And we're going to see if I can actually do this raid. Eh? No, no, I didn't do it right. Let's see. Ne-ne-ne-ne Ne-ne-ne-ne. Why? I'm going to get here. I'm going to get it. I was just saying invalid. Why? Why, Twitter, why? I know I'm awkwardly causing people to stay here while I'm trying to do this. One of these days, I'm just going to know how to raid. Raid
Ne-ne-ne-ne. Why? I'm going to get here. I'm going to get it. I was just saying invalid. Why? Why, Twitter, why? I know I'm awkwardly causing people to stay here while I'm trying to do this. One of these days, I'm just going to know how to raid. Raid Raid. And this was, as I was telling you earlier, I was like, let me do, I was going to do all this random stuff earlier. And it was going to be stuff like this, like learn how to set up my Twitch. Oh, there we go. Let's see. Eh? OK, if it's working, y'all are about to be raided. In 10 seconds
Raid. And this was, as I was telling you earlier, I was like, let me do, I was going to do all this random stuff earlier. And it was going to be stuff like this, like learn how to set up my Twitch. Oh, there we go. Let's see. Eh? OK, if it's working, y'all are about to be raided. In 10 seconds In 10 seconds. Two viewers, four viewers are ready to raid. Three, two, one. OK, bye. I think they raided. At least I'm guessing they did. If they did, they did.
In 10 seconds. Two viewers, four viewers are ready to raid. Three, two, one. OK, bye. I think they raided. At least I'm guessing they did. If they did, they did.