Hello, hello. Thank you everyone for joining Teach Gentek. I am slowly getting used to saying that instead of shit you don't want to talk about. I keep catching myself. I'm like no, it's not my podcast. Learning tech. And today we have Reselle. Am I saying your name properly? Yeah, you are. Perfect Perfect. Some people say in RISL, RISL? It's RISL. Sweet. As most of my guests have known, I'm horrible at names and I'm working on them. So a lot of got one of them right. This is exciting. And please introduce yourself and a bit about what we are going to go over today
Perfect. Some people say in RISL, RISL? It's RISL. Sweet. As most of my guests have known, I'm horrible at names and I'm working on them. So a lot of got one of them right. This is exciting. And please introduce yourself and a bit about what we are going to go over today And hello, hello, lovely people joining our stream. Hey everyone, my name is RISL Scarlett. I'm a developer advocate. I get up. I've been here for about like 10 minutes or so in the past. That was a software engineer, but I like doing this way better because I get to talk with people like Jen
And hello, hello, lovely people joining our stream. Hey everyone, my name is RISL Scarlett. I'm a developer advocate. I get up. I've been here for about like 10 minutes or so in the past. That was a software engineer, but I like doing this way better because I get to talk with people like Jen And what we're going to talk about is I'm just going to do a little introduction to get and get up because I remember when I first shouted with Jen, she mentioned that she knows a little bit about get up, but wanted to know more. Yeah
And what we're going to talk about is I'm just going to do a little introduction to get and get up because I remember when I first shouted with Jen, she mentioned that she knows a little bit about get up, but wanted to know more. Yeah Yeah. And I don't like Anthony had me put something with get and I'm like, I'm following directions, but I don't quite comprehend it. So I'm pretty excited that we're going through this today. Hello
Yeah. And I don't like Anthony had me put something with get and I'm like, I'm following directions, but I don't quite comprehend it. So I'm pretty excited that we're going through this today. Hello Hello. I will go ahead and get your deck on the mood, which by the way, y'all string yard is pretty legit in its ease of use. It doesn't do everything everyone wants, but it's actually pretty easy. I'm excited. Yeah, I love it. Yeah. I'll get into this
Hello. I will go ahead and get your deck on the mood, which by the way, y'all string yard is pretty legit in its ease of use. It doesn't do everything everyone wants, but it's actually pretty easy. I'm excited. Yeah, I love it. Yeah. I'll get into this I'll get into this. Basically, this is a deck that I use at other talks and I'm not going to do it in like the talk like way, but I'm just using it to kind of guide me to make sure I don't ramble
I'll get into this. Basically, this is a deck that I use at other talks and I'm not going to do it in like the talk like way, but I'm just using it to kind of guide me to make sure I don't ramble But basically, first, I usually start by telling people that like, you know, software engineering terms are kind of confusing. Back in the day, I used to think Java and JavaScript were the same thing. Apparently, they're not. And that's the same for get and get hub
But basically, first, I usually start by telling people that like, you know, software engineering terms are kind of confusing. Back in the day, I used to think Java and JavaScript were the same thing. Apparently, they're not. And that's the same for get and get hub If like, I don't know if you already knew that gen, but for anyone listening plus you get and get hub or not the same thing, like they're completely different, but they are kind of interdependent on each other. At least get hub depends on get
If like, I don't know if you already knew that gen, but for anyone listening plus you get and get hub or not the same thing, like they're completely different, but they are kind of interdependent on each other. At least get hub depends on get So first, I'm going to talk to you about, let me just skip through all this that I have all this. You have a cool deck, though. I'm joining, enjoying all the animations. Thank you. Shout out to Canva. But first, we're going to talk about like the differences between get and get hub
So first, I'm going to talk to you about, let me just skip through all this that I have all this. You have a cool deck, though. I'm joining, enjoying all the animations. Thank you. Shout out to Canva. But first, we're going to talk about like the differences between get and get hub Then I'm going to like, talk about like, there's a couple of features that get hub has. And then we'll walk through uploading things to get hub depending on how much time we have. Like, I might show you the different ways that you can upload stuff to get hub. And if not, we'll just do one thing
Then I'm going to like, talk about like, there's a couple of features that get hub has. And then we'll walk through uploading things to get hub depending on how much time we have. Like, I might show you the different ways that you can upload stuff to get hub. And if not, we'll just do one thing I'm stoked for this because when I first started learning JavaScript, oh gosh, like probably only a few weeks ago, I was doing it on LinkedIn and it wanted you to download get. And I believe I'm going off a memory
I'm stoked for this because when I first started learning JavaScript, oh gosh, like probably only a few weeks ago, I was doing it on LinkedIn and it wanted you to download get. And I believe I'm going off a memory And it also wanted to, and then I was like, well, why don't I just use get hub? And I didn't understand the difference. And like, even googling it, I'm like, okay, they do two different things. I got that far. That's all I know. They have two different things, very similar names. And that's it
And it also wanted to, and then I was like, well, why don't I just use get hub? And I didn't understand the difference. And like, even googling it, I'm like, okay, they do two different things. I got that far. That's all I know. They have two different things, very similar names. And that's it And that's it. Yeah, no, I was the same way. Like, I was even like working as a software engineer and like telling people, yeah, I know, I know get like referring to get hub or vice versa, not realizing they were like, two different things. So no worries. Okay. So get is a version control system
And that's it. Yeah, no, I was the same way. Like, I was even like working as a software engineer and like telling people, yeah, I know, I know get like referring to get hub or vice versa, not realizing they were like, two different things. So no worries. Okay. So get is a version control system And I usually tell people like, yeah, okay. So what? What is a version control system, you can mean? And basically, it's something that enables you to record snapshots snapshots of the projects that of your projects as you save them through history
And I usually tell people like, yeah, okay. So what? What is a version control system, you can mean? And basically, it's something that enables you to record snapshots snapshots of the projects that of your projects as you save them through history So like, if you make a change to like one of your co bases or your projects, it allows you to save it and be like, on June 25th at 1 p.m. I made this change and I saved it right here
So like, if you make a change to like one of your co bases or your projects, it allows you to save it and be like, on June 25th at 1 p.m. I made this change and I saved it right here And like the reason why this is relevant or important, I usually give this example that like, think about, well, for me, I have a lot of different versions of my resume. I know you probably can't see the screenshot as clearly, but basically it says like copy of Reselbop samples resume
And like the reason why this is relevant or important, I usually give this example that like, think about, well, for me, I have a lot of different versions of my resume. I know you probably can't see the screenshot as clearly, but basically it says like copy of Reselbop samples resume That's my maiden name. Like resume, Reselves Resume 4, Reselves Resume 1 is very hard to tell the differences between them and like why I made them. Like sometimes I've made them like when I was in school for scholarships or for different jobs
That's my maiden name. Like resume, Reselves Resume 4, Reselves Resume 1 is very hard to tell the differences between them and like why I made them. Like sometimes I've made them like when I was in school for scholarships or for different jobs And like that can be the same with what software engineering. It your imagine you have like many different versions of code and in addition to that, like right now it's just me working on my resume
And like that can be the same with what software engineering. It your imagine you have like many different versions of code and in addition to that, like right now it's just me working on my resume But once you're working on a team with multiple different people, that makes it even harder to track. And things can be poorly named and stuff like that. So real quick. Yeah. After this, can you share your deck so that way we can share it out? We had a comment about it
But once you're working on a team with multiple different people, that makes it even harder to track. And things can be poorly named and stuff like that. So real quick. Yeah. After this, can you share your deck so that way we can share it out? We had a comment about it And I'm like, this is going to be so good even for myself to go back and be like, okay, what's the difference again? Oh, cool. Also, yeah. And like if you're wondering like what kind of different versions they would even have in code bases
And I'm like, this is going to be so good even for myself to go back and be like, okay, what's the difference again? Oh, cool. Also, yeah. And like if you're wondering like what kind of different versions they would even have in code bases Like you'll have like the production version or like people call it a branch where that's what like users are using and touching. And then like if you find out or a user reports a bug or you have to add a new feature, you'll make a copy of production on your local computer
Like you'll have like the production version or like people call it a branch where that's what like users are using and touching. And then like if you find out or a user reports a bug or you have to add a new feature, you'll make a copy of production on your local computer So then now you have a local version that you've updated and changed and added. Like you either fix the bug or you added a new feature on. So that's a little bit different than production
So then now you have a local version that you've updated and changed and added. Like you either fix the bug or you added a new feature on. So that's a little bit different than production And then you'll put it up to another version called staging where everybody tests their code before it goes out to production to see if everything's working
And then you'll put it up to another version called staging where everybody tests their code before it goes out to production to see if everything's working So just giving like more examples of like the different versioning because I before I worked as a software engineer and I know you've had like a lot of more experience in tech. But like before I worked as a software engineer, I was just like I don't know why they would have different version
So just giving like more examples of like the different versioning because I before I worked as a software engineer and I know you've had like a lot of more experience in tech. But like before I worked as a software engineer, I was just like I don't know why they would have different version No, that is so helpful. And also I think something that oh, I always got really stuck on is and I believe this is GitHub instead of Git, but like the master or like the top level. And I think that's on GitHub. So I'll ask more about that question later
No, that is so helpful. And also I think something that oh, I always got really stuck on is and I believe this is GitHub instead of Git, but like the master or like the top level. And I think that's on GitHub. So I'll ask more about that question later But it's like all of these kind of blurred together from my past knowledge. So I'm excited about where yeah, I'm a part finally. Yeah. And I can even kind of answer that one right now. Like master would probably be like your your production version
But it's like all of these kind of blurred together from my past knowledge. So I'm excited about where yeah, I'm a part finally. Yeah. And I can even kind of answer that one right now. Like master would probably be like your your production version And I think they've kind of started to stop using that word because the origin was like master slave or something. Like that. And then once like the George Floyd stuff started coming out, people were like, yeah, let's change our terminology because this is kind of messed up
And I think they've kind of started to stop using that word because the origin was like master slave or something. Like that. And then once like the George Floyd stuff started coming out, people were like, yeah, let's change our terminology because this is kind of messed up So people have been using the term main now. But some some co-bases are still on master because it's a lot to migrate over. But that's a good question. Thank you. But basically Git manages like all the different versions for you
So people have been using the term main now. But some some co-bases are still on master because it's a lot to migrate over. But that's a good question. Thank you. But basically Git manages like all the different versions for you So you don't have to manage them on yourself because doing it manually is a pain in the butt. So it'll tell you like what the latest version is, who made the specific changes, why those changes were made
So you don't have to manage them on yourself because doing it manually is a pain in the butt. So it'll tell you like what the latest version is, who made the specific changes, why those changes were made Because sometimes you'll see like a change in the code base and you'll be like, what the heck is that? And usually people use Git in the terminal or the command prompt. I seen you you using it on Ramones when Ramoned at his session. So you are familiar with it
Because sometimes you'll see like a change in the code base and you'll be like, what the heck is that? And usually people use Git in the terminal or the command prompt. I seen you you using it on Ramones when Ramoned at his session. So you are familiar with it Usually I tell people it looks like the thing on movies where people say I'm hacking into the mainframe. But like it just helps you interact with the computer. You know that. Really really quick
Usually I tell people it looks like the thing on movies where people say I'm hacking into the mainframe. But like it just helps you interact with the computer. You know that. Really really quick Can we just like comment? I get that I can't really I am starting to just put code on the screen and like going into a browser and I feel like a hacker. I'm like I can't do anything but I feel like a hacker
Can we just like comment? I get that I can't really I am starting to just put code on the screen and like going into a browser and I feel like a hacker. I'm like I can't do anything but I feel like a hacker It does like I that's what I thought like engineers were doing when I would try to imagine like what the heck are engineers doing? They're like hacking into the mainframe or something but now like it's not that cool but it still it still does feel it feels fun. And then you're about Ramoned
It does like I that's what I thought like engineers were doing when I would try to imagine like what the heck are engineers doing? They're like hacking into the mainframe or something but now like it's not that cool but it still it still does feel it feels fun. And then you're about Ramoned Oh Ramoned. Oh I'm looking at the comments. Hold on. Oh hey people I was literally in the private chat section. And Ramone already knows this deck because I actually did this at his coding camp. And then forget hub you've used that a little bit so you know it's a it's a web platform
Oh Ramoned. Oh I'm looking at the comments. Hold on. Oh hey people I was literally in the private chat section. And Ramone already knows this deck because I actually did this at his coding camp. And then forget hub you've used that a little bit so you know it's a it's a web platform I at like the simplest level it's a place that the developers store their code. And I remember you like talking to me and you're like you think projects I mean you think companies do or something like that
I at like the simplest level it's a place that the developers store their code. And I remember you like talking to me and you're like you think projects I mean you think companies do or something like that Yeah like open source maintainers companies that have like private code on people that are storing their own personal projects. Some people actually even store like their blog post or just regular written content on there
Yeah like open source maintainers companies that have like private code on people that are storing their own personal projects. Some people actually even store like their blog post or just regular written content on there It's it's just like Google Drive for for code but there's like a whole bunch of other stuff on there like you can there's security features on there there's automation features called GitHub actions. I don't know if you heard of GitHub cold pilot
It's it's just like Google Drive for for code but there's like a whole bunch of other stuff on there like you can there's security features on there there's automation features called GitHub actions. I don't know if you heard of GitHub cold pilot There's like so many things on there but like at the the lowest base that like the the first thing is like you store code on there. Does that make sense? It does the question that's coming to mind right now is why would someone use Git instead of GitHub
There's like so many things on there but like at the the lowest base that like the the first thing is like you store code on there. Does that make sense? It does the question that's coming to mind right now is why would someone use Git instead of GitHub So Git is helping you to manage the versions and GitHub is just storing the code for you. And well let me see let me go through the rest of this and maybe for more sense because I'm yeah I usually get really really let's see
So Git is helping you to manage the versions and GitHub is just storing the code for you. And well let me see let me go through the rest of this and maybe for more sense because I'm yeah I usually get really really let's see So let's see okay here this should answer I think GitHub's a website that uses Git to show you all the changes that you made to your code right
So let's see okay here this should answer I think GitHub's a website that uses Git to show you all the changes that you made to your code right So like you'll put your code on GitHub using Git and then Git will recognize the changes that you made the times you made them and it'll display it to you and GitHub
So like you'll put your code on GitHub using Git and then Git will recognize the changes that you made the times you made them and it'll display it to you and GitHub And I can I think I have a couple screenshots coming up and basically you're using GitHub because it makes it easy for you to share your code with other people
And I can I think I have a couple screenshots coming up and basically you're using GitHub because it makes it easy for you to share your code with other people It's already I just like started coughing but back in the day I heard before I was a software engineer I heard people were like sharing their code via email via like FTP and different stuff that made it really hard for them to like share it amongst each other
It's already I just like started coughing but back in the day I heard before I was a software engineer I heard people were like sharing their code via email via like FTP and different stuff that made it really hard for them to like share it amongst each other So having Git was really helpful but having GitHub is even more helpful because people can just send a link to each other and be like hey here's my code and then Git will do the magic behind the scenes at like recognizing like here's when it was changed here's when this project started and stuff like that
So having Git was really helpful but having GitHub is even more helpful because people can just send a link to each other and be like hey here's my code and then Git will do the magic behind the scenes at like recognizing like here's when it was changed here's when this project started and stuff like that Real quick that is pretty funny Joe and hello Dustin what up in real quick so like that makes sense but I guess where I'm stuck is and again this is all like pieces just because like you know learning out of order causes the confusion a lot too is I used to work at an API spec company called Stoplight and when you would log into a project and like create a project you'd have a connect to Git and or GitHub and then it would make it so that way like you had if you submitted something it would create like it would go to it would create a branch or be any or you could submit it to the main branch but I guess where I'm confused is can't you have versioning there like you can and Git
Real quick that is pretty funny Joe and hello Dustin what up in real quick so like that makes sense but I guess where I'm stuck is and again this is all like pieces just because like you know learning out of order causes the confusion a lot too is I used to work at an API spec company called Stoplight and when you would log into a project and like create a project you'd have a connect to Git and or GitHub and then it would make it so that way like you had if you submitted something it would create like it would go to it would create a branch or be any or you could submit it to the main branch but I guess where I'm confused is can't you have versioning there like you can and Git So so GitHub is using Git to identify when you're on the main branch or identify like what you're submitting it to like GitHub is just reflecting it on like it's just visually showing you those changes or visually showing you what you did whereas like Git is identifying that like you submitted this on the main branch or here are the different branches does that does that make sense it's like it's like GitHub is the the UI or the website for you to see it better rather than just looking in your terminal because before we're just like looking in their terminal I guess to see all of that and then like GitHub is like where you can like actually see it and see what happened and what changes are made and you can you can use GitHub to I don't know if that's making any sense it's starting to make sense it's starting to make sense it is like you're you're just using it in the terminal and GitHub made it so that like everyone could see it because not everyone can see your terminal right not everyone can see what's going on within your terminal because that's just on your local computer so now that you're you're using GitHub which is on the cloud and still in your codes on the cloud or whatever everybody else can if you make your your project public everybody else can see what's going on so GitHub is just reflecting the changes that happened within Git and like people can in the comments you know go ahead feel free to add in more clarification there because I don't I don't think I did a great job but it does make sense it's starting to make sense I think it's going to be a lot of like when we go through it it'll make even more sense yeah I think I'm going to do like you doing it from the terminal and then within GitHub's UI and then hopefully it'll help it click a little bit more so as as Joe saying GitHub is a collection of of repositories it's a lot of things right like here's here's my GitHub profile it kind of reminds me of like a social media network because like I have followers I'm following people it says a little bit about myself here and it talks about like different orgs that have but most importantly it has all the repositories I made and like repositories are just folders that hold your different projects so like I have a or projects that I've I've interacted with so like I've interacted with open sauce which is an open source project I made my own projects I got my social card generator over here and if we go deeper into that project it'll show me the different files that exist right so I have like a get ignore file a read me a JavaScript file a package dot json and I have here it reflects which branch or which version of the code is on it so like you can interact with that click that a little drop down and you'll see the different branches and you'll click it and be like oh what happened then in this branch like on someone's local branch or what does it look like in production or staging um I hope that gives like a little bit more clarity this is like the UI to see what's going on within your your code it just makes it look look better and you could also see like right here has how many days ago things were changed and updated so it says 20 days ago um and yeah I'll stop if you have any question no I'm just going to give you what I've been telling all the other guests of like it makes sense but it doesn't make sense so I'm just going to let it soak in and you know we'll keep going yeah and I think sometimes things start to make more sense as you make your own projects yeah that helps um I also like circled in on like one of these pro one of these files here so like if I clicked on the generate social image job is group file oh they went backwards no yeah um if I click on there I'll see the actual code that I wrote and this is some really terrible code I wrote that you can see um but that way people just showing you like people can literally see like what's inside of this file um and then you can also see commits um so what do we do in the event that we submit applications that are rejected by the bot to whom do we appeal what bot I'm kind of confused no why what are you talking about Joe like there's a there's a lot of bots on give so I don't know so I'm gonna wait when when Joe comes back I'll try to answer that but um there um commits are just another word of saying changes that happen in your code or times that you saved changes inside of your code so like you can see here um on January 14 I made an update on January 4th I made an update and it even has the message that I added um just to let people know could it mean could they mean CI bots that review code wing gets installer to be honest Joe I I don't know too much about that but I could ask somebody I give I don't think I've um interacted much with that when when get installer yeah sorry um but basically um what am I saying what am I oh I can leave a message of why I added certain changes like I made I say right here like this was a fix to add a comment response you can see that be duggy who's my manager added something to the code base you can see empty fully updated a file called readme
So so GitHub is using Git to identify when you're on the main branch or identify like what you're submitting it to like GitHub is just reflecting it on like it's just visually showing you those changes or visually showing you what you did whereas like Git is identifying that like you submitted this on the main branch or here are the different branches does that does that make sense it's like it's like GitHub is the the UI or the website for you to see it better rather than just looking in your terminal because before we're just like looking in their terminal I guess to see all of that and then like GitHub is like where you can like actually see it and see what happened and what changes are made and you can you can use GitHub to I don't know if that's making any sense it's starting to make sense it's starting to make sense it is like you're you're just using it in the terminal and GitHub made it so that like everyone could see it because not everyone can see your terminal right not everyone can see what's going on within your terminal because that's just on your local computer so now that you're you're using GitHub which is on the cloud and still in your codes on the cloud or whatever everybody else can if you make your your project public everybody else can see what's going on so GitHub is just reflecting the changes that happened within Git and like people can in the comments you know go ahead feel free to add in more clarification there because I don't I don't think I did a great job but it does make sense it's starting to make sense I think it's going to be a lot of like when we go through it it'll make even more sense yeah I think I'm going to do like you doing it from the terminal and then within GitHub's UI and then hopefully it'll help it click a little bit more so as as Joe saying GitHub is a collection of of repositories it's a lot of things right like here's here's my GitHub profile it kind of reminds me of like a social media network because like I have followers I'm following people it says a little bit about myself here and it talks about like different orgs that have but most importantly it has all the repositories I made and like repositories are just folders that hold your different projects so like I have a or projects that I've I've interacted with so like I've interacted with open sauce which is an open source project I made my own projects I got my social card generator over here and if we go deeper into that project it'll show me the different files that exist right so I have like a get ignore file a read me a JavaScript file a package dot json and I have here it reflects which branch or which version of the code is on it so like you can interact with that click that a little drop down and you'll see the different branches and you'll click it and be like oh what happened then in this branch like on someone's local branch or what does it look like in production or staging um I hope that gives like a little bit more clarity this is like the UI to see what's going on within your your code it just makes it look look better and you could also see like right here has how many days ago things were changed and updated so it says 20 days ago um and yeah I'll stop if you have any question no I'm just going to give you what I've been telling all the other guests of like it makes sense but it doesn't make sense so I'm just going to let it soak in and you know we'll keep going yeah and I think sometimes things start to make more sense as you make your own projects yeah that helps um I also like circled in on like one of these pro one of these files here so like if I clicked on the generate social image job is group file oh they went backwards no yeah um if I click on there I'll see the actual code that I wrote and this is some really terrible code I wrote that you can see um but that way people just showing you like people can literally see like what's inside of this file um and then you can also see commits um so what do we do in the event that we submit applications that are rejected by the bot to whom do we appeal what bot I'm kind of confused no why what are you talking about Joe like there's a there's a lot of bots on give so I don't know so I'm gonna wait when when Joe comes back I'll try to answer that but um there um commits are just another word of saying changes that happen in your code or times that you saved changes inside of your code so like you can see here um on January 14 I made an update on January 4th I made an update and it even has the message that I added um just to let people know could it mean could they mean CI bots that review code wing gets installer to be honest Joe I I don't know too much about that but I could ask somebody I give I don't think I've um interacted much with that when when get installer yeah sorry um but basically um what am I saying what am I oh I can leave a message of why I added certain changes like I made I say right here like this was a fix to add a comment response you can see that be duggy who's my manager added something to the code base you can see empty fully updated a file called readmemd um and if you wanted to you can click on each of these commits and it'll show you the exact change that was made and like that message just gives context as to why because sometimes sometimes somebody made a change to code and you're like this change makes no sense like why would you do that but having that context is good and you can always go back to the person and be like hey be duggy like why did you do this I see that you made this message I see that you updated this code um but I need to have more context on why on that note like the commits make sense and um guessing you're gonna be going through this but I just want to call it out so that way in case you're not do we know of what is like a PR in exact different from a commit oh good question so a PR stands for pull request and what you're essentially doing with a pull request is you're saying um that like you see whether there's an open source project or your company's project or somebody else's project you're saying I see that you have this code um I want to contribute or add my changes to it but because people don't want people just jump in and changing their code all willingly it's kind of like you're saying here's the change I want to make can you do you like it if yes the the person will approve it and merge it into their code base if no they'll leave a couple comments for review to say can you change this first and then they'll merge it in so pull request is kind of like a like a little bit of a stopper to say hey this person wants to add code to your code base are you okay with it so you'll open up a pull request and then the way that it's different than a commit is a commit is just um a saved a saved change every time you like a saved spot or saved snapchat every time you make a change within a code base um so it's kind of like pressing the save button on on your your google doc or something and like it'll just say oh this was saved at 542 pm um and the the reason that's helpful in addition to this is if you're coding on your own and you're like yo this this new change I made doesn't work it kind of ruined everything you can always go back to 542 pm or 3 a
md um and if you wanted to you can click on each of these commits and it'll show you the exact change that was made and like that message just gives context as to why because sometimes sometimes somebody made a change to code and you're like this change makes no sense like why would you do that but having that context is good and you can always go back to the person and be like hey be duggy like why did you do this I see that you made this message I see that you updated this code um but I need to have more context on why on that note like the commits make sense and um guessing you're gonna be going through this but I just want to call it out so that way in case you're not do we know of what is like a PR in exact different from a commit oh good question so a PR stands for pull request and what you're essentially doing with a pull request is you're saying um that like you see whether there's an open source project or your company's project or somebody else's project you're saying I see that you have this code um I want to contribute or add my changes to it but because people don't want people just jump in and changing their code all willingly it's kind of like you're saying here's the change I want to make can you do you like it if yes the the person will approve it and merge it into their code base if no they'll leave a couple comments for review to say can you change this first and then they'll merge it in so pull request is kind of like a like a little bit of a stopper to say hey this person wants to add code to your code base are you okay with it so you'll open up a pull request and then the way that it's different than a commit is a commit is just um a saved a saved change every time you like a saved spot or saved snapchat every time you make a change within a code base um so it's kind of like pressing the save button on on your your google doc or something and like it'll just say oh this was saved at 542 pm um and the the reason that's helpful in addition to this is if you're coding on your own and you're like yo this this new change I made doesn't work it kind of ruined everything you can always go back to 542 pm or 3 am
m or whatever you were coding um and it'll bring you to that that point in time does that make sense
or whatever you were coding um and it'll bring you to that that point in time does that make sense Yes once a pr is approved will it show up as a commit or no because it wasn't a save it may just go into an approved branch or a different branch yeah it'll it'll show up as a commit it'll show up as a merge commit so right here you can see be duggy made a merge commit he merged somebody's I think he might have merged um empty folies change and yeah right here he merged empty folies um pull request um and now it shows up as a as a commit right here okay GitHub is a lot get is a lot like people have a hard time understanding it and there's no way anybody can know everything about it so just to get thank you thank you I'm getting there I'm getting there like I'm following along but at the same time I'm like it's time I'll get it but I get it it's so much like even I wrote a blog post once that someone was like if you don't understand get don't write about it I don't like nobody understands everything about get like relax oh I loved your struggles of a dev role oh thank you I love that one thanks I appreciate it um and um yeah there's there's also I just wanted to make you aware that GitHub's not the only platform you can use like not the only like website that stores code it just kind of has a bit of a monopoly I guess when I wrote this it has 73 million users um it has way more now but there's other options like get lab bit bucket get bucket AWS code commit source forge I like to make people aware of this because after I graduated my code and bookam I had learned GitHub and then I joined the job and they were using bit bucket and I was like what is this so just like but those are all just different company names and different websites using it but they all basically do the same thing yeah basically all do the same thing basically all interact with Git or a similar version control system there's other ones like um material and I don't know things that people don't use anymore maybe people may chat and they'll them on but yeah now for like something and this to be a piece I'm missing too like we've done stuff on um VS code yeah and so when we do stuff to VS code if it is trying to work on thinking this out uh and it creates a project in GitHub I don't know where I'm going with this question I know they talk together but I don't know how or how to break that one down so I think you would and then we could try this out like you would go in VS code you will start typing some code and then when you're like you know what I don't want to lose this because you could totally lose your code from VS code like let's say your computer shuts down forever you you're like okay I'm at a point that I think this is good you'll write Git in your terminal and you'll use Git to push your code to GitHub or to store your code on GitHub so when it's in VS code it's just that's like a text editor kind of thing and then when you push a Git that's when it creates a Git so it creates like a Git file and then it'll push to GitHub kind of yeah yeah that's pretty pretty close yet so you're typing your text editor yeah okay we will use Git and then you'll say Git I want this to go to GitHub I want this to live on GitHub and it'll be like okay then you'll then everybody can see it or you'll be able to access it from from at URL and Ramon said he used a version control system called subversion and I agree with Joe I hate Mercuria well not hate I'm not a fan okay okay I know it's a lot sorry no you're good you're good I'm getting there cool all right so now we're going to talk about how to store code on GitHub okay so we're going to create a GitHub account you have that you install Git via your terminal you might have that I think I think you mentioned that if not we'll do it it'll look like that this is the website where you sign up and then if you were like installing it in your terminal this is how we'll look we'll do that later you're going to create a repository and a repository again is maybe we should do this right now okay like yeah I wonder yeah let's let let me stop sharing and then you can share and we just do this okay Joe said do you suggest using the desktop application for Git Hub and get oh my gosh wait that's actually at the end of this okay but let's go back yeah I'll just well first of all like I I think it's a good option for people who like there's I learned that like scientific researchers and stuff like that store code on Git but they're not really necessarily familiar with like Git well sorry scientific researchers store code on GitHub but they're not necessarily familiar with Git and they may not have time to learn that or like a beginner to like who's just learning to code like they may not know Git so I think it's completely fine to use GitHub desktop in fact like before I work that GitHub I thought like no you gotta use the terminal and then now that I'm working here there's so many people just using GitHub's web web UI just like dragging and dropping things just like adding the files directly and I know there's other like tooling like Git cracking and stuff like that like I'm all for it whatever works to help you submit your code like do it because the important part is making sure that you store your code and you have those different versions because I had people told me they're using Dropbox I'm like please don't use Dropbox and it's okay that you jumped ahead because I think I was gonna skip this because it was yeah it's something I say but yeah I was just about to say it's like so good to like just ask these questions because even if it is making a skip ahead like we got to learn and we're doing this together that's why it's teach gentech because I'm like there's other people that don't know this stuff exactly and someone said drag and drag and drop gang yep I agree with that all right go ahead and share and I will I will walk you through this first thing yeah cool I thought it was like really big over here so like we can minimize that a little bit but it's so cute thank you thank you great photographer here in Denver if anybody needs one I know one so I think we have we have time to do to use multiple options multiple options um let's do it in the the GitHub UI first then we'll do it in the terminal so you don't even need the terminal for this one let's just do it yeah you can just make that one bigger okay and we're gonna go to on the top right hand corner there's a plus sign out okay yeah and we're gonna click new repository basically repository just is a folder for whatever project you have so let's go ahead and click that um really quick like new organization I'm guessing that's just like a different company or something like you want other people involved but what's a new just um I barely used those but it's like people save code snippets in there from what I've seen like I've literally never used it I haven't found the reason I needed to but whenever I see people use it it just has like a code snippet that they want to share with people and then import repository cannot do it with like VS code is that like where you would import something or it might just still not get out no I think you're right it's kind of like if you were on google drive and like uploading a folder that existed on your computer yeah I think you can upload a folder of code that exists on your computer that you wrote with VS code or something like that I haven't used that much either to be honest there's so many ways you just made me realize that that way is a thing um so let's go ahead and we can name this repository um and I don't know what do you want to name it we can call it learning get a vinyl cool that result is the best gen is the best okay cool and then you could see that there are options to make it public or private let's just make it public um people that make things private it's maybe they don't want people to see their code yet or it's like a proprietary company and they're like don't steal my code um we can go ahead and add a readme file do do people have a look at the readme files you said do people not or do they ever do they ever because I feel like when I install something on my computer I never read the readme file but I don't know if it's different for code yeah I think um I'm not a big reader either um when it comes to technical things but um there are times where I do have to read it like if I want to contribute to an open source project that'll have links and information on how I should interact in that project and then sometimes at like different jobs I've had like people will use that as an area for documentation um but yeah it's it's just like a hey this is my project here's how you use it really I don't always read it kind of like good good call remote he said readme files are super helpful for getting started yeah yeah like probably read them if if if you need to like if you're like I know what to do you're good but like if it's an open source project or like a company then you're like I don't know what to do it'll tell you okay cool and it already says that it's setting like main as your default branch so I didn't explain branches that much to you but basically you'll have this this main version of your code and like you can quote unquote branch off of it and add changes and then once those changes are added and you're ready and and they look good to you you can merge it back into the main branch how many branches are normal uh a million I don't know like if I'm on if I'm working on a project like how many branches is good to have or not have or do they just like chill there for forever you can hey hey um AJ you can it's it's a good practice to delete your branches after they were merged but I don't think there's like a set number of how many you should have it's just like how many you need kind of type of thing it's almost like asking how much how much I don't know but you know these are the random things that I get stuck on so I appreciate it these are good questions these are good questions but yeah I don't know like I've seen a various amount and it's just like depending on how big the project is there's no there's no rules or anything about branches it's just nice to delete them after you're done that way you're not being cluttered I get that and hi AJ and thank you for joining for a bit um all right next question for you result add the what that the ignore yeah that's a place where how can I describe that okay it's a file um we can't add it if you want but it's a file and actually they have like different templates and this this file essentially tells you um how do I say I'm trying to say it tells get hub to not upload certain files within your project so like if you have secret passwords that people can easily look through and scan your code base and stuff like that you can say hey don't put that file in there and get hub will ignore that file and not add it or if you have like dependencies and libraries that will make uploading your project and downloading your project take forever you can say hey don't add though so this is literally the it's name like telling get ignore these files does that make sense it does okay thank you um and I think we went through licenses kind of yesterday yeah a bit yeah we did the MIT license okay cool I remember yeah cool all right let's create this repository okay um so do one of the simplest ways to add a new file is where it says oh and look Joe said most co-holders in my honest opinion are not super organized so that they are branch are in branches that goes somewhere is a benefit yeah we're not organized oh okay go ahead and just click add file this is like one method of adding code and we can say create new file and um do you know well are you familiar with html at all because I was thinking to make an html file that is groovy I've been working on javascript although uh yeah I think he's going to be coming on tomorrow to do a code review from my very very first stream and I think I ended up actually writing it in html instead of javascripts but we'll find out okay all right well I mean we can make this super simple then you can name this index dot html perfect and then in edit new file we can just do like a an h1 I don't know if you're familiar with that perfect and then you can close that tag with a closing h1 and inside of it we can add whatever you want you can say jenn is the best yeah so is remote so that's everybody that really sat down here to join the stream right these are people that show up often so anybody else keep showing up and you'll get added to this list cool and now so yeah now we made this we made this file let's scroll down and shout out to Ramon and I don't know how to say Jerry's name is it Jerry it's like yere I'm saying it wrong like I've like tried really hard for it but it's like yere yeah it there are roles I'm pretty sure join tomorrow night and we'll be able to have him say his name like seven times and then what we're doing right now is we're we're gonna make a commit we're just doing it in in the user interface and we're saying we want to save this we'll commit it directly to the main branch just for the sake of this like demo okay and then something that I'm just realizing that I saw that was different here is creating the the file here I it doesn't have all the pretty stuff that the s code really helps yes with where I'm like it didn't close auto close my h1 or anything like that and I'm like oh I like that the s code does that yes I do too and that's why people don't normally write their code inside of github they just use it to push their code up I'm just showing you it so you can be able to like kind of connect the dots once we do yes and it's so helpful because I wouldn't have thought of that yeah and uh this is why bold bearded builder says this is why he never they never I really need to start working on pronouns y'all because I'm always like I need to not sue I have commitment issues that's hilarious because they have to do commits yes yes all right oh wait before you do that actually you can make a commit message cuz so like in that the top bar it defaults to saying create index
Yes once a pr is approved will it show up as a commit or no because it wasn't a save it may just go into an approved branch or a different branch yeah it'll it'll show up as a commit it'll show up as a merge commit so right here you can see be duggy made a merge commit he merged somebody's I think he might have merged um empty folies change and yeah right here he merged empty folies um pull request um and now it shows up as a as a commit right here okay GitHub is a lot get is a lot like people have a hard time understanding it and there's no way anybody can know everything about it so just to get thank you thank you I'm getting there I'm getting there like I'm following along but at the same time I'm like it's time I'll get it but I get it it's so much like even I wrote a blog post once that someone was like if you don't understand get don't write about it I don't like nobody understands everything about get like relax oh I loved your struggles of a dev role oh thank you I love that one thanks I appreciate it um and um yeah there's there's also I just wanted to make you aware that GitHub's not the only platform you can use like not the only like website that stores code it just kind of has a bit of a monopoly I guess when I wrote this it has 73 million users um it has way more now but there's other options like get lab bit bucket get bucket AWS code commit source forge I like to make people aware of this because after I graduated my code and bookam I had learned GitHub and then I joined the job and they were using bit bucket and I was like what is this so just like but those are all just different company names and different websites using it but they all basically do the same thing yeah basically all do the same thing basically all interact with Git or a similar version control system there's other ones like um material and I don't know things that people don't use anymore maybe people may chat and they'll them on but yeah now for like something and this to be a piece I'm missing too like we've done stuff on um VS code yeah and so when we do stuff to VS code if it is trying to work on thinking this out uh and it creates a project in GitHub I don't know where I'm going with this question I know they talk together but I don't know how or how to break that one down so I think you would and then we could try this out like you would go in VS code you will start typing some code and then when you're like you know what I don't want to lose this because you could totally lose your code from VS code like let's say your computer shuts down forever you you're like okay I'm at a point that I think this is good you'll write Git in your terminal and you'll use Git to push your code to GitHub or to store your code on GitHub so when it's in VS code it's just that's like a text editor kind of thing and then when you push a Git that's when it creates a Git so it creates like a Git file and then it'll push to GitHub kind of yeah yeah that's pretty pretty close yet so you're typing your text editor yeah okay we will use Git and then you'll say Git I want this to go to GitHub I want this to live on GitHub and it'll be like okay then you'll then everybody can see it or you'll be able to access it from from at URL and Ramon said he used a version control system called subversion and I agree with Joe I hate Mercuria well not hate I'm not a fan okay okay I know it's a lot sorry no you're good you're good I'm getting there cool all right so now we're going to talk about how to store code on GitHub okay so we're going to create a GitHub account you have that you install Git via your terminal you might have that I think I think you mentioned that if not we'll do it it'll look like that this is the website where you sign up and then if you were like installing it in your terminal this is how we'll look we'll do that later you're going to create a repository and a repository again is maybe we should do this right now okay like yeah I wonder yeah let's let let me stop sharing and then you can share and we just do this okay Joe said do you suggest using the desktop application for Git Hub and get oh my gosh wait that's actually at the end of this okay but let's go back yeah I'll just well first of all like I I think it's a good option for people who like there's I learned that like scientific researchers and stuff like that store code on Git but they're not really necessarily familiar with like Git well sorry scientific researchers store code on GitHub but they're not necessarily familiar with Git and they may not have time to learn that or like a beginner to like who's just learning to code like they may not know Git so I think it's completely fine to use GitHub desktop in fact like before I work that GitHub I thought like no you gotta use the terminal and then now that I'm working here there's so many people just using GitHub's web web UI just like dragging and dropping things just like adding the files directly and I know there's other like tooling like Git cracking and stuff like that like I'm all for it whatever works to help you submit your code like do it because the important part is making sure that you store your code and you have those different versions because I had people told me they're using Dropbox I'm like please don't use Dropbox and it's okay that you jumped ahead because I think I was gonna skip this because it was yeah it's something I say but yeah I was just about to say it's like so good to like just ask these questions because even if it is making a skip ahead like we got to learn and we're doing this together that's why it's teach gentech because I'm like there's other people that don't know this stuff exactly and someone said drag and drag and drop gang yep I agree with that all right go ahead and share and I will I will walk you through this first thing yeah cool I thought it was like really big over here so like we can minimize that a little bit but it's so cute thank you thank you great photographer here in Denver if anybody needs one I know one so I think we have we have time to do to use multiple options multiple options um let's do it in the the GitHub UI first then we'll do it in the terminal so you don't even need the terminal for this one let's just do it yeah you can just make that one bigger okay and we're gonna go to on the top right hand corner there's a plus sign out okay yeah and we're gonna click new repository basically repository just is a folder for whatever project you have so let's go ahead and click that um really quick like new organization I'm guessing that's just like a different company or something like you want other people involved but what's a new just um I barely used those but it's like people save code snippets in there from what I've seen like I've literally never used it I haven't found the reason I needed to but whenever I see people use it it just has like a code snippet that they want to share with people and then import repository cannot do it with like VS code is that like where you would import something or it might just still not get out no I think you're right it's kind of like if you were on google drive and like uploading a folder that existed on your computer yeah I think you can upload a folder of code that exists on your computer that you wrote with VS code or something like that I haven't used that much either to be honest there's so many ways you just made me realize that that way is a thing um so let's go ahead and we can name this repository um and I don't know what do you want to name it we can call it learning get a vinyl cool that result is the best gen is the best okay cool and then you could see that there are options to make it public or private let's just make it public um people that make things private it's maybe they don't want people to see their code yet or it's like a proprietary company and they're like don't steal my code um we can go ahead and add a readme file do do people have a look at the readme files you said do people not or do they ever do they ever because I feel like when I install something on my computer I never read the readme file but I don't know if it's different for code yeah I think um I'm not a big reader either um when it comes to technical things but um there are times where I do have to read it like if I want to contribute to an open source project that'll have links and information on how I should interact in that project and then sometimes at like different jobs I've had like people will use that as an area for documentation um but yeah it's it's just like a hey this is my project here's how you use it really I don't always read it kind of like good good call remote he said readme files are super helpful for getting started yeah yeah like probably read them if if if you need to like if you're like I know what to do you're good but like if it's an open source project or like a company then you're like I don't know what to do it'll tell you okay cool and it already says that it's setting like main as your default branch so I didn't explain branches that much to you but basically you'll have this this main version of your code and like you can quote unquote branch off of it and add changes and then once those changes are added and you're ready and and they look good to you you can merge it back into the main branch how many branches are normal uh a million I don't know like if I'm on if I'm working on a project like how many branches is good to have or not have or do they just like chill there for forever you can hey hey um AJ you can it's it's a good practice to delete your branches after they were merged but I don't think there's like a set number of how many you should have it's just like how many you need kind of type of thing it's almost like asking how much how much I don't know but you know these are the random things that I get stuck on so I appreciate it these are good questions these are good questions but yeah I don't know like I've seen a various amount and it's just like depending on how big the project is there's no there's no rules or anything about branches it's just nice to delete them after you're done that way you're not being cluttered I get that and hi AJ and thank you for joining for a bit um all right next question for you result add the what that the ignore yeah that's a place where how can I describe that okay it's a file um we can't add it if you want but it's a file and actually they have like different templates and this this file essentially tells you um how do I say I'm trying to say it tells get hub to not upload certain files within your project so like if you have secret passwords that people can easily look through and scan your code base and stuff like that you can say hey don't put that file in there and get hub will ignore that file and not add it or if you have like dependencies and libraries that will make uploading your project and downloading your project take forever you can say hey don't add though so this is literally the it's name like telling get ignore these files does that make sense it does okay thank you um and I think we went through licenses kind of yesterday yeah a bit yeah we did the MIT license okay cool I remember yeah cool all right let's create this repository okay um so do one of the simplest ways to add a new file is where it says oh and look Joe said most co-holders in my honest opinion are not super organized so that they are branch are in branches that goes somewhere is a benefit yeah we're not organized oh okay go ahead and just click add file this is like one method of adding code and we can say create new file and um do you know well are you familiar with html at all because I was thinking to make an html file that is groovy I've been working on javascript although uh yeah I think he's going to be coming on tomorrow to do a code review from my very very first stream and I think I ended up actually writing it in html instead of javascripts but we'll find out okay all right well I mean we can make this super simple then you can name this index dot html perfect and then in edit new file we can just do like a an h1 I don't know if you're familiar with that perfect and then you can close that tag with a closing h1 and inside of it we can add whatever you want you can say jenn is the best yeah so is remote so that's everybody that really sat down here to join the stream right these are people that show up often so anybody else keep showing up and you'll get added to this list cool and now so yeah now we made this we made this file let's scroll down and shout out to Ramon and I don't know how to say Jerry's name is it Jerry it's like yere I'm saying it wrong like I've like tried really hard for it but it's like yere yeah it there are roles I'm pretty sure join tomorrow night and we'll be able to have him say his name like seven times and then what we're doing right now is we're we're gonna make a commit we're just doing it in in the user interface and we're saying we want to save this we'll commit it directly to the main branch just for the sake of this like demo okay and then something that I'm just realizing that I saw that was different here is creating the the file here I it doesn't have all the pretty stuff that the s code really helps yes with where I'm like it didn't close auto close my h1 or anything like that and I'm like oh I like that the s code does that yes I do too and that's why people don't normally write their code inside of github they just use it to push their code up I'm just showing you it so you can be able to like kind of connect the dots once we do yes and it's so helpful because I wouldn't have thought of that yeah and uh this is why bold bearded builder says this is why he never they never I really need to start working on pronouns y'all because I'm always like I need to not sue I have commitment issues that's hilarious because they have to do commits yes yes all right oh wait before you do that actually you can make a commit message cuz so like in that the top bar it defaults to saying create indexhtml the one above it okay but you can like give more detail or whatever you can say um created an h1 element inside of index
html the one above it okay but you can like give more detail or whatever you can say um created an h1 element inside of indexhtml yay that was super exciting yeah and then we can go ahead and commit that new file all right cool so you have your first repository you created a new file you added an or and you committed a new file um to there so we can we can do the same thing um in the terminal okay well also great job thank you thank you um I would other than seeing it in terminal if we have time seeing it in VS code I think would be so yeah no yeah we're gonna sorry we're gonna open we're gonna use the terminal but we're also gonna use VS code okay sweet cuz I was like uh you can't yeah you can't I'm pretty sure we did yesterday with Ramon a bit Ramon I feel like he had me create my own folder that I put code into and then um we made a file and put it in there I don't remember all those steps but we did no worries okay so one thing we need to do before we do all of what you're doing I was going to um clone this this repository that you just named oh okay basically if somebody else wanted to use your project or contribute to your project yeah they can use the GitHub UI and edit the files directly there but like you mentioned there's no like highlighting there's no linting to tell you if you made a mistake there's nothing to like help protect you so what people like to do is download it or clone it to their local repository and use VS code so what we're going to really really quick yeah um something that you said that I know what it is but I feel like any nubes like me normally wouldn't is linting linting is a tool that will tell you if you have mistakes and it is really helpful uh there's a lot of linting tool out linting tools out there seeing if I can talk I like to think of it as it's kind of like a spell check for your code yeah it is it is like it's like Grammarly yeah it's like Grammarly and spell check put together um but I just wanted to call out that's what linting is because that was a really really hard word for me to remember what I did because I'm like it's not removing lint so why is it called for me no I understand that it's a weird concept thanks for calling that out yeah for sure so click the code button and that should have instructions okay cool and then where it says um you see that httbs slash github that it has a copy button yeah let's copy that that's like the url for this repository and okay now we're going to head to the terminal and go to a folder that well do you know how to navigate to different folders in this term okay cool go to a folder that you want to save this stuff cool I gotta remember with a folder it's called it's called code folder cool okay let's see if I like remember what remain side it's called code dash folder if we want to do it if if you don't remember you can do ls and you'll see where you are kind of and what folders exist so tell me how do you do it without the um quote marks is it a dash or is it i don't remember if i know the answer to this question that's okay i'll do it the way i remember doing it yesterday oh i'm not in um yeah part if you you're not in like your documents folder yeah yeah if you talk less it'll show you what folders are around and um remotes it something about it being the percent sign cool okay and now i should be able to i'm now i want to see if it's this way nope okay okay yeah i'm in the purple cool and now you can type get clone and then paste so get space clones are and then paste that URL that you copied cool and then if you type ls you'll see okay cool you'll see the the result is the best folder and then you'll see the other um files that you made but remote when you were learning express so i'm totally just side so it's just okay i was just curious what would happen if i pasted it yeah it's just the it's just the link to that but now you can open it in vs code um so now that it's on your local computer so okay and that's how we got it too they look so open yeah perfect and you can click the result the best folder and press open the folder not just the file right yes that's correct because now if you see those files you'll have that h1 that you made and you'll have the readme that you made too um how does when i save this because i cloned it does that mean it's only saving locally or is it resubmitting to the original so it'll only save locally but we'll use get to push up your new changes to to get help okay that doesn't make sense sorry this is so much okay um first thing we're going to do is let's yeah let's add your changes let's add some new changes like you can add a h2 that says something else random and uh just for those watching if you didn't catch that this is something that i was talking about earlier uh when i was writing h2 um how do i do it i do like two seconds ago i'm gonna and y'all know how to add it in my closing h2 and that's something that i i really like me too you'll love co-pilot if if you like that yeah there we go perfect okay and then we'll press save and we know that it's not on get hub yet right like it's like those changes are not going to be there but i'm just gonna go double check you know making sure it clicks in my head yeah cool cool so it only has that um what we can do now though is um we can add it so in our terminal um let's go back there and let's cd into rezel is the best folder the feels really weird saying but yeah cool okay we did it and now we want to create a new branch um that way we this is the best practice because you can commit this new change to main but it's easier to make sure you didn't make any mistakes or um roll back your mistakes if you create a new new branch or new version of your code and then merge it so the way you're creating your branch is by using this command that says get checkout dash b so you can type get and then space check out and then space dash lowercase b and then space and inside of quotation marks we're gonna name our branch um regularly you don't have spaces and in branches so um i don't know you can name it whatever you want uh something i don't remember the order he said but it was like when i was working with anthony he was telling me so i'll just do that okay cool and just so you know too it'll still it'll still put the date but that's the interesting like i think that makes sense for for today too um and then we can press enter and it created a new branch for us um and some of the things somebody told me can you go to vs code i want to see if this is true oh cool and like the left bottom corner of your vs code it says the branch name so if you're oh cool i don't want branch i'm on it's right there and like you can create new branches within vs 0 2 so maybe i could show you that after like we do the terminal and then we do that because we have yeah it's like we only did 48 minutes we'll see we'll see how much time we have um but okay now in the terminal well you made a new branch now we can do get status to see which um files we changed so get space status cool so it says we only changed the index dot html i always like to check that because sometimes like you could have accidentally changed another another file and i just like uh checking yeah that's happened to me multiple times where like i've left in like things that i was using to debug like i like leave console logs console logs that say what's up and then i don't want to like merge those in to the whole phase all right cool um so then we can do get add so get space add and then space oh not done yet uh i got excited i got excited but it's kind of cool that it adds hints like maybe you wanted to say get add period uh another hint is turn this message off by running get configure advise dot add empty path spec false that's what i like that i like that it gives hints yeah i like that too because i don't remember giving hints when i first learned to go without any enter and then we want to put the file name that we're adding so index dot html if you've had multiple files that you changed you can add each one of them separately or you can do like it said get add dot which adds all the files but like i said i try to stay away from that just in case there's any mistakes cool so you did that now we want to do get commit and this is where we're like do saving it in time so you do get commit dash m oh sorry actually space dash m my bad um i'm above that this really quick it says get commit dash a what's the difference between dash m and dash a um i think that's amending or like editing your your commit message i believe someone correct me it could be wrong but that's like where you're saying so you you you you make a message or you make a commit and you want to you want to update it or change it you're like saying that's not what i meant you'll use get commit dash a i think okay or not i'm not sure but feel feel free to add credit to google it later yeah yeah all right so dash m yeah and then you do a space and inside of quotation marks is where you'll do that message on like saying what you changed or added um yeah mom says it's on what you said sounds right okay cool let's i trust remote cool and then close it with quotation marks and then enter and then last but not least we want to do um oh nope i'm wrong remote said it sounded right i say a lot of things that sound right but they're not um while while remote helps us out um oh he said don't i mean don't trust me no i trust you but yeah remote you're you're right a lot of the times so as result so i'm trusting y'all but you know i can fact check as well even though i'm gonna be like hey i heard this at some point not your thrive but i heard this so yeah fact check me please okay now you're gonna do get push um it may come up with a message but we'll see yeah uh just copy that that line right there i never remember it i always just type get push and wait for it to tell me um does yeah i like that idea oh okay remote said that dash a is for all so it's another option to doing get uh and then that dot and it just says so this one we can show this uh tell the command to automatically stage files that have been modified and deleted but new files you have not told get about or not reflected oh okay i'm wrong i think the amend one is like dash a m or something oh hey cool we did this part and let's go get hub and see if our changes are in there oh cool so they're um they're not in this brand in the main branch but if you press that drop down you'll see that you made a branch called july 12 dot it out you could click it and you can see the changes if you press that index dot html file and like you'll see both of them right but oh wood you're gonna talk oh yeah i got a question um okay so if you we do thing with um in vs code and terminal we've been able to do like local host to see what it actually looks like is there a way to see how it actually shows up is there a local local host for that yeah we can so let's let's merge this in and then i can show you one way that you can see those code changes so um if you go back to the main branch by switching that thing yeah that's a good question um and just click the code tab i don't want to be inside of this file anymore there we go yeah let's click compare and pull request so we can make a pull request to merge the changes you made in the july 12 branch to the main branch um so yeah exactly because it was it was kind of weird like when i worked there our marketing team would have to do stuff and they taught me how to approve pull request because the way it was set up is you hat you couldn't just commit somebody had to approve it yeah and i was just like i don't know and okay so that's cool there's a draft there's a not draft yeah you change reviewers you can assign it to people who got some labels yeah all good stuff yeah the i like the draft one because it's like i put those up sometimes if my works in progress and i just want people to know i'm not being lazy but i i'm still working through it um oh wrong do i remember uh do review it add him as a reviewer okay well maybe you can't maybe he'll just go ahead and review it i bet that was what's your what's your uh get hub name remote is it all so i milk with some underscores i think i think that was a bad idea for me my bad you might like it but i'm gonna go to a new tab so i keep this one open and because i wonder if you have to follow them first you have to follow them to add them oh Ramon wants to make a PR he doesn't want to approve it god yeah sorry yeah i mean you could let's do it and it's here oh wait that's a different i never did that before um uh and then is it code is under there we go there we go yeah beast maybe yeah we go we want to make PRs go ahead let's do it okay cool and now let's let's go to your PR and i mean you don't need an approver because you're the owner of this code base so you can go ahead and merge it in um you gotta have to click into it you can't just approve it yeah or because you need to see i guess they want you to see that like make sure you're looking at the code before you approve it and like look at the changes interesting yeah okay so like if we go to it you can see um if you go to files change at the top thanks i was like staring at it for a moment i'm like where where is that no i didn't really say my bad but yeah you can see like it does stay like oh this green line means you added that line um so they want to make sure you look at the stuff before you just go push things um but you know okay i was just renewing that i don't have no new one no new line at end of file oh yeah what do these mean the at at minus one plus one two uh no cool but i think they just mean you added one wine may have two lines but no clue i just kind of oh i don't know yeah one line's the same one line's the same we added a line so there's total of two lines yeah i guess so okay i have some big questions that stuff i just like kind of just accepted and ignored oh uh once i think it's from get command line stuff tohon you will change yeah get get go hold okay i'm gonna say that um you can i need to prove your own stuff but we can just merge it i want to improve my own stuff i know that would be fun okay so i go back to the conversation yeah and then merge and then commence to show where are the checks um i think sometimes people have like test that run um to make sure that they didn't break anything within the code um so if you had any tests that we're running it'll show up here and be like failed or test and joe i'm gonna add you in the future and you're just gonna get like sent random things as i'm figuring this just as a heads up okay merge pull request yeah i'm just reading it so merge pull request number one and it says who's it's from and then the file and my note of added htlnseid index
html yay that was super exciting yeah and then we can go ahead and commit that new file all right cool so you have your first repository you created a new file you added an or and you committed a new file um to there so we can we can do the same thing um in the terminal okay well also great job thank you thank you um I would other than seeing it in terminal if we have time seeing it in VS code I think would be so yeah no yeah we're gonna sorry we're gonna open we're gonna use the terminal but we're also gonna use VS code okay sweet cuz I was like uh you can't yeah you can't I'm pretty sure we did yesterday with Ramon a bit Ramon I feel like he had me create my own folder that I put code into and then um we made a file and put it in there I don't remember all those steps but we did no worries okay so one thing we need to do before we do all of what you're doing I was going to um clone this this repository that you just named oh okay basically if somebody else wanted to use your project or contribute to your project yeah they can use the GitHub UI and edit the files directly there but like you mentioned there's no like highlighting there's no linting to tell you if you made a mistake there's nothing to like help protect you so what people like to do is download it or clone it to their local repository and use VS code so what we're going to really really quick yeah um something that you said that I know what it is but I feel like any nubes like me normally wouldn't is linting linting is a tool that will tell you if you have mistakes and it is really helpful uh there's a lot of linting tool out linting tools out there seeing if I can talk I like to think of it as it's kind of like a spell check for your code yeah it is it is like it's like Grammarly yeah it's like Grammarly and spell check put together um but I just wanted to call out that's what linting is because that was a really really hard word for me to remember what I did because I'm like it's not removing lint so why is it called for me no I understand that it's a weird concept thanks for calling that out yeah for sure so click the code button and that should have instructions okay cool and then where it says um you see that httbs slash github that it has a copy button yeah let's copy that that's like the url for this repository and okay now we're going to head to the terminal and go to a folder that well do you know how to navigate to different folders in this term okay cool go to a folder that you want to save this stuff cool I gotta remember with a folder it's called it's called code folder cool okay let's see if I like remember what remain side it's called code dash folder if we want to do it if if you don't remember you can do ls and you'll see where you are kind of and what folders exist so tell me how do you do it without the um quote marks is it a dash or is it i don't remember if i know the answer to this question that's okay i'll do it the way i remember doing it yesterday oh i'm not in um yeah part if you you're not in like your documents folder yeah yeah if you talk less it'll show you what folders are around and um remotes it something about it being the percent sign cool okay and now i should be able to i'm now i want to see if it's this way nope okay okay yeah i'm in the purple cool and now you can type get clone and then paste so get space clones are and then paste that URL that you copied cool and then if you type ls you'll see okay cool you'll see the the result is the best folder and then you'll see the other um files that you made but remote when you were learning express so i'm totally just side so it's just okay i was just curious what would happen if i pasted it yeah it's just the it's just the link to that but now you can open it in vs code um so now that it's on your local computer so okay and that's how we got it too they look so open yeah perfect and you can click the result the best folder and press open the folder not just the file right yes that's correct because now if you see those files you'll have that h1 that you made and you'll have the readme that you made too um how does when i save this because i cloned it does that mean it's only saving locally or is it resubmitting to the original so it'll only save locally but we'll use get to push up your new changes to to get help okay that doesn't make sense sorry this is so much okay um first thing we're going to do is let's yeah let's add your changes let's add some new changes like you can add a h2 that says something else random and uh just for those watching if you didn't catch that this is something that i was talking about earlier uh when i was writing h2 um how do i do it i do like two seconds ago i'm gonna and y'all know how to add it in my closing h2 and that's something that i i really like me too you'll love co-pilot if if you like that yeah there we go perfect okay and then we'll press save and we know that it's not on get hub yet right like it's like those changes are not going to be there but i'm just gonna go double check you know making sure it clicks in my head yeah cool cool so it only has that um what we can do now though is um we can add it so in our terminal um let's go back there and let's cd into rezel is the best folder the feels really weird saying but yeah cool okay we did it and now we want to create a new branch um that way we this is the best practice because you can commit this new change to main but it's easier to make sure you didn't make any mistakes or um roll back your mistakes if you create a new new branch or new version of your code and then merge it so the way you're creating your branch is by using this command that says get checkout dash b so you can type get and then space check out and then space dash lowercase b and then space and inside of quotation marks we're gonna name our branch um regularly you don't have spaces and in branches so um i don't know you can name it whatever you want uh something i don't remember the order he said but it was like when i was working with anthony he was telling me so i'll just do that okay cool and just so you know too it'll still it'll still put the date but that's the interesting like i think that makes sense for for today too um and then we can press enter and it created a new branch for us um and some of the things somebody told me can you go to vs code i want to see if this is true oh cool and like the left bottom corner of your vs code it says the branch name so if you're oh cool i don't want branch i'm on it's right there and like you can create new branches within vs 0 2 so maybe i could show you that after like we do the terminal and then we do that because we have yeah it's like we only did 48 minutes we'll see we'll see how much time we have um but okay now in the terminal well you made a new branch now we can do get status to see which um files we changed so get space status cool so it says we only changed the index dot html i always like to check that because sometimes like you could have accidentally changed another another file and i just like uh checking yeah that's happened to me multiple times where like i've left in like things that i was using to debug like i like leave console logs console logs that say what's up and then i don't want to like merge those in to the whole phase all right cool um so then we can do get add so get space add and then space oh not done yet uh i got excited i got excited but it's kind of cool that it adds hints like maybe you wanted to say get add period uh another hint is turn this message off by running get configure advise dot add empty path spec false that's what i like that i like that it gives hints yeah i like that too because i don't remember giving hints when i first learned to go without any enter and then we want to put the file name that we're adding so index dot html if you've had multiple files that you changed you can add each one of them separately or you can do like it said get add dot which adds all the files but like i said i try to stay away from that just in case there's any mistakes cool so you did that now we want to do get commit and this is where we're like do saving it in time so you do get commit dash m oh sorry actually space dash m my bad um i'm above that this really quick it says get commit dash a what's the difference between dash m and dash a um i think that's amending or like editing your your commit message i believe someone correct me it could be wrong but that's like where you're saying so you you you you make a message or you make a commit and you want to you want to update it or change it you're like saying that's not what i meant you'll use get commit dash a i think okay or not i'm not sure but feel feel free to add credit to google it later yeah yeah all right so dash m yeah and then you do a space and inside of quotation marks is where you'll do that message on like saying what you changed or added um yeah mom says it's on what you said sounds right okay cool let's i trust remote cool and then close it with quotation marks and then enter and then last but not least we want to do um oh nope i'm wrong remote said it sounded right i say a lot of things that sound right but they're not um while while remote helps us out um oh he said don't i mean don't trust me no i trust you but yeah remote you're you're right a lot of the times so as result so i'm trusting y'all but you know i can fact check as well even though i'm gonna be like hey i heard this at some point not your thrive but i heard this so yeah fact check me please okay now you're gonna do get push um it may come up with a message but we'll see yeah uh just copy that that line right there i never remember it i always just type get push and wait for it to tell me um does yeah i like that idea oh okay remote said that dash a is for all so it's another option to doing get uh and then that dot and it just says so this one we can show this uh tell the command to automatically stage files that have been modified and deleted but new files you have not told get about or not reflected oh okay i'm wrong i think the amend one is like dash a m or something oh hey cool we did this part and let's go get hub and see if our changes are in there oh cool so they're um they're not in this brand in the main branch but if you press that drop down you'll see that you made a branch called july 12 dot it out you could click it and you can see the changes if you press that index dot html file and like you'll see both of them right but oh wood you're gonna talk oh yeah i got a question um okay so if you we do thing with um in vs code and terminal we've been able to do like local host to see what it actually looks like is there a way to see how it actually shows up is there a local local host for that yeah we can so let's let's merge this in and then i can show you one way that you can see those code changes so um if you go back to the main branch by switching that thing yeah that's a good question um and just click the code tab i don't want to be inside of this file anymore there we go yeah let's click compare and pull request so we can make a pull request to merge the changes you made in the july 12 branch to the main branch um so yeah exactly because it was it was kind of weird like when i worked there our marketing team would have to do stuff and they taught me how to approve pull request because the way it was set up is you hat you couldn't just commit somebody had to approve it yeah and i was just like i don't know and okay so that's cool there's a draft there's a not draft yeah you change reviewers you can assign it to people who got some labels yeah all good stuff yeah the i like the draft one because it's like i put those up sometimes if my works in progress and i just want people to know i'm not being lazy but i i'm still working through it um oh wrong do i remember uh do review it add him as a reviewer okay well maybe you can't maybe he'll just go ahead and review it i bet that was what's your what's your uh get hub name remote is it all so i milk with some underscores i think i think that was a bad idea for me my bad you might like it but i'm gonna go to a new tab so i keep this one open and because i wonder if you have to follow them first you have to follow them to add them oh Ramon wants to make a PR he doesn't want to approve it god yeah sorry yeah i mean you could let's do it and it's here oh wait that's a different i never did that before um uh and then is it code is under there we go there we go yeah beast maybe yeah we go we want to make PRs go ahead let's do it okay cool and now let's let's go to your PR and i mean you don't need an approver because you're the owner of this code base so you can go ahead and merge it in um you gotta have to click into it you can't just approve it yeah or because you need to see i guess they want you to see that like make sure you're looking at the code before you approve it and like look at the changes interesting yeah okay so like if we go to it you can see um if you go to files change at the top thanks i was like staring at it for a moment i'm like where where is that no i didn't really say my bad but yeah you can see like it does stay like oh this green line means you added that line um so they want to make sure you look at the stuff before you just go push things um but you know okay i was just renewing that i don't have no new one no new line at end of file oh yeah what do these mean the at at minus one plus one two uh no cool but i think they just mean you added one wine may have two lines but no clue i just kind of oh i don't know yeah one line's the same one line's the same we added a line so there's total of two lines yeah i guess so okay i have some big questions that stuff i just like kind of just accepted and ignored oh uh once i think it's from get command line stuff tohon you will change yeah get get go hold okay i'm gonna say that um you can i need to prove your own stuff but we can just merge it i want to improve my own stuff i know that would be fun okay so i go back to the conversation yeah and then merge and then commence to show where are the checks um i think sometimes people have like test that run um to make sure that they didn't break anything within the code um so if you had any tests that we're running it'll show up here and be like failed or test and joe i'm gonna add you in the future and you're just gonna get like sent random things as i'm figuring this just as a heads up okay merge pull request yeah i'm just reading it so merge pull request number one and it says who's it's from and then the file and my note of added htlnseid indexhtml i can leave another comment yeah you can be like good job or not good job you're myself on yay done let's go and then so we can create a merge commit which commits all from this branch will be added the base branch by a merge commit squash and merge that's just really fun to say um the one commit from this branch will be added to the base for branch and rebase and merge the one commit from this base branch will be rebase and added to the base branch yeah lots of confusing i'm not i'm not even gonna ask about those right now i'm just gonna do the commit cool and then press merge yeah okay cool i thought you're gonna forget that her hi mergine you did it yay cool and then you said you wanted to see it live and then so that is this where people delete the branch after they merge it oh that's a good question um hold on let me remind myself where where you do that because i will just have you um not knowing how give me a sec yeah because it says it can be safely deleted oh yeah yeah do it delete branch i didn't even see that okay it says pull over quest successfully merged and close to your all set that July 12 2022 branch can successfully be deleted okay bye branch bye branch you're not tree anymore you just got one main one main area no more trees or roots for you so i know you want to like preview how much time do you oh like 20 more minutes um yeah you wanted to preview the code kind of like you do in local host there's a whole code spaces i don't think you have access to it but like just for people who are watching you can use code spaces to code in your browser and you can like look at your code locally there but another option is just gonna go go ahead yeah go go that and then i'll show you different way PR is oh and we can approve the months oh this is just fine okay um but to go back to where you were you want to meet to go to a different one other than code spaces um yeah but i don't know what do you want to do first remote just made a PR do you want to yeah let's do that and merge it and then we and then we do the other one yeah so we got one pull request which i'm not gonna lie it doesn't like earlier it made that one pull request like really well known and this one i'm just like i can't even see it unless i looked for the one i think because you made it and it's it's telling you hey you committed open a pull request but um i don't see your moments refresh like it has the one that's weird oh he said whoops one second jk and he said has closed yeah okay let's go back yay oh this is good he might make us do a comment to help it to make it be approved okay no description provided but you that's his comment yeah interesting okay we can look at the files change to see his code oh yeah i think it is one state the same line choose to stay the same maybe so we added a third line i don't know i'm just guessing yeah it does seem like now we can make a comment and tell him to and approve i mean to improve something or we can suggest something can i fix it from here instead of asking him to fix it uh you can suggest the change but he's okay fix it or he still has to accept this the change so let's do it wait i would you can you can do it where we were in the files changed and hover over wherever you see the mistake and you see those little plus signs if you click them um um how do we do a suggestion again i kind of forget um what's that that closer minus sign um i wish i could circle it's uh this one yeah oh there it is add a suggestion click that and then there you go you can add that suggestion for him typo i bow cool uh corrected typo or or oh from green best what you had it as so meta because you like perfect a typo of the word typo yeah all right start a review yeah you can do that and then i guess you can do a finish your review if that's all if that's all you wanted to change yeah and that's kind of cool all right finish your review and then without explicit review oh no okay so why would i comment it submit general feedback without explicit approval so that would just mean that i'm giving feedback from like i'm getting feedback from my teacher and they're just gonna give me feedback but it doesn't go into the main branch yeah i mean sometimes people just want to make a comment maybe they have questions or um they just have like a small nitpick or something like that um or they're just sharing you on but it's not necessarily that they need you to make any changes it's just like a freeform comment like oh this is cool or what why did you add this something like that okay cool and then approve we know what that one is and submit yeah okay cool and then i guess we wait for Ramon to fix it this was fun i like that i like that Ramon that it just added in this part oh oh and it already came through oh my start confused by this okay so it made it yeah and what is i don't understand this why it's not what what part the no new line at end of file and why it's in between line two and line three um i think it's just saying that in that the the old way you had it when you first added that h2 you didn't press enter and add a new white space because sometimes people do that and it's like good to notice those changes got it so i'm gonna approve thank you for vaccine for scene for scene okay for vaccine it cool admit you merge let's do this oh and Ramon said i think some coding editors are different about adding that end line thing oh did not okay all right we have approved the merges and now when we get how do we oh that's cool it also says oh a pro okay whatever um maybe you have two accounts i probably have like two or three accounts i need a i don't have access to all of them either but yeah uh how do i see it's yeah let's do it um can you can you make it your your browser bigger because i don't know this this view i forgot oh Ramon made a good point that this this was essentially us doing open source that's kind of like how open source is like people open a pull request and then you approve it um all right so gihub has this thing called gihub pages that you can see um you can see your code live on if it's a front end if it only has front end like if it has back it doesn't support that but if it's like HTML CSS or react or something like that or or jekyll you can see it there so i think if you go to settings i hope i'm right uh it's actually um not there not that settings there's two different settings the repository just getting yeah but i see where i see where you're going and if you go to on the left hand side there's the word pages yeah we're putting it on gihub pages and okay right here it says choose the source um so you can choose if you want it on which branch and we can put in the main branch yeah and if you press save so it's not yet so it's going to be published that teach me gen dot gihub bio slash result is the best when we go there we might get a 404 page but click it and let's see i don't like that it like it didn't open a new tab but it always like press reads me i'm like you can just open a new tab so i don't have to go back to this i don't wait that too sometimes i like uh right click it in the middle yeah yeah but okay so i will cite no pound yeah so we can see so it's probably in progress and if we go to scroll up a little bit um there's the word actions at the top we'll see it being built out so if we click into that that action this is a little bit more advanced but basically it's using automation to take your code and deploy onto like this live life site so it shows you when it's done it's done now and we can go back to that tab and press refresh or yeah or yeah you know like a different letter yay there it is so it's not necessarily local whole but you can use it to to preview your code and you can share that link with other people and make like little little websites for free so i'm just thinking back on like all the other ones okay i feel like i'm good i felt was there anything else you wanted to teach me i feel like i'm i'm knowledgeed out at the moment um in in the fact that like ah i didn't mean to be that big there we go i was like hello um i what that that is something that i think is a um he mentioned uh remote mentioned portfolios how do you figure out what projects to create like so many people have been like hey to get noticed you got to go make some products and get like do uh commits to open source and i'm just like i don't even know the words you just said which i mean now i do and thank you result this is super super helpful i'm like okay so i'm at least seeing how these are all put together yet i'm like i don't know because i don't know much about it yet but i don't understand what they all do yeah these are where did you start great questions great questions um and i agree or moan it's a hard question um people ask me like um people ask me that a lot like what projects do you want do you make uh i'm not really like a project person much to be honest i'm mostly i some people like to code for fun yeah they're just sitting there i think thinking of cool things that they wish existed and they're like i'm gonna spend my weekend doing this i'm not that kind of person i'm spending my weekend outside but like when i heard about projects it's been like from my bootcamp like they showed me how to make something or they tell me about making something i uploaded to get hooked or they have like a final demo day and they're like what is the final project you want to have i sat there and thought of something i made like a um a natural here augmented reality thing so like it will it like decided on what like people took a little quiz it decided on what here type they had and then there was like a little augmented reality pop of girl that popped up and i was like this is you um but yeah you can that seems very advanced i could be excited for just having text on this screen um i followed multiple tutorials and just bunch them all together nice nice that's like uh the next couple days i'm gonna be doing um co-working with Jen as well i redo a lot of these projects of doing them live and like hoping that i can figure it out but i will say like this is this is starting to make sense more sense i'm very excited it's good yay i'm so happy and yeah like you can you can if you have project ideas go ahead or what some people do is like they follow with tutorial and then they build up on it like they'll follow like a tutorial on building an instagram clone and then they're like what if i added in this and they'll just google their way to doing it but i'm glad that it's starting to make sense i hope it wasn't too overwhelming because yeah i know that you wanted to come back on and talk about it more too because like also i do want to say that uh yere is coming on again tomorrow night and Ramon is coming on again on monday and aj said he'd be back and then we're gonna have Ramon and aj together oh that's so fun like merging a um front end and back end to make a full api is that what we were talking about Ramon i think so we'll see um so it is definitely growing and i'm learning and for y'all listening and watching please let me know yes it was a full stack up full stack up uh please let me know what questions you have what you want to learn if you want to come on learn life with me that is dope too we have lots of really cool teachers or if you think there's somebody i should reach out to to have on the show because this is a thing that two weeks ago did not exist or did i know that it would exist so just get out there yeah and result i know we have your twitter on uh tagged anywhere else you would suggest people reach out to you at um no twitter's good i really like twitter yeah it's easy now that i'm learning it but thank you so much everyone for joining see you again tomorrow bye
html i can leave another comment yeah you can be like good job or not good job you're myself on yay done let's go and then so we can create a merge commit which commits all from this branch will be added the base branch by a merge commit squash and merge that's just really fun to say um the one commit from this branch will be added to the base for branch and rebase and merge the one commit from this base branch will be rebase and added to the base branch yeah lots of confusing i'm not i'm not even gonna ask about those right now i'm just gonna do the commit cool and then press merge yeah okay cool i thought you're gonna forget that her hi mergine you did it yay cool and then you said you wanted to see it live and then so that is this where people delete the branch after they merge it oh that's a good question um hold on let me remind myself where where you do that because i will just have you um not knowing how give me a sec yeah because it says it can be safely deleted oh yeah yeah do it delete branch i didn't even see that okay it says pull over quest successfully merged and close to your all set that July 12 2022 branch can successfully be deleted okay bye branch bye branch you're not tree anymore you just got one main one main area no more trees or roots for you so i know you want to like preview how much time do you oh like 20 more minutes um yeah you wanted to preview the code kind of like you do in local host there's a whole code spaces i don't think you have access to it but like just for people who are watching you can use code spaces to code in your browser and you can like look at your code locally there but another option is just gonna go go ahead yeah go go that and then i'll show you different way PR is oh and we can approve the months oh this is just fine okay um but to go back to where you were you want to meet to go to a different one other than code spaces um yeah but i don't know what do you want to do first remote just made a PR do you want to yeah let's do that and merge it and then we and then we do the other one yeah so we got one pull request which i'm not gonna lie it doesn't like earlier it made that one pull request like really well known and this one i'm just like i can't even see it unless i looked for the one i think because you made it and it's it's telling you hey you committed open a pull request but um i don't see your moments refresh like it has the one that's weird oh he said whoops one second jk and he said has closed yeah okay let's go back yay oh this is good he might make us do a comment to help it to make it be approved okay no description provided but you that's his comment yeah interesting okay we can look at the files change to see his code oh yeah i think it is one state the same line choose to stay the same maybe so we added a third line i don't know i'm just guessing yeah it does seem like now we can make a comment and tell him to and approve i mean to improve something or we can suggest something can i fix it from here instead of asking him to fix it uh you can suggest the change but he's okay fix it or he still has to accept this the change so let's do it wait i would you can you can do it where we were in the files changed and hover over wherever you see the mistake and you see those little plus signs if you click them um um how do we do a suggestion again i kind of forget um what's that that closer minus sign um i wish i could circle it's uh this one yeah oh there it is add a suggestion click that and then there you go you can add that suggestion for him typo i bow cool uh corrected typo or or oh from green best what you had it as so meta because you like perfect a typo of the word typo yeah all right start a review yeah you can do that and then i guess you can do a finish your review if that's all if that's all you wanted to change yeah and that's kind of cool all right finish your review and then without explicit review oh no okay so why would i comment it submit general feedback without explicit approval so that would just mean that i'm giving feedback from like i'm getting feedback from my teacher and they're just gonna give me feedback but it doesn't go into the main branch yeah i mean sometimes people just want to make a comment maybe they have questions or um they just have like a small nitpick or something like that um or they're just sharing you on but it's not necessarily that they need you to make any changes it's just like a freeform comment like oh this is cool or what why did you add this something like that okay cool and then approve we know what that one is and submit yeah okay cool and then i guess we wait for Ramon to fix it this was fun i like that i like that Ramon that it just added in this part oh oh and it already came through oh my start confused by this okay so it made it yeah and what is i don't understand this why it's not what what part the no new line at end of file and why it's in between line two and line three um i think it's just saying that in that the the old way you had it when you first added that h2 you didn't press enter and add a new white space because sometimes people do that and it's like good to notice those changes got it so i'm gonna approve thank you for vaccine for scene for scene okay for vaccine it cool admit you merge let's do this oh and Ramon said i think some coding editors are different about adding that end line thing oh did not okay all right we have approved the merges and now when we get how do we oh that's cool it also says oh a pro okay whatever um maybe you have two accounts i probably have like two or three accounts i need a i don't have access to all of them either but yeah uh how do i see it's yeah let's do it um can you can you make it your your browser bigger because i don't know this this view i forgot oh Ramon made a good point that this this was essentially us doing open source that's kind of like how open source is like people open a pull request and then you approve it um all right so gihub has this thing called gihub pages that you can see um you can see your code live on if it's a front end if it only has front end like if it has back it doesn't support that but if it's like HTML CSS or react or something like that or or jekyll you can see it there so i think if you go to settings i hope i'm right uh it's actually um not there not that settings there's two different settings the repository just getting yeah but i see where i see where you're going and if you go to on the left hand side there's the word pages yeah we're putting it on gihub pages and okay right here it says choose the source um so you can choose if you want it on which branch and we can put in the main branch yeah and if you press save so it's not yet so it's going to be published that teach me gen dot gihub bio slash result is the best when we go there we might get a 404 page but click it and let's see i don't like that it like it didn't open a new tab but it always like press reads me i'm like you can just open a new tab so i don't have to go back to this i don't wait that too sometimes i like uh right click it in the middle yeah yeah but okay so i will cite no pound yeah so we can see so it's probably in progress and if we go to scroll up a little bit um there's the word actions at the top we'll see it being built out so if we click into that that action this is a little bit more advanced but basically it's using automation to take your code and deploy onto like this live life site so it shows you when it's done it's done now and we can go back to that tab and press refresh or yeah or yeah you know like a different letter yay there it is so it's not necessarily local whole but you can use it to to preview your code and you can share that link with other people and make like little little websites for free so i'm just thinking back on like all the other ones okay i feel like i'm good i felt was there anything else you wanted to teach me i feel like i'm i'm knowledgeed out at the moment um in in the fact that like ah i didn't mean to be that big there we go i was like hello um i what that that is something that i think is a um he mentioned uh remote mentioned portfolios how do you figure out what projects to create like so many people have been like hey to get noticed you got to go make some products and get like do uh commits to open source and i'm just like i don't even know the words you just said which i mean now i do and thank you result this is super super helpful i'm like okay so i'm at least seeing how these are all put together yet i'm like i don't know because i don't know much about it yet but i don't understand what they all do yeah these are where did you start great questions great questions um and i agree or moan it's a hard question um people ask me like um people ask me that a lot like what projects do you want do you make uh i'm not really like a project person much to be honest i'm mostly i some people like to code for fun yeah they're just sitting there i think thinking of cool things that they wish existed and they're like i'm gonna spend my weekend doing this i'm not that kind of person i'm spending my weekend outside but like when i heard about projects it's been like from my bootcamp like they showed me how to make something or they tell me about making something i uploaded to get hooked or they have like a final demo day and they're like what is the final project you want to have i sat there and thought of something i made like a um a natural here augmented reality thing so like it will it like decided on what like people took a little quiz it decided on what here type they had and then there was like a little augmented reality pop of girl that popped up and i was like this is you um but yeah you can that seems very advanced i could be excited for just having text on this screen um i followed multiple tutorials and just bunch them all together nice nice that's like uh the next couple days i'm gonna be doing um co-working with Jen as well i redo a lot of these projects of doing them live and like hoping that i can figure it out but i will say like this is this is starting to make sense more sense i'm very excited it's good yay i'm so happy and yeah like you can you can if you have project ideas go ahead or what some people do is like they follow with tutorial and then they build up on it like they'll follow like a tutorial on building an instagram clone and then they're like what if i added in this and they'll just google their way to doing it but i'm glad that it's starting to make sense i hope it wasn't too overwhelming because yeah i know that you wanted to come back on and talk about it more too because like also i do want to say that uh yere is coming on again tomorrow night and Ramon is coming on again on monday and aj said he'd be back and then we're gonna have Ramon and aj together oh that's so fun like merging a um front end and back end to make a full api is that what we were talking about Ramon i think so we'll see um so it is definitely growing and i'm learning and for y'all listening and watching please let me know yes it was a full stack up full stack up uh please let me know what questions you have what you want to learn if you want to come on learn life with me that is dope too we have lots of really cool teachers or if you think there's somebody i should reach out to to have on the show because this is a thing that two weeks ago did not exist or did i know that it would exist so just get out there yeah and result i know we have your twitter on uh tagged anywhere else you would suggest people reach out to you at um no twitter's good i really like twitter yeah it's easy now that i'm learning it but thank you so much everyone for joining see you again tomorrow bye