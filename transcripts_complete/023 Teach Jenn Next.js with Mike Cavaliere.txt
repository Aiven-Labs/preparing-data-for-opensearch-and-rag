Hello, hello beautiful human. My twitches are doing weird things and I don't know what is happening Oh, just kidding guys, we're not going to go live yet because my twitch is not working because I have to do, I got to affiliate it, which is very, very exciting, but now there's two after authentication
Oh, just kidding guys, we're not going to go live yet because my twitch is not working because I have to do, I got to affiliate it, which is very, very exciting, but now there's two after authentication I don't know if I can do it while we're live streaming, hopefully, I don't know, it would mess it up. Yes, for anybody that has been following the long, I just got to affiliate yesterday and set it up today, not knowing that it would be doing this. Give me just a second
I don't know if I can do it while we're live streaming, hopefully, I don't know, it would mess it up. Yes, for anybody that has been following the long, I just got to affiliate yesterday and set it up today, not knowing that it would be doing this. Give me just a second That's always a fun way to start a live stream. Oh, hey, just kidding, I can't start. Authorize. Good life. Okay, cool. Well, thank you, Streamyard, for at least not making me end the stream and try to figure out all of that out. I do really appreciate it
That's always a fun way to start a live stream. Oh, hey, just kidding, I can't start. Authorize. Good life. Okay, cool. Well, thank you, Streamyard, for at least not making me end the stream and try to figure out all of that out. I do really appreciate it But now that we are actually on Twitch because it's updated to affiliate, welcome, welcome, beautiful humans. Thank you for joining today on Teach Gen Tech. We have Mike here today and please introduce yourself, Mike, and the stuff we're going to be talking about today. Hey, everybody
But now that we are actually on Twitch because it's updated to affiliate, welcome, welcome, beautiful humans. Thank you for joining today on Teach Gen Tech. We have Mike here today and please introduce yourself, Mike, and the stuff we're going to be talking about today. Hey, everybody Hey, everybody. Good to meet you all, Gen's audience, Mike Cavaliere. I am located in Brooklyn, which is actually kind of sunny today. Who am I? I've been an engineer, a full stack engineer for quite some time, a couple of decades
Hey, everybody. Good to meet you all, Gen's audience, Mike Cavaliere. I am located in Brooklyn, which is actually kind of sunny today. Who am I? I've been an engineer, a full stack engineer for quite some time, a couple of decades And throughout my career, I've done the engineering freelancer role. I've worked for some startups. I've done consulting. I've been a CTO for a little bit. I've been a manager, tech director of different sorts. And so like, you know, I work throughout my career. I've worked a lot with JavaScript
And throughout my career, I've done the engineering freelancer role. I've worked for some startups. I've done consulting. I've been a CTO for a little bit. I've been a manager, tech director of different sorts. And so like, you know, I work throughout my career. I've worked a lot with JavaScript And you know, the reason I offered up to Teach Gen some next to yes stuff, open-mouthed boiling it because you didn't tell the top kit. Oh, but it's up there. So nobody speaks both. So I told you to introduce anyway. Oh, awesome. I have the power
And you know, the reason I offered up to Teach Gen some next to yes stuff, open-mouthed boiling it because you didn't tell the top kit. Oh, but it's up there. So nobody speaks both. So I told you to introduce anyway. Oh, awesome. I have the power I have the power. So, you know, like I've worked with a lot of JavaScript frameworks over the years. And next JS is one that I is near and dear to my heart right now because it solves a lot of problems that previously you had to do manual work for. And it just doesn't automatically for you
I have the power. So, you know, like I've worked with a lot of JavaScript frameworks over the years. And next JS is one that I is near and dear to my heart right now because it solves a lot of problems that previously you had to do manual work for. And it just doesn't automatically for you And throughout my career, I've seen that happen a lot of times. You know, back before PHP was a thing, you know, like Perl was a language that I wrote stuff in. And then PHP came along and it did things automatically that you had to do manually in Perl
And throughout my career, I've seen that happen a lot of times. You know, back before PHP was a thing, you know, like Perl was a language that I wrote stuff in. And then PHP came along and it did things automatically that you had to do manually in Perl And then Ruby and Rails came along and it did things automatically that I had to do in PHP manually. And so next JS is one version of that for JavaScript. And you know, there's many JavaScript frameworks out now. But next JS is one of the more popular ones
And then Ruby and Rails came along and it did things automatically that I had to do in PHP manually. And so next JS is one version of that for JavaScript. And you know, there's many JavaScript frameworks out now. But next JS is one of the more popular ones And so I think it's really good for a web engineer to know because you can do a lot of great stuff with it pretty fast and without, you know, banging your head into the wall. Very cool. And I think that's also a good place too because that is for everybody that is joining
And so I think it's really good for a web engineer to know because you can do a lot of great stuff with it pretty fast and without, you know, banging your head into the wall. Very cool. And I think that's also a good place too because that is for everybody that is joining Oh, see Anthony's calling you out. You even have a book about next JS, right? Anthony, I do. I do have a book out. It's called Cut Into the Jam Stack. It does, it's next JS is at the center of it
Oh, see Anthony's calling you out. You even have a book about next JS, right? Anthony, I do. I do have a book out. It's called Cut Into the Jam Stack. It does, it's next JS is at the center of it But it kind of shows you how to build, you're building a full stack software as a service application with next JS. And like a bunch of other very popular libraries, Shalker UI is one of them. Prisma is a database interaction library. And you know, deploy it to a server and you utilize the app
But it kind of shows you how to build, you're building a full stack software as a service application with next JS. And like a bunch of other very popular libraries, Shalker UI is one of them. Prisma is a database interaction library. And you know, deploy it to a server and you utilize the app So yeah, but next JS is I write about it in the book and in blog posts. I talk about it a lot because I think it's really cool. And thank you for that. I think that is also, and Hi Ben, I haven't had a chance to say hi
So yeah, but next JS is I write about it in the book and in blog posts. I talk about it a lot because I think it's really cool. And thank you for that. I think that is also, and Hi Ben, I haven't had a chance to say hi So hi Ben, it's definitely something that I love that this is like where we ended up going with when we connected and went with a show for Teach Shandhaek
So hi Ben, it's definitely something that I love that this is like where we ended up going with when we connected and went with a show for Teach Shandhaek I also really want to call out Mike because I thought this was really cool that he was also like open to talking about like the other show I have, a shit you don't want to talk about
I also really want to call out Mike because I thought this was really cool that he was also like open to talking about like the other show I have, a shit you don't want to talk about And I love that because I think tech and mental health do really go hand in hand, which we can talk about that on the other show. I just wanted to call out that Mike, I just thought that was so cool. Made me even more excited to have you on the show
And I love that because I think tech and mental health do really go hand in hand, which we can talk about that on the other show. I just wanted to call out that Mike, I just thought that was so cool. Made me even more excited to have you on the show Little did I know how you and Anthony know each other. Like we connected over Twitter space. Y'all Twitter is amazing. Just I feel so weird because I haven't used it more than like a couple of months, but I'm like it's just so cool
Little did I know how you and Anthony know each other. Like we connected over Twitter space. Y'all Twitter is amazing. Just I feel so weird because I haven't used it more than like a couple of months, but I'm like it's just so cool So definitely check us out, make sure to follow Mike and where do you want to get started today, Mike? So we're going to get started by creating next to us at. Actually you might have to talk with her. So do we both share our screens at the same time? I don't think we can
So definitely check us out, make sure to follow Mike and where do you want to get started today, Mike? So we're going to get started by creating next to us at. Actually you might have to talk with her. So do we both share our screens at the same time? I don't think we can I can share my screen or you can share your screen, but we can like do stuff on your screen and then switch to my screen and go back and forth. Let's share your screen and I'll see how much I could talk you through. And we need to switch switch. And I'm going to do it along with you. Sweet sweet
I can share my screen or you can share your screen, but we can like do stuff on your screen and then switch to my screen and go back and forth. Let's share your screen and I'll see how much I could talk you through. And we need to switch switch. And I'm going to do it along with you. Sweet sweet Sweet sweet. All right, let me get to that point. Yay. All right. And I know that I need to get into the right folder because as I am from you keep telling me to go through and do I have yet to actually just have it default to this. So always do this to do this. Yes
Sweet sweet. All right, let me get to that point. Yay. All right. And I know that I need to get into the right folder because as I am from you keep telling me to go through and do I have yet to actually just have it default to this. So always do this to do this. Yes Yes. So there's to do's in your brain. Oh, yes. And I that is that is that is 100%. That's all I got is yes. This makes me think seeing this too. Like there's we could probably do a whole stream on like just shortcuts to make your life easier when developing. I feel like we should
Yes. So there's to do's in your brain. Oh, yes. And I that is that is that is 100%. That's all I got is yes. This makes me think seeing this too. Like there's we could probably do a whole stream on like just shortcuts to make your life easier when developing. I feel like we should That like we can just have multiple people on that. I feel like it could be like a two hour stream of just like shortcut hacks. Yeah, or a series because two hours of it. That's true. Like, you know, we have one person on for a half an hour and then another half an hour and then you meet again
That like we can just have multiple people on that. I feel like it could be like a two hour stream of just like shortcut hacks. Yeah, or a series because two hours of it. That's true. Like, you know, we have one person on for a half an hour and then another half an hour and then you meet again And you're going to accumulate just so many time savers. It's just feels so much more productive. I do feel like you just kind of volunteered yourself though. Oh, I forgot to do it. I got to do it. I dig it. I dig it
And you're going to accumulate just so many time savers. It's just feels so much more productive. I do feel like you just kind of volunteered yourself though. Oh, I forgot to do it. I got to do it. I dig it. I dig it I dig it. I dig it. And Anthony, can I fall in tell you because he now have to go on the show and hello, Noel. So cool. All right. So I'm in the proper folder. Finally. Cool. Now let's we're going to generate an app and the way you do that. Actually, let me ask you
I dig it. I dig it. And Anthony, can I fall in tell you because he now have to go on the show and hello, Noel. So cool. All right. So I'm in the proper folder. Finally. Cool. Now let's we're going to generate an app and the way you do that. Actually, let me ask you Have you actually you may not need to do this. Do you have MPM or node installed on your system? I think you must already. Yes, yes, definitely. That is the first thing Anthony had me do before his episode and he was episode number two. Oh, I have node and yarn
Have you actually you may not need to do this. Do you have MPM or node installed on your system? I think you must already. Yes, yes, definitely. That is the first thing Anthony had me do before his episode and he was episode number two. Oh, I have node and yarn Even though I still have a hard time comprehending what yarn is. Okay. It's it's NPM and yarn are very similar. They're package package managers for JavaScript
Even though I still have a hard time comprehending what yarn is. Okay. It's it's NPM and yarn are very similar. They're package package managers for JavaScript And what that means is when you're building an app, right, you want to use open source code to do things so that you don't have to invent the wheel. It's time. Right. Right. In this case, next JS is an open source JavaScript library that we want to use to build a web app
And what that means is when you're building an app, right, you want to use open source code to do things so that you don't have to invent the wheel. It's time. Right. Right. In this case, next JS is an open source JavaScript library that we want to use to build a web app And under the hood, it's going to do all these other things for us. It's a it's a JavaScript package that we install into our project that's going to do a lot of things
And under the hood, it's going to do all these other things for us. It's a it's a JavaScript package that we install into our project that's going to do a lot of things So if you've ever run NPM install or yarn install or yarn add what those what when you say yarn add some library, it's going to find some library in this package place in the internet. And it's going to pull it into your project
So if you've ever run NPM install or yarn install or yarn add what those what when you say yarn add some library, it's going to find some library in this package place in the internet. And it's going to pull it into your project So it's going to copy all the source code so you can use it in your project. And it's also going to make a note of it in this file that you've got. So that anytime you install this package on another machine or you reinstall it, it's going to know to pull in those packages automatically. So
So it's going to copy all the source code so you can use it in your project. And it's also going to make a note of it in this file that you've got. So that anytime you install this package on another machine or you reinstall it, it's going to know to pull in those packages automatically. So So. Oh, okay. Managing the packages. That makes sense. And do you two things really quick? What up Ian and I do want to also put this on there. It's the known Maldives folder that Anthony said to never look in. I do
So. Oh, okay. Managing the packages. That makes sense. And do you two things really quick? What up Ian and I do want to also put this on there. It's the known Maldives folder that Anthony said to never look in. I do I do. So is it each time before you start a project that you have to reinstall it or if I already have next JS on my machine, do I need to reinstall it? And if not, how do I double check that I have it? So you want to install it every time into the project. Okay
I do. So is it each time before you start a project that you have to reinstall it or if I already have next JS on my machine, do I need to reinstall it? And if not, how do I double check that I have it? So you want to install it every time into the project. Okay Okay. Well, actually, let's walk through the process because this will be a good example of me explaining it to you. So let's let's start. We're going to start by generating an app using what's called create next app. It's a project generator by the next JS people
Okay. Well, actually, let's walk through the process because this will be a good example of me explaining it to you. So let's let's start. We're going to start by generating an app using what's called create next app. It's a project generator by the next JS people And the way you do that is it's quite easy. In your terminal, you type let's use, what are you more comfortable with? NPM or Yarn? NPM is what I think I've used the most. Great. So let's see what that's what it is. There's a command called Npx, which comes with NPM
And the way you do that is it's quite easy. In your terminal, you type let's use, what are you more comfortable with? NPM or Yarn? NPM is what I think I've used the most. Great. So let's see what that's what it is. There's a command called Npx, which comes with NPM And that just it's like no package execute or something like that. Npx spaced. And let's see how it runs. Create dash next. Dash app. Space. And let's see, what can we call it? Maybe we call it teach gen next JS. And we're excited. Yes, proceed, right? Now, yeah, it hit yes
And that just it's like no package execute or something like that. Npx spaced. And let's see how it runs. Create dash next. Dash app. Space. And let's see, what can we call it? Maybe we call it teach gen next JS. And we're excited. Yes, proceed, right? Now, yeah, it hit yes And it's going to install the create next app package on your system. And then it's going to run it. Oh, okay. So it doesn't like the capital letters, which the convention for a lot of note packages is lowercase hyphenated. Okay. Well, we can just do next JS
And it's going to install the create next app package on your system. And then it's going to run it. Oh, okay. So it doesn't like the capital letters, which the convention for a lot of note packages is lowercase hyphenated. Okay. Well, we can just do next JS And you know, I at least was trying to do that. But. Well, let me do this. Yeah, we need to be initials of teach and peck next JS. All right. So. Yay. Oh, so I think it's interesting. I don't know if I realized it uses Yarn by default. So it looks like it used Yarn to install the packages
And you know, I at least was trying to do that. But. Well, let me do this. Yeah, we need to be initials of teach and peck next JS. All right. So. Yay. Oh, so I think it's interesting. I don't know if I realized it uses Yarn by default. So it looks like it used Yarn to install the packages And you see it's it's just listing all the packages that it's installing. And this is related to what Anthony was talking about. All these things that are listed in this like tree view here. You know, slash and string throw type
And you see it's it's just listing all the packages that it's installing. And this is related to what Anthony was talking about. All these things that are listed in this like tree view here. You know, slash and string throw type These are all in the node modules folder that you don't want to look in. But that's where all these useful single purpose node packages are, the JavaScript packages that do all kinds of different things that the library that you're using next JS depends on. Okay
These are all in the node modules folder that you don't want to look in. But that's where all these useful single purpose node packages are, the JavaScript packages that do all kinds of different things that the library that you're using next JS depends on. Okay Okay. And you'll see this in open source projects. You know, the bigger your project is, you don't want you don't want to write code that does something. Somebody else has done and better. You want to just use that code
Okay. And you'll see this in open source projects. You know, the bigger your project is, you don't want you don't want to write code that does something. Somebody else has done and better. You want to just use that code And these are all little things that people have done really well that just get pulled in. So if you look at the contents of your folder, well, they should be a new folder called tjtnext.js. I'm going to cheat and just pull this up so that way I can look at it next to it. Not cheating
And these are all little things that people have done really well that just get pulled in. So if you look at the contents of your folder, well, they should be a new folder called tjtnext.js. I'm going to cheat and just pull this up so that way I can look at it next to it. Not cheating Not cheating. It's doing it your way. And it is. So you see there's the node modules don't look there. And it's going to generate a couple of things. And this is the directory structure of a next JS application. But you'll see this with a lot of JavaScript applications
Not cheating. It's doing it your way. And it is. So you see there's the node modules don't look there. And it's going to generate a couple of things. And this is the directory structure of a next JS application. But you'll see this with a lot of JavaScript applications A couple of things you'll always see package.json. If you open that up, that file does a couple of things. It tells you all about your project. So if you have a license for the project that'll list the license, your name, the name of the author and such
A couple of things you'll always see package.json. If you open that up, that file does a couple of things. It tells you all about your project. So if you have a license for the project that'll list the license, your name, the name of the author and such But I honestly didn't know I had brackets on here. I think this is a conversation that I've had multiple times. Because when it just opens something, I'm like, oh, I have brackets. Let me. You can probably just drag it on to the s code. Yeah. Eventually I'll make it a default
But I honestly didn't know I had brackets on here. I think this is a conversation that I've had multiple times. Because when it just opens something, I'm like, oh, I have brackets. Let me. You can probably just drag it on to the s code. Yeah. Eventually I'll make it a default See, we're just going to have like this like shortcut hacker jam thing. To just like shortcuts for everything. It's going to be great. So this is your package.json. This is a file to remember because it's a it's like a manifest for your app. The name of the project is important
See, we're just going to have like this like shortcut hacker jam thing. To just like shortcuts for everything. It's going to be great. So this is your package.json. This is a file to remember because it's a it's like a manifest for your app. The name of the project is important But like most notable right now is dependencies and dev dependencies. And dependencies are what this project depends on. So your app is going to depend on next. Because you know, online 12 because it's it's a next.js application. And it needs the source code from the next.js project to do anything
But like most notable right now is dependencies and dev dependencies. And dependencies are what this project depends on. So your app is going to depend on next. Because you know, online 12 because it's it's a next.js application. And it needs the source code from the next.js project to do anything Okay. It also depends on react because react is an important. It's necessary for next.js to run. It's a dependency of next.js. And you know, so these are just other libraries that come bundled
Okay. It also depends on react because react is an important. It's necessary for next.js to run. It's a dependency of next.js. And you know, so these are just other libraries that come bundled When you generate an xjs app, the important thing to know is that when you look at this file, these are going to be the things that your file your project directly depends on. That need to be included here
When you generate an xjs app, the important thing to know is that when you look at this file, these are going to be the things that your file your project directly depends on. That need to be included here If you were to save this code repository and get hub and try and someone else would pull it from get hub and install it on their machine, they just need to run yarn install. And it'll see this package.json file and it'll install all the things that it needs. Next, react, react, DOM. Yes, lint
If you were to save this code repository and get hub and try and someone else would pull it from get hub and install it on their machine, they just need to run yarn install. And it'll see this package.json file and it'll install all the things that it needs. Next, react, react, DOM. Yes, lint Yes, lint. Yes, lint can fit next. All these things that you see listed here. And then those in turn will install their own dependencies. Does that make sense so far? Does. I'm also seeing if I haven't fixed this yet. And what up, homie. Anthony wrote a lot of stuff
Yes, lint. Yes, lint can fit next. All these things that you see listed here. And then those in turn will install their own dependencies. Does that make sense so far? Does. I'm also seeing if I haven't fixed this yet. And what up, homie. Anthony wrote a lot of stuff So I'm like trying to figure out. I will say like this one is probably a big thing of. I appreciate that you explained it, especially with what Anthony is saying here. That we skipped over it
So I'm like trying to figure out. I will say like this one is probably a big thing of. I appreciate that you explained it, especially with what Anthony is saying here. That we skipped over it I think the part that I am still a little lost on is when we when I was doing stuff with square, we it was a web payments SDK. I believe with next day, I asked with a react wrapper. Say no, that loud other people seem to know what that means. I don't quite understand why
I think the part that I am still a little lost on is when we when I was doing stuff with square, we it was a web payments SDK. I believe with next day, I asked with a react wrapper. Say no, that loud other people seem to know what that means. I don't quite understand why Why would it have a react wrapper if next JS needs react? Next day, I'm not sure the content of that episode, but next JS is a react wrapper in a manner of speaking. Okay. You know, react is a UI library or a library for user interfaces. Next JS has react within it
Why would it have a react wrapper if next JS needs react? Next day, I'm not sure the content of that episode, but next JS is a react wrapper in a manner of speaking. Okay. You know, react is a UI library or a library for user interfaces. Next JS has react within it And it uses a react for the user interfaces. And it adds much more around it. So in a manner of speaking, it does wrap react. So might have been the other way around or they might have been saying something different that I don't know about. Okay
And it uses a react for the user interfaces. And it adds much more around it. So in a manner of speaking, it does wrap react. So might have been the other way around or they might have been saying something different that I don't know about. Okay Okay. Anthony said that that was a square SDK installed into a next JS project. Got it. Okay. And he also provided the links to look at it later. That is in the comments if anybody wants to go check it out. I am going to see if I can finally get code.to finally open this. Oh, I did. Okay
Okay. Anthony said that that was a square SDK installed into a next JS project. Got it. Okay. And he also provided the links to look at it later. That is in the comments if anybody wants to go check it out. I am going to see if I can finally get code.to finally open this. Oh, I did. Okay Oh, I did. Okay. Again, something that I need to get fixed. Now, really quick, because this is probably one of the parts that I struggle with
Oh, I did. Okay. Again, something that I need to get fixed. Now, really quick, because this is probably one of the parts that I struggle with What is, can you create a new repository from here or do you need to create it on GitHub first to upload it to? You do not need to create it on GitHub first. And in addition, when you ran create NextApp, it creates one for you
What is, can you create a new repository from here or do you need to create it on GitHub first to upload it to? You do not need to create it on GitHub first. And in addition, when you ran create NextApp, it creates one for you So if you go into your, wherever you utilize Git, whether from the terminal or from here, you'll see that there's a Git Ignore generated. And if you were to run Git status in the terminal, you would see that there is a repository there. All right
So if you go into your, wherever you utilize Git, whether from the terminal or from here, you'll see that there's a Git Ignore generated. And if you were to run Git status in the terminal, you would see that there is a repository there. All right All right. On branch main, nothing to commit working tree clean. So that indicates that there's a branch main that you're on. If you run Git log, you should see that it committed the initial files for you too. So there's the initial commit from create NextApp
All right. On branch main, nothing to commit working tree clean. So that indicates that there's a branch main that you're on. If you run Git log, you should see that it committed the initial files for you too. So there's the initial commit from create NextApp So that's another cool thing about create NextApp is it gets you started in a good foot. It's another thing that you don't have to do manually. Okay. And then, I like Anthony's response of on my productivity episode. I feel like we could just do this once a week with productivity tips
So that's another cool thing about create NextApp is it gets you started in a good foot. It's another thing that you don't have to do manually. Okay. And then, I like Anthony's response of on my productivity episode. I feel like we could just do this once a week with productivity tips He'll get set up with GitHub CLI. That's what you need. And yes, okay. I will go back and get this uploaded to GitHub later. That's fine. I'm just working on getting the practice of doing so. So all right. Cool. So we got it updated. We have everything here
He'll get set up with GitHub CLI. That's what you need. And yes, okay. I will go back and get this uploaded to GitHub later. That's fine. I'm just working on getting the practice of doing so. So all right. Cool. So we got it updated. We have everything here And then, how about we run the app? You want to run that? I was just going to say, I don't even remember. How you run it, but I know that local hosts would be our next step after we run it. Yes. So if you run the command YarnDev. Oh, and really quick, if you open your package
And then, how about we run the app? You want to run that? I was just going to say, I don't even remember. How you run it, but I know that local hosts would be our next step after we run it. Yes. So if you run the command YarnDev. Oh, and really quick, if you open your packagejson on the right, you see under the scripts where it says dev. Yes. So line five and six. Yes. This is where that dev command gets defined. So on the left, I'm a man that you want to be able to run from the command line. And on the right, you tell it what to do. So run YarnDev
json on the right, you see under the scripts where it says dev. Yes. So line five and six. Yes. This is where that dev command gets defined. So on the left, I'm a man that you want to be able to run from the command line. And on the right, you tell it what to do. So run YarnDev So run YarnDev. Yarn and then dev or NPM run dev. It's going to run the command next dev, which is defined in this project. So this is just one thing to know in the back of your mind. Because when you want to create custom scripts that run things from the command line, that's where you would do it
So run YarnDev. Yarn and then dev or NPM run dev. It's going to run the command next dev, which is defined in this project. So this is just one thing to know in the back of your mind. Because when you want to create custom scripts that run things from the command line, that's where you would do it If you want to be a hipster is PM, PM, see if I can even say that. Anthony distracting. He always is, but it's entertaining. Okay, local host, at least this one is 3000. Yay, we have it. Yeah. And this is all generated for you
If you want to be a hipster is PM, PM, see if I can even say that. Anthony distracting. He always is, but it's entertaining. Okay, local host, at least this one is 3000. Yay, we have it. Yeah. And this is all generated for you And so one of the cool things about it, one way I like to learn, and I have since I was learning web development, is to see like something created and kind of reverse engineer it. And so like I like to look into the hood at the code a little bit and see how things happened
And so one of the cool things about it, one way I like to learn, and I have since I was learning web development, is to see like something created and kind of reverse engineer it. And so like I like to look into the hood at the code a little bit and see how things happened So if you want to look at the anatomy of this page, let's take a look in your VS code at the full destruction and kind of see where things exist. Okay. All right
So if you want to look at the anatomy of this page, let's take a look in your VS code at the full destruction and kind of see where things exist. Okay. All right Okay. All right. So I'm curious just because, okay, for some reason, I'm totally went to pages because that's, but I think it's because of something that I'm working on for open source with distributed, that I went to pages, but I don't think that's actually where it is
Okay. All right. So I'm curious just because, okay, for some reason, I'm totally went to pages because that's, but I think it's because of something that I'm working on for open source with distributed, that I went to pages, but I don't think that's actually where it is Your intuition is right, though. That is where you keep pages in next JS. So, okay. Anytime you create a JS file in the pages directory, it becomes a next JS page. And we'll do that in a minute. But if you open up index.js, you'll see all the contents to this page
Your intuition is right, though. That is where you keep pages in next JS. So, okay. Anytime you create a JS file in the pages directory, it becomes a next JS page. And we'll do that in a minute. But if you open up index.js, you'll see all the contents to this page You'll see, welcome to next JS on line 16 inside of H1. Tag. You'll see, um, get started by editing pages index. Yes. Like all the code for this page is here. I'm also, like, looking at the, like, documentation, because I like how they have it in like the box
You'll see, welcome to next JS on line 16 inside of H1. Tag. You'll see, um, get started by editing pages index. Yes. Like all the code for this page is here. I'm also, like, looking at the, like, documentation, because I like how they have it in like the box And I was like, I don't think I've ever looked at or understood to look at it to go, oh, so I get that this is the link. And with the class name styles grid, that's how the style grid is how that was made. And then it's, so it's using styles grid that was defined earlier
And I was like, I don't think I've ever looked at or understood to look at it to go, oh, so I get that this is the link. And with the class name styles grid, that's how the style grid is how that was made. And then it's, so it's using styles grid that was defined earlier And then styles card to know that it's a card. Yeah. Right? Right. I'm learning. It's been two months. I didn't, I would never have known that two months ago. So that's exciting
And then styles card to know that it's a card. Yeah. Right? Right. I'm learning. It's been two months. I didn't, I would never have known that two months ago. So that's exciting So that's exciting. And you know, you know, just to reiterate, like, this is why I like reverse engineering things, because you could, it's like, when I was a kid, I would, um, I would, I would get Legos and I would build them according to the description
So that's exciting. And you know, you know, just to reiterate, like, this is why I like reverse engineering things, because you could, it's like, when I was a kid, I would, um, I would, I would get Legos and I would build them according to the description And then we're kind of taking them apart halfway. And then I would kind of rebuild them my way. And I always found that to be a very valuable way to learn. You kind of look at what somebody built and then you take it halfway apart and do it your way. And that's what we're going to do here
And then we're kind of taking them apart halfway. And then I would kind of rebuild them my way. And I always found that to be a very valuable way to learn. You kind of look at what somebody built and then you take it halfway apart and do it your way. And that's what we're going to do here So, um, real quag, Ramon, um, I was just talking about you. And hi, that's actually, so he's part of, uh, uh, uh, distribute aid and how getting into that open source and we were working on, they, uh, wanted to create a template page that people could just copy and paste, um, certain aspects of it
So, um, real quag, Ramon, um, I was just talking about you. And hi, that's actually, so he's part of, uh, uh, uh, distribute aid and how getting into that open source and we were working on, they, uh, wanted to create a template page that people could just copy and paste, um, certain aspects of it And that's a lot of where thinking of seeing like these style grids and stuff like that were things that we were having to set up for them. Even though I think they're using tailwind and it's a bit different and all that, but it's like, oh, cool. Okay. So hi, thanks. Now I can continue
And that's a lot of where thinking of seeing like these style grids and stuff like that were things that we were having to set up for them. Even though I think they're using tailwind and it's a bit different and all that, but it's like, oh, cool. Okay. So hi, thanks. Now I can continue Now I can continue. I got excited that work connections. Very cool. Um, okay. So, uh, uh, yeah, just, I'll do a quick explanation of like how, um, HTML works in React in general
Now I can continue. I got excited that work connections. Very cool. Um, okay. So, uh, uh, yeah, just, I'll do a quick explanation of like how, um, HTML works in React in general Um, so, um, everything in React is a component, right? Uh, a component at its minimum is just a function that spits out some HTML. Um, can do a lot more than that. Often does do a lot more than that. But that's the simplest form. Um, and in, in React, the HTML is kind of augmented
Um, so, um, everything in React is a component, right? Uh, a component at its minimum is just a function that spits out some HTML. Um, can do a lot more than that. Often does do a lot more than that. But that's the simplest form. Um, and in, in React, the HTML is kind of augmented It's, it's not just plain old HTML. It's JSX, uh, which is, you know, there's, there's definitely HTML in there. As you can see, like the main tag, the H1 tag, the p tag, looks very much like HTML, with the exception that class name is not an HTML attribute
It's, it's not just plain old HTML. It's JSX, uh, which is, you know, there's, there's definitely HTML in there. As you can see, like the main tag, the H1 tag, the p tag, looks very much like HTML, with the exception that class name is not an HTML attribute Classes, but in React, we use this class name attribute. Um, and for reasons I won't even bother going into, I also don't remember why. But that's what you do in React. Um, and now, um, so you can write any arbitrary HTML in here for the most part
Classes, but in React, we use this class name attribute. Um, and for reasons I won't even bother going into, I also don't remember why. But that's what you do in React. Um, and now, um, so you can write any arbitrary HTML in here for the most part Um, but then when you pass in the class name styles that description, that's where next JS comes into play. Um, so next JS automatically lets you use CSS inside React, which, um, if you were to generate React in other ways, you might have to do an extra step to get that working
Um, but then when you pass in the class name styles that description, that's where next JS comes into play. Um, so next JS automatically lets you use CSS inside React, which, um, if you were to generate React in other ways, you might have to do an extra step to get that working Um, next, that's one of the things next JS provides for you. And if you were to look on their homepage, you'd see this as a thing that they advertise as one of the next JS values. In fact, like we should take a really quick look at it
Um, next, that's one of the things next JS provides for you. And if you were to look on their homepage, you'd see this as a thing that they advertise as one of the next JS values. In fact, like we should take a really quick look at it Um, it's good to have on hand as a reference, um, of like why we use next JS, and it's nextjs.org. Oh, it auto completed into something that I've looked up before. Yay. Okay. It's the React framework for production
Um, it's good to have on hand as a reference, um, of like why we use next JS, and it's nextjs.org. Oh, it auto completed into something that I've looked up before. Yay. Okay. It's the React framework for production So if you scroll a little bit, but image optimization, zero config, you know, file system routing is something we'll probably touch on
So if you scroll a little bit, but image optimization, zero config, you know, file system routing is something we'll probably touch on Um, where do they have built in CSS support, right? Um, and so this is where the documentation would be for this, but we'll just do some simple stuff in here so that you can kind of see. Um, how you can start to use CSS in an xjs app and style stuff. Cool. So the breakdown really quick
Um, where do they have built in CSS support, right? Um, and so this is where the documentation would be for this, but we'll just do some simple stuff in here so that you can kind of see. Um, how you can start to use CSS in an xjs app and style stuff. Cool. So the breakdown really quick Um, you had noticed that in the divs, there's this styles. Container attribute styles. Main styles. Title. Um, and you had noted, uh, that styles were to find somewhere else. And if you look at line three, this is where it's coming from. It's importing this object styles from a CSS file
Um, you had noticed that in the divs, there's this styles. Container attribute styles. Main styles. Title. Um, and you had noted, uh, that styles were to find somewhere else. And if you look at line three, this is where it's coming from. It's importing this object styles from a CSS file Do we? Oh, yeah, I can rate this. It's been a minute. Okay. Mm hmm. That would have to be somewhere in here or like installed somewhere. And so, um, if we look at line three, we can break down how this import statement is working. So, um, oh, it's under styles. Oh, okay
Do we? Oh, yeah, I can rate this. It's been a minute. Okay. Mm hmm. That would have to be somewhere in here or like installed somewhere. And so, um, if we look at line three, we can break down how this import statement is working. So, um, oh, it's under styles. Oh, okay Oh, okay. Um, just as a note, if you go back to that file really quick. And I would double click it so you keep it open. Cool. Um, yeah, if you noticed like when you first click a file in VS Code, the tab home module CSS is italicized. Um, that means you're just kind of open and temporarily
Oh, okay. Um, just as a note, if you go back to that file really quick. And I would double click it so you keep it open. Cool. Um, yeah, if you noticed like when you first click a file in VS Code, the tab home module CSS is italicized. Um, that means you're just kind of open and temporarily And if you click another one, it'll replace it. But if you double click it, it'll keep it open. Oh, this is exciting. And, uh, remote, just volunteering, uh, volunteering, tearing you of we're going to do a product, uh, productivity series of shortcuts that each developer uses
And if you click another one, it'll replace it. But if you double click it, it'll keep it open. Oh, this is exciting. And, uh, remote, just volunteering, uh, volunteering, tearing you of we're going to do a product, uh, productivity series of shortcuts that each developer uses So you'll have to be back on the show too. All right. We cool. So go back really quick to index.js is an important thing there. So on line three, when you go import styles from, um, yeah, I would leave, I would leave the folder, uh, director view open. Okay. What I'm talking about
So you'll have to be back on the show too. All right. We cool. So go back really quick to index.js is an important thing there. So on line three, when you go import styles from, um, yeah, I would leave, I would leave the folder, uh, director view open. Okay. What I'm talking about So when you, you see the dot, dot, import styles from dot, dot styles. Mm-hmm. So that means the dot, dot means go up one directory. So, uh, okay. That JS is in the pages folder
So when you, you see the dot, dot, import styles from dot, dot styles. Mm-hmm. So that means the dot, dot means go up one directory. So, uh, okay. That JS is in the pages folder When I say import styles from dot, dot slash styles, the dot, dot says, um, go one directory up from the pages directory. And then styles means go down into styles directory. So you're telling it the relative path, like where to go to find this file
When I say import styles from dot, dot slash styles, the dot, dot says, um, go one directory up from the pages directory. And then styles means go down into styles directory. So you're telling it the relative path, like where to go to find this file Um, so, uh, at some point, I'm, I'm not ready to like look into this yet, but I learned about that when, um, when working at GoDaddy and doing things with C panel and plus and, I mean, computers in general have that folder structure, but I feel like at some point, I do need to like put two and two together of what does this all do with that kind of hosting stuff because I'm still a little mind-bomb there, but I like that it's so consistent to learn across all of them
Um, so, uh, at some point, I'm, I'm not ready to like look into this yet, but I learned about that when, um, when working at GoDaddy and doing things with C panel and plus and, I mean, computers in general have that folder structure, but I feel like at some point, I do need to like put two and two together of what does this all do with that kind of hosting stuff because I'm still a little mind-bomb there, but I like that it's so consistent to learn across all of them So thank you for also explaining what the dot dots mean because I don't think I knew that one. The rest of them I could like figure my way around. Yeah, no problem. Um, now we can, uh, we can do something fun if you want. So let's look at the index.js and the home module CSS at the same time
So thank you for also explaining what the dot dots mean because I don't think I knew that one. The rest of them I could like figure my way around. Yeah, no problem. Um, now we can, uh, we can do something fun if you want. So let's look at the index.js and the home module CSS at the same time If you feel comfortable doing that. Yes. Oh, you already know how to do that. Your master that. But I do need to make my screen bigger. Yeah, and you could probably hide the sidebar if you want. You do. Yay. All right. So now, um, so in the import, you're importing just this one object. Right
If you feel comfortable doing that. Yes. Oh, you already know how to do that. Your master that. But I do need to make my screen bigger. Yeah, and you could probably hide the sidebar if you want. You do. Yay. All right. So now, um, so in the import, you're importing just this one object. Right Right. Um, and that's some next JS magic that basically says import everything from the CSS file and every. Um, so on the right, everything would have dot, dot container dot main. Those are, um, CSS classes, the code classes in CSS
Right. Um, and that's some next JS magic that basically says import everything from the CSS file and every. Um, so on the right, everything would have dot, dot container dot main. Those are, um, CSS classes, the code classes in CSS And, um, when next JS import styles from this file, it says make every one of these top level classes a property of the styles object
And, um, when next JS import styles from this file, it says make every one of these top level classes a property of the styles object So at the top where you saw it dot container dot main dot title, if you look on the left, you've got dives class name equals styles dot container styles dot main styles dot title. Okay. For like line seven on the left. Yeah. Um, line one on the right
So at the top where you saw it dot container dot main dot title, if you look on the left, you've got dives class name equals styles dot container styles dot main styles dot title. Okay. For like line seven on the left. Yeah. Um, line one on the right I think where my mind went, which just means I skipped ahead, even though I was supposed to, uh, was like, where is the title to kind of like go look at that or the description or the grid. Um, just because those are mostly, it looks like they're used more often than just the container. Okay. Yeah
I think where my mind went, which just means I skipped ahead, even though I was supposed to, uh, was like, where is the title to kind of like go look at that or the description or the grid. Um, just because those are mostly, it looks like they're used more often than just the container. Okay. Yeah Okay. Yeah. That's valid. Yeah, title is used. Well, let's see what's used the most. Um, title is used, description is used, grid is used. Um, card is used. So like, but they all correspond to stuff on the right side. So there's a card
Okay. Yeah. That's valid. Yeah, title is used. Well, let's see what's used the most. Um, title is used, description is used, grid is used. Um, card is used. So like, but they all correspond to stuff on the right side. So there's a card So there's a card. Is there a way to turn this due to add off where you can skip around? Yeah, that's called the mini map. So if you go into either viewer window, I'm sure Anthony is going to tell us before we do it. There you go. Show mini map. Fourth one from the bottom. Oh, on the left side
So there's a card. Is there a way to turn this due to add off where you can skip around? Yeah, that's called the mini map. So if you go into either viewer window, I'm sure Anthony is going to tell us before we do it. There you go. Show mini map. Fourth one from the bottom. Oh, on the left side Move. Oh, thank you. Yeah, there you go. There. Thank you. And so tell me if that makes sense so far. It does. It does. Um, do you want to try changing one of them? Yeah. So pop open your browser. Now I got to find it again. Please stand by. I do. You want to map? Yes
Move. Oh, thank you. Yeah, there you go. There. Thank you. And so tell me if that makes sense so far. It does. It does. Um, do you want to try changing one of them? Yeah. So pop open your browser. Now I got to find it again. Please stand by. I do. You want to map? Yes If you hit a command tab, that's an easy way to jump back and forth between windows. Yeah, I just have, I don't think because I have a ton of Chrome browsers open. How does it know which? That's actually a great question. So I have three wind or three monitors
If you hit a command tab, that's an easy way to jump back and forth between windows. Yeah, I just have, I don't think because I have a ton of Chrome browsers open. How does it know which? That's actually a great question. So I have three wind or three monitors How does it know which Chrome browser to go to based on? Does it know to do it based on? Monitor, I don't think so. I forget. So I don't know what the rule it uses, but I know how to tab between the Chrome windows. I'm. Let me get a little smaller for now. There we go. All right. So
How does it know which Chrome browser to go to based on? Does it know to do it based on? Monitor, I don't think so. I forget. So I don't know what the rule it uses, but I know how to tab between the Chrome windows. I'm. Let me get a little smaller for now. There we go. All right. So All right. So. So you can click the browser and then we'll just look at the browser. You want to pick something that changed the color of? Yes, because I think it'd be cool to change the title colors. I've titled these cards. Yeah. Okay. Let's do that. So actually here's a good exercise in finding
All right. So. So you can click the browser and then we'll just look at the browser. You want to pick something that changed the color of? Yes, because I think it'd be cool to change the title colors. I've titled these cards. Yeah. Okay. Let's do that. So actually here's a good exercise in finding If you go to the browser, this is a useful way to sort of find what you need to edit. So if you right-click on the titles of the cards, one of the titles, and you go inspect. Boom. That's going to open up the Chrome Debugger console
If you go to the browser, this is a useful way to sort of find what you need to edit. So if you right-click on the titles of the cards, one of the titles, and you go inspect. Boom. That's going to open up the Chrome Debugger console And you might have to resize a little bit just to make some room to see there. You could probably hit the escape button once and it'll close the console on the bottom. Oh, sweet. Okay. So this, this is the Chrome Debugger and it's an extremely valuable tool
And you might have to resize a little bit just to make some room to see there. You could probably hit the escape button once and it'll close the console on the bottom. Oh, sweet. Okay. So this, this is the Chrome Debugger and it's an extremely valuable tool In this case, we're looking at the HTML structure that is generated for us. And you see that H2 documentation tag. On the right side, you could see all the CSS styles that are applied to it. And even toggle them on and off and edit them without actually saving any code
In this case, we're looking at the HTML structure that is generated for us. And you see that H2 documentation tag. On the right side, you could see all the CSS styles that are applied to it. And even toggle them on and off and edit them without actually saving any code Is this a ripple, a repel, an R-E-P-L? I don't know what they're called. I don't remember what the acronym means, to be honest. I have to look it up. R-E-P-L, I forget. I know that's an acronym, but I forget what it means. I think it is. Console is Ripple from what Anthony said and read about X
Is this a ripple, a repel, an R-E-P-L? I don't know what they're called. I don't remember what the acronym means, to be honest. I have to look it up. R-E-P-L, I forget. I know that's an acronym, but I forget what it means. I think it is. Console is Ripple from what Anthony said and read about X Yeah. Okay. Yeah. Cool. Very cool. Okay. So I think the, oh, go ahead. I was going to say the important thing to remember is like you can toggle and edit all the CSS on the right side in real time and see how it affects stuff without actually touching your code. So it doesn't save anything
Yeah. Okay. Yeah. Cool. Very cool. Okay. So I think the, oh, go ahead. I was going to say the important thing to remember is like you can toggle and edit all the CSS on the right side in real time and see how it affects stuff without actually touching your code. So it doesn't save anything If you refresh it, it'll all be gone. So let's like try it in the browser because it's fun. I was going to say, I think that's one of the biggest things that I've really struggled with is people have shown me how to do it in here
If you refresh it, it'll all be gone. So let's like try it in the browser because it's fun. I was going to say, I think that's one of the biggest things that I've really struggled with is people have shown me how to do it in here But then I'm like, but how do I go find this and execute it within the file structure if it is something I'm going to keep? So very excited about this. Right. Okay. So here is my documentation and this is my H2. Now, this is probably why it's a little hard to translate
But then I'm like, but how do I go find this and execute it within the file structure if it is something I'm going to keep? So very excited about this. Right. Okay. So here is my documentation and this is my H2. Now, this is probably why it's a little hard to translate So scroll to the top of that window on the right. Now, this left. This is right. There we go. All right. So on the right side of this right window, it's listing the files which have the styles that you see on the left
So scroll to the top of that window on the right. Now, this left. This is right. There we go. All right. So on the right side of this right window, it's listing the files which have the styles that you see on the left And what this window is, it's a list of CSS styles in order that are affecting the element you have highlighted on the left. So the H2 that says documentation in it is affected by the style.home on the scorecard. L.H.2 which is defined in home.module.cssline95
And what this window is, it's a list of CSS styles in order that are affecting the element you have highlighted on the left. So the H2 that says documentation in it is affected by the style.home on the scorecard. L.H.2 which is defined in home.module.cssline95module.cssline95. And so, um, and then in turn, it's affected by global CSS and all that. And if you click it, it takes you to the line in the file. Whoa. Right. Whoa. You're darn tootin row. Whoa. That's cool. Now I don't know how to go back to where I was by. I have elements. So okay. Cool. Yeah
module.cssline95. And so, um, and then in turn, it's affected by global CSS and all that. And if you click it, it takes you to the line in the file. Whoa. Right. Whoa. You're darn tootin row. Whoa. That's cool. Now I don't know how to go back to where I was by. I have elements. So okay. Cool. Yeah Cool. Yeah. And you could always right click and inspect it again. I it's easy to get lost when using this. But like hopefully this demystifies it a little bit. The the reason they call it it CSS stands for cascading style sheets
Cool. Yeah. And you could always right click and inspect it again. I it's easy to get lost when using this. But like hopefully this demystifies it a little bit. The the reason they call it it CSS stands for cascading style sheets And the cascading comes from the fact that you can apply styles to the same element in different places in different files. You know, and the cascade they they combine and the end result is what you see. And there's reasons you want to do that
And the cascading comes from the fact that you can apply styles to the same element in different places in different files. You know, and the cascade they they combine and the end result is what you see. And there's reasons you want to do that I don't want to confuse you, but just know that you might be applying styles in different places that affect this element. And so is that kind of like with JavaScript? And I'm totally piecing together different parts
I don't want to confuse you, but just know that you might be applying styles in different places that affect this element. And so is that kind of like with JavaScript? And I'm totally piecing together different parts But so one of the niche go from who created quick came on and was explaining like, I know that with like JavaScript it reads from top to bottom. And with quick it only reads what the page needs to render
But so one of the niche go from who created quick came on and was explaining like, I know that with like JavaScript it reads from top to bottom. And with quick it only reads what the page needs to render If CSS is cascading, I guess you could say, like on that, would that mean that it's red talked to bottom or it's red what's inside of something else? And that's why it's cascading. The cascading is not a matter of the way in which it's red. It's more in that multiple things
If CSS is cascading, I guess you could say, like on that, would that mean that it's red talked to bottom or it's red what's inside of something else? And that's why it's cascading. The cascading is not a matter of the way in which it's red. It's more in that multiple things There's a there's a cascade in the way in which CSS applied to an element. Like if you if you really got into it, you could apply CSS styles to an element through classes. You could apply it through the element name. You could apply it through the parent element
There's a there's a cascade in the way in which CSS applied to an element. Like if you if you really got into it, you could apply CSS styles to an element through classes. You could apply it through the element name. You could apply it through the parent element So there's like a there's like a waiting to each style you apply. And depending on the waiting, one will take presence over another. So for example, you see how there's different. There's different CSS selectors on the right side in the screen that are being applied to the same H2
So there's like a there's like a waiting to each style you apply. And depending on the waiting, one will take presence over another. So for example, you see how there's different. There's different CSS selectors on the right side in the screen that are being applied to the same H2 One is the H2 tag. One is an asterisk. And one is dot home card LPL1H2. Those are all called CSS selectors. Each of them has a different weight to it
One is the H2 tag. One is an asterisk. And one is dot home card LPL1H2. Those are all called CSS selectors. Each of them has a different weight to it So if you apply if you apply the same style with different values like color, for example, if you apply a red color with the H2 selector, a blue color with the asterisk selector and a green color with the home card LPL1H2 selector, the top one will probably weigh out because of its level of because of how specific it is
So if you apply if you apply the same style with different values like color, for example, if you apply a red color with the H2 selector, a blue color with the asterisk selector and a green color with the home card LPL1H2 selector, the top one will probably weigh out because of its level of because of how specific it is Because there's a system of weights in that selector. And that's a cascade. That's the cascade. Got it. Okay. It cascades in the way you apply the things. And there's like a certain level of waiting to which one wins. Okay. For the most part, you don't have to know that
Because there's a system of weights in that selector. And that's a cascade. That's the cascade. Got it. Okay. It cascades in the way you apply the things. And there's like a certain level of waiting to which one wins. Okay. For the most part, you don't have to know that At least not right now when you're adding styles to stuff. That comes in handy when you're seeing styles apply to different places but in a style system. This was too good not to clip. Anthony created a clip for us or something else. But there is a clip. All right. I can't wait to check it out
At least not right now when you're adding styles to stuff. That comes in handy when you're seeing styles apply to different places but in a style system. This was too good not to clip. Anthony created a clip for us or something else. But there is a clip. All right. I can't wait to check it out Oh, it is. It was you. That's funny. Well, we'll share it afterwards. All right. Can't wait. Let's let's have some color. Pick your favorite color and we're going to apply it to the H2. Okay
Oh, it is. It was you. That's funny. Well, we'll share it afterwards. All right. Can't wait. Let's let's have some color. Pick your favorite color and we're going to apply it to the H2. Okay Okay. And to apply it to the H2 because it is inside of both of the, I'm also saying this out loud to see if I registered what you were talking about. I would need to go to the home CSS online 95 to be able to change the color. Right now you can try any of them and we'll see what happens
Okay. And to apply it to the H2 because it is inside of both of the, I'm also saying this out loud to see if I registered what you were talking about. I would need to go to the home CSS online 95 to be able to change the color. Right now you can try any of them and we'll see what happens So like right where you are now is fine. You're going to add, you're adding a CSS rule called color. Okay. So I open it or not. I use the last one. Yeah. You don't open the file. I didn't actually tell you so that's on me. Double click in that area where the other styles are. Yeah
So like right where you are now is fine. You're going to add, you're adding a CSS rule called color. Okay. So I open it or not. I use the last one. Yeah. You don't open the file. I didn't actually tell you so that's on me. Double click in that area where the other styles are. Yeah Yeah. You're like, it's a little hokey with the double clicking but putting it on there. Yeah. And then you type in color, which is a CSS property. And then you hit tab. And you can enter color value. Now the ones that are auto completing for you are all named colors
Yeah. You're like, it's a little hokey with the double clicking but putting it on there. Yeah. And then you type in color, which is a CSS property. And then you hit tab. And you can enter color value. Now the ones that are auto completing for you are all named colors So you can put in one of those. And so we'll yeah, pick one that looks okay to you. Okay. Boom. And now if you notice, it applied to all of the H2 tags here. Very cool. Very cool. Go ahead. Sorry. That's right. All right
So you can put in one of those. And so we'll yeah, pick one that looks okay to you. Okay. Boom. And now if you notice, it applied to all of the H2 tags here. Very cool. Very cool. Go ahead. Sorry. That's right. All right All right. What I was going to say is what that means is we picked a good style in home module that CSS to actually put into the code. If you were to apply a color to one of the others, it may or may not have the same effect. The H2 it probably would
All right. What I was going to say is what that means is we picked a good style in home module that CSS to actually put into the code. If you were to apply a color to one of the others, it may or may not have the same effect. The H2 it probably would But this one you can't even edit because this is the user agent style sheet. That means the browser style sheet. This is the browser as a style sheet. These are your browser settings. But this is a good one to apply it to
But this one you can't even edit because this is the user agent style sheet. That means the browser style sheet. This is the browser as a style sheet. These are your browser settings. But this is a good one to apply it to So if you look at home module CSS line 95, we could probably put in a color that you want in the in VS code in the editor itself and reload the page and it will still be there. Okay. So we are going to go to home.module.css line 95. And then you go dot card H2
So if you look at home module CSS line 95, we could probably put in a color that you want in the in VS code in the editor itself and reload the page and it will still be there. Okay. So we are going to go to home.module.css line 95. And then you go dot card H2 So that seems you'll notice that the selector is a little different in the browser. I think that's because next JS is doing some dynamic generation of these styles. But it still help the ton knowing the line file. Yeah. I just am curious to watch it change. So I'm going to try a different green
So that seems you'll notice that the selector is a little different in the browser. I think that's because next JS is doing some dynamic generation of these styles. But it still help the ton knowing the line file. Yeah. I just am curious to watch it change. So I'm going to try a different green Sure. Okay. Apparently this one also just only has certain colors. Well, if you if you delete that actually, you notice your auto complete was giving you all different types of colors too. Yeah. So in CSS, there are a certain set of named colors like green and Aqua and all these other things
Sure. Okay. Apparently this one also just only has certain colors. Well, if you if you delete that actually, you notice your auto complete was giving you all different types of colors too. Yeah. So in CSS, there are a certain set of named colors like green and Aqua and all these other things But if you hit space or I think you probably hit control space, it should give you some like auto complete options. There you go. So the you notice the ones with the pound sign? Yeah, the hex colors. Exactly. Like you have all these hex numbers as well
But if you hit space or I think you probably hit control space, it should give you some like auto complete options. There you go. So the you notice the ones with the pound sign? Yeah, the hex colors. Exactly. Like you have all these hex numbers as well And there's infinite, maybe not infinite, but a very large number of hexagons. So we could look up a hex number and put it in here. Yeah. That's actually really cool. And that makes sense on branding too. So I like understand branding and making sure that the colors are accurate
And there's infinite, maybe not infinite, but a very large number of hexagons. So we could look up a hex number and put it in here. Yeah. That's actually really cool. And that makes sense on branding too. So I like understand branding and making sure that the colors are accurate Because I love that debate. I've been on both sides of that debate of yes, it is that color. No, it's not that color. Yes, it is that color. So entertaining. And so now you're getting a syntax error. Oh, I know why. So I'm calling. Damn, semi-colon. And colors. That's what I was before
Because I love that debate. I've been on both sides of that debate of yes, it is that color. No, it's not that color. Yes, it is that color. So entertaining. And so now you're getting a syntax error. Oh, I know why. So I'm calling. Damn, semi-colon. And colors. That's what I was before I can't understand. It's the same thing I do it every day. No one. Did you save the file? I thought I did, but maybe I didn't save. Yay. And then change the green. Sure did. Okay. That was fun. Cool. I don't know why that's so fun to change a color, but that was fun. Yeah
I can't understand. It's the same thing I do it every day. No one. Did you save the file? I thought I did, but maybe I didn't save. Yay. And then change the green. Sure did. Okay. That was fun. Cool. I don't know why that's so fun to change a color, but that was fun. Yeah Yeah. Oh, here's another fun thing. So this is another fun thing about next GS. Change the color again. And save the file, but don't reload the browser. Change it to something like different like red or tomato. That's a cool little picture you got too. My bad
Yeah. Oh, here's another fun thing. So this is another fun thing about next GS. Change the color again. And save the file, but don't reload the browser. Change it to something like different like red or tomato. That's a cool little picture you got too. My bad My bad. Okay, so it was like, can you troll space? How about gold? Golden rod. Oh, beautiful. Sure. All right, now you save that and all right, and now just click the browser, don't reload it. Boom. Oh, that is pretty cool. That's that's the hot module reloading
My bad. Okay, so it was like, can you troll space? How about gold? Golden rod. Oh, beautiful. Sure. All right, now you save that and all right, and now just click the browser, don't reload it. Boom. Oh, that is pretty cool. That's that's the hot module reloading And next JS, it will do that not just with CSS and HTML, it'll do that with JavaScript with your logic changes. And so you can completely change components in the browser and it'll refresh that stuff without you having to reload anything, which is great
And next JS, it will do that not just with CSS and HTML, it'll do that with JavaScript with your logic changes. And so you can completely change components in the browser and it'll refresh that stuff without you having to reload anything, which is great I feel like that makes it a lot easier of Anthony just said you'll hear most people call it HMR. Hot module reloading, yeah. Just thank you. Oh, like we're back again. Here people refer to it as that it may ring about. And it really does make me think about how easy it was to change colors
I feel like that makes it a lot easier of Anthony just said you'll hear most people call it HMR. Hot module reloading, yeah. Just thank you. Oh, like we're back again. Here people refer to it as that it may ring about. And it really does make me think about how easy it was to change colors And it makes me think about Ben and accessibility and being able to make sure it has a high enough contrast. And Ben, yes, I will look into you step, look them up on the Twitter's at some point. Okay, that was fun. Now I am curious. So how would I add if I want to add another box? It's great
And it makes me think about Ben and accessibility and being able to make sure it has a high enough contrast. And Ben, yes, I will look into you step, look them up on the Twitter's at some point. Okay, that was fun. Now I am curious. So how would I add if I want to add another box? It's great Well, do you remember where the, well, let's see if you can answer this. What would you make the box out of? Like what type of code would it be? It would be in the JS file because I would, it's already had all of the CSS modules created. So I would just need this stuff from the JS file
Well, do you remember where the, well, let's see if you can answer this. What would you make the box out of? Like what type of code would it be? It would be in the JS file because I would, it's already had all of the CSS modules created. So I would just need this stuff from the JS file You're right. I don't know which stuff, but I can figure that out. Let's see if I can figure it out. Yeah. Yeah, because it looks like each of these are their own. What's this one? That one doesn't have a name. So this one does though. So it's from the A tag. And Kiebi. Ginter, Ginter. Based
You're right. I don't know which stuff, but I can figure that out. Let's see if I can figure it out. Yeah. Yeah, because it looks like each of these are their own. What's this one? That one doesn't have a name. So this one does though. So it's from the A tag. And Kiebi. Ginter, Ginter. Based Based. And then come up with a website. Maybe, maybe do some Twitch. Well, this is like, makes it a lot easier. Seems to be like a lot easier to build a website too. I don't know why it's suddenly clicking. Yeah, because it also, it makes more sense why I could never figure out classes
Based. And then come up with a website. Maybe, maybe do some Twitch. Well, this is like, makes it a lot easier. Seems to be like a lot easier to build a website too. I don't know why it's suddenly clicking. Yeah, because it also, it makes more sense why I could never figure out classes I was always so bad at trying to figure out classes. I don't know why. It just never made sense to me. It will eventually. Well, you would not. Yeah. They sense. Wait, that's not what I wanted. Goodness gracious. Really. Kiebi. And then go here. I do not want all this
I was always so bad at trying to figure out classes. I don't know why. It just never made sense to me. It will eventually. Well, you would not. Yeah. They sense. Wait, that's not what I wanted. Goodness gracious. Really. Kiebi. And then go here. I do not want all this I'm just going to do some undies because I feel like I'm going to move some other stuff too. There we go. Kind of highlighted. Is your friend? Huh? Command Z is your friend. No, I know. Yes. Okay. All right, examples. Teach. I'll do some random here. Discover and discover how to build
I'm just going to do some undies because I feel like I'm going to move some other stuff too. There we go. Kind of highlighted. Is your friend? Huh? Command Z is your friend. No, I know. Yes. Okay. All right, examples. Teach. I'll do some random here. Discover and discover how to build Discover examples. All right. And save. All right. And reload the browser. Boom. Look on the right. It's there. Yay. And click it. You should link works. There you go. Yay. We can see ourselves. Oh no, inception. Is there. I'll look at this later. But I hate that it does a
Discover examples. All right. And save. All right. And reload the browser. Boom. Look on the right. It's there. Yay. And click it. You should link works. There you go. Yay. We can see ourselves. Oh no, inception. Is there. I'll look at this later. But I hate that it does a Oh, Anthony just said, remember when I said on the react episode, you'll never need classes in react? Dude, that was two months ago. So sure, but probably probably is the reason I kept going with this is. I mean, it depends. Kind of project you walk into, unfortunately
Oh, Anthony just said, remember when I said on the react episode, you'll never need classes in react? Dude, that was two months ago. So sure, but probably probably is the reason I kept going with this is. I mean, it depends. Kind of project you walk into, unfortunately But, uh, but no, he does have a valid point. Um, yeah, go ahead. You sounded like you were going to ask question. I guess like what? How do I say this? What is something else that we could do with this that isn't just making a pretty website? Because yeah, I want to make it do stuff
But, uh, but no, he does have a valid point. Um, yeah, go ahead. You sounded like you were going to ask question. I guess like what? How do I say this? What is something else that we could do with this that isn't just making a pretty website? Because yeah, I want to make it do stuff And I'm like, I don't know how to make it do stuff. But I do like making it pretty. Let's do. Wait, sorry, you, you, you don't feel like making it pretty or you do? No, I always just, I do like making it pretty, but I want it to do stuff like that
And I'm like, I don't know how to make it do stuff. But I do like making it pretty. Let's do. Wait, sorry, you, you, you don't feel like making it pretty or you do? No, I always just, I do like making it pretty, but I want it to do stuff like that More important thing because it needs to be functional, not just pretty. So let's do this. Have you ever used fetch in JavaScript? Um, so yeah. So I mean, I've worked for API companies and like being able to like fetch and get or maybe they're not the same
More important thing because it needs to be functional, not just pretty. So let's do this. Have you ever used fetch in JavaScript? Um, so yeah. So I mean, I've worked for API companies and like being able to like fetch and get or maybe they're not the same But it's definitely, I think I've done it. I don't know. Well, it's, we're going to try. We're going to do something that is, uh, is going to add some react interactivity. Um, and it's going to have a couple of pieces that are going to be a little confusing
But it's definitely, I think I've done it. I don't know. Well, it's, we're going to try. We're going to do something that is, uh, is going to add some react interactivity. Um, and it's going to have a couple of pieces that are going to be a little confusing Um, well, we're going to work through it and pieces of it are going to start to make sense. And so I'll try and talk you through each piece as we do it. But it'll take a couple of pieces and then at the end of getting those couple of pieces together, we'll have some dynamic data in here
Um, well, we're going to work through it and pieces of it are going to start to make sense. And so I'll try and talk you through each piece as we do it. But it'll take a couple of pieces and then at the end of getting those couple of pieces together, we'll have some dynamic data in here Sound good? Yes. And Anthony, to your point, uh, these shows can take up to an hour and a half. We normally try to keep them under an hour. But I, I scheduled that extra half hour just in case we need it for stuff like this. Like a, if it's a good breaking point, cool, if not, let's keep going
Sound good? Yes. And Anthony, to your point, uh, these shows can take up to an hour and a half. We normally try to keep them under an hour. But I, I scheduled that extra half hour just in case we need it for stuff like this. Like a, if it's a good breaking point, cool, if not, let's keep going You know, so I'm guessing we won't need CSS anymore. Not right now. Um, Anthony does have a point though. It is going to take more than five minutes
You know, so I'm guessing we won't need CSS anymore. Not right now. Um, Anthony does have a point though. It is going to take more than five minutes So, uh, if it's up to you, whether you want to, you know, uh, how you want to handle it, do you want to keep going? Oh, yeah, I totally want to keep going. I'm like, I want to do stuff. I want to make it magic. All right, cool. Magic. All right
So, uh, if it's up to you, whether you want to, you know, uh, how you want to handle it, do you want to keep going? Oh, yeah, I totally want to keep going. I'm like, I want to do stuff. I want to make it magic. All right, cool. Magic. All right Magic. All right. So the first thing we're going to do and what I'm going to do is, uh, I'm going to ask you in your browser to open up documentation on the different pieces. So that, um, we, uh, so that you can reference this stuff later and start to understand it more
Magic. All right. So the first thing we're going to do and what I'm going to do is, uh, I'm going to ask you in your browser to open up documentation on the different pieces. So that, um, we, uh, so that you can reference this stuff later and start to understand it more Um, the first thing I want you to search for is, uh, it's called use effect. It's one word, use effect. And use effect is, uh, there you go. Use effect. React. Um, and click, uh, let's see, hook API reference is probably the one we want to reference for now
Um, the first thing I want you to search for is, uh, it's called use effect. It's one word, use effect. And use effect is, uh, there you go. Use effect. React. Um, and click, uh, let's see, hook API reference is probably the one we want to reference for now But later on, you'll want to look at using the effect. Okay. So, um, if you click on, so midway down the page on the left, there's use effect. Why this one? Yep. Okay. Yay. All right. Now, um, so I'm going to tell you a little bit of background
But later on, you'll want to look at using the effect. Okay. So, um, if you click on, so midway down the page on the left, there's use effect. Why this one? Yep. Okay. Yay. All right. Now, um, so I'm going to tell you a little bit of background So number one, uh, use effect is what's called a hook and react. And, uh, uh, the simple thing to know about hooks is, we already have components, right? We know that components at minimum spit out HTML or JSX code to make things pretty to show you content
So number one, uh, use effect is what's called a hook and react. And, uh, uh, the simple thing to know about hooks is, we already have components, right? We know that components at minimum spit out HTML or JSX code to make things pretty to show you content Hooks are how we add any kind of thinking to the component. And that's just a very general statement. But that's all you need to know right now is that hooks, number one, they are how you add anything more elaborate than just rendering text out and HTML. And they also start with the word use
Hooks are how we add any kind of thinking to the component. And that's just a very general statement. But that's all you need to know right now is that hooks, number one, they are how you add anything more elaborate than just rendering text out and HTML. And they also start with the word use So use this, use that. It's just a convention. You know hooks. Oh goodness. What was I trying to compare it to you? Better to be confused Anthony. So I know that like, uh, and would this, this would be considered a web hook then because No, no, okay
So use this, use that. It's just a convention. You know hooks. Oh goodness. What was I trying to compare it to you? Better to be confused Anthony. So I know that like, uh, and would this, this would be considered a web hook then because No, no, okay What's the difference? Because a different concept entirely. Um, a react hook, there's a react hook. Okay. In the react world, there's this notion of hooks that add interactivity to your components. Um, a whole hook is a like a server side thing
What's the difference? Because a different concept entirely. Um, a react hook, there's a react hook. Okay. In the react world, there's this notion of hooks that add interactivity to your components. Um, a whole hook is a like a server side thing It's like a piece of code in your app that listens for. That's what I was exactly what I was thinking about and wanted clarification because I was like, it doesn't sound like you're describing that, but wanted to make sure. Yep. Yeah, totally different
It's like a piece of code in your app that listens for. That's what I was exactly what I was thinking about and wanted clarification because I was like, it doesn't sound like you're describing that, but wanted to make sure. Yep. Yeah, totally different That's a good thing to make a note of in your in your own personal notes later. But react hooks, um, just for adding interactivity and all kinds of thinking. And so we're going to use use effect and use effects. It did this claim where I got to give you is it's
That's a good thing to make a note of in your in your own personal notes later. But react hooks, um, just for adding interactivity and all kinds of thinking. And so we're going to use use effect and use effects. It did this claim where I got to give you is it's It's in a way one of the most basic react hooks, but it's also one of the most confusing. Um, just want you to remember that and try and remember how I tell you to use it because even the documentation is not super great on it. It needs a lot of work
It's in a way one of the most basic react hooks, but it's also one of the most confusing. Um, just want you to remember that and try and remember how I tell you to use it because even the documentation is not super great on it. It needs a lot of work And they're working to improve this in newer versions of react. And there's better ways of handling this. But to do what we're trying to do, which is the simplest way to get some data and put it into the page, um, use effect is probably the simplest way to do it. Okay
And they're working to improve this in newer versions of react. And there's better ways of handling this. But to do what we're trying to do, which is the simplest way to get some data and put it into the page, um, use effect is probably the simplest way to do it. Okay Okay. And so that's what we're going to do. And so, um, with that, let's write some code. And we're going to do it step by step. Ruby
Okay. And so that's what we're going to do. And so, um, with that, let's write some code. And we're going to do it step by step. Ruby Ruby. So in your component, um, so this is a next JS page, right? And in a next JS page, uh, they all say, uh, as you see on line five, export default function and the name of the page, right? Every next JS page just exports a function. And, and exports default. It's a default export
Ruby. So in your component, um, so this is a next JS page, right? And in a next JS page, uh, they all say, uh, as you see on line five, export default function and the name of the page, right? Every next JS page just exports a function. And, and exports default. It's a default export And that basically spits out the HTML for the page. Now, if it's an interactivity to it, as you would any react component, you do it before the return statement. So you see on line six, the return statement is what spits out all the HTML. Mm-hmm
And that basically spits out the HTML for the page. Now, if it's an interactivity to it, as you would any react component, you do it before the return statement. So you see on line six, the return statement is what spits out all the HTML. Mm-hmm Mm-hmm. So any interactivity and any thinking a react hooks has to go before that. So I ask you a quick question. Of course. Okay. So let me see if I can figure out how to ask this. If we wanted to do, because the index page is normally the homepage, I'm guessing
Mm-hmm. So any interactivity and any thinking a react hooks has to go before that. So I ask you a quick question. Of course. Okay. So let me see if I can figure out how to ask this. If we wanted to do, because the index page is normally the homepage, I'm guessing But if we wanted to be able to add an additional page, would we add a page here and just tell the index page to pull from that content? I know it's not necessarily what you're talking about, but just so I can fit it in if I wanted to build a new page and what to do with that
But if we wanted to be able to add an additional page, would we add a page here and just tell the index page to pull from that content? I know it's not necessarily what you're talking about, but just so I can fit it in if I wanted to build a new page and what to do with that So building a new page is one of the easiest things in next JS. In fact, we could do that really quick if you want to. That would be helpful. That would be helpful just to like really visualize how that would be mean. Yeah
So building a new page is one of the easiest things in next JS. In fact, we could do that really quick if you want to. That would be helpful. That would be helpful just to like really visualize how that would be mean. Yeah Yeah. So creating a page, that's one of the best things about next JS is that creating a page is super easy. So in your pages directory, create a file, and let's call it about.js. And this will be your about page. Sweet. Okay. And then say that it'll show up
Yeah. So creating a page, that's one of the best things about next JS is that creating a page is super easy. So in your pages directory, create a file, and let's call it about.js. And this will be your about page. Sweet. Okay. And then say that it'll show up Probably show nothing yet because you're not doing anything. Yeah. You do need a little bit of code. But you can try it. Let's see what happens. I don't know what happens if you load up like a page. So if you go to local slash about, there you go. All right
Probably show nothing yet because you're not doing anything. Yeah. You do need a little bit of code. But you can try it. Let's see what happens. I don't know what happens if you load up like a page. So if you go to local slash about, there you go. All right All right. So to give you this error and this error is actually informative. The default export is not a React component. And that's because if you look at your index, it's looking for a default export. It's looking for you next JS is looking for you to export a default function for the page
All right. So to give you this error and this error is actually informative. The default export is not a React component. And that's because if you look at your index, it's looking for a default export. It's looking for you next JS is looking for you to export a default function for the page So what we're going to write in here is export default function about page. I'm just seeing if it's in there. So. About page. Yep. I'll be one one word about page. Because it's the name of a function in JavaScript and they got to be one. Okay
So what we're going to write in here is export default function about page. I'm just seeing if it's in there. So. About page. Yep. I'll be one one word about page. Because it's the name of a function in JavaScript and they got to be one. Okay Okay. And since you're defining a function, you got to put open and close parentheses at the very end of it. Or at the end of the about page rather. Yes. And you're going to need open, closed curly braces. And this is all just, you know, a JavaScript function definition
Okay. And since you're defining a function, you got to put open and close parentheses at the very end of it. Or at the end of the about page rather. Yes. And you're going to need open, closed curly braces. And this is all just, you know, a JavaScript function definition And it'll probably still throw an error. But if you save it, it's going to be different error. Okay. And the error is probably going to say, or it's just going to show you blank content. Because we're not returning any content. And remember, in, uh, in, in react, this is a component
And it'll probably still throw an error. But if you save it, it's going to be different error. Okay. And the error is probably going to say, or it's just going to show you blank content. Because we're not returning any content. And remember, in, uh, in, in react, this is a component And every component for it to show you any HTML needs to return some. So if you just return like an h1 tag. And so really quick to catch up on comments. And then I'll do that. Um, starting with Ben's totally page building seems to be next
And every component for it to show you any HTML needs to return some. So if you just return like an h1 tag. And so really quick to catch up on comments. And then I'll do that. Um, starting with Ben's totally page building seems to be next Core feature, like the API makes it very clear what it's for. And Bakari said, we did something similar with the square integration. Anthony, yeah, this would have been a good intro episode to the square stuff. I got really confused with square stuff, but like not at the same time
Core feature, like the API makes it very clear what it's for. And Bakari said, we did something similar with the square integration. Anthony, yeah, this would have been a good intro episode to the square stuff. I got really confused with square stuff, but like not at the same time It was like, I could comprehend it, but didn't know how to break down the individual pieces. Of it. Um, so yeah, Bakari, like when we created the simple back end. Okay. So that catches us up there. Um, and if we're wondering, uh, hey, hey, beautiful, I can spell humans and save
It was like, I could comprehend it, but didn't know how to break down the individual pieces. Of it. Um, so yeah, Bakari, like when we created the simple back end. Okay. So that catches us up there. Um, and if we're wondering, uh, hey, hey, beautiful, I can spell humans and save Now, why isn't she on up? Because it has no CSS. Hmm. I don't know. Hey, no problem. Uh, you have to return it. You have to say put in the word return. Where? Um, right before the h1 tag. Um, I'll do a little more explain in that in a second. So you have a little background
Now, why isn't she on up? Because it has no CSS. Hmm. I don't know. Hey, no problem. Uh, you have to return it. You have to say put in the word return. Where? Um, right before the h1 tag. Um, I'll do a little more explain in that in a second. So you have a little background Um, probably need on this one one. They're probably reformatted if you've got code four matter. That? Yeah. Yeah. Good. You. Um, okay, please explain the return because I think that could be something that I've definitely missed in a lot of this
Um, probably need on this one one. They're probably reformatted if you've got code four matter. That? Yeah. Yeah. Good. You. Um, okay, please explain the return because I think that could be something that I've definitely missed in a lot of this Also, you're going to want to make a note to install prettier in VS code. It'll format the code for you and it'll. It's installed. Which things never run it. And I thought it was. I'm having to look like what it says in the corner. It's not taught covers outside. Okay. Oh, no worries for
Also, you're going to want to make a note to install prettier in VS code. It'll format the code for you and it'll. It's installed. Which things never run it. And I thought it was. I'm having to look like what it says in the corner. It's not taught covers outside. Okay. Oh, no worries for Oh, no worries for. It's probably a part of our productivity stuff of telling it, you know, setting up prettier at some point. Cool. All right. So, um, what we have here, so, um, JavaScript functions, right? So there's JavaScript by itself outside of React, outside of next JS
Oh, no worries for. It's probably a part of our productivity stuff of telling it, you know, setting up prettier at some point. Cool. All right. So, um, what we have here, so, um, JavaScript functions, right? So there's JavaScript by itself outside of React, outside of next JS Um, um, there's, there's two ways to do. There's a little me start simple. So when you declare a function, if you just say the word function about page, inside of it, you can do whatever you want. Um, React for a to render any HTML. It's expecting you to return something
Um, um, there's, there's two ways to do. There's a little me start simple. So when you declare a function, if you just say the word function about page, inside of it, you can do whatever you want. Um, React for a to render any HTML. It's expecting you to return something So a function in JavaScript can just do something like console.log or whatever, or it can return a value. And that what that means is when you call that function, either the function will just do something, or you say, my variable equals call that function
So a function in JavaScript can just do something like console.log or whatever, or it can return a value. And that what that means is when you call that function, either the function will just do something, or you say, my variable equals call that function And it'll, that function will calculate something and return you a value. Um, functions or these default, uh, these component functions react. Um, for them to render HTML, they have to return HTML. It's just, it's just the convention you use in React, I want you to return it
And it'll, that function will calculate something and return you a value. Um, functions or these default, uh, these component functions react. Um, for them to render HTML, they have to return HTML. It's just, it's just the convention you use in React, I want you to return it So the return statement is where you spit out the HTML for the page. So if you look at index.js, um, it's the same thing. It says, um, export people and then it's a big return statement with all these dives and stuff in it. Got it. I honestly think I was missing that every time
So the return statement is where you spit out the HTML for the page. So if you look at index.js, um, it's the same thing. It says, um, export people and then it's a big return statement with all these dives and stuff in it. Got it. I honestly think I was missing that every time Um, and Anthony, I'm not sure what you mean by that. Uh, next day, I just paid Hello World snippet, but, um, it definitely, I don't really do Hello World. I do Hello Beautiful humans. You know, gotta be, I always say it. So gotta be, you know, difficult with that
Um, and Anthony, I'm not sure what you mean by that. Uh, next day, I just paid Hello World snippet, but, um, it definitely, I don't really do Hello World. I do Hello Beautiful humans. You know, gotta be, I always say it. So gotta be, you know, difficult with that But, um, make about page about for consistency. Okay. He's just talking about the naming conventions. Yeah. And then he's a stick of it for detail. But if you open the, see, you see how we have our export default function home. It's capitalized
But, um, make about page about for consistency. Okay. He's just talking about the naming conventions. Yeah. And then he's a stick of it for detail. But if you open the, see, you see how we have our export default function home. It's capitalized It's capitalized. In the about you would name it just about with a capital A. Now, this is your convention. Like, you know, it's good to keep consistent across the files into project. You should make that a capital A though. Did it read? Oh, I thought I did, but. There you go
It's capitalized. In the about you would name it just about with a capital A. Now, this is your convention. Like, you know, it's good to keep consistent across the files into project. You should make that a capital A though. Did it read? Oh, I thought I did, but. There you go There you go. Um, yeah, like I, I, I'll pick a different convention across a single project and try and keep consistent. Like homepage or something like that. Like I use the word page. But, um, this is a good practice. Cool. So let's go back and try and see if we can get it some interactivity
There you go. Um, yeah, like I, I, I'll pick a different convention across a single project and try and keep consistent. Like homepage or something like that. Like I use the word page. But, um, this is a good practice. Cool. So let's go back and try and see if we can get it some interactivity So now, now you know how to create a page. And how easy. Yeah. Definitely. Thank you. No, no problem. But yeah, if you go back to their about. I'm sorry. If you go back to it. Yeah. So now we're going to, first we got to get the use effect from React
So now, now you know how to create a page. And how easy. Yeah. Definitely. Thank you. No, no problem. But yeah, if you go back to their about. I'm sorry. If you go back to it. Yeah. So now we're going to, first we got to get the use effect from React I'm just going to take us back to the home page really quick. Yeah. Okay. So one more time, please. First, we got to get use effect hook from React. We got to import it. So we're going to add another import statement. And would, would the import statement information be here? No. Under. Okay
I'm just going to take us back to the home page really quick. Yeah. Okay. So one more time, please. First, we got to get use effect hook from React. We got to import it. So we're going to add another import statement. And would, would the import statement information be here? No. Under. Okay Under. Okay. No, I'm going to tell it to you. Because this is a. I don't even know where documentation would be on like how typically to do this, but typically this is how we import stuff from a lot of open source projects
Under. Okay. No, I'm going to tell it to you. Because this is a. I don't even know where documentation would be on like how typically to do this, but typically this is how we import stuff from a lot of open source projects You're going to import, but this time you're going to import with curly braces. So if you open a curly brace right here. And you type use effect. Lowercase u capital E. Okay. All right. And then outside the curly brace. Move your cursor to the past the end curly brace. Okay. Space from
You're going to import, but this time you're going to import with curly braces. So if you open a curly brace right here. And you type use effect. Lowercase u capital E. Okay. All right. And then outside the curly brace. Move your cursor to the past the end curly brace. Okay. Space from Okay. Space from. And you could do this all on one line. And do another space. Add quotes. And react. Is it what the capital are? Nope. Lowercase
Okay. Space from. And you could do this all on one line. And do another space. Add quotes. And react. Is it what the capital are? Nope. Lowercase Lowercase. Typically, or exclusively nowadays, when you're importing something from a package that you've imported into the project with yarn or no, and PM, they should be lowercase. Okay. If you notice at the top we're importing from next slash head, next slash image. Those are all lowercase too
Lowercase. Typically, or exclusively nowadays, when you're importing something from a package that you've imported into the project with yarn or no, and PM, they should be lowercase. Okay. If you notice at the top we're importing from next slash head, next slash image. Those are all lowercase too And then this is. The value is never read, but this will change when we start building more in here, right? Right. Okay. And you can save it, but just to break down the statement, if you notice
And then this is. The value is never read, but this will change when we start building more in here, right? Right. Okay. And you can save it, but just to break down the statement, if you notice So I think you have a sense of what import does, right? It says, we'll go from another file or a package into this file. The ones at the top are different. They don't need curly braces because you're pulling in the default export
So I think you have a sense of what import does, right? It says, we'll go from another file or a package into this file. The ones at the top are different. They don't need curly braces because you're pulling in the default export So like, like when we created, when we created the homepage right here, online seven, it says export default. So there's a default thing getting exported. So when a file exports a default, you can import it without curly braces. So import head, that package does a default export
So like, like when we created, when we created the homepage right here, online seven, it says export default. So there's a default thing getting exported. So when a file exports a default, you can import it without curly braces. So import head, that package does a default export Import image, it does a default export. Um, use effect is not a default export. It's a export that you import by name. So you need to use a curly braces. Okay
Import image, it does a default export. Um, use effect is not a default export. It's a export that you import by name. So you need to use a curly braces. Okay Okay. I don't want to blow your brain up, but just know that the, the differences in the way you import are dependent on how the file exports them. And that makes sense. All of that made sense. I think where I'm a little lost is. And I, and this is going off a memory
Okay. I don't want to blow your brain up, but just know that the, the differences in the way you import are dependent on how the file exports them. And that makes sense. All of that made sense. I think where I'm a little lost is. And I, and this is going off a memory So I'm not sure where, but I thought I've used it in some type of file where it did import, react. Mm hmm
So I'm not sure where, but I thought I've used it in some type of file where it did import, react. Mm hmm Mm hmm. And that's where I'm a bit like if I imported, react, would it have imported use effect if I imported, react as a whole or I would still have to do it by itself? I, it would, but I don't want to confuse you. Okay. Because it's not the same across different places you import from. Okay
Mm hmm. And that's where I'm a bit like if I imported, react, would it have imported use effect if I imported, react as a whole or I would still have to do it by itself? I, it would, but I don't want to confuse you. Okay. Because it's not the same across different places you import from. Okay Okay. Importing and exporting is probably a topic by itself that, you know, we had a couple of different files we could show all different ways of doing stuff. Just know that when you see the curly's versus no curly's, there's a difference in how the file exports it. Okay
Okay. Importing and exporting is probably a topic by itself that, you know, we had a couple of different files we could show all different ways of doing stuff. Just know that when you see the curly's versus no curly's, there's a difference in how the file exports it. Okay Okay. And Anthony also said, import react was an older convention that usually is usually handled by the new version of the app. Yes. Okay. Cool. All right. So let's pop this use effect in. Now this is where it's going to get interesting
Okay. And Anthony also said, import react was an older convention that usually is usually handled by the new version of the app. Yes. Okay. Cool. All right. So let's pop this use effect in. Now this is where it's going to get interesting So inside your function definition, but before the return statement, we're going to type in use effect. All right. And now we're going to open and close parentheses. How do I know if there's supposed to be right next to it or a space between them? Usually pretty or we'll tell you
So inside your function definition, but before the return statement, we're going to type in use effect. All right. And now we're going to open and close parentheses. How do I know if there's supposed to be right next to it or a space between them? Usually pretty or we'll tell you But it's either it should be okay, I believe, but I usually put them right next to it. I think most of them. And so the parentheses mean you're calling this function, right? And this happens to be a react hook
But it's either it should be okay, I believe, but I usually put them right next to it. I think most of them. And so the parentheses mean you're calling this function, right? And this happens to be a react hook And if you notice the definition that just popped up, there are two parameters that it's expecting. Effect and depths. All right. Now without confusing you, use effect is, no, it's a confusingly named thing
And if you notice the definition that just popped up, there are two parameters that it's expecting. Effect and depths. All right. Now without confusing you, use effect is, no, it's a confusingly named thing But you can say that it's running like a side effect, right? The side effect is something that happens that isn't the main purpose of this component, right? Okay
But you can say that it's running like a side effect, right? The side effect is something that happens that isn't the main purpose of this component, right? Okay The main purpose of the component is to render out something, right? A side effect is something that kind of happens on the side, which is a very basic way of putting it. What it's the least confusing way to tell you it right now. And I think it's sufficient for now
The main purpose of the component is to render out something, right? A side effect is something that kind of happens on the side, which is a very basic way of putting it. What it's the least confusing way to tell you it right now. And I think it's sufficient for now And so what it's going to do, it's going to run a function, a side effect function, and the dependencies, we're just going to pass in a blank and I'll explain why in a second. So first, let's give it a function
And so what it's going to do, it's going to run a function, a side effect function, and the dependencies, we're just going to pass in a blank and I'll explain why in a second. So first, let's give it a function So if you declare a function here, you can declare it as a arrow function where you just put in another set of parentheses or you could declare it as a, let's see, what's the easiest way to do this. Let's see where's a regular function
So if you declare a function here, you can declare it as a arrow function where you just put in another set of parentheses or you could declare it as a, let's see, what's the easiest way to do this. Let's see where's a regular function I typically don't do this, but put in the word function and open close parentheses and open close curly braces. Sorry, after the parentheses. After both are just the first side. Right there. Yeah. So you're passing this function as the first parameter of use effect
I typically don't do this, but put in the word function and open close parentheses and open close curly braces. Sorry, after the parentheses. After both are just the first side. Right there. Yeah. So you're passing this function as the first parameter of use effect This is the effect function, okay? Use effect is looking for two parameters. It needs a function and it needs an array, okay? Okay. Bear with me. I know the words you're saying is that it hasn't fully solidified what they each do
This is the effect function, okay? Use effect is looking for two parameters. It needs a function and it needs an array, okay? Okay. Bear with me. I know the words you're saying is that it hasn't fully solidified what they each do So that's why I appreciate you're telling me what to type because I'm like, okay, eventually I will learn that's what it means. Yeah, and then this case, this one won't fully sink in, but just bear with me and the pieces
So that's why I appreciate you're telling me what to type because I'm like, okay, eventually I will learn that's what it means. Yeah, and then this case, this one won't fully sink in, but just bear with me and the pieces We'll get something working and then you can understand it a little bit more as time goes on. After that ending curly brace, I want you to put a comma. After the curly brace. Yep. And you're going to put open and close array brackets, square brackets. There you go. All right, now save that
We'll get something working and then you can understand it a little bit more as time goes on. After that ending curly brace, I want you to put a comma. After the curly brace. Yep. And you're going to put open and close array brackets, square brackets. There you go. All right, now save that This is going to do nothing. All right. Free. But this is the framework for how to call a use effect function. Now, inside there's curly braces. Add a new line. All right
This is going to do nothing. All right. Free. But this is the framework for how to call a use effect function. Now, inside there's curly braces. Add a new line. All right All right. So what this use effect says, what this this one with these define says is we're going to run some code after the component initially mounts. It gets added to the screen. Okay. And what we want to run is a fetch function to a website that I'm going to give you. So Jason placeholder
All right. So what this use effect says, what this this one with these define says is we're going to run some code after the component initially mounts. It gets added to the screen. Okay. And what we want to run is a fetch function to a website that I'm going to give you. So Jason placeholder If you google for Jason placeholder, JSO and placeholder, all right. Should be the first result. And this is a fake API. It's an API with just a bunch of dynamic randomly generated fake data
If you google for Jason placeholder, JSO and placeholder, all right. Should be the first result. And this is a fake API. It's an API with just a bunch of dynamic randomly generated fake data And it's really good for projects like this that you just want to pull in some data for the sake of pulling in data and do something with it. It's a very useful tool to have. And so if you scroll down a little bit in their documentation, you're going to see the data. I'll get the fetch. Yeah
And it's really good for projects like this that you just want to pull in some data for the sake of pulling in data and do something with it. It's a very useful tool to have. And so if you scroll down a little bit in their documentation, you're going to see the data. I'll get the fetch. Yeah Yeah. And if you run it, you'll see the Jason data that it gives you, right? Another way we can see I wouldn't put it. Don't put this in your code yet. But if you see that URL right there, the in the fetch, you can take that URL and you could paste it in another tab in your browser
Yeah. And if you run it, you'll see the Jason data that it gives you, right? Another way we can see I wouldn't put it. Don't put this in your code yet. But if you see that URL right there, the in the fetch, you can take that URL and you could paste it in another tab in your browser And you'll see what the Jason response looks like. All right. And you see this is dynamic data. If you refresh it, it's going to be different. I think. I'll actually know they stay consistent
And you'll see what the Jason response looks like. All right. And you see this is dynamic data. If you refresh it, it's going to be different. I think. I'll actually know they stay consistent But if you delete the one, in fact, delete the number altogether and just go to to dues, it's going to give you an array of to-dos. And they're all user ID1 interesting. Yeah. I mean, it's not perfect. Oh, some of them are too. We just got a scroll. Okay
But if you delete the one, in fact, delete the number altogether and just go to to dues, it's going to give you an array of to-dos. And they're all user ID1 interesting. Yeah. I mean, it's not perfect. Oh, some of them are too. We just got a scroll. Okay Okay. Because it's different users, different fake users that created them. And so this is just something that you can paste in and we can pull data from and do something with. Now, let me think really quickly, what the easiest way to do this is without it being crazy. Yeah, pop that in there
Okay. Because it's different users, different fake users that created them. And so this is just something that you can paste in and we can pull data from and do something with. Now, let me think really quickly, what the easiest way to do this is without it being crazy. Yeah, pop that in there And what we're going to do is save that. And if you look in your browser and open the console, you should see it logging out some Jason data. And so, oh, you don't have to refresh. You see that? It's spitting out those objects right there. So have a look inside your code again
And what we're going to do is save that. And if you look in your browser and open the console, you should see it logging out some Jason data. And so, oh, you don't have to refresh. You see that? It's spitting out those objects right there. So have a look inside your code again And I would delete the number one in the URL. And you see how it spit out a 200 element object right there? And now you can just kind of page through it to see what that object looks like. And look at all that. You've got all these elements in here. So it's a big array of to-dos, like fake to-dos
And I would delete the number one in the URL. And you see how it spit out a 200 element object right there? And now you can just kind of page through it to see what that object looks like. And look at all that. You've got all these elements in here. So it's a big array of to-dos, like fake to-dos And so you just fetch this data. So applaud yourself really quickly because you just from an API into your next JS project. Now the thing you want to do with it is put it into your code base. And so you can spit it out and render some cards with it
And so you just fetch this data. So applaud yourself really quickly because you just from an API into your next JS project. Now the thing you want to do with it is put it into your code base. And so you can spit it out and render some cards with it And now this is where it gets a little interesting. There's certainly better ways to do it. But we're going to do it a very basic way. Simply because this is another building block and react that can be valuable, right? I'd like you to look up the documentation for use state. Hey
And now this is where it gets a little interesting. There's certainly better ways to do it. But we're going to do it a very basic way. Simply because this is another building block and react that can be valuable, right? I'd like you to look up the documentation for use state. Hey Hey. Anthony did use state, ATE, SETE. Although use state would be a great hook to have. I'm just like why you, what? What? Okay, use state. Yeah. And I'm teaching you things that this isn't, you know, necessarily the best practices way of doing it. This is a learning way of doing it
Hey. Anthony did use state, ATE, SETE. Although use state would be a great hook to have. I'm just like why you, what? What? Okay, use state. Yeah. And I'm teaching you things that this isn't, you know, necessarily the best practices way of doing it. This is a learning way of doing it And I appreciate that, especially with I'm definitely in the API world. And I can understand a lot of it. I just, I'm been struggling with going with, okay, I understand a lot of the concepts. Doesn't mean I know how to make it. So I appreciate this and just getting the experience with it
And I appreciate that, especially with I'm definitely in the API world. And I can understand a lot of it. I just, I'm been struggling with going with, okay, I understand a lot of the concepts. Doesn't mean I know how to make it. So I appreciate this and just getting the experience with it So all right. So we got use state. Yeah. And so what you stick does is says, this one's a little more intuitive. It says that in my component, I want to keep track of something. I want to keep track of the state of something
So all right. So we got use state. Yeah. And so what you stick does is says, this one's a little more intuitive. It says that in my component, I want to keep track of something. I want to keep track of the state of something So in the example they give you, there, it says const count set count equals you state zero, right? It's what this is saying is I want to keep track of something called count, which has an initial value of zero
So in the example they give you, there, it says const count set count equals you state zero, right? It's what this is saying is I want to keep track of something called count, which has an initial value of zero And I'm getting me a function called set count, where I could set it when the user does something, right? And so later the user clicks a button and it says set count count plus one adds one to the count
And I'm getting me a function called set count, where I could set it when the user does something, right? And so later the user clicks a button and it says set count count plus one adds one to the count And so rereading it back that line that uses the use state says, I want to keep track of the state of something called account. It starts at zero and I have a function to set the count anytime I want. Okay. So in our code, we want to keep track of the set of to do's. Okay
And so rereading it back that line that uses the use state says, I want to keep track of the state of something called account. It starts at zero and I have a function to set the count anytime I want. Okay. So in our code, we want to keep track of the set of to do's. Okay Okay. So you could even copy and paste this definition here to work off of this account. Yeah. You don't format your code a little bit to make it neat or so you can read it better. That's a good thing to do right now. And then it would go right here, right? No. Yeah
Okay. So you could even copy and paste this definition here to work off of this account. Yeah. You don't format your code a little bit to make it neat or so you can read it better. That's a good thing to do right now. And then it would go right here, right? No. Yeah Yeah. You want to do so you can't really use hooks inside hooks in that way. Well, you can and can. So we would just need to do it outside of this curly bracket and do the same thing after I import it. Yeah, or you could do it beforehand. I would do it before him just for ease of readability
Yeah. You want to do so you can't really use hooks inside hooks in that way. Well, you can and can. So we would just need to do it outside of this curly bracket and do the same thing after I import it. Yeah, or you could do it beforehand. I would do it before him just for ease of readability So before the use effect, I would add another line. In fact, you kind of have to because you'll see why in a second. But that's all you don't work. You can you can add so okay, so this is another this is a good opportunity. So this is another named export
So before the use effect, I would add another line. In fact, you kind of have to because you'll see why in a second. But that's all you don't work. You can you can add so okay, so this is another this is a good opportunity. So this is another named export So you just need exactly you're doing it correctly. So you just add use state. Okay. And then we want to use state. And then bracket. Wait, one one. And then we need to give it a function. Well, let's let's start over
So you just need exactly you're doing it correctly. So you just add use state. Okay. And then we want to use state. And then bracket. Wait, one one. And then we need to give it a function. Well, let's let's start over So if you delete that line and take a look at the way we're using it in the documentation on the left. Now, use state is a different type of function. And you remember some functions return value some don't. Okay. Use effect doesn't return a value. Use state does
So if you delete that line and take a look at the way we're using it in the documentation on the left. Now, use state is a different type of function. And you remember some functions return value some don't. Okay. Use effect doesn't return a value. Use state does Use state does. So you got to say something equals you state. So the way you're okay. It's got a particular way of defining it. So you just want that one line. Const. Blah blah blah equals you state. Oh, not that line. Oh, okay. You we don't need that function for it to work
Use state does. So you got to say something equals you state. So the way you're okay. It's got a particular way of defining it. So you just want that one line. Const. Blah blah blah equals you state. Oh, not that line. Oh, okay. You we don't need that function for it to work No, you're already in your component function. That's just an example component function. There you go. And so again, this says I'm tracking a variable called whatever. And I'm creating a setter function for it. Something that lets me set the value of it
No, you're already in your component function. That's just an example component function. There you go. And so again, this says I'm tracking a variable called whatever. And I'm creating a setter function for it. Something that lets me set the value of it So what we want to track is to do so it changed count to to do's. Sorry in the first variable undo that. So this is to do's. Yep. And then the function instead of set count, we're going to be set to do's. What a capital T. All right
So what we want to track is to do so it changed count to to do's. Sorry in the first variable undo that. So this is to do's. Yep. And then the function instead of set count, we're going to be set to do's. What a capital T. All right All right. And then inside use state, we're declaring the initial value of it, which is just going to be an empty array. So square brackets. Oh, okay. Square brackets inside of the. Correct. Please. Okay. Cool. Now let's read it again in our context. So I just said this to you like five times
All right. And then inside use state, we're declaring the initial value of it, which is just going to be an empty array. So square brackets. Oh, okay. Square brackets inside of the. Correct. Please. Okay. Cool. Now let's read it again in our context. So I just said this to you like five times So sorry for the like, broken record. But I want you to understand what you state does. And sometimes repetition helps. Yeah. What this line says is I'm declaring a variable called to do's, which is going to track the list of to do's that I'm pulling from an API
So sorry for the like, broken record. But I want you to understand what you state does. And sometimes repetition helps. Yeah. What this line says is I'm declaring a variable called to do's, which is going to track the list of to do's that I'm pulling from an API I'm declaring a function that lets me set those to do's to any value that I'm getting from the API. And the initial value of it is the one I'm passing into use state. It's an empty array. So it's going to. So to do's will start as an empty array
I'm declaring a function that lets me set those to do's to any value that I'm getting from the API. And the initial value of it is the one I'm passing into use state. It's an empty array. So it's going to. So to do's will start as an empty array And then when I call set to do's, it's going to set it to whatever value that I pass to it. Okay. And so the place we're going to do that is after I'm done fetching the API call
And then when I call set to do's, it's going to set it to whatever value that I pass to it. Okay. And so the place we're going to do that is after I'm done fetching the API call So inside of use effect, we're saying that when the page loads fetch, from this API, then convert the response to Jason object on line 12. And take that Jason object and console log it out. But now instead of logging it out, we want to call set to do's. So if you change that console
So inside of use effect, we're saying that when the page loads fetch, from this API, then convert the response to Jason object on line 12. And take that Jason object and console log it out. But now instead of logging it out, we want to call set to do's. So if you change that consolelog call to set to do's. It's going to save that object. We return from the API and put it into do's variable. So now the to do's variable will have that list of to do's in it. And we can access it within the HTML and spit it out
log call to set to do's. It's going to save that object. We return from the API and put it into do's variable. So now the to do's variable will have that list of to do's in it. And we can access it within the HTML and spit it out So what our next thing to be, would we build the, if we're going to put it in one of these like boxes, would we put the box up here so that way we understand that it's this is all together? Or would we put it down here with the rest of the HTML stuff or in CSS stuff
So what our next thing to be, would we build the, if we're going to put it in one of these like boxes, would we put the box up here so that way we understand that it's this is all together? Or would we put it down here with the rest of the HTML stuff or in CSS stuff You want to put the HTML rendering with the HTML
You want to put the HTML rendering with the HTML You want to keep the thinking code above the return statement and all the showing things code inside the return statement. Okay. Does that answer your question? Or does it? It does. So if I want to have it show, I would want this here. But the class name would be something to do
You want to keep the thinking code above the return statement and all the showing things code inside the return statement. Okay. Does that answer your question? Or does it? It does. So if I want to have it show, I would want this here. But the class name would be something to do So let's do a step back and do it a little simpler. I would delete that chunk of HTML. And the first thing you got to learn is that if you want to put a variable and output its contents in the render world in the return statement, you need curly braces to start off with
So let's do a step back and do it a little simpler. I would delete that chunk of HTML. And the first thing you got to learn is that if you want to put a variable and output its contents in the render world in the return statement, you need curly braces to start off with If you notice like you see class name equals and it's got curly braces, that says evaluate this JavaScript object styles.card and give me the value of it and then render that out. And so let's try that
If you notice like you see class name equals and it's got curly braces, that says evaluate this JavaScript object styles.card and give me the value of it and then render that out. And so let's try that But we're going to, I'm going to give you something in the chat that is going to prevent you from being too confused. I'm going to give you in the private chat. So we're going to render it like this. So let's see
But we're going to, I'm going to give you something in the chat that is going to prevent you from being too confused. I'm going to give you in the private chat. So we're going to render it like this. So let's see So let's see. So this is a little code snippet that I just sent in the private chat that you can just put right in there. And I'll explain why in a second. You can delete that yet. Boom. And I'll save that. Oh, we might need, I might need to do something else with that. But let's save for breaks
So let's see. So this is a little code snippet that I just sent in the private chat that you can just put right in there. And I'll explain why in a second. You can delete that yet. Boom. And I'll save that. Oh, we might need, I might need to do something else with that. But let's save for breaks Boom. Look at that. So you've got just a dump of the data in your to do's variables. And now you know where that that data is stored. We just have to, because it's a big array of JSON objects, we have to navigate that variable to get to the parts that we want. Does that make sense? Yes
Boom. Look at that. So you've got just a dump of the data in your to do's variables. And now you know where that that data is stored. We just have to, because it's a big array of JSON objects, we have to navigate that variable to get to the parts that we want. Does that make sense? Yes Pause for a second of everyone in the chat is saying you're doing an amazing job. And I would agree. And also the JSON.Stringify. Yeah
Pause for a second of everyone in the chat is saying you're doing an amazing job. And I would agree. And also the JSON.Stringify. YeahStringify. Yeah. So if you look back at your code, do you understand the concept of JSON? Or do you need that little explanation? I won't say no to the explanation again, because I'm like, I think I know, but I don't remember. It hasn't sunk in enough yet. That's okay
Stringify. Yeah. So if you look back at your code, do you understand the concept of JSON? Or do you need that little explanation? I won't say no to the explanation again, because I'm like, I think I know, but I don't remember. It hasn't sunk in enough yet. That's okay That's okay. JSON stands for JavaScript object notation. It's, if you look at, can you open that browser tab where we, let's see, where we were requested, where we ran the API. So like the JSON placeholder URL. Oh, yeah, actually, that one is this is good too. So this is, so this is JSON
That's okay. JSON stands for JavaScript object notation. It's, if you look at, can you open that browser tab where we, let's see, where we were requested, where we ran the API. So like the JSON placeholder URL. Oh, yeah, actually, that one is this is good too. So this is, so this is JSON This, it's just a format of describing data. In this case, it's describing a list of to do's. And you know, basically, JSON is a very simple format that a lot of APIs use for sending information across the web
This, it's just a format of describing data. In this case, it's describing a list of to do's. And you know, basically, JSON is a very simple format that a lot of APIs use for sending information across the web And it, it, it, it, it basically, the reason they call it JSON JavaScript object notation is it's the same way you would declare an object in JavaScript, right? You got curly braces. And then inside the curly braces are a set of like names of things and their values. So a user ID is a thing
And it, it, it, it, it basically, the reason they call it JSON JavaScript object notation is it's the same way you would declare an object in JavaScript, right? You got curly braces. And then inside the curly braces are a set of like names of things and their values. So a user ID is a thing Value is five. A title is a thing. Big chunk of text is the value. They're called key value pairs. Okay. A key is like, you know, this, this user ID is a key. ID is a key. Title is a key. It's, it's a key to get a value out of the object. Right
Value is five. A title is a thing. Big chunk of text is the value. They're called key value pairs. Okay. A key is like, you know, this, this user ID is a key. ID is a key. Title is a key. It's, it's a key to get a value out of the object. Right Right. With that overloading you with too much detail, JavaScript object notation looks like this. It looks like curly braces and brackets and colons. And basically, anything, any JSON object is going to either describe like just a set of names and values or a bunch of those in an array. Okay
Right. With that overloading you with too much detail, JavaScript object notation looks like this. It looks like curly braces and brackets and colons. And basically, anything, any JSON object is going to either describe like just a set of names and values or a bunch of those in an array. Okay Okay. Not too confusing. This is something that I've learned that I may not understand at 100%, but it's something that will definitely click later on. So I'm not going to stick on it. Okay. That's fine. In this case, this is a JSON object that describes a list of to-dos
Okay. Not too confusing. This is something that I've learned that I may not understand at 100%, but it's something that will definitely click later on. So I'm not going to stick on it. Okay. That's fine. In this case, this is a JSON object that describes a list of to-dos This is the list of to-dos that I pulled from my API. Okay
This is the list of to-dos that I pulled from my API. Okay Okay. We're going to display in the page, right? So going back to what people are saying in the channel, if you look at your code, the reason I'm calling JSON that stringify is react isn't going to spit out a JSON object for us and show us the contents. I need to convert it to text
Okay. We're going to display in the page, right? So going back to what people are saying in the channel, if you look at your code, the reason I'm calling JSON that stringify is react isn't going to spit out a JSON object for us and show us the contents. I need to convert it to text I need to convert it to text. Oh, so, oh, I get that part. Okay. This is just so that we can see the contents of it without throwing in there. Okay. Okay. Cool. That makes sense. All right. Great. Now, what we don't, now, that's not how we ultimately want to do it
I need to convert it to text. Oh, so, oh, I get that part. Okay. This is just so that we can see the contents of it without throwing in there. Okay. Okay. Cool. That makes sense. All right. Great. Now, what we don't, now, that's not how we ultimately want to do it We want to take each one of those to-dos and spit out something, right? So what we're going to do is to-dos is an array, and array is have a function called map, right? Which says take every element of the array and do something with it and give me the new version
We want to take each one of those to-dos and spit out something, right? So what we're going to do is to-dos is an array, and array is have a function called map, right? Which says take every element of the array and do something with it and give me the new version So what we want to do is take every to-do and we want to spit out some HTML for it. Does that make sense? Yes. All right. So delete that. All right. Let's do open up another set of curly braces because we want to react to evaluate what's in here
So what we want to do is take every to-do and we want to spit out some HTML for it. Does that make sense? Yes. All right. So delete that. All right. Let's do open up another set of curly braces because we want to react to evaluate what's in here And then we want to take to-dos and we call it to-dos.map. So evaluate, or I'll explain in a second after we type them, to-dos.map. Open curly braces. Oh, sorry. Open parentheses. All right. Now, to-dos.map is a function, as you can see, that has one function called callback function
And then we want to take to-dos and we call it to-dos.map. So evaluate, or I'll explain in a second after we type them, to-dos.map. Open curly braces. Oh, sorry. Open parentheses. All right. Now, to-dos.map is a function, as you can see, that has one function called callback function And I'm going to run whatever function we pass in here on every element of to-dos. All right. So every to-do is going to run this function and return the result. So we're going to declare another function like we did before right in here. And we'll just say function
And I'm going to run whatever function we pass in here on every element of to-dos. All right. So every to-do is going to run this function and return the result. So we're going to declare another function like we did before right in here. And we'll just say function And then it's a- You got an action? Although that sounds really cool, funcation. I need to take a funcation soon. All right. And now you'll need an open and closed curly braces for this function. I'm sorry. I keep saying curly braces. Perentices. All right
And then it's a- You got an action? Although that sounds really cool, funcation. I need to take a funcation soon. All right. And now you'll need an open and closed curly braces for this function. I'm sorry. I keep saying curly braces. Perentices. All right All right. And then after the parentheses, you need the curly braces for the body of this function. Delete that one and you'll need an opening one and a closing one. All right. Now, hit enter. Just so we got a little space in there
All right. And then after the parentheses, you need the curly braces for the body of this function. Delete that one and you'll need an opening one and a closing one. All right. Now, hit enter. Just so we got a little space in there So recapping, the outside curly braces say, react, evaluate this, and render the output. Right. To do's.map says, I'm taking the contents of the to-do's array. And for each element in the array, I'm going to run this function in here. Oh, and I forgot to mention this is important
So recapping, the outside curly braces say, react, evaluate this, and render the output. Right. To do's.map says, I'm taking the contents of the to-do's array. And for each element in the array, I'm going to run this function in here. Oh, and I forgot to mention this is important This function is going to take one parameter, a single to-do. Okay. So in the function definition that we just created, in the curly- In the parentheses, it will choose just one. Yeah. I want you to put the word to-do in there
This function is going to take one parameter, a single to-do. Okay. So in the function definition that we just created, in the curly- In the parentheses, it will choose just one. Yeah. I want you to put the word to-do in there So this is the name parameter that's coming in, right? So what this says is every time this function runs, sorry, just to-do, singular. Oh, okay. Yeah. Or we could call it anything. We call it T, whatever is easy for you. But all this is I'm taking in a single to-do at a time
So this is the name parameter that's coming in, right? So what this says is every time this function runs, sorry, just to-do, singular. Oh, okay. Yeah. Or we could call it anything. We call it T, whatever is easy for you. But all this is I'm taking in a single to-do at a time And I'm going to return what I want that to-do to turn into. For sure. Okay. And so let's start really simple. Let's just take this to-do and let's return the title. So, um, let me go to- I don't- that one can do it
And I'm going to return what I want that to-do to turn into. For sure. Okay. And so let's start really simple. Let's just take this to-do and let's return the title. So, um, let me go to- I don't- that one can do it So this function that we just created is going to take it to-do, what you- we're doing, we're taking the two to-do in as parameter. And we're- we're going to return the to-do's title. Okay. So inside the curly braces in the middle, return to-do.title. All right
So this function that we just created is going to take it to-do, what you- we're doing, we're taking the two to-do in as parameter. And we're- we're going to return the to-do's title. Okay. So inside the curly braces in the middle, return to-do.title. All righttitle. All right. Now, it might throw an error because it's returning array- or I can't remember, it might- it might work. So let's save that and don't refresh the page. Let's just scroll- A-you did. All right. So these are titles, but you can't see that they're different
title. All right. Now, it might throw an error because it's returning array- or I can't remember, it might- it might work. So let's save that and don't refresh the page. Let's just scroll- A-you did. All right. So these are titles, but you can't see that they're different So let's make each one of them in H1 tag. So go back into your code. So wrap it in an H1 or H3 maybe. Actually, no, the- the cards were H2s. Let's do H2. You don't want to wrap the return statement though. That's the to-do title. Correct. How did I just do that? And then I'm going blind
So let's make each one of them in H1 tag. So go back into your code. So wrap it in an H1 or H3 maybe. Actually, no, the- the cards were H2s. Let's do H2. You don't want to wrap the return statement though. That's the to-do title. Correct. How did I just do that? And then I'm going blind That is not good. All right. And now, may give you an error because the- because right now it just thinks that you're asking it to render out the text to do. It doesn't know its dynamic data. So you got to put it in the curly braces. So put to-do.title in curly braces. There you go. Okay
That is not good. All right. And now, may give you an error because the- because right now it just thinks that you're asking it to render out the text to do. It doesn't know its dynamic data. So you got to put it in the curly braces. So put to-do.title in curly braces. There you go. Okay There you go. Okay. That's cool. Yeah. Now, if you take a look back at it, you want to recap again and review this? Yes. So outside- from outside to end, this is a good point for Anthony. This is 90% of all react development. You'll do in the future this process. Yet- and he's right
There you go. Okay. That's cool. Yeah. Now, if you take a look back at it, you want to recap again and review this? Yes. So outside- from outside to end, this is a good point for Anthony. This is 90% of all react development. You'll do in the future this process. Yet- and he's right Like this is a lot of react development. Taking information in state of a component, taking in from somewhere, maybe from an API or maybe from outside somewhere, manipulating it, rendering it out. It's a core of it. It's a really important part of react development. Okay
Like this is a lot of react development. Taking information in state of a component, taking in from somewhere, maybe from an API or maybe from outside somewhere, manipulating it, rendering it out. It's a core of it. It's a really important part of react development. Okay Okay. And so looking at the curly's again, curly's outside, say, evaluate this and give me some kind of HTML. To do's is an array, run map on the do's. So for every to do in the array, transform it using this function that I'm giving you. And just transform it. You take it to do
Okay. And so looking at the curly's again, curly's outside, say, evaluate this and give me some kind of HTML. To do's is an array, run map on the do's. So for every to do in the array, transform it using this function that I'm giving you. And just transform it. You take it to do You take it to do. You spit out an h2 tag with to do.title in it. Boom. That's the whole thing right there. So that's all making sense. And then if I wanted to make it into the cards, you're going to do that. So let's do that. And I think your instinct is leading you in the right place
You take it to do. You spit out an h2 tag with to do.title in it. Boom. That's the whole thing right there. So that's all making sense. And then if I wanted to make it into the cards, you're going to do that. So let's do that. And I think your instinct is leading you in the right place So do you want to just try it? Yeah. Do it. Okay. So it's not going to be clicking somewhere. So I don't think I need a link. So I'm going to do this. Well, actually, picking a step back. If you delete that for a second, and let me see if I can guide your thinking a little bit. Sure. Okay
So do you want to just try it? Yeah. Do it. Okay. So it's not going to be clicking somewhere. So I don't think I need a link. So I'm going to do this. Well, actually, picking a step back. If you delete that for a second, and let me see if I can guide your thinking a little bit. Sure. Okay Sure. Okay. In this statement, we're saying do do this for every to do
Sure. Okay. In this statement, we're saying do do this for every to do So do you want to put the HTML code outside this block? Or inside? Or in other words, do you want to do all that HTML for every to do? Or do this loop for every to do inside the HTML? I want to take all of those to do this and make them different boxes. So all of these show up as boxes. Right
So do you want to put the HTML code outside this block? Or inside? Or in other words, do you want to do all that HTML for every to do? Or do this loop for every to do inside the HTML? I want to take all of those to do this and make them different boxes. So all of these show up as boxes. Right Right. So what you want to do is you want to take this big chunk of HTML, A, H, F, whatever. And you want to do that for every one of the to do. Right? Yeah. But that's to have that card. Right
Right. So what you want to do is you want to take this big chunk of HTML, A, H, F, whatever. And you want to do that for every one of the to do. Right? Yeah. But that's to have that card. Right Right. So take a copy of one of these HTML chunks, and you're going to put it inside the return statement because you want to inside the map function. Because that's happening for every to do. Okay. So it's this. Wait. Let me. Are you doing great? I'm doing some
Right. So take a copy of one of these HTML chunks, and you're going to put it inside the return statement because you want to inside the map function. Because that's happening for every to do. Okay. So it's this. Wait. Let me. Are you doing great? I'm doing some We're going to build it and then put it where it's supposed to be. Absolutely. Great approach to. So I want this is H2. I don't know why there's a rob. That's a HTML character for like the little arrow, I think. Oh, okay. And then we can call this all of what is this called? What line am I on? 70
We're going to build it and then put it where it's supposed to be. Absolutely. Great approach to. So I want this is H2. I don't know why there's a rob. That's a HTML character for like the little arrow, I think. Oh, okay. And then we can call this all of what is this called? What line am I on? 70 Use effect. No. Which one did we use for this? This was the use effect? Uh, we use the use effect and effect. Okay. Which ones are these for? Was it for use effect or was it for effect? Was it for use? This is state or use? I'm not sure what you're asking
Use effect. No. Which one did we use for this? This was the use effect? Uh, we use the use effect and effect. Okay. Which ones are these for? Was it for use effect or was it for effect? Was it for use? This is state or use? I'm not sure what you're asking Trying to say that these are all of the use states or the use, um, like what we would have used them for. But that's okay. These are all the to-dos. Okay. We'll just leave that. That works for me. And then the class name is card. And then do I link this part to something? Uh, if you want to
Trying to say that these are all of the use states or the use, um, like what we would have used them for. But that's okay. These are all the to-dos. Okay. We'll just leave that. That works for me. And then the class name is card. And then do I link this part to something? Uh, if you want to But I don't need to link it to something. Well, I guess I could link it to this. You could leave it there. Um, just so because they're, there are already links and the links have the styles.card style on them. So I don't think it'll hurt to leave there for, for now. Okay
But I don't need to link it to something. Well, I guess I could link it to this. You could leave it there. Um, just so because they're, there are already links and the links have the styles.card style on them. So I don't think it'll hurt to leave there for, for now. Okay Okay. And then I take all of this, delete it. And then I replace this with all of it. I don't know. Let's try. Oh, we need to go. Don't worry about that warning. Um, I could explain that in another, another. Segment. I just don't see. Oh, let's write there. Okay
Okay. And then I take all of this, delete it. And then I replace this with all of it. I don't know. Let's try. Oh, we need to go. Don't worry about that warning. Um, I could explain that in another, another. Segment. I just don't see. Oh, let's write there. Okay Okay. Well, now I want to see what it does. Oh, did it. What? Look at that. Okay. That was fun. I mean, there are some CSS things that I would definitely end up wanting to fix. But it did it. You want to do one more thing? If you have the time, sure. One more thing and it's going to be a fast one
Okay. Well, now I want to see what it does. Oh, did it. What? Look at that. Okay. That was fun. I mean, there are some CSS things that I would definitely end up wanting to fix. But it did it. You want to do one more thing? If you have the time, sure. One more thing and it's going to be a fast one Go into your code. Instead of making it say all the to-dos, let's make it have the to-do description. Okay. And, uh, Anthony was saying I don't think he doesn't think I have a U-state mental model yet. So that's why the question is confusing
Go into your code. Instead of making it say all the to-dos, let's make it have the to-do description. Okay. And, uh, Anthony was saying I don't think he doesn't think I have a U-state mental model yet. So that's why the question is confusing Which confess because the question he means, but I'm not surprised. It can be a little confusing. So. Okay. And then we wanted to put all of their abouts. Right? Take a look at the the Jason object that you pulled up there. Yeah
Which confess because the question he means, but I'm not surprised. It can be a little confusing. So. Okay. And then we wanted to put all of their abouts. Right? Take a look at the the Jason object that you pulled up there. Yeah Yeah. So what do they have? Oh, actually, you know what? There's no descriptions in there. I'm sorry. But we could put their IDs. Absolutely right. Go for it. So if I wanted to do that, it would be. The well, hold on. I would want to do this one. Here. And their IDs, which would be to do that. ID
Yeah. So what do they have? Oh, actually, you know what? There's no descriptions in there. I'm sorry. But we could put their IDs. Absolutely right. Go for it. So if I wanted to do that, it would be. The well, hold on. I would want to do this one. Here. And their IDs, which would be to do that. ID ID. Quickly space or squirrely. Do I need space? Do I need space right here? I don't know. Try it. Okay. You're bricks. Yay! Oh, let's get rid of that. Oh, let's get out of the room. See now you can have fun with it and kind of like change it to how you want. I think you created a monster. Good
ID. Quickly space or squirrely. Do I need space? Do I need space right here? I don't know. Try it. Okay. You're bricks. Yay! Oh, let's get rid of that. Oh, let's get out of the room. See now you can have fun with it and kind of like change it to how you want. I think you created a monster. Good Good. Good. Okay, I can leave it like that now. I was like, I did not like the the yellow, but it was like, good. And then so. So. Would. Have you heard of an Anthony? I might need your help explaining this one because now I'm just trying to connect dots. Have you heard of. Bedrock
Good. Good. Okay, I can leave it like that now. I was like, I did not like the the yellow, but it was like, good. And then so. So. Would. Have you heard of an Anthony? I might need your help explaining this one because now I'm just trying to connect dots. Have you heard of. Bedrock Bedrock. Is it bedrock CSS or bedrock HTML? I'm not sure which it's been so. I have. I don't know too much about it to be honest with you. Okay. The reason I'm asking is I'm just wondering if it would be something. For the web layout to fix these boxes
Bedrock. Is it bedrock CSS or bedrock HTML? I'm not sure which it's been so. I have. I don't know too much about it to be honest with you. Okay. The reason I'm asking is I'm just wondering if it would be something. For the web layout to fix these boxes Well, that's a fork in the road because you can fix the layout with just CSS. Before you like add another framework or library for it. And that's up to you, you know, like you can you can definitely figure I believe you could figure out if you wanted to how to fix this with just CSS. Yes
Well, that's a fork in the road because you can fix the layout with just CSS. Before you like add another framework or library for it. And that's up to you, you know, like you can you can definitely figure I believe you could figure out if you wanted to how to fix this with just CSS. Yes Yes. The question is do you want to learn more CSS or do you want to go in different direction? And I'll leave that totally up to you because I do have to jump off in a second. Yes. So do I. I think it's more of this is and let me make sure I save this before it take it back to us
Yes. The question is do you want to learn more CSS or do you want to go in different direction? And I'll leave that totally up to you because I do have to jump off in a second. Yes. So do I. I think it's more of this is and let me make sure I save this before it take it back to us It's more of just I'm not fully seen like I'm very much enjoying learning each of these platforms and like different ways of doing things. It's I'm still not to the point with when you connect them, why you would connect them together. I still struggle with this
It's more of just I'm not fully seen like I'm very much enjoying learning each of these platforms and like different ways of doing things. It's I'm still not to the point with when you connect them, why you would connect them together. I still struggle with this So that's why I'm wondering about that. Or not that I necessarily want to learn CSS. But oh, hey, I learned CSS. So would this be something that would go in here kind of thing? There's still so much learning, but this is exciting and a lot of it made sense
So that's why I'm wondering about that. Or not that I necessarily want to learn CSS. But oh, hey, I learned CSS. So would this be something that would go in here kind of thing? There's still so much learning, but this is exciting and a lot of it made sense I will say at some point, we're going to have guests on here to talk about APIs, but it might be from where I work. So that way they can explain APIs from their point of view, but we will see because I'm excited to talk more about APIs
I will say at some point, we're going to have guests on here to talk about APIs, but it might be from where I work. So that way they can explain APIs from their point of view, but we will see because I'm excited to talk more about APIs I think this is my second or third time doing an API or an SDK. So it's definitely seen it actually happen. Seems completely different than just knowing about it. Spacing words now. But whatever, y'all get what I mean
I think this is my second or third time doing an API or an SDK. So it's definitely seen it actually happen. Seems completely different than just knowing about it. Spacing words now. But whatever, y'all get what I mean It's been my brain is definitely going to mushy mush now, but in like such a good way, there's a really excited about what we built. Thank you. And knowing that there's a JSON placeholder. Yeah, stream-leaseful tool. I use it whenever I'm proof of concept and something. So you did great today
It's been my brain is definitely going to mushy mush now, but in like such a good way, there's a really excited about what we built. Thank you. And knowing that there's a JSON placeholder. Yeah, stream-leaseful tool. I use it whenever I'm proof of concept and something. So you did great today You're at you at yourself on the back. You picked up some things really well. Hopefully I had a pace that's useful to you. Right now you have something you could play with more. Yes, yes, and thank you
You're at you at yourself on the back. You picked up some things really well. Hopefully I had a pace that's useful to you. Right now you have something you could play with more. Yes, yes, and thank you And Anthony, really quick, just as a heads up, somebody from Postman is actually planning on coming on to talk about GraphQL. So well, everybody, please leave us comments. Let us know what you think. If you want to hear more about a certain subject, make sure you click follow and share these
And Anthony, really quick, just as a heads up, somebody from Postman is actually planning on coming on to talk about GraphQL. So well, everybody, please leave us comments. Let us know what you think. If you want to hear more about a certain subject, make sure you click follow and share these So thank you all. Have a wonderful day, beautiful humans. Thanks, Jen.
So thank you all. Have a wonderful day, beautiful humans. Thanks, Jen.