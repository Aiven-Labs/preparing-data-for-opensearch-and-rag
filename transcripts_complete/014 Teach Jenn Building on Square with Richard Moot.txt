Hello, hello beautiful human. Thank you for joining another teach Gen Tech. Today we have Richard and Richard, please introduce yourself and what we're going to be learning about today. Thanks. I'm happy to be here. I'm Richard Boote I'm Richard Boote. I lead our developer advocacy team for square, which is a formerly known as block formerly known as square. And then I also lead an API design team within block to help other teams in designing and building APIs
I'm Richard Boote. I lead our developer advocacy team for square, which is a formerly known as block formerly known as square. And then I also lead an API design team within block to help other teams in designing and building APIs And today we're going to learn how to build on squares platform and all the things that you know you could do with it. I'm pretty excited about this to follow up from Bakaris to episodes and also for everybody that was like getting excited to join right away
And today we're going to learn how to build on squares platform and all the things that you know you could do with it. I'm pretty excited about this to follow up from Bakaris to episodes and also for everybody that was like getting excited to join right away And I always definitely distracted with learning the difference between like the API designs, comparative governance. And that's a story for another day. But Richard does cool things is what I'm getting to. So all right, where would you like us to start today because I do have my dashboard
And I always definitely distracted with learning the difference between like the API designs, comparative governance. And that's a story for another day. But Richard does cool things is what I'm getting to. So all right, where would you like us to start today because I do have my dashboard I got terminal. I got VS code. So I can start wherever you would like. Sure. You would probably be helpful. Yeah, let's let's start there. The one thing I didn't get ready because I was just so excited to ask you a million questions before we went live. All right. So I have all three up right now
I got terminal. I got VS code. So I can start wherever you would like. Sure. You would probably be helpful. Yeah, let's let's start there. The one thing I didn't get ready because I was just so excited to ask you a million questions before we went live. All right. So I have all three up right now Perfect. So we have your application info. I guess my question for you is what like, you know, trying to like sort of build off of some of the things that you were learning previously with the car. Like what would be the thing that you're like more interested in knowing about
Perfect. So we have your application info. I guess my question for you is what like, you know, trying to like sort of build off of some of the things that you were learning previously with the car. Like what would be the thing that you're like more interested in knowing about And like maybe we can kind of figure out what's figure out like how to sort of decompose that a little bit. And so like learn each one of those pieces as we go along. Sure. That is a great question. And I'm going to load has really click
And like maybe we can kind of figure out what's figure out like how to sort of decompose that a little bit. And so like learn each one of those pieces as we go along. Sure. That is a great question. And I'm going to load has really click I would say something that I got a let oh, it's just getting changes. I'm a little bit documents. There we go. This is breaking it down pretty basic. So bear with me
I would say something that I got a let oh, it's just getting changes. I'm a little bit documents. There we go. This is breaking it down pretty basic. So bear with me So bear with me. Is when we were talking about with his application or his training, it was building a web payments in express weight in next with the react wrapper. Correct. And I think that's where I was getting a little mixed up was next is one format and then react is another format. Right
So bear with me. Is when we were talking about with his application or his training, it was building a web payments in express weight in next with the react wrapper. Correct. And I think that's where I was getting a little mixed up was next is one format and then react is another format. Right Right. I mean, they're both JavaScript, but they're two different formats. Right. How does that work? Yeah. So like so yeah, the tools that you're using is next JS, which is like a framework. It's actually like a combination of node JS and react
Right. I mean, they're both JavaScript, but they're two different formats. Right. How does that work? Yeah. So like so yeah, the tools that you're using is next JS, which is like a framework. It's actually like a combination of node JS and react And so you think of like all the stuff on node JS and it is like this is all like your back end style stuff. This is running on the server. React is like what is going to be like managing your UI flows and everything
And so you think of like all the stuff on node JS and it is like this is all like your back end style stuff. This is running on the server. React is like what is going to be like managing your UI flows and everything And the the oddity that you're going to get from using next JS right off the back is these things are kind of like merged together. So next yes is really almost like using like react is like a templating engine to like display data back to a user as they're like navigating through the site
And the the oddity that you're going to get from using next JS right off the back is these things are kind of like merged together. So next yes is really almost like using like react is like a templating engine to like display data back to a user as they're like navigating through the site And I think that part of that when you're first learning about react or learning about like back in programming
And I think that part of that when you're first learning about react or learning about like back in programming Merging those together, even for people who are like really familiar with react, it can get really confusing because there's like all this other stuff like server side rendering and things that it's like we have to make all these like decisions at various points. But I think kind of confuse it
Merging those together, even for people who are like really familiar with react, it can get really confusing because there's like all this other stuff like server side rendering and things that it's like we have to make all these like decisions at various points. But I think kind of confuse it So I think one of the things we could do is we can just try to do like a basic create react app. I don't know if you've ever done one of those before. I have with Anthony. We did a react app with Vite and Versel. But that was when I first barely started
So I think one of the things we could do is we can just try to do like a basic create react app. I don't know if you've ever done one of those before. I have with Anthony. We did a react app with Vite and Versel. But that was when I first barely started So I think it was actually like episode number two. And trying to go back through that by myself was definitely very difficult. So I'm not opposed to doing that again. Because it's like I think a big part of it
So I think it was actually like episode number two. And trying to go back through that by myself was definitely very difficult. So I'm not opposed to doing that again. Because it's like I think a big part of it And this is for everybody learning is being able, especially with coding and learning all these languages. I've noticed that I may not understand everything somebody's telling me first off. And then it starts to make sense once I do it a few times
And this is for everybody learning is being able, especially with coding and learning all these languages. I've noticed that I may not understand everything somebody's telling me first off. And then it starts to make sense once I do it a few times And then also being able to relate it to something else. So by the time I worked with the curry, I was like, OK, this is starting to make a lot more sense. Yet how to relate what I learned with him to get to what I learned with creating the react app with the inversal from like episode two
And then also being able to relate it to something else. So by the time I worked with the curry, I was like, OK, this is starting to make a lot more sense. Yet how to relate what I learned with him to get to what I learned with creating the react app with the inversal from like episode two That's not quite going through. So let's just pull up your terminal. And are we in the directory where you would be sort of creating new projects? I will be shortly cool. I was like watching like how other people organize where all like their projects go
That's not quite going through. So let's just pull up your terminal. And are we in the directory where you would be sort of creating new projects? I will be shortly cool. I was like watching like how other people organize where all like their projects go And I just have like this one projects folder somewhere. And I just like every little experiment I ever do just slammed into that folder. Yeah, that's something from very, very early on Ramon suggested that I create a folder. And I'm like, what do you mean it? And he's like, Code folder works
And I just have like this one projects folder somewhere. And I just like every little experiment I ever do just slammed into that folder. Yeah, that's something from very, very early on Ramon suggested that I create a folder. And I'm like, what do you mean it? And he's like, Code folder works I'm like, OK, that's what I'm going to name it. That is it's me. Whatever works. Yeah. So we're going to use a front of command called where it's going to be npx and then space. And then create dash react dash app
I'm like, OK, that's what I'm going to name it. That is it's me. Whatever works. Yeah. So we're going to use a front of command called where it's going to be npx and then space. And then create dash react dash app And so to briefly explain, are you familiar with like using npx? I'll give like the quickest explanation of this. I'm guessing npx is like npn. I get very excited and hit enter a lot. So you might drive you insane. I try not to. But I get really excited. I've never done this
And so to briefly explain, are you familiar with like using npx? I'll give like the quickest explanation of this. I'm guessing npx is like npn. I get very excited and hit enter a lot. So you might drive you insane. I try not to. But I get really excited. I've never done this So we're going to learn like what happens. I'm pretty sure it's going to ask you like what you want to name your project. Because that's the only thing we're missing is like naming what we want this to be. Yes, I think I did a bit of this with. Oh, OK, so it's yelling at us, which is fine
So we're going to learn like what happens. I'm pretty sure it's going to ask you like what you want to name your project. Because that's the only thing we're missing is like naming what we want this to be. Yes, I think I did a bit of this with. Oh, OK, so it's yelling at us, which is fine So we'll run the command again and then we can go ahead and just name name this. And while you're running the command, I can do you like the quick explanation. So npx is just really a way to immediately run an npm package. That's within the npm package manager system
So we'll run the command again and then we can go ahead and just name name this. And while you're running the command, I can do you like the quick explanation. So npx is just really a way to immediately run an npm package. That's within the npm package manager system So for certain tools like create react app, create next app and like other sort of like. Almost like command line tools. It's really easy to just use npx. Instead of like having to like install that package globally and like managing a version of it on your machine
So for certain tools like create react app, create next app and like other sort of like. Almost like command line tools. It's really easy to just use npx. Instead of like having to like install that package globally and like managing a version of it on your machine You just say just go fetch it and run it and then ignore it. OK, so just to recap npx doesn't download it to the machine. It just pulls the information where npm downloads it. Right
You just say just go fetch it and run it and then ignore it. OK, so just to recap npx doesn't download it to the machine. It just pulls the information where npm downloads it. Right Right. Because typically you ran like npm install, I would like try to install it like you're running like a node app in this particular directory. npx is like a way to just sort of like use a tool that's already hosted somewhere
Right. Because typically you ran like npm install, I would like try to install it like you're running like a node app in this particular directory. npx is like a way to just sort of like use a tool that's already hosted somewhere I think if we're getting really personickity, it does cash stuff on your machine somewhere. But it's like it's not like you're installing it globally and always you know running it from. Cool. So now we just want to change directories to Richard is rad
I think if we're getting really personickity, it does cash stuff on your machine somewhere. But it's like it's not like you're installing it globally and always you know running it from. Cool. So now we just want to change directories to Richard is rad And I'm just because I haven't actually fixed this yet. I'm just gonna. Yeah, there we go. Okay, cool. And then we could just run code and then period and then that'll pop it open in the code for us
And I'm just because I haven't actually fixed this yet. I'm just gonna. Yeah, there we go. Okay, cool. And then we could just run code and then period and then that'll pop it open in the code for us So I think it's like, yes, because that's what I had to just do because it doesn't actually work normally. So every single time I have to redo that first part to tell it to run it, even though I've enabled it a million times
So I think it's like, yes, because that's what I had to just do because it doesn't actually work normally. So every single time I have to redo that first part to tell it to run it, even though I've enabled it a million times I tried doing it fixing it based on an article someone sent me and I broke bash. It wouldn't even pull a directory. So I'm just man, I'm like going to do it. And at some point I will ask someone from Microsoft of how to fix it
I tried doing it fixing it based on an article someone sent me and I broke bash. It wouldn't even pull a directory. So I'm just man, I'm like going to do it. And at some point I will ask someone from Microsoft of how to fix it Yeah, the amount of times that I've had to like start wrestling with the S code is way too often. So let's go ahead and just run this. We can actually go to the terminal and just run npm start. And then we should pop open your browser. And we can see the basic create react app running
Yeah, the amount of times that I've had to like start wrestling with the S code is way too often. So let's go ahead and just run this. We can actually go to the terminal and just run npm start. And then we should pop open your browser. And we can see the basic create react app running Yeah, we see that it's running. Yes. So let's try and just get that react payment form running in the react app. So first let's kill our server. And we're going to run npm install. And we're going to name the package react square. It's always are yeah, hyphens perfect. Square web payments SDK
Yeah, we see that it's running. Yes. So let's try and just get that react payment form running in the react app. So first let's kill our server. And we're going to run npm install. And we're going to name the package react square. It's always are yeah, hyphens perfect. Square web payments SDK Web dash sorry web dash payments. And then dash SDK. This time we have a plural. So we should definitely be getting the correct package. So we're going to do that. We're going to do that. We're going to do that. You know, it's a fun one. Finding that kind of stuff. Cool
Web dash sorry web dash payments. And then dash SDK. This time we have a plural. So we should definitely be getting the correct package. So we're going to do that. We're going to do that. We're going to do that. You know, it's a fun one. Finding that kind of stuff. Cool Cool. Okay, we can just ignore these vulnerabilities for now. And we can just go ahead and get our development server running again. So just npm start. And. And we'll just sort of like let that run in the background and then let's go over to VS code. And then. React square web payments SDK
Cool. Okay, we can just ignore these vulnerabilities for now. And we can just go ahead and get our development server running again. So just npm start. And. And we'll just sort of like let that run in the background and then let's go over to VS code. And then. React square web payments SDK So we'll navigate to source or src there. And then let's just open up the app.js file. Interesting. I'm going to take a moment because like this was super super easy just to. Install it and use it. And I remember like the day after. That I tried to do it myself
So we'll navigate to source or src there. And then let's just open up the app.js file. Interesting. I'm going to take a moment because like this was super super easy just to. Install it and use it. And I remember like the day after. That I tried to do it myself I was like, why is this so complicated? It's not apparently, you know, I just it wasn't clicking yet. All right. Thank you. I think what you're pointing out something is really good that I think is like important to call it. And I say this because like being in like leading an individual team
I was like, why is this so complicated? It's not apparently, you know, I just it wasn't clicking yet. All right. Thank you. I think what you're pointing out something is really good that I think is like important to call it. And I say this because like being in like leading an individual team I'm very much always thinking about developer experience. And one of the things that I always think about with this stuff in particular is sometimes it's almost too magical. Where it's like, oh, I just ran this like little command. It created this whole thing for me
I'm very much always thinking about developer experience. And one of the things that I always think about with this stuff in particular is sometimes it's almost too magical. Where it's like, oh, I just ran this like little command. It created this whole thing for me And then there's a part of your brain that goes that was just too easy. And then you see something. And like I always like think about that when it's like if you actually have something like do too many things for someone
And then there's a part of your brain that goes that was just too easy. And then you see something. And like I always like think about that when it's like if you actually have something like do too many things for someone They start to go like wait, there's something that I'm missing and like this is going to bite me later. Thanks. Thanks. Like now, like this is like just gets us in the most basic of a react app where it's it's loading stuff
They start to go like wait, there's something that I'm missing and like this is going to bite me later. Thanks. Thanks. Like now, like this is like just gets us in the most basic of a react app where it's it's loading stuff You know, has a functional component there is that we can actually like start editing and it'll like update everything in real time. And then I think that's a great call out because yesterday I learned about bed rocks, CSS. I believe that's what it's called. You know, it was yesterday
You know, has a functional component there is that we can actually like start editing and it'll like update everything in real time. And then I think that's a great call out because yesterday I learned about bed rocks, CSS. I believe that's what it's called. You know, it was yesterday I should probably remember, but it was really cool because Travis taught me how to manually do this and do all of the web layouts. And then showed me how better off could do it if within HTML. It was like really cool learning how to do it the hard way and then seeing how the easy way could work
I should probably remember, but it was really cool because Travis taught me how to manually do this and do all of the web layouts. And then showed me how better off could do it if within HTML. It was like really cool learning how to do it the hard way and then seeing how the easy way could work But I knew how much went into it beforehand kind of like what you're saying of that was too easy
But I knew how much went into it beforehand kind of like what you're saying of that was too easy Yeah, I feel that way about create react app a lot of the time where it's really, really great for like you know when you just want to like put together like a UI really quick and not think about all that stuff
Yeah, I feel that way about create react app a lot of the time where it's really, really great for like you know when you just want to like put together like a UI really quick and not think about all that stuff But there's a few times where I've had to like sort of there's a thing called ejecting the create react app and that basically like undoes all the magic for you and then you can manually tinker with things
But there's a few times where I've had to like sort of there's a thing called ejecting the create react app and that basically like undoes all the magic for you and then you can manually tinker with things But it's it's very intimidating when you actually have to like look at like your full project directory and all that. So let's go ahead at the top there and we'll import some components from the react square web payments SDK. So we'll just do import. And then we will do some curly brackets
But it's it's very intimidating when you actually have to like look at like your full project directory and all that. So let's go ahead at the top there and we'll import some components from the react square web payments SDK. So we'll just do import. And then we will do some curly brackets And then we're going to just go past that and put a space. And then quotes and then react square web payments SDK again. So we auto complete the win. Web payments
And then we're going to just go past that and put a space. And then quotes and then react square web payments SDK again. So we auto complete the win. Web payments Web payments. See, this is where like auto complete is just a so clutch because you can't mess it up because it's actually like looking in your modules folder to like find the right one. Yes. So let's put a I think it's probably wanting you to put a colon at the end there. First any calling. Yeah
Web payments. See, this is where like auto complete is just a so clutch because you can't mess it up because it's actually like looking in your modules folder to like find the right one. Yes. So let's put a I think it's probably wanting you to put a colon at the end there. First any calling. Yeah Yeah. And then let's go back into those curly brackets and like let's import the. I feel like I need to look up documentation here. I think this is probably something that's like worthwhile. I don't know. I think I could probably send this to you in a chat. So I think it's a documentation
Yeah. And then let's go back into those curly brackets and like let's import the. I feel like I need to look up documentation here. I think this is probably something that's like worthwhile. I don't know. I think I could probably send this to you in a chat. So I think it's a documentation There you go. I just Google it. Yeah. That's the two people real coding by Google and stuff. Because this one. So not that one. You want the. We can actually go out. Well, no, we want to go off the GitHub package. So just. And then from there, we can get to the documentation
There you go. I just Google it. Yeah. That's the two people real coding by Google and stuff. Because this one. So not that one. You want the. We can actually go out. Well, no, we want to go off the GitHub package. So just. And then from there, we can get to the documentation Because I haven't done much in GitHub. Like, result taught me about it. And then I'm like, I haven't touched it. Yeah. Scared touch it. Yeah
Because I haven't done much in GitHub. Like, result taught me about it. And then I'm like, I haven't touched it. Yeah. Scared touch it. Yeah Yeah. GitHub is great because like this is, you know, when you start really tinkering with other packages, you sometimes end up going and like reading through other people's code to inside of the thing on GitHub to be like, is this actually going to do the thing that I want it to do
Yeah. GitHub is great because like this is, you know, when you start really tinkering with other packages, you sometimes end up going and like reading through other people's code to inside of the thing on GitHub to be like, is this actually going to do the thing that I want it to do If we want to see our docs. So they have a really good read me if we scroll down, but you can see the docs linked on the right there. Yeah. That's a much nicer setup. So the reason that this is all separate is this is actually a package that was created by one of our community members
If we want to see our docs. So they have a really good read me if we scroll down, but you can see the docs linked on the right there. Yeah. That's a much nicer setup. So the reason that this is all separate is this is actually a package that was created by one of our community members Called seed and they basically built this entire wrapper around what our web payments SDK. And it's actually modeled after one that we built ourselves for the. There's a thing before web payments SDK for anyone who enjoys the history of payment forms called SQL payment form
Called seed and they basically built this entire wrapper around what our web payments SDK. And it's actually modeled after one that we built ourselves for the. There's a thing before web payments SDK for anyone who enjoys the history of payment forms called SQL payment form And then we deprecated that. And now we have what payment SDK and then before we could even build our own react wrapper, you know, these folks built one and it's great. It's modeled like exactly how we did our previous one. Very cool
And then we deprecated that. And now we have what payment SDK and then before we could even build our own react wrapper, you know, these folks built one and it's great. It's modeled like exactly how we did our previous one. Very cool Very cool. So if we click on the docs there, we can at least have this up and this will help give you a little bit of context of the components that we're going to be pulling in. And then we could also reference like any options that we want to mess with. Yeah
Very cool. So if we click on the docs there, we can at least have this up and this will help give you a little bit of context of the components that we're going to be pulling in. And then we could also reference like any options that we want to mess with. Yeah Yeah. So we can click on docs and then here we can sort of see like these are all the different components that we have. Oh, interesting. Okay. And so we've already kind of gone in installation, but we can kind of take a peek at that
Yeah. So we can click on docs and then here we can sort of see like these are all the different components that we have. Oh, interesting. Okay. And so we've already kind of gone in installation, but we can kind of take a peek at that Okay, so this is giving us like the basically some of the stuff we already did. So we want to pull in payment form and credit card. I feel like I'm being really blind getting started. Perhaps credit card. Oh, sorry. It's actually like you scrolled past it on the right. Oh, thank you
Okay, so this is giving us like the basically some of the stuff we already did. So we want to pull in payment form and credit card. I feel like I'm being really blind getting started. Perhaps credit card. Oh, sorry. It's actually like you scrolled past it on the right. Oh, thank you Oh, thank you. Yeah, you can see like the steps that are on the under fast track. We say like how do I get this up and running. So we already did the NPM install. So the next thing we want to do is bring in that payment. Payment office. Okay. So credit card. Don't payment form
Oh, thank you. Yeah, you can see like the steps that are on the under fast track. We say like how do I get this up and running. So we already did the NPM install. So the next thing we want to do is bring in that payment. Payment office. Okay. So credit card. Don't payment form Don't payment form. That's the first one. Yeah. So just to verify. So we always put this in app.js. So we're going to put in the root component of our React app right now. And so I remember you saying this last time, we're going to try and avoid copy pasting from the docs into our app
Don't payment form. That's the first one. Yeah. So just to verify. So we always put this in app.js. So we're going to put in the root component of our React app right now. And so I remember you saying this last time, we're going to try and avoid copy pasting from the docs into our app We're going to try and actually like write these out so that you feel like, okay, like I actually like pulled this in. We can go step by step on what's going on here. So the first one is in those clearly braces. And then we'll put a comma after that. And then we'll also bring in credit card
We're going to try and actually like write these out so that you feel like, okay, like I actually like pulled this in. We can go step by step on what's going on here. So the first one is in those clearly braces. And then we'll put a comma after that. And then we'll also bring in credit card And we'll just start with that for now. Okay, cool. Now I don't know why it's upset with us about. Oh, yes, I sort of, we've got the from. I don't know why it's upset with us about. Oh, yes, I sort of, we've got the from. Oh, import from other. I see. There we go
And we'll just start with that for now. Okay, cool. Now I don't know why it's upset with us about. Oh, yes, I sort of, we've got the from. I don't know why it's upset with us about. Oh, yes, I sort of, we've got the from. Oh, import from other. I see. There we go I see. There we go. So now we can go ahead and replace some of these components or some of these HTML elements inside of that function. So let's go ahead and remove that a. The anchor elements. And then let's just put the payment form there. So we'll do. So it would be the export default function
I see. There we go. So now we can go ahead and replace some of these components or some of these HTML elements inside of that function. So let's go ahead and remove that a. The anchor elements. And then let's just put the payment form there. So we'll do. So it would be the export default function So just below that we want to put what you see there is like. What is that? It's a less than. It's like a bracket and then. I'm catching. Oh, okay, because we have the return up here. Right. Do
So just below that we want to put what you see there is like. What is that? It's a less than. It's like a bracket and then. I'm catching. Oh, okay, because we have the return up here. Right. Do Right. Do. And then we're not doing questions about like how it like what's going on here? Feel free to fire them away and I'm happy to like walk through like what's going on in the component right now. Okay, cool. Thank you. And what up, Ben. Ben taught us about web accessibility last week
Right. Do. And then we're not doing questions about like how it like what's going on here? Feel free to fire them away and I'm happy to like walk through like what's going on in the component right now. Okay, cool. Thank you. And what up, Ben. Ben taught us about web accessibility last week And we're going to do even more. There's so much learning about the web, the internet, so much internet. So I think just as a side question of like we right here it looks like they put export default function app at the top. Where it looks like it's at the bottom here
And we're going to do even more. There's so much learning about the web, the internet, so much internet. So I think just as a side question of like we right here it looks like they put export default function app at the top. Where it looks like it's at the bottom here Does that make a difference? That's more of a stylistic thing. Okay. And you can choose to do it in either place. The important part about that exporting is just it's so that you can pull it in from like from that file into another file
Does that make a difference? That's more of a stylistic thing. Okay. And you can choose to do it in either place. The important part about that exporting is just it's so that you can pull it in from like from that file into another file And we actually probably want to move this payment form to underneath the day within the. Within the div. Within the div. Yeah. So like kind of like where we just deleted the anchor tag. Let's just write it in there underneath that paragraph. It's perfect right there. And for now
And we actually probably want to move this payment form to underneath the day within the. Within the div. Within the div. Yeah. So like kind of like where we just deleted the anchor tag. Let's just write it in there underneath that paragraph. It's perfect right there. And for now And for now. So yeah, we'll just do payment form and then just ignore that thing with like the ellipses and the props. Okay. And we can just do a closing bracket. All right, and we hit enter. And then let's put in the credit card component exactly what you just did with the payment form
And for now. So yeah, we'll just do payment form and then just ignore that thing with like the ellipses and the props. Okay. And we can just do a closing bracket. All right, and we hit enter. And then let's put in the credit card component exactly what you just did with the payment form Just going to look at it. So I like I'm starting to associate you know. Yeah. I think that's like the hardest thing is recreating it. I'm like I'm really good at doing it when someone tells me to. And then do I do the name of what we called the app
Just going to look at it. So I like I'm starting to associate you know. Yeah. I think that's like the hardest thing is recreating it. I'm like I'm really good at doing it when someone tells me to. And then do I do the name of what we called the app So for now, we actually and here's one thing that we want to do is we want to delete that last credit card one. So we're going to do basically like a singular. Like I don't know how to describe this, but basically like you can put a slash at the end of credit card right now
So for now, we actually and here's one thing that we want to do is we want to delete that last credit card one. So we're going to do basically like a singular. Like I don't know how to describe this, but basically like you can put a slash at the end of credit card right now And it will like just do space slash. In the bracket or in the inside of the brackets and what that does is it basically like says like this is just like a closed component. It's not going to take in anything within inside of it. It's just a singular thing. That's cool
And it will like just do space slash. In the bracket or in the inside of the brackets and what that does is it basically like says like this is just like a closed component. It's not going to take in anything within inside of it. It's just a singular thing. That's cool That's cool. You have the sometimes like image like you can see up above on the image HTML element. You don't ever put anything inside of an image. It only usually references stuff. And so you can just close. Okay. Yeah
That's cool. You have the sometimes like image like you can see up above on the image HTML element. You don't ever put anything inside of an image. It only usually references stuff. And so you can just close. Okay. Yeah Okay. Yeah. It's a way of just sort of like writing the markup language to say, hey, there's nothing else that actually goes inside this thing. Ben said we call this self closing. Self closing. Thank you, Ben. All right
Okay. Yeah. It's a way of just sort of like writing the markup language to say, hey, there's nothing else that actually goes inside this thing. Ben said we call this self closing. Self closing. Thank you, Ben. All right All right. And you somebody, you know, just put it out there and the internet will correct you. Oh, yesterday I was on a Twitter space and I was like, I don't even. I'm just going to say that we've been talking about this one thing and I just spaced what it's called. So it's cool. Now, no big deal
All right. And you somebody, you know, just put it out there and the internet will correct you. Oh, yesterday I was on a Twitter space and I was like, I don't even. I'm just going to say that we've been talking about this one thing and I just spaced what it's called. So it's cool. Now, no big deal Now, no big deal. Okay. Cool. So I think have we saved it's probably going to give us a bunch of errors in. I did just say it. Perfect. Let's go back over to your browser and like look at what it's going to tell us that we have wrong. Go back, go back. Well, what? Just type local host
Now, no big deal. Okay. Cool. So I think have we saved it's probably going to give us a bunch of errors in. I did just say it. Perfect. Let's go back over to your browser and like look at what it's going to tell us that we have wrong. Go back, go back. Well, what? Just type local host I'm sure it will want to get local host to be a thousand. Oh, close. What the heck? I'm just going to type it. But the domain local host. Okay. So it's a whole host 3000. There we go. Okay. Now let's, um, we can open up our dev tools and let's take the peak
I'm sure it will want to get local host to be a thousand. Oh, close. What the heck? I'm just going to type it. But the domain local host. Okay. So it's a whole host 3000. There we go. Okay. Now let's, um, we can open up our dev tools and let's take the peak I'm pretty sure that we're missing a few props that we need to set. Let's close that what's new and chrome because hopefully you're not needing to know what's new and chrome right now. No, no. If you had a scape, we can open up your console again. And then you just want to close that little X back
I'm pretty sure that we're missing a few props that we need to set. Let's close that what's new and chrome because hopefully you're not needing to know what's new and chrome right now. No, no. If you had a scape, we can open up your console again. And then you just want to close that little X back Oh, thank you. Oh, there we go. All right. So we can see please contact your developer. Okay. That would be me and you. So we can contact ourselves to find out what's going on. So yeah, I think what we need to do is on the payment form, we need to set our application ID and location ID. Okay
Oh, thank you. Oh, there we go. All right. So we can see please contact your developer. Okay. That would be me and you. So we can contact ourselves to find out what's going on. So yeah, I think what we need to do is on the payment form, we need to set our application ID and location ID. Okay Okay. And where in here, what I have gotten that or is that just like, you know, you learn it as you go and what if no, not. I actually just noticed. And so
Okay. And where in here, what I have gotten that or is that just like, you know, you learn it as you go and what if no, not. I actually just noticed. And so And so. I'm looking at the errors and like this probably could be a little bit more descriptive and like sort of telling us that, you know, we're missing some required props. Okay. I made the mistake last time of see if it actually does it on the not, not. That's okay
And so. I'm looking at the errors and like this probably could be a little bit more descriptive and like sort of telling us that, you know, we're missing some required props. Okay. I made the mistake last time of see if it actually does it on the not, not. That's okay That's okay. That was looking applications. So y'all can see that. But. I got to find a mom. That's okay. Yay. Because I what actually I'm going to sidetrack myself. How did we look it up in here because it wasn't what up the car. Because it wasn't like a known area to find this information
That's okay. That was looking applications. So y'all can see that. But. I got to find a mom. That's okay. Yay. Because I what actually I'm going to sidetrack myself. How did we look it up in here because it wasn't what up the car. Because it wasn't like a known area to find this information Like it was kind of difficult to find it. What was it again? So the application ID and location ID, you can find them inside of that app there. And so we already have that one that's precarious dope. We can go ahead and use those credentials
Like it was kind of difficult to find it. What was it again? So the application ID and location ID, you can find them inside of that app there. And so we already have that one that's precarious dope. We can go ahead and use those credentials And from here, you know, that's your application ID right there. And then below that is your access token. Okay. And then. And funny thing is after we after watching and learning along with you last time. I actually forwarded that on to my designers because I thought it was very interesting that
And from here, you know, that's your application ID right there. And then below that is your access token. Okay. And then. And funny thing is after we after watching and learning along with you last time. I actually forwarded that on to my designers because I thought it was very interesting that It was so hard to find exactly. And so, you know, the car. We need a difference. And then does it say in here where the location is. So it's because you have a kind of. That's a lot better than. Okay. It's the. For not. Copy that application. And. Really quick
It was so hard to find exactly. And so, you know, the car. We need a difference. And then does it say in here where the location is. So it's because you have a kind of. That's a lot better than. Okay. It's the. For not. Copy that application. And. Really quick And. Really quick. Is it just me or is Richard breaking up for everybody? It might just be me. It is my being my internet gets a little bit wonky here and there. Oh, right. Okay. You sound better, I think. I heard something, something, something application ID. And then. That's about. Yeah
And. Really quick. Is it just me or is Richard breaking up for everybody? It might just be me. It is my being my internet gets a little bit wonky here and there. Oh, right. Okay. You sound better, I think. I heard something, something, something application ID. And then. That's about. Yeah That's about. Yeah. So we can go ahead and copy over that application ID. And so like inside of the payment, the top payment form bracket. Let's press enter. Inside the bracket. Yeah. We're going to put in some new lines. And do another one. Just
That's about. Yeah. So we can go ahead and copy over that application ID. And so like inside of the payment, the top payment form bracket. Let's press enter. Inside the bracket. Yeah. We're going to put in some new lines. And do another one. Just Just. We're going to kind of like keep this well form out of the hit tab. And then let's just start typing in application ID. So that's how it's going to work. Yeah. It's not like a robot. No, the car is. That's that you two are breaking up. Sorry. That was a very, very bad sidetrack. That was my
Just. We're going to kind of like keep this well form out of the hit tab. And then let's just start typing in application ID. So that's how it's going to work. Yeah. It's not like a robot. No, the car is. That's that you two are breaking up. Sorry. That was a very, very bad sidetrack. That was my That was my. All right. Sorry. Payment form. And what am I doing? Let's hit tab. And then we're going to type in application. And hopefully there we go. And then we're going to type in location. And then let's go another new line. And then we're going to type in location. Patient ID
That was my. All right. Sorry. Payment form. And what am I doing? Let's hit tab. And then we're going to type in application. And hopefully there we go. And then we're going to type in location. And then let's go another new line. And then we're going to type in location. Patient ID Patient ID. And then the location was over here. If you know that I saw locations, right? Perfect. And so this is like the easy way to find the location in your account. But there is also like a locations API. But I mean, that's not relevant here
Patient ID. And then the location was over here. If you know that I saw locations, right? Perfect. And so this is like the easy way to find the location in your account. But there is also like a locations API. But I mean, that's not relevant here But it's just to mention to someone you can dynamically fetch this information. Using our APIs. But for now, this is just for us. And location always needed as often as credentials are. Like is it always part of credentials? Not necessarily
But it's just to mention to someone you can dynamically fetch this information. Using our APIs. But for now, this is just for us. And location always needed as often as credentials are. Like is it always part of credentials? Not necessarily So this is like more going into like how things work with our APIs. But like a lot of things are are scoped to a location. So like certain customers or customers of that key bad example. Like catalog items that somebody might have. And their square account. Those are typically scoped to locations
So this is like more going into like how things work with our APIs. But like a lot of things are are scoped to a location. So like certain customers or customers of that key bad example. Like catalog items that somebody might have. And their square account. Those are typically scoped to locations Orders that are created or scope to a location. Because like a single square seller could have multiple locations. And so we have to make sure that the order goes to the particular location. Because that's how they might do their own reporting and tracking. Like, you know, which locations making
Orders that are created or scope to a location. Because like a single square seller could have multiple locations. And so we have to make sure that the order goes to the particular location. Because that's how they might do their own reporting and tracking. Like, you know, which locations making You know, certain amount of money kind of thing. Okay. Safe. All right. So now we have to make sure that the order goes to the particular location. So now we should have something. Oh, we do. We got the inform. Yay. Cool. And then if we wanted to do account
You know, certain amount of money kind of thing. Okay. Safe. All right. So now we have to make sure that the order goes to the particular location. So now we should have something. Oh, we do. We got the inform. Yay. Cool. And then if we wanted to do account Or what was the one that McCarrion, I did the that would do it through. Like the. Yeah. So if I wanted. Now I just want to see if I can do it. Yeah. So I think it would be here. And. Maybe. Yeah. And so we just pull in another component. And it would just be
Or what was the one that McCarrion, I did the that would do it through. Like the. Yeah. So if I wanted. Now I just want to see if I can do it. Yeah. So I think it would be here. And. Maybe. Yeah. And so we just pull in another component. And it would just be What I have to do all of this for payment form then for the ACH. Or would I do. You just add in that ACH component below the credit card one. And I'd have to add it into the payment form up here, right. And then you just do the same thing. Yep. You just auto complete ACH
What I have to do all of this for payment form then for the ACH. Or would I do. You just add in that ACH component below the credit card one. And I'd have to add it into the payment form up here, right. And then you just do the same thing. Yep. You just auto complete ACH And then we want to self closing as well. And. And then we want to self closing as well. And. And then we want to self closing as well. And. And. Yeah. So there we go. Probably a little silly how excited. I just got out of that. But hey, that was exciting. Yeah. So now we have anything
And then we want to self closing as well. And. And then we want to self closing as well. And. And then we want to self closing as well. And. And. Yeah. So there we go. Probably a little silly how excited. I just got out of that. But hey, that was exciting. Yeah. So now we have anything Or at least it's not working, but we have them rendering. Yay. So now we need to actually sort of wire this up to get it working. And now working in this case for us is just going to be let's get a payment token. So we need to actually define what to do when somebody clicks the pay button
Or at least it's not working, but we have them rendering. Yay. So now we need to actually sort of wire this up to get it working. And now working in this case for us is just going to be let's get a payment token. So we need to actually define what to do when somebody clicks the pay button So there's another, we need to define a function. And I'm just double checking because I'm pretty sure it's just card, nonce. That's actually going to, yeah, into the docs under credit card or actually maybe it's under props. No callbacks, yes, that's what we want
So there's another, we need to define a function. And I'm just double checking because I'm pretty sure it's just card, nonce. That's actually going to, yeah, into the docs under credit card or actually maybe it's under props. No callbacks, yes, that's what we want Um, yeah, that's not confusing at all. This isn't, no, this is actually probably not correct. The amount of time it's been since I've done this is showing. Okay, so it is card tokenized response received is the name of the prop. So after location ID
Um, yeah, that's not confusing at all. This isn't, no, this is actually probably not correct. The amount of time it's been since I've done this is showing. Okay, so it is card tokenized response received is the name of the prop. So after location ID So if we actually go to the very top again, I probably should orient you into the docs, click on props there. And so these are all required properties for our payment form. So we have application ID, that one's always required
So if we actually go to the very top again, I probably should orient you into the docs, click on props there. And so these are all required properties for our payment form. So we have application ID, that one's always required There's certain instances where you technically don't need a location ID, but when you're doing stuff like ACH or digital wallets, I think maybe even gift cards and after pay, you do have to define a location ID because those payments get linked directly to that
There's certain instances where you technically don't need a location ID, but when you're doing stuff like ACH or digital wallets, I think maybe even gift cards and after pay, you do have to define a location ID because those payments get linked directly to that And some other instances we just default to like a main location. Okay, that's kind of like another, we're just doing some magic for you to make it easier to do payment. I did it. So we need to define that card tokenized response received function
And some other instances we just default to like a main location. Okay, that's kind of like another, we're just doing some magic for you to make it easier to do payment. I did it. So we need to define that card tokenized response received function Okay, this one I'm going to copy and paste because and it's going with end payment form. Yeah, so we want to put it just below where we have location ID. And so we're missing just two closing curly braces. Perfect. So if we save that, it'll reload and we can enter in a test card number
Okay, this one I'm going to copy and paste because and it's going with end payment form. Yeah, so we want to put it just below where we have location ID. And so we're missing just two closing curly braces. Perfect. So if we save that, it'll reload and we can enter in a test card number So just do four and then the rest ones. And then some month and year in the future. And then one, two, three, yeah, any numbers there and then any numbers here are fine. Hey, we click pay
So just do four and then the rest ones. And then some month and year in the future. And then one, two, three, yeah, any numbers there and then any numbers here are fine. Hey, we click pay Hey, we click pay. And if we look in our developer console, so we could alerted this, but we're going to just look in our dev tools and we should see the payload back. So here, there we go, we have the token object. So if you click on object down below. And we click details
Hey, we click pay. And if we look in our developer console, so we could alerted this, but we're going to just look in our dev tools and we should see the payload back. So here, there we go, we have the token object. So if you click on object down below. And we click details So here's all this info. You can see that we have like the Billings of Code, the card, the brand, expiration, expiration year last four. But the thing that's really important is we have that token right there. Okay
So here's all this info. You can see that we have like the Billings of Code, the card, the brand, expiration, expiration year last four. But the thing that's really important is we have that token right there. Okay Okay. And so this is what you use for actually, there's two different things you can use this for. You can use that token to immediately process a payment using our payments API
Okay. And so this is what you use for actually, there's two different things you can use this for. You can use that token to immediately process a payment using our payments API Or you can actually also use it to store a card for a customer profile to like basically use that to be able to charge later
Or you can actually also use it to store a card for a customer profile to like basically use that to be able to charge later So like imagine like you know how like in a mobile app, you might, it might ask you a credit card number and then it's extored somewhere and then they just use that to make payments. Right. That's like a functionality we have with our cards API
So like imagine like you know how like in a mobile app, you might, it might ask you a credit card number and then it's extored somewhere and then they just use that to make payments. Right. That's like a functionality we have with our cards API And so rather than going and building like a whole back end, let's just go play around with API Explorer. So let's go back to the developer dashboard and we're going to try and find our way into this one. This one. There we go. And then let's just stand that out
And so rather than going and building like a whole back end, let's just go play around with API Explorer. So let's go back to the developer dashboard and we're going to try and find our way into this one. This one. There we go. And then let's just stand that out And then if you go up to the top right under docs and tools, you'll see API Explorer there. And so this is like one of our pride and joys of tools for helping developers learn on our platform
And then if you go up to the top right under docs and tools, you'll see API Explorer there. And so this is like one of our pride and joys of tools for helping developers learn on our platform So this is, I don't know if you've used a postman before, but imagine this like being almost like postman, but in the browser. So you don't need to download anything. And because you're signed in, it is aware of certain things about your developer account
So this is, I don't know if you've used a postman before, but imagine this like being almost like postman, but in the browser. So you don't need to download anything. And because you're signed in, it is aware of certain things about your developer account So if we go to select API, we can go ahead and go to the payments API. Actually, Ian from postman is going to be on the show. Later this month. Next, next week. I really should like, like, I have a calendar. I'm finally updating the calendar, but I just know he's on the docket. There we go
So if we go to select API, we can go ahead and go to the payments API. Actually, Ian from postman is going to be on the show. Later this month. Next, next week. I really should like, like, I have a calendar. I'm finally updating the calendar, but I just know he's on the docket. There we go There we go. You should make like a little graphic. I don't know. Are you using like OBS or something like that? You should just like have like a little graphic that you can like pull in and be like, here's the schedule and like, how it float in and float out. Oh, that's a good idea
There we go. You should make like a little graphic. I don't know. Are you using like OBS or something like that? You should just like have like a little graphic that you can like pull in and be like, here's the schedule and like, how it float in and float out. Oh, that's a good idea I really need to make a nicer schedule for every month. It's just like, I also don't always have them scheduled out. True. It became, Teach Gen Tech was a whirlwind of people telling me that I needed content. And I need to learn the tech
I really need to make a nicer schedule for every month. It's just like, I also don't always have them scheduled out. True. It became, Teach Gen Tech was a whirlwind of people telling me that I needed content. And I need to learn the tech And within a week of me deciding that I wanted to become a dev role, I started a show and have had it's, it's almost two months old. So it's been a whirlwind and learning. Pretty solid though. Yeah, it's pretty fun
And within a week of me deciding that I wanted to become a dev role, I started a show and have had it's, it's almost two months old. So it's been a whirlwind and learning. Pretty solid though. Yeah, it's pretty fun It's, uh, I've met really cool people like Bakari and Ben and you, because I stopped square to try to find who the dev roles were to tag you. So yeah, thank you for joining and talking us through this. Sure. All right
It's, uh, I've met really cool people like Bakari and Ben and you, because I stopped square to try to find who the dev roles were to tag you. So yeah, thank you for joining and talking us through this. Sure. All right Sure. All right. What am I doing? I'm just, so like, let's, let's change from list payments to create payment. Because what we want to do is we want to like take that token that you got. And we're going to use that to make a payment. So like, let's go ahead and click get token in there
Sure. All right. What am I doing? I'm just, so like, let's, let's change from list payments to create payment. Because what we want to do is we want to like take that token that you got. And we're going to use that to make a payment. So like, let's go ahead and click get token in there And let's just go ahead and select your default test account. And now we get to go through the joy of constructing a payment. So the first thing we need to do is we need to set the amount money
And let's just go ahead and select your default test account. And now we get to go through the joy of constructing a payment. So the first thing we need to do is we need to set the amount money And so how much do we want to charge? So, and one thing I'll call out here is, um, the amount is always going to be in the lowest denomination of the currency in which you are processing a payment. So in this case, you can't, like, one thing I was saying, you can't do zero
And so how much do we want to charge? So, and one thing I'll call out here is, um, the amount is always going to be in the lowest denomination of the currency in which you are processing a payment. So in this case, you can't, like, one thing I was saying, you can't do zero Um, it has to be, I think it's usually like the minimum is a hundred cents or like one dollar. Um, and this would be sent your account. Your default test account is probably in USD. Let's go ahead and select that. It's going to be the bottom one there. Yeah, I'm like, why am I not seeing it? Yeah
Um, it has to be, I think it's usually like the minimum is a hundred cents or like one dollar. Um, and this would be sent your account. Your default test account is probably in USD. Let's go ahead and select that. It's going to be the bottom one there. Yeah, I'm like, why am I not seeing it? Yeah And then for item potency key, um, to sort of explain item potency key, this is a precaution to prevent you from accidentally charging multiple times. So you could actually like run a request with one particular item potency key as many times as you want, but it'll only ever be processed once
And then for item potency key, um, to sort of explain item potency key, this is a precaution to prevent you from accidentally charging multiple times. So you could actually like run a request with one particular item potency key as many times as you want, but it'll only ever be processed once This concept is really important when talking about like HTTP protocols. You'll probably come across at some point where people talk about certain methods being item potent, other methods, not being item potent. But this is just a way to sort of say like, we only ever want this to run once
This concept is really important when talking about like HTTP protocols. You'll probably come across at some point where people talk about certain methods being item potent, other methods, not being item potent. But this is just a way to sort of say like, we only ever want this to run once We don't want to double charge people and have weird stuff start going on
We don't want to double charge people and have weird stuff start going on Um, that being said, so with this request and to recap, because the access to token was, um, you know, how am I trying to access
Um, that being said, so with this request and to recap, because the access to token was, um, you know, how am I trying to access Is the, uh, in an impotency key, is this something that is specific to every single transaction and needs to be redone or is it something that is just reused for everybody? There we go
Is the, uh, in an impotency key, is this something that is specific to every single transaction and needs to be redone or is it something that is just reused for everybody? There we go Words. They are supposed to be set in the context of a particular request. Um, so I could probably like, there's a whole sandbox show that, um, myself and Shannon Skipper did on our, our YouTube channel where we basically explore this idea of item potency and like try to go through it
Words. They are supposed to be set in the context of a particular request. Um, so I could probably like, there's a whole sandbox show that, um, myself and Shannon Skipper did on our, our YouTube channel where we basically explore this idea of item potency and like try to go through it But at the basic level, it's like for this particular request, imagine that like you, you have a server and it's like, it keeps trying to run this thing
But at the basic level, it's like for this particular request, imagine that like you, you have a server and it's like, it keeps trying to run this thing Something happens where like the network drops and you're just like, wait, I don't know what happened and you're kind of like, sitting there wondering like, am I okay to run this again? Well, with the item potency key, as long as you use the same one, you could just keep running that
Something happens where like the network drops and you're just like, wait, I don't know what happened and you're kind of like, sitting there wondering like, am I okay to run this again? Well, with the item potency key, as long as you use the same one, you could just keep running that Even if you haven't gotten a successful response or your network disconnected, you could just run it again and you're guaranteed that the action, assuming that all your data is correct, will only happen once. Um, so that's kind of like, it's more just in the context of a particular request
Even if you haven't gotten a successful response or your network disconnected, you could just run it again and you're guaranteed that the action, assuming that all your data is correct, will only happen once. Um, so that's kind of like, it's more just in the context of a particular request Groovy and I just found the video. So that way, I can watch that later and learn even more. All right. And so here is the next thing. So we can go ahead and like look at that drop down. Um, so here's a bunch of test values
Groovy and I just found the video. So that way, I can watch that later and learn even more. All right. And so here is the next thing. So we can go ahead and like look at that drop down. Um, so here's a bunch of test values So remember how last time you were trying to find out like all these different test values, um, with Bakari, I'm like, you know, I mean, you were initially looking for the credit card ones, so you do have to look those up. But here we actually provide some
So remember how last time you were trying to find out like all these different test values, um, with Bakari, I'm like, you know, I mean, you were initially looking for the credit card ones, so you do have to look those up. But here we actually provide some So like if you wanted to just run a request right now, um, you can just use this and it'll, it'll give you all these different conditions that you can test for. But the source idea field is this is where we're going to put our token
So like if you wanted to just run a request right now, um, you can just use this and it'll, it'll give you all these different conditions that you can test for. But the source idea field is this is where we're going to put our token So let's go back to the React app and let's copy that, uh, token out of there. That scene on. Does it need a scene on part? Yes. Um, that's just kind of like an identifier to say that it's a, it's kind of a relic from before when we used to call these nonces
So let's go back to the React app and let's copy that, uh, token out of there. That scene on. Does it need a scene on part? Yes. Um, that's just kind of like an identifier to say that it's a, it's kind of a relic from before when we used to call these nonces Um, now we just refer to them as tokens. Okay. And nonces, just like a, it's a mathematical term for like a one time use thing, which is what these tokens are. Um, and then this is something
Um, now we just refer to them as tokens. Okay. And nonces, just like a, it's a mathematical term for like a one time use thing, which is what these tokens are. Um, and then this is something So, um, just in this request, especially since I know that we don't want to show our API keys, this authorization is showing our API key. Yeah. Okay. It is showing it right now. So technically we are exposing your sandbox credentials to everyone viewing on the stream right now. But it's okay
So, um, just in this request, especially since I know that we don't want to show our API keys, this authorization is showing our API key. Yeah. Okay. It is showing it right now. So technically we are exposing your sandbox credentials to everyone viewing on the stream right now. But it's okay But it's okay. It's sandbox and we can rotate your keys right after this and you'd be perfectly fine. Yeah. And I'm not going to use this stuff until I can do web payments to something. Exactly. So I think technically you have the minimum required in order to be processing a payment
But it's okay. It's sandbox and we can rotate your keys right after this and you'd be perfectly fine. Yeah. And I'm not going to use this stuff until I can do web payments to something. Exactly. So I think technically you have the minimum required in order to be processing a payment But I do want to show you some of the niceties that we have. Some of them might not not actually work because you haven't created data in there. So like something like say the customer ID field. So down there, we can actually like link a customer to this transaction
But I do want to show you some of the niceties that we have. Some of them might not not actually work because you haven't created data in there. So like something like say the customer ID field. So down there, we can actually like link a customer to this transaction And if you had customers in your account, you would actually see them as auto-completable options here. This is like one of the niceties that we have in our API Explorer
And if you had customers in your account, you would actually see them as auto-completable options here. This is like one of the niceties that we have in our API Explorer Because typically if you were using like postman or something else, you would have to go run like a list customers request, grab an ID, and then paste it in here. We just have like several things to sort of like simplify that. Another one if you go down to like location ID
Because typically if you were using like postman or something else, you would have to go run like a list customers request, grab an ID, and then paste it in here. We just have like several things to sort of like simplify that. Another one if you go down to like location ID So this one, remember how we had to go look that up and set it? Here you can see it just automatically pulled it into the drop down. That's fun. No need to actually go run these other requests. Okay. So now we have the bare minimum and the extra location ID. Fun fact about the location D
So this one, remember how we had to go look that up and set it? Here you can see it just automatically pulled it into the drop down. That's fun. No need to actually go run these other requests. Okay. So now we have the bare minimum and the extra location ID. Fun fact about the location D By default, we'll always process a payment on a main location. But here we've actually specified we want the payment at this particular location. But you'll end one. So so let's go ahead and run that request. That was really hard. I really wanted to click the button
By default, we'll always process a payment on a main location. But here we've actually specified we want the payment at this particular location. But you'll end one. So so let's go ahead and run that request. That was really hard. I really wanted to click the button I'm like I can't click the button until he says I can click the button. And then you're totally say so. You've now made your first payment with your square account in sandbox. So if we open that up, you can actually sort of see all the info that you get back. Oh cool
I'm like I can't click the button until he says I can click the button. And then you're totally say so. You've now made your first payment with your square account in sandbox. So if we open that up, you can actually sort of see all the info that you get back. Oh cool Oh cool. We're actually going to this will actually show you another fun tool. So this is our API logs. So this isn't your developer dashboard. And this actually just shows the the request that you just run
Oh cool. We're actually going to this will actually show you another fun tool. So this is our API logs. So this isn't your developer dashboard. And this actually just shows the the request that you just run So as you run requests in sandbox reproduction, we will actually create logs in here for you. So you can go back and be like wait, I did something weird. What just happened. I didn't keep that. You can actually just go back in here and look at what you did
So as you run requests in sandbox reproduction, we will actually create logs in here for you. So you can go back and be like wait, I did something weird. What just happened. I didn't keep that. You can actually just go back in here and look at what you did So if you click on that, you can actually see what you sent square. Like that makes sense
So if you click on that, you can actually see what you sent square. Like that makes sense Does it only do it from the what we just tried? Or does it create that API log from like what McCarrion I did last week? So I think last week, you never actually got to the point of making a successful API request. I did
Does it only do it from the what we just tried? Or does it create that API log from like what McCarrion I did last week? So I think last week, you never actually got to the point of making a successful API request. I did I did. Oh, then let's actually change your filters here and get actually look back and see what happens. Because I got it, I hard coded the key and it worked. Let's look at like the last 20 days. Oh, it's me. You can see all of these. So this isn't your first payment
I did. Oh, then let's actually change your filters here and get actually look back and see what happens. Because I got it, I hard coded the key and it worked. Let's look at like the last 20 days. Oh, it's me. You can see all of these. So this isn't your first payment You've done some payments and then we could actually like look back and see everything that you ran previously. Sweet. Yeah, because I was being a weirdo after that and I spent like four hours on a Friday night trying to figure it out. And yeah, that's that's where I. I got it to work. Yeah
You've done some payments and then we could actually like look back and see everything that you ran previously. Sweet. Yeah, because I was being a weirdo after that and I spent like four hours on a Friday night trying to figure it out. And yeah, that's that's where I. I got it to work. Yeah Yeah. Awesome. And so another thing if we go back to API Explorer, this is just like another fun thing I want to point out, we scroll up. You see how we have that's a curl request. It's actually formed on the right there
Yeah. Awesome. And so another thing if we go back to API Explorer, this is just like another fun thing I want to point out, we scroll up. You see how we have that's a curl request. It's actually formed on the right there But if you click that drop down where it says curl, there's like a little error there. We can actually change that to any of our other supported SDKs. So like if we click node.js, you're going to get some example code about how to actually do this using node. Okay, really quick
But if you click that drop down where it says curl, there's like a little error there. We can actually change that to any of our other supported SDKs. So like if we click node.js, you're going to get some example code about how to actually do this using node. Okay, really quick Okay, really quick. And this is something that I was getting stuck on. And then also Bacari just said, you can also run these calls from your CLI. Is this the type of thing and from my googling and not understanding curls? But is curl something normally? Okay, words
Okay, really quick. And this is something that I was getting stuck on. And then also Bacari just said, you can also run these calls from your CLI. Is this the type of thing and from my googling and not understanding curls? But is curl something normally? Okay, words Is this area that we're at right here? Would this be something someone would put in their VS code or they would put into their CLI? So typically if you're running curl, it's going to be from the CLI. There I will say that there are some exceptions to that
Is this area that we're at right here? Would this be something someone would put in their VS code or they would put into their CLI? So typically if you're running curl, it's going to be from the CLI. There I will say that there are some exceptions to that I think like PHP is a language in some instances boils down to using curl. But I would say the majority of the time, you could probably just ignore that fact. Running curl is something you would just run in your terminal. Just sort of like test things out
I think like PHP is a language in some instances boils down to using curl. But I would say the majority of the time, you could probably just ignore that fact. Running curl is something you would just run in your terminal. Just sort of like test things out But everything else up here would that be internal or would that be in VS code? This is all part of the curl request. So I can even break down some of those things. So the dash x, that's just saying the method of the request. And then all those dash h's, those are setting headers on the request
But everything else up here would that be internal or would that be in VS code? This is all part of the curl request. So I can even break down some of those things. So the dash x, that's just saying the method of the request. And then all those dash h's, those are setting headers on the request So like it's pinning it to the square version. It's setting your authorization credentials. And then it's also specified in the content type. And that dash d is to indicate the data that you're actually sending in the payload
So like it's pinning it to the square version. It's setting your authorization credentials. And then it's also specified in the content type. And that dash d is to indicate the data that you're actually sending in the payload I'm letting this sink in because I feel like this is something that I wish I understood when I worked at stoplight. Because it was like, I could see this kind of stuff happen with the API designs. And they did have a few of these tests. But I'm like, I don't understand what this all does
I'm letting this sink in because I feel like this is something that I wish I understood when I worked at stoplight. Because it was like, I could see this kind of stuff happen with the API designs. And they did have a few of these tests. But I'm like, I don't understand what this all does This is magical. Yeah, all of this is like HTTP protocol stuff that like sort of like, you know, there's your endpoint, your i path, the main base URL. But yeah, so like if we switched to Node
This is magical. Yeah, all of this is like HTTP protocol stuff that like sort of like, you know, there's your endpoint, your i path, the main base URL. But yeah, so like if we switched to Nodejs, you actually have like pretty much a copy-based of an example that you could put in for running your backend stuff. Probably want to like change like a couple things here and there for like dynamically, say setting the source ID and the ID and key in your code
js, you actually have like pretty much a copy-based of an example that you could put in for running your backend stuff. Probably want to like change like a couple things here and there for like dynamically, say setting the source ID and the ID and key in your code But like this gets you like 80% of the way there. Oh, this is happiness. This is exciting. Okay, thank you. You're welcome. All right, so this can help to separate out like the front end and the back end because everything that we have up here, this is just your front end stuff
But like this gets you like 80% of the way there. Oh, this is happiness. This is exciting. Okay, thank you. You're welcome. All right, so this can help to separate out like the front end and the back end because everything that we have up here, this is just your front end stuff And like that's, you know, the communication of like how you start securely capturing payment information from a buyer. Like we always use this term like buyer and seller. And like in the case of a buyer, we want to be able to securely capture all that payment info
And like that's, you know, the communication of like how you start securely capturing payment information from a buyer. Like we always use this term like buyer and seller. And like in the case of a buyer, we want to be able to securely capture all that payment info And you as the developer, you never want to actually be touching that. I mean, some people do, but because they might work in like FinTech of some kind
And you as the developer, you never want to actually be touching that. I mean, some people do, but because they might work in like FinTech of some kind But the whole reason for all of this is like when you're using that payment form that we provide, that's creating a direct way for people to enter that info. So like that's just going straight to our servers in an iFrame
But the whole reason for all of this is like when you're using that payment form that we provide, that's creating a direct way for people to enter that info. So like that's just going straight to our servers in an iFrame And so other things that you might be running in your application can even see what's inside of that iFrame. So like you can imagine it's almost like we're opening up a tiny little window inside of somebody's browser and saying like give us this information directly to square
And so other things that you might be running in your application can even see what's inside of that iFrame. So like you can imagine it's almost like we're opening up a tiny little window inside of somebody's browser and saying like give us this information directly to square And then when you hit the pay button, it's basically sending a message to us to say, hey, can you go ahead and like tokenize that and give me this token that will represent the information that a buyer just entered
And then when you hit the pay button, it's basically sending a message to us to say, hey, can you go ahead and like tokenize that and give me this token that will represent the information that a buyer just entered And then you then can take that token to any like our payments aka our car as a guy and say like, okay, now do something with that payment information that you got earlier
And then you then can take that token to any like our payments aka our car as a guy and say like, okay, now do something with that payment information that you got earlier That's like the high level explanation of like how all this stuff works and why it's securing, why we insist on going about doing it this way. I feel like that's really helpful
That's like the high level explanation of like how all this stuff works and why it's securing, why we insist on going about doing it this way. I feel like that's really helpful And also, Bacari, you totally knew the next question I was going to ask or at least look up at some point was crash course on the HTTP request
And also, Bacari, you totally knew the next question I was going to ask or at least look up at some point was crash course on the HTTP request I do want to say if anybody knows someone that wants to come on and talk about protocols, just all the protocols, all the different protocols, what are they for? Why do we use them? What are the differences
I do want to say if anybody knows someone that wants to come on and talk about protocols, just all the protocols, all the different protocols, what are they for? Why do we use them? What are the differences I would love to have that conversation with someone because coming from me like go daddy realm of like email and stuff like that or domain names, it gets a little foggy trying to put it into API terms
I would love to have that conversation with someone because coming from me like go daddy realm of like email and stuff like that or domain names, it gets a little foggy trying to put it into API terms So anybody want to come on, please send them my way. I would appreciate it
So anybody want to come on, please send them my way. I would appreciate it Man, just even if somebody going through the entire journey of a request like from the very very very very beginning all the way to the end where it's like okay, you put in a URL, it's going to go to a domain name server, it's going to do a look up and then it's going to find the correct IP address of the thing that it is that you're looking for and then do the translation
Man, just even if somebody going through the entire journey of a request like from the very very very very beginning all the way to the end where it's like okay, you put in a URL, it's going to go to a domain name server, it's going to do a look up and then it's going to find the correct IP address of the thing that it is that you're looking for and then do the translation It's it's nutty like the the actual journey of a request and how HTTP works. See? I bet you know people Richard or Bacari Will or Ben Will or somebody will please send them my way. I want to learn this and I bet other people want to learn this too. Totally. I feel like we've done a lot
It's it's nutty like the the actual journey of a request and how HTTP works. See? I bet you know people Richard or Bacari Will or Ben Will or somebody will please send them my way. I want to learn this and I bet other people want to learn this too. Totally. I feel like we've done a lot Do you whatever our next step? That's a good question. I mean what else do we want to learn about? I mean, I want to sort of try to be sure that we're exploring the key reality that you have around this. I feel like it's at a good point
Do you whatever our next step? That's a good question. I mean what else do we want to learn about? I mean, I want to sort of try to be sure that we're exploring the key reality that you have around this. I feel like it's at a good point So that way I can something I would like to do and follow up on it would be now that we've taken a look at um like their Git and then we went to um we are seed and having their documentation too
So that way I can something I would like to do and follow up on it would be now that we've taken a look at um like their Git and then we went to um we are seed and having their documentation too I I myself would want to figure out how to get the pop-ups like we did with Bacari but not necessarily some it's something that I'm learning that I want to figure out by myself not with someone necessarily talking me through it which is really cool compared to like two months ago and thank you Ben for saying that earlier it has been an amazing two months um it's like something that I'm actually starting to find things that I want to figure out myself instead of going uh I don't know but I think something just before we wrap up today and going back you mentioned that a lot of people will go into GitHub to be able to check out the code to see if it matches up what they're doing could you kind of guide us on because I've seen this before like I can get to someone's Git that was funny for me nobody else I know everybody else is like over that but um once I'm here I'm like I don't want to look at and I know that Anthony will be on later this week to teach me about reading the Readme's I know I need to do that but if you were to come in here and you're stuck on something what would you look at
I I myself would want to figure out how to get the pop-ups like we did with Bacari but not necessarily some it's something that I'm learning that I want to figure out by myself not with someone necessarily talking me through it which is really cool compared to like two months ago and thank you Ben for saying that earlier it has been an amazing two months um it's like something that I'm actually starting to find things that I want to figure out myself instead of going uh I don't know but I think something just before we wrap up today and going back you mentioned that a lot of people will go into GitHub to be able to check out the code to see if it matches up what they're doing could you kind of guide us on because I've seen this before like I can get to someone's Git that was funny for me nobody else I know everybody else is like over that but um once I'm here I'm like I don't want to look at and I know that Anthony will be on later this week to teach me about reading the Readme's I know I need to do that but if you were to come in here and you're stuck on something what would you look at That's a good question part of it depends on like what I might be stuck on um so first thing I would probably scroll down and just start scanning the Readme to see if there's any like common troubleshooting tips that they might have um you could actually just they display it like right below the repo there but we get also okay oh they do yeah so they they put this here so we can see like the docs and the change log um so I might go past the install because then probably past that point it maybe take look here to see like the example usage um see like did I miss something in what they have here and then if we're lucky on a GitHub repo they have like common troubleshooting things like things that people commonly miss doesn't look like we have anything here so um the other place that I would start looking for you know if I'm having a particular problem um if we go to the very top you can actually go into the issues tab um there's two different things there's issues and then there's discussions it doesn't look like there's any discussions so we can go look at issues and so we can see like here's like the things that people are running into and they're hoping somebody who manages this repo um can resolve and so I've probably start by searching in here for the things that I'm running into and see if like you know if we're the best situation is that it's an issue that's closed and there's a resolution somewhere within that thread that we can use and maybe use that as a workaround or it's like closed because there's a PR somewhere waiting to be merged to fix the thing that we're running into okay and I think that does answer a lot of it um now if you want to know like let's say I know that this library so here's like one thing is like the React Square web payments SDK it is doing a little bit of magic for us in terms of handling web payments SDK um one thing is like React renders like all that stuff at a particular pace but the our payment form that we actually provide for the web payments SDK that actually gets loaded onto the page but it loads in asynchronously which means that you don't want it to like block the rendering of a page so it's going to load after the fact and so usually you want it to like load after a particular event sometimes it might be like DOM content loaded or or something like that um so they had to write into the React thing here like when to actually like render the payment form because it needs to like have a check to be like hey did square like did we load the square web payments SDK yet and then waits until that happens and then tries to render the rest of the React code that you're wanting to run and so if I was wanting to learn how to do that asynchronous loading thing I might start looking through the code in the year for something to be like oh maybe they have a place where they're doing this and then I can like sort of use that to learn how to asynchronously render my React app I know that I'm probably throwing like a bunch of things together no it's making sense it's um so in theory I'm not just trying to see if I can compare with we had Mishko on the show a while ago um and he created AngularJS and just launched quick a while ago is it something that the web payments SDK could be wrapped in quick instead of being wrapped in React yeah yeah the web payments SDK can be wrapped for like emberJS quick Angular the UJS um and like this is like one of the things that I think is like the most powerful thing about open source software is that if you just know like well they have to be doing this particular thing to make this work and maybe I just want to be able to do it in the framework that I like using you can still go look through their code and be like how are they doing that and then just sort of like be like oh that's how they're doing that because at the end of the day this is all JavaScript and so we could just sort of like look through it and be like okay like let's just adapt the way that they're doing that into our open source package and sort of do this like asynchronous rendering and whatnot so much knowledge drops so and it's as I said it's like it's starting to make sense the more and more I do it and so thank you for helping fill in some of the gaps that I wasn't remembering from last time or breaking it down a little bit um I definitely feel like there's more I can build upon this and also it makes a lot of sense on building the React app at this point just by itself without a beat in Versailles which I think I need to go back to that at some point yet it's not a scary just building a quick web app as I thought it was at one point yeah I agree because when I was first learning JavaScript I was kind of in a similar situation of like learning a lot of like express JS react same time and it gets harder and harder to sort of like parse out like where everything is supposed to be because they tend like there's been this like sort of convergence of tools of like let's just have everything kind of in the back end um and then you're kind of like wait but like what is the front end it feel like you just made this like really murky and I'm trying to understand like the difference between what I'm seeing in the browser and what is running on the server um because that used to be like a little bit more clear when you'd be like oh I just had this express thing running in the background and one terminal and then I have what is running over here that's rendering my front end and you had a much clearer like separation but with like this JS and byte and all those other things like everything is like on the server and you just have one set of logs um and it's like you get a little bit more confused like where is the error actually happening here um so that's why I like to sort of like separate out learn create react app kind of stuff and later go and learn xjs and byte and all that stuff to sort of understand how that merges in that totally makes sense and I am putting in the comments really quick of a lot of what we looked at now I really want to put this in there but it's API explorer we feel like the file links this people can find it even if they're not logged in yeah I would definitely like here's my shameless plugs developer dot square up dot com you can find all of our stuff or documentation um it has links to all of our community stuff um I also want to plug the fact that we have a slack community um it's very it I mean it's fairly active I mean I don't know what counts is very active but there's people in there all the time asking questions getting help trying to solve problems and their implementations um and then we also have uh forums don't need all you are else just go to developer dot square up dot com I'm sure you could end up finding them in the nav under our community stuff um so anybody's like wanting to build on a square all of our resources should be available to there agreed agreed and thank you Bakari for starting a stuff on this journey because I got Richard on here and thank you Richard for breaking a lot of this down I am how long has the API explorer been there because I just want to like play on that now yeah uh that's been there for a few years now okay but we've had like some nice improvements here in there we just keep finding like these little like I it doesn't feel right to call them little but like they're just like these little quality of life improvements of like automatically pulling in test values and your location I do but each one of those is suddenly like been like more and more powerful like even now it'll remember some of your requests that you ran before and like some of the data there so like when you come back you can actually like not have to be like let me go reconstruct that entire request um it also has like a feature that like lets you create a shareable link so you can be like oh I'm going to send this link to someone else and it'll fill out all the data that I had for them you know with the exception of like your access token and other like sensitive stuff but that it allows you to just sort of say like hey visit what I'm trying to run and then you can sort of share that off or you can even like save that link in your notes somewhere to be like I'm gonna come back to this oh this is just happiness this is so fun anyway I do like that you told me to switch to create payment um even now I just went in there and I'm like it doesn't look the same oh yeah because I need to now I'm kebbing oh I can copy that yeah the thing that I love about it from a developer experience perspective is it does exactly what it says which is it allows you to explore APIs but it also shortens the distance between your exploration phase and implementation because you know it's one thing to sort of like you know create and I don't want to be like this is not a knock on postman at all but like you go through you run all these requests and you're kind of like okay I figured out how this thing works but then you're kind of like now I have to go write the code that does the thing that I was just tinkering with and we just that small little step of like hey you can copy paste like this code that's on the right here like you're now just that much closer to going from your exploration to your destination agreed and even just like copy and pasting it into something else like this this is pretty legit I'm digging this I am digging this and I do feel like it's something that does make it a lot easier to understand and mess with I'm looking at it on another screen and incognito so I'm sorry I was getting distracted there since you told me that it's shareable yeah yeah thank you once again for being on the show today and as a heads up probably down the road I'll be heading you up again because that's the cool thing of like learning about this stuff is it's ever of all me it never ends ever yeah thank you so much and the video will be uploaded right after this so everybody make sure to check it out and thank you Bakari and Ben for joining today and we will talk later this week bye bye
That's a good question part of it depends on like what I might be stuck on um so first thing I would probably scroll down and just start scanning the Readme to see if there's any like common troubleshooting tips that they might have um you could actually just they display it like right below the repo there but we get also okay oh they do yeah so they they put this here so we can see like the docs and the change log um so I might go past the install because then probably past that point it maybe take look here to see like the example usage um see like did I miss something in what they have here and then if we're lucky on a GitHub repo they have like common troubleshooting things like things that people commonly miss doesn't look like we have anything here so um the other place that I would start looking for you know if I'm having a particular problem um if we go to the very top you can actually go into the issues tab um there's two different things there's issues and then there's discussions it doesn't look like there's any discussions so we can go look at issues and so we can see like here's like the things that people are running into and they're hoping somebody who manages this repo um can resolve and so I've probably start by searching in here for the things that I'm running into and see if like you know if we're the best situation is that it's an issue that's closed and there's a resolution somewhere within that thread that we can use and maybe use that as a workaround or it's like closed because there's a PR somewhere waiting to be merged to fix the thing that we're running into okay and I think that does answer a lot of it um now if you want to know like let's say I know that this library so here's like one thing is like the React Square web payments SDK it is doing a little bit of magic for us in terms of handling web payments SDK um one thing is like React renders like all that stuff at a particular pace but the our payment form that we actually provide for the web payments SDK that actually gets loaded onto the page but it loads in asynchronously which means that you don't want it to like block the rendering of a page so it's going to load after the fact and so usually you want it to like load after a particular event sometimes it might be like DOM content loaded or or something like that um so they had to write into the React thing here like when to actually like render the payment form because it needs to like have a check to be like hey did square like did we load the square web payments SDK yet and then waits until that happens and then tries to render the rest of the React code that you're wanting to run and so if I was wanting to learn how to do that asynchronous loading thing I might start looking through the code in the year for something to be like oh maybe they have a place where they're doing this and then I can like sort of use that to learn how to asynchronously render my React app I know that I'm probably throwing like a bunch of things together no it's making sense it's um so in theory I'm not just trying to see if I can compare with we had Mishko on the show a while ago um and he created AngularJS and just launched quick a while ago is it something that the web payments SDK could be wrapped in quick instead of being wrapped in React yeah yeah the web payments SDK can be wrapped for like emberJS quick Angular the UJS um and like this is like one of the things that I think is like the most powerful thing about open source software is that if you just know like well they have to be doing this particular thing to make this work and maybe I just want to be able to do it in the framework that I like using you can still go look through their code and be like how are they doing that and then just sort of like be like oh that's how they're doing that because at the end of the day this is all JavaScript and so we could just sort of like look through it and be like okay like let's just adapt the way that they're doing that into our open source package and sort of do this like asynchronous rendering and whatnot so much knowledge drops so and it's as I said it's like it's starting to make sense the more and more I do it and so thank you for helping fill in some of the gaps that I wasn't remembering from last time or breaking it down a little bit um I definitely feel like there's more I can build upon this and also it makes a lot of sense on building the React app at this point just by itself without a beat in Versailles which I think I need to go back to that at some point yet it's not a scary just building a quick web app as I thought it was at one point yeah I agree because when I was first learning JavaScript I was kind of in a similar situation of like learning a lot of like express JS react same time and it gets harder and harder to sort of like parse out like where everything is supposed to be because they tend like there's been this like sort of convergence of tools of like let's just have everything kind of in the back end um and then you're kind of like wait but like what is the front end it feel like you just made this like really murky and I'm trying to understand like the difference between what I'm seeing in the browser and what is running on the server um because that used to be like a little bit more clear when you'd be like oh I just had this express thing running in the background and one terminal and then I have what is running over here that's rendering my front end and you had a much clearer like separation but with like this JS and byte and all those other things like everything is like on the server and you just have one set of logs um and it's like you get a little bit more confused like where is the error actually happening here um so that's why I like to sort of like separate out learn create react app kind of stuff and later go and learn xjs and byte and all that stuff to sort of understand how that merges in that totally makes sense and I am putting in the comments really quick of a lot of what we looked at now I really want to put this in there but it's API explorer we feel like the file links this people can find it even if they're not logged in yeah I would definitely like here's my shameless plugs developer dot square up dot com you can find all of our stuff or documentation um it has links to all of our community stuff um I also want to plug the fact that we have a slack community um it's very it I mean it's fairly active I mean I don't know what counts is very active but there's people in there all the time asking questions getting help trying to solve problems and their implementations um and then we also have uh forums don't need all you are else just go to developer dot square up dot com I'm sure you could end up finding them in the nav under our community stuff um so anybody's like wanting to build on a square all of our resources should be available to there agreed agreed and thank you Bakari for starting a stuff on this journey because I got Richard on here and thank you Richard for breaking a lot of this down I am how long has the API explorer been there because I just want to like play on that now yeah uh that's been there for a few years now okay but we've had like some nice improvements here in there we just keep finding like these little like I it doesn't feel right to call them little but like they're just like these little quality of life improvements of like automatically pulling in test values and your location I do but each one of those is suddenly like been like more and more powerful like even now it'll remember some of your requests that you ran before and like some of the data there so like when you come back you can actually like not have to be like let me go reconstruct that entire request um it also has like a feature that like lets you create a shareable link so you can be like oh I'm going to send this link to someone else and it'll fill out all the data that I had for them you know with the exception of like your access token and other like sensitive stuff but that it allows you to just sort of say like hey visit what I'm trying to run and then you can sort of share that off or you can even like save that link in your notes somewhere to be like I'm gonna come back to this oh this is just happiness this is so fun anyway I do like that you told me to switch to create payment um even now I just went in there and I'm like it doesn't look the same oh yeah because I need to now I'm kebbing oh I can copy that yeah the thing that I love about it from a developer experience perspective is it does exactly what it says which is it allows you to explore APIs but it also shortens the distance between your exploration phase and implementation because you know it's one thing to sort of like you know create and I don't want to be like this is not a knock on postman at all but like you go through you run all these requests and you're kind of like okay I figured out how this thing works but then you're kind of like now I have to go write the code that does the thing that I was just tinkering with and we just that small little step of like hey you can copy paste like this code that's on the right here like you're now just that much closer to going from your exploration to your destination agreed and even just like copy and pasting it into something else like this this is pretty legit I'm digging this I am digging this and I do feel like it's something that does make it a lot easier to understand and mess with I'm looking at it on another screen and incognito so I'm sorry I was getting distracted there since you told me that it's shareable yeah yeah thank you once again for being on the show today and as a heads up probably down the road I'll be heading you up again because that's the cool thing of like learning about this stuff is it's ever of all me it never ends ever yeah thank you so much and the video will be uploaded right after this so everybody make sure to check it out and thank you Bakari and Ben for joining today and we will talk later this week bye bye