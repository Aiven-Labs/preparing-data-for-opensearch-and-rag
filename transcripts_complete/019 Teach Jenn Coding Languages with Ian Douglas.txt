Hello, beautiful humans. Thank you again for joining Teach Gen Tech. And today we have an awesome guest from Postman Ian. And I'm very excited about this because you are like the one devil that I have met in person. I'm like, yes, we met at the API Denver Meetup last month And Ian, please introduce yourself and what you're gonna be teaching us today. Sure, hey everybody. I'm Ian Douglas. I'm a senior developer advocate at Postman and I'm on the clock. So I'll be here for a little bit. But yeah, shout out to my employer that lets me do crazy things like this
And Ian, please introduce yourself and what you're gonna be teaching us today. Sure, hey everybody. I'm Ian Douglas. I'm a senior developer advocate at Postman and I'm on the clock. So I'll be here for a little bit. But yeah, shout out to my employer that lets me do crazy things like this Let's see, I've been in the tech industry a long time. I joke, I'm kind of an old dinosaur in the industry. Been doing this for 26 years. And I've had people on my live stream and people in my classrooms that are like dang, you've been coding longer than I've been alive. It's like, yeah, thanks
Let's see, I've been in the tech industry a long time. I joke, I'm kind of an old dinosaur in the industry. Been doing this for 26 years. And I've had people on my live stream and people in my classrooms that are like dang, you've been coding longer than I've been alive. It's like, yeah, thanks Actually, this month, August, is the 40th anniversary of when my dad came home with a Commodore 64 computer. I was eight years old and that's when I learned how to code. I basically taught myself with basic programming language
Actually, this month, August, is the 40th anniversary of when my dad came home with a Commodore 64 computer. I was eight years old and that's when I learned how to code. I basically taught myself with basic programming language So technically, I've been coding for 40 years, which is ridiculous to think about in and of itself, but professionally I've been doing it for 26
So technically, I've been coding for 40 years, which is ridiculous to think about in and of itself, but professionally I've been doing it for 26 And it's been a lot of fun just seeing all the different programming languages and seeing the different technologies and things like that over the years, especially over the last 10, 15 years. So much has changed in the past decade especially
And it's been a lot of fun just seeing all the different programming languages and seeing the different technologies and things like that over the years, especially over the last 10, 15 years. So much has changed in the past decade especially So what I wanted to kind of go through today is, I know Jen's been learning some Python and also had some curiosity around JavaScript. And so what we were going to talk about today is what are some use cases for Python and JavaScript and how do they work together and so on
So what I wanted to kind of go through today is, I know Jen's been learning some Python and also had some curiosity around JavaScript. And so what we were going to talk about today is what are some use cases for Python and JavaScript and how do they work together and so on So I've got a handful of things to kind of show about how I use Python and how I use JavaScript. And it's not just for JavaScript and the browser and it's not just Python for, you know, back end code and stuff like that
So I've got a handful of things to kind of show about how I use Python and how I use JavaScript. And it's not just for JavaScript and the browser and it's not just Python for, you know, back end code and stuff like that So thought we'd dive in on a few of those things, I'll share my screen and kind of walk through some of the little bits of code and stuff that I've been doing, maybe some stuff that I've been coding for work. And yeah, we'll have some fun with that
So thought we'd dive in on a few of those things, I'll share my screen and kind of walk through some of the little bits of code and stuff that I've been doing, maybe some stuff that I've been coding for work. And yeah, we'll have some fun with that I do have a question just because like when people say like back end, I feel like a lot of people can like conceptualize what, you know, front end is because it's mostly said about like websites and that kind of thing
I do have a question just because like when people say like back end, I feel like a lot of people can like conceptualize what, you know, front end is because it's mostly said about like websites and that kind of thing But when somebody says back end is that talking about, let's say, you know, it's what's run on a server or how would you explain back end to somebody that has no idea what it is. That's a great question
But when somebody says back end is that talking about, let's say, you know, it's what's run on a server or how would you explain back end to somebody that has no idea what it is. That's a great question I would typically classify it as code that runs on a server where you don't necessarily have like a user interface, you know, something like in a browser that someone is directly interacting with
I would typically classify it as code that runs on a server where you don't necessarily have like a user interface, you know, something like in a browser that someone is directly interacting with Like when we work in the browser, we're generally interacting with the HTML, which then kind of interacts with the JavaScript, but then the JavaScript, you know, if it has to like read and write things to a database, that JavaScript isn't directly talking to a database, usually it's going through like some other software and then it's going to the database from there
Like when we work in the browser, we're generally interacting with the HTML, which then kind of interacts with the JavaScript, but then the JavaScript, you know, if it has to like read and write things to a database, that JavaScript isn't directly talking to a database, usually it's going through like some other software and then it's going to the database from there And so it'll ping some other bit of software, which is what we call the back end of what we do. So the front end is like the customer facing or the user facing software and the back end is like kind of what's behind the scenes
And so it'll ping some other bit of software, which is what we call the back end of what we do. So the front end is like the customer facing or the user facing software and the back end is like kind of what's behind the scenes So we get almost used an analogy of like a restaurant where we have what we call front of house and back of house and front of house is all the serving stuff where the back of house is all the people cooking your food
So we get almost used an analogy of like a restaurant where we have what we call front of house and back of house and front of house is all the serving stuff where the back of house is all the people cooking your food And so the people that you interact with as a patron of the restaurant, you're interacting with the servers
And so the people that you interact with as a patron of the restaurant, you're interacting with the servers And so you're dealing with the front end of what happens in the restaurant and then they go and kind of play sort of liaison between you as the customer and what actually needs to happen in the kitchen so that you have a good user experience with a restaurant
And so you're dealing with the front end of what happens in the restaurant and then they go and kind of play sort of liaison between you as the customer and what actually needs to happen in the kitchen so that you have a good user experience with a restaurant And so they go and they'll take your orders the back of the restaurant where they cook your food and then they bring the food back out to you and sort of bring you back that result
And so they go and they'll take your orders the back of the restaurant where they cook your food and then they bring the food back out to you and sort of bring you back that result And so when I talk about back end code, I'm usually talking about the folks in the kitchen who are, you know, preparing all of that food or data. In order to give back to the front end code to then give back to the user in some way
And so when I talk about back end code, I'm usually talking about the folks in the kitchen who are, you know, preparing all of that food or data. In order to give back to the front end code to then give back to the user in some way So if you fill out a form, the JavaScript front end might be processing that in a way that it can transfer that data efficiently to the back end. The back end then is gonna look through that data, maybe do some validation on it again and then save that in the database
So if you fill out a form, the JavaScript front end might be processing that in a way that it can transfer that data efficiently to the back end. The back end then is gonna look through that data, maybe do some validation on it again and then save that in the database So if you're trying to retrieve something, it's gonna go get it out of the database but it has to package that back up in a way to send to the front end. But the front end can't just, you know, like we generally don't wanna show you just raw data
So if you're trying to retrieve something, it's gonna go get it out of the database but it has to package that back up in a way to send to the front end. But the front end can't just, you know, like we generally don't wanna show you just raw data We wanna format it in a way that presents well and looks nice and so on. And so the front end code will usually take that raw data coming from the back end and format it in some way so that it shows up as a nicely formatted list and so on for the user. Very cool. I like the explanation
We wanna format it in a way that presents well and looks nice and so on. And so the front end code will usually take that raw data coming from the back end and format it in some way so that it shows up as a nicely formatted list and so on for the user. Very cool. I like the explanation I also know that restaurants are also used very often as a way to explain APIs. So I feel like that is something that we can build upon another day. Yeah, for sure
I also know that restaurants are also used very often as a way to explain APIs. So I feel like that is something that we can build upon another day. Yeah, for sure Yeah, for sure. All right, so you said that you have some examples because I think that's another thing of, first off, like explaining like what front end and back end is, but like understanding like when you would use them and why
Yeah, for sure. All right, so you said that you have some examples because I think that's another thing of, first off, like explaining like what front end and back end is, but like understanding like when you would use them and why And granted the way I wrote the title on this was like why use JavaScript versus Python and how content has like when to use each. And I think that's a really cool thing of yes, JavaScript is used very often and can a lot of people consider JavaScript easier to learn
And granted the way I wrote the title on this was like why use JavaScript versus Python and how content has like when to use each. And I think that's a really cool thing of yes, JavaScript is used very often and can a lot of people consider JavaScript easier to learn A lot of people say Python is easier to learn. I would say no matter what, it's the first language is easier. The second language is really hard and then the rest of them are easier because it's like you're comparing it to what you know on your second one. Yeah, that's a good way to think about it
A lot of people say Python is easier to learn. I would say no matter what, it's the first language is easier. The second language is really hard and then the rest of them are easier because it's like you're comparing it to what you know on your second one. Yeah, that's a good way to think about it And some people think about programming languages a lot like spoken language where, you know, the first one that you learn, that one is going to come easier to you because you have a lot of coaching around like learn to say your words and then people help you enunciate and how to put the grammar and the structure together
And some people think about programming languages a lot like spoken language where, you know, the first one that you learn, that one is going to come easier to you because you have a lot of coaching around like learn to say your words and then people help you enunciate and how to put the grammar and the structure together And when you learn that second language, you're kind of on your own. And you're right, it is kind of that comparison of if I do it this way in English, I need to say it this way in Spanish
And when you learn that second language, you're kind of on your own. And you're right, it is kind of that comparison of if I do it this way in English, I need to say it this way in Spanish But then once you learn a couple of languages, if you're kind of in that same sort of family of languages like Latin-based languages, if you learn Spanish, you're probably going to learn French and Italian much easier because of, you know, the grammar structure is the same and a lot of the actual words are very similar
But then once you learn a couple of languages, if you're kind of in that same sort of family of languages like Latin-based languages, if you learn Spanish, you're probably going to learn French and Italian much easier because of, you know, the grammar structure is the same and a lot of the actual words are very similar And so you'll start to spot those similarities and go, oh, you know, if I do it this way in this language, I do it this way in this other language
And so you'll start to spot those similarities and go, oh, you know, if I do it this way in this language, I do it this way in this other language And so it also translates well into programming languages where JavaScript and Python and Ruby, they're what we call high-level languages, they're interpreted languages, which means it gets loaded by some sort of processor that's then interpreting everything line by line in order to go run those instructions
And so it also translates well into programming languages where JavaScript and Python and Ruby, they're what we call high-level languages, they're interpreted languages, which means it gets loaded by some sort of processor that's then interpreting everything line by line in order to go run those instructions Where compiled languages, they tend to do what we call strongly typed, which means if I make a variable, I have to define it as a particular data type
Where compiled languages, they tend to do what we call strongly typed, which means if I make a variable, I have to define it as a particular data type Like this variable is going to be a string and this variable is going to be a floating point number and this variable is going to be an array and that array is of integers. And that variable can only store that type where in JavaScript we could say, var, you know, whatever
Like this variable is going to be a string and this variable is going to be a floating point number and this variable is going to be an array and that array is of integers. And that variable can only store that type where in JavaScript we could say, var, you know, whatever And we can assign it a value of five. And later we can assign it a value, which is a string. And later we can reassign it again as an array unless we make it a constant. But if we make it a var or a let, then it becomes kind of this fluid data type that we can change whenever we want
And we can assign it a value of five. And later we can assign it a value, which is a string. And later we can reassign it again as an array unless we make it a constant. But if we make it a var or a let, then it becomes kind of this fluid data type that we can change whenever we want Python's the same way, Ruby's the same way. So some of these high-level languages, they don't lock you into a type when it comes to how you declare a variable. And that allows for a lot of flexibility
Python's the same way, Ruby's the same way. So some of these high-level languages, they don't lock you into a type when it comes to how you declare a variable. And that allows for a lot of flexibility But in these compiled languages, usually you have to set a data type saying this variable can only ever be a string. And if I need it variable to hold a number, I've got to make a whole new variable
But in these compiled languages, usually you have to set a data type saying this variable can only ever be a string. And if I need it variable to hold a number, I've got to make a whole new variable And so it can, it's good and bad because it forces you into a better way of thinking about how you're actually organizing and storing your data. But then as you learn a couple of compiled languages, learning other compiled languages, you know, it's just kind of like, oh yeah, okay
And so it can, it's good and bad because it forces you into a better way of thinking about how you're actually organizing and storing your data. But then as you learn a couple of compiled languages, learning other compiled languages, you know, it's just kind of like, oh yeah, okay I need, you know, the data type and the variable and integers are integers. And floating point numbers are going to be floating point numbers. It's just, you know, this programming language calls it int32 or int64 for, you know, how many bits you're storing in that number
I need, you know, the data type and the variable and integers are integers. And floating point numbers are going to be floating point numbers. It's just, you know, this programming language calls it int32 or int64 for, you know, how many bits you're storing in that number Where something else is going to literally spell the word integer and another language might just say int for integer and short form it a little bit. But at the end of the day, it's like you can kind of glance to that code and have a pretty good understanding of what it's doing
Where something else is going to literally spell the word integer and another language might just say int for integer and short form it a little bit. But at the end of the day, it's like you can kind of glance to that code and have a pretty good understanding of what it's doing So if you're learning JavaScript, looking at other high level languages, you're gonna grasp probably 75% or more of what it's doing because the structure of it is going to be the same and the syntax and the grammar of what you're looking at is gonna be roughly the same
So if you're learning JavaScript, looking at other high level languages, you're gonna grasp probably 75% or more of what it's doing because the structure of it is going to be the same and the syntax and the grammar of what you're looking at is gonna be roughly the same So all these languages, sorry, just one thing. All these languages have the same kinds of instructions like how to iterate over an array and map and filter and things like that. What are some compiled languages? Because you mentioned the other ones, but I just wanna, like, you can get it
So all these languages, sorry, just one thing. All these languages have the same kinds of instructions like how to iterate over an array and map and filter and things like that. What are some compiled languages? Because you mentioned the other ones, but I just wanna, like, you can get it Yeah, for compiled languages, yeah, I would think of like C++, Java, Go, Rust, you know, things like that. Where with an interpreted language, like when I go run a Python script, I have to say, hey, Python interpreter, go run this script
Yeah, for compiled languages, yeah, I would think of like C++, Java, Go, Rust, you know, things like that. Where with an interpreted language, like when I go run a Python script, I have to say, hey, Python interpreter, go run this script And the first thing it does is it opens that thing and it scans through and makes sure the syntax is gonna like actually sort of execute properly. And so it does kind of a quick scan for syntax errors. And then it goes through and it actually runs the code, you know, line by line
And the first thing it does is it opens that thing and it scans through and makes sure the syntax is gonna like actually sort of execute properly. And so it does kind of a quick scan for syntax errors. And then it goes through and it actually runs the code, you know, line by line In a compiled language, it does that interpretation one time and then compiles it into machine code so that later you can say, hey, just go rerun that machine code. Something already scanned it and made sure that it was gonna work properly. And then you end up with just an executable file instead
In a compiled language, it does that interpretation one time and then compiles it into machine code so that later you can say, hey, just go rerun that machine code. Something already scanned it and made sure that it was gonna work properly. And then you end up with just an executable file instead And then you can just go run that executable file as many times as you'd like
And then you can just go run that executable file as many times as you'd like And so the initial time it takes to open the file or multiple files and scan through everything and check all that syntax and make sure that everything is structured well, that only has to happen one time in a compiled language
And so the initial time it takes to open the file or multiple files and scan through everything and check all that syntax and make sure that everything is structured well, that only has to happen one time in a compiled language We're in an interpreted language every time you wanna run that script, you've gotta say, hey, Python, go run that script again, it's gotta open that file, scan all the instructions, make sure it's valid and then go execute it
We're in an interpreted language every time you wanna run that script, you've gotta say, hey, Python, go run that script again, it's gotta open that file, scan all the instructions, make sure it's valid and then go execute it But the nice thing about it is you can go in and you can change that script at any time
But the nice thing about it is you can go in and you can change that script at any time And then the next time I say, hey, Python, go make my lights blink in the background, it's just gonna go update that and like blink my lights in the background, but in a compiled world, I've gotta go change that source code, run the compiler process again
And then the next time I say, hey, Python, go make my lights blink in the background, it's just gonna go update that and like blink my lights in the background, but in a compiled world, I've gotta go change that source code, run the compiler process again And that could take anywhere from seconds to minutes. And so it's a little bit slower process of getting that executable. Now that I have that executable, it's gonna run really fast all the time because it doesn't have to go through that interpreter work again and again. Interesting
And that could take anywhere from seconds to minutes. And so it's a little bit slower process of getting that executable. Now that I have that executable, it's gonna run really fast all the time because it doesn't have to go through that interpreter work again and again. Interesting Interesting. So if I'm just comparing Java to JavaScript, Java would have to be changed the source code and be recompiled every time where Java is much more lenient and letting us change things a lot faster and a lot quicker. But it... So do you have a script on the second one? Yeah
Interesting. So if I'm just comparing Java to JavaScript, Java would have to be changed the source code and be recompiled every time where Java is much more lenient and letting us change things a lot faster and a lot quicker. But it... So do you have a script on the second one? Yeah Yeah, JavaScript. And what a famous yak. Yes, the lights are so cool, aren't they? I want to... I'm making things. I heard you talking the last night about like wanting to put a warning on there. And I'm like, yes, I totally get that, but at the same time they're still cool. They're still cool
Yeah, JavaScript. And what a famous yak. Yes, the lights are so cool, aren't they? I want to... I'm making things. I heard you talking the last night about like wanting to put a warning on there. And I'm like, yes, I totally get that, but at the same time they're still cool. They're still cool They're still cool. It is pretty fun, but yeah
They're still cool. It is pretty fun, but yeah So what I was saying on my stream last night is like, I want to either make them less bright when they blink or slow down like how quickly they blink or maybe just pick random ones to kind of like more twinkle as opposed to like all 43 of them on the wall, all like coming up with these random patterns just for seizure trigger warnings
So what I was saying on my stream last night is like, I want to either make them less bright when they blink or slow down like how quickly they blink or maybe just pick random ones to kind of like more twinkle as opposed to like all 43 of them on the wall, all like coming up with these random patterns just for seizure trigger warnings So I'm probably going to do some combination of all of them where I dim it a little bit and then slow it down and not flash like all 43 at the same time
So I'm probably going to do some combination of all of them where I dim it a little bit and then slow it down and not flash like all 43 at the same time Because right now it's actually going through and it's saying, hey, all 43 lights, pick a random number from zero to 255 for red, green, and blue, set that panel to that color and now go set all of them and then do that again, set all of them, do that again, set all of them and so that's why you get like this really rapid, like pretty wild sort of blinking thing
Because right now it's actually going through and it's saying, hey, all 43 lights, pick a random number from zero to 255 for red, green, and blue, set that panel to that color and now go set all of them and then do that again, set all of them, do that again, set all of them and so that's why you get like this really rapid, like pretty wild sort of blinking thing That's all done in Python. Yeah, and I think that's a really cool thing that you know, like that's an actual way that we can use Python where before teach and tech journey, like I'm like, yeah, I know you have to code it somehow
That's all done in Python. Yeah, and I think that's a really cool thing that you know, like that's an actual way that we can use Python where before teach and tech journey, like I'm like, yeah, I know you have to code it somehow Just like it never really computed how do you get started on that or anything. So I know you have some things to show us today. So where would you like to start? Let's see, let's start with, well, let's talk a little bit about like the differences between Python and JavaScript
Just like it never really computed how do you get started on that or anything. So I know you have some things to show us today. So where would you like to start? Let's see, let's start with, well, let's talk a little bit about like the differences between Python and JavaScript And then maybe not in the history of them, but like where they're commonly used right now. And we'll kind of start with that basis
And then maybe not in the history of them, but like where they're commonly used right now. And we'll kind of start with that basis So I think most people understand, or if you've done some amount of programming, or if you've been looking into programming, you've probably seen or might have heard JavaScript is, it's used very heavily obviously in browsers
So I think most people understand, or if you've done some amount of programming, or if you've been looking into programming, you've probably seen or might have heard JavaScript is, it's used very heavily obviously in browsers So it kind of came to be back in the 90s, I think the late 90s, early 2000s, where JavaScript was invented as a language in 10 days, they literally wrote the JavaScript language in only 10 days and released it in the world
So it kind of came to be back in the 90s, I think the late 90s, early 2000s, where JavaScript was invented as a language in 10 days, they literally wrote the JavaScript language in only 10 days and released it in the world And it quickly became picked up in the browser as sort of like, hey, if you want code, actually execute in the browser, there's this JavaScript code
And it quickly became picked up in the browser as sort of like, hey, if you want code, actually execute in the browser, there's this JavaScript code Now they borrowed from the Java name, because then they're like, you know, maybe we'll get some more adoption, because back then Java was coming up as a very popular language. Everybody was learning Java
Now they borrowed from the Java name, because then they're like, you know, maybe we'll get some more adoption, because back then Java was coming up as a very popular language. Everybody was learning Java And so like if we call it JavaScript, then everyone's gonna like think it's related and they'll want to use it. And that's that honestly where it got a big chunk of its popularity. Are they some people? They're doing a name? No, not at all. They're not related whatsoever
And so like if we call it JavaScript, then everyone's gonna like think it's related and they'll want to use it. And that's that honestly where it got a big chunk of its popularity. Are they some people? They're doing a name? No, not at all. They're not related whatsoever And Bacari says that JavaScript is his jam. I love tapping him on the show too, but I'm glad you finally, like I feel like I could have Googled it, but like knowing that's how JavaScript got its name. Yeah. And 1995 is when it became first release. It was integrated in Netscape Navigator 2.0
And Bacari says that JavaScript is his jam. I love tapping him on the show too, but I'm glad you finally, like I feel like I could have Googled it, but like knowing that's how JavaScript got its name. Yeah. And 1995 is when it became first release. It was integrated in Netscape Navigator 2.00. Yeah, really, really old browsers, not even around anymore. Yeah, and Bacari Strawberry is my jam. So that's how kind of JavaScript got its start. And Python's been around just as long. Python's been around for quite a while
0. Yeah, really, really old browsers, not even around anymore. Yeah, and Bacari Strawberry is my jam. So that's how kind of JavaScript got its start. And Python's been around just as long. Python's been around for quite a while The guy that invented Python actually modeled it after another programming language called ABC, which was built to teach kids how to code. And so his whole methodology of coming up with a Python language is it needs to be easy to read, it needs to be easy to interpret and understand how it works
The guy that invented Python actually modeled it after another programming language called ABC, which was built to teach kids how to code. And so his whole methodology of coming up with a Python language is it needs to be easy to read, it needs to be easy to interpret and understand how it works And we want to make it as easy as possible to get other people into that ecosystem. And so he spent a lot of time just making Python a very readable, easy to understand kind of language
And we want to make it as easy as possible to get other people into that ecosystem. And so he spent a lot of time just making Python a very readable, easy to understand kind of language If anyone remembers the old TV show, or you smarter than a fifth grader kind of thing, his whole mentality was like, everybody should be able to look through a Python script and have a pretty good idea what it's doing
If anyone remembers the old TV show, or you smarter than a fifth grader kind of thing, his whole mentality was like, everybody should be able to look through a Python script and have a pretty good idea what it's doing There were other interpreted languages in the day, like Pearl, spelled like the precious stone without the APERL. And it stood for practical extraction and reporting language. And Pearl was very fast language
There were other interpreted languages in the day, like Pearl, spelled like the precious stone without the APERL. And it stood for practical extraction and reporting language. And Pearl was very fast language It could read through text files and crunch through data really, really quickly, but it was very hard to read. And so Guido is the name of the guy that invented Python. He wanted something that was going to process and handle things just as quickly, but also be readable
It could read through text files and crunch through data really, really quickly, but it was very hard to read. And so Guido is the name of the guy that invented Python. He wanted something that was going to process and handle things just as quickly, but also be readable And so Python has been around for a long, long time as well. February 20th, 1991. Yeah, yeah, it's been around 30, 31 years now. 31 and a half years. Yeah, it's been around a while. I've been using Python professionally for a little over a decade
And so Python has been around for a long, long time as well. February 20th, 1991. Yeah, yeah, it's been around 30, 31 years now. 31 and a half years. Yeah, it's been around a while. I've been using Python professionally for a little over a decade I've been doing JavaScript since the Netscape kind of days back, not quite 90, 95. I think I started learning JavaScript in 1998 or so. Okay. I feel like this is where I get confused. It's like one of the popular questions on Google is, Python built on C. And the response is Python is written in C
I've been doing JavaScript since the Netscape kind of days back, not quite 90, 95. I think I started learning JavaScript in 1998 or so. Okay. I feel like this is where I get confused. It's like one of the popular questions on Google is, Python built on C. And the response is Python is written in C Actually, the default implementation is called C Python. And I'm just like, how do you write something on something else? Like it's a language on a language. It's, yeah. And so if you think about, like if you had to sit down and, well, it'd be a good example of this
Actually, the default implementation is called C Python. And I'm just like, how do you write something on something else? Like it's a language on a language. It's, yeah. And so if you think about, like if you had to sit down and, well, it'd be a good example of this If you wanted to write some code that translated a piece of text from English to French, you would need to open that file and you'd need to read it word by word and understand the grammar of what it's trying to do and then figure out, okay, what's the equivalent for each of these words
If you wanted to write some code that translated a piece of text from English to French, you would need to open that file and you'd need to read it word by word and understand the grammar of what it's trying to do and then figure out, okay, what's the equivalent for each of these words And now, how do I reconstruct that grammar and syntax in French and then rewrite that file? That's effectively what they're doing with C
And now, how do I reconstruct that grammar and syntax in French and then rewrite that file? That's effectively what they're doing with C Is they've got the C software. So C is a programming language. It's been around much, much, much longer since the 60s, maybe, maybe 70s, I think 60s. It's been around a really, really long time
Is they've got the C software. So C is a programming language. It's been around much, much, much longer since the 60s, maybe, maybe 70s, I think 60s. It's been around a really, really long time And basically what it's doing is they're writing instructions saying, hey, when Python interpreter opens a file and it sees these instructions, this is what we want the equivalent machine level code to do. And so they wrote the Python language using the C programming language
And basically what it's doing is they're writing instructions saying, hey, when Python interpreter opens a file and it sees these instructions, this is what we want the equivalent machine level code to do. And so they wrote the Python language using the C programming language And it's basically how do we write this interpreter where we're looking at the instructions piece by piece to try to understand what the programmer is trying to do with Python? Interesting
And it's basically how do we write this interpreter where we're looking at the instructions piece by piece to try to understand what the programmer is trying to do with Python? Interesting And, hey, what up? Do I say your name? Can I do Philly Philly Pysher? I hope that is somewhere close to right. Hello, hello, and thank you for joining. And Bacari said, August has layers have layers? Ogres, ogres have layers. Yeah, it's a reference to Shrek. Ogres have, oh, okay
And, hey, what up? Do I say your name? Can I do Philly Philly Pysher? I hope that is somewhere close to right. Hello, hello, and thank you for joining. And Bacari said, August has layers have layers? Ogres, ogres have layers. Yeah, it's a reference to Shrek. Ogres have, oh, okay I don't, that's how you spell ogres. OG, R E S. I didn't see how they typed it. Yeah. Oh, if you could hit comments, you should be able to see all of their comments too. Oh, they're there. Okay, cool
I don't, that's how you spell ogres. OG, R E S. I didn't see how they typed it. Yeah. Oh, if you could hit comments, you should be able to see all of their comments too. Oh, they're there. Okay, cool Okay, cool. And then I looked up the oldest programming language, which is, do you know what it is? The oldest one? The oldest one. I feel like I should know it, but I don't recall off the top of my head. Fortran. Fortran, yeah. I learned a little bit of Fortran in college. What? Yeah
Okay, cool. And then I looked up the oldest programming language, which is, do you know what it is? The oldest one? The oldest one. I feel like I should know it, but I don't recall off the top of my head. Fortran. Fortran, yeah. I learned a little bit of Fortran in college. What? Yeah What? Yeah. Okay, that's just kind of cool. Like, I, sequel is also a very, very, is one as well. And that's just crazy. And you were absolutely right. Are on C, it was released in 1972. You said the 70s. So, yeah. This is cool also learning about the background of it. Yeah
What? Yeah. Okay, that's just kind of cool. Like, I, sequel is also a very, very, is one as well. And that's just crazy. And you were absolutely right. Are on C, it was released in 1972. You said the 70s. So, yeah. This is cool also learning about the background of it. Yeah Yeah. So yeah, so a lot of people started using Python for more system level programming when it first came out. And like just general programming of, let's make a little game, or let's figure out how do I look through my file system and get a list of files and do something interesting
Yeah. So yeah, so a lot of people started using Python for more system level programming when it first came out. And like just general programming of, let's make a little game, or let's figure out how do I look through my file system and get a list of files and do something interesting And so there's going to be a lot of, there's going to be a lot of like system level things that you'll see like historically in Python. And so the main sort of library that you see happening within Python is going to have a lot of different things
And so there's going to be a lot of, there's going to be a lot of like system level things that you'll see like historically in Python. And so the main sort of library that you see happening within Python is going to have a lot of different things Somebody just did something on my, which is why all my lights went a little haywire there in a firm moment. But for JavaScript, you know, the default things that you're going to see in JavaScript are here's how to do things in your browser. Here's how to interact with a button
Somebody just did something on my, which is why all my lights went a little haywire there in a firm moment. But for JavaScript, you know, the default things that you're going to see in JavaScript are here's how to do things in your browser. Here's how to interact with a button Here's how to fill out a form or how to interpret things that somebody has typed into a form. And it's sort of the, not necessarily the default, but like this is where we most commonly use this language
Here's how to fill out a form or how to interpret things that somebody has typed into a form. And it's sort of the, not necessarily the default, but like this is where we most commonly use this language And so Python got its roots in system level programming, but of course it's used in so many things now. You can get into like it's heavily used in machine learning and data science. And it's also used quite a bit for back end servers
And so Python got its roots in system level programming, but of course it's used in so many things now. You can get into like it's heavily used in machine learning and data science. And it's also used quite a bit for back end servers But you know, if you need a, you know, back end code that's really, really performing, you're probably going to rewrite, like you'll start with a prototype in Python because it's very quick to write
But you know, if you need a, you know, back end code that's really, really performing, you're probably going to rewrite, like you'll start with a prototype in Python because it's very quick to write But then you're probably going to rebuild it in a compiled language, which is going to be more performant, depending on your needs. Some people will write something in Python, leave it on Python forever. And it'll work just fine
But then you're probably going to rebuild it in a compiled language, which is going to be more performant, depending on your needs. Some people will write something in Python, leave it on Python forever. And it'll work just fine Not everything has to be built at like, you know, what we say, Google scale or like, you know, scalable to millions and millions of users. Chances are pretty good if I write a dad joke API. It's not going to be used by millions and millions of users
Not everything has to be built at like, you know, what we say, Google scale or like, you know, scalable to millions and millions of users. Chances are pretty good if I write a dad joke API. It's not going to be used by millions and millions of users It might be used by dozens, right? So I don't know. I don't know. I would share that one a lot. I would definitely would share that one. Yeah, I mean, there are some that are very, very heavily used
It might be used by dozens, right? So I don't know. I don't know. I would share that one a lot. I would definitely would share that one. Yeah, I mean, there are some that are very, very heavily used But again, if it's a dad joke database, dad a base, you don't necessarily have to build that out at Google scale using compiled languages and whatever because it's just a static list of jokes
But again, if it's a dad joke database, dad a base, you don't necessarily have to build that out at Google scale using compiled languages and whatever because it's just a static list of jokes And when somebody calls the endpoints and give me a joke, you're just going to give it back something that you've probably already holding in cache memory. So it doesn't even have to be really that performant, you know, as far as like how you build up that code
And when somebody calls the endpoints and give me a joke, you're just going to give it back something that you've probably already holding in cache memory. So it doesn't even have to be really that performant, you know, as far as like how you build up that code And so, you know, Python today is being used for a lot of data science and number crunching and machine learning and stuff like that. And it's very, very effective in those roles. JavaScript, on the other hand, has kind of worked its way out of the browser
And so, you know, Python today is being used for a lot of data science and number crunching and machine learning and stuff like that. And it's very, very effective in those roles. JavaScript, on the other hand, has kind of worked its way out of the browser And you can also do some interesting things with that language as well. And so a lot of these programming languages nowadays are really like general purpose languages. Like I can do system level stuff in JavaScript. I can do web based stuff in Python now
And you can also do some interesting things with that language as well. And so a lot of these programming languages nowadays are really like general purpose languages. Like I can do system level stuff in JavaScript. I can do web based stuff in Python now Someone actually wrote an interpreter in JavaScript to interpret Python code. And so now we could actually be writing Python code in the browser. That's fancy. Do what JavaScript is doing, yeah. And that's all they did
Someone actually wrote an interpreter in JavaScript to interpret Python code. And so now we could actually be writing Python code in the browser. That's fancy. Do what JavaScript is doing, yeah. And that's all they did So similar to how the original developers of Python wrote it in C, someone also has done that work in JavaScript. So now I can write a chunk of Python code. And it'll actually sort of translate it into JavaScript for the browser to actually execute
So similar to how the original developers of Python wrote it in C, someone also has done that work in JavaScript. So now I can write a chunk of Python code. And it'll actually sort of translate it into JavaScript for the browser to actually execute So very similar to what the C Python is doing, where it kind of builds that Python interpreter and compiles it down, they've basically done that in JavaScript
So very similar to what the C Python is doing, where it kind of builds that Python interpreter and compiles it down, they've basically done that in JavaScript Now it does add another layer of complexity because when I write Python code, it's got to go through that interpreter and then into JavaScript and then to the browser. So there's a lot of extra steps
Now it does add another layer of complexity because when I write Python code, it's got to go through that interpreter and then into JavaScript and then to the browser. So there's a lot of extra steps And so it's not going to be as fast as writing native JavaScript, just like writing Python code isn't going to be as performant as if I wrote that code in C
And so it's not going to be as fast as writing native JavaScript, just like writing Python code isn't going to be as performant as if I wrote that code in C Is it something that if they're writing it in Python that after it's compiled and put into JavaScript that they could copy and paste the JavaScript and just use the JavaScript? So that way it runs faster instead of making it more complex? Maybe
Is it something that if they're writing it in Python that after it's compiled and put into JavaScript that they could copy and paste the JavaScript and just use the JavaScript? So that way it runs faster instead of making it more complex? Maybe I mean, there are tools out there that will do something like that. And we call it not really compiling, but we call it transpiling, where we're taking something and we're translating it and compiling it at the same time. And then we have some kind of result at the end of it
I mean, there are tools out there that will do something like that. And we call it not really compiling, but we call it transpiling, where we're taking something and we're translating it and compiling it at the same time. And then we have some kind of result at the end of it So like as an example, TypeScript is another form of JavaScript, which is getting into that strongly typed language that we were talking about earlier, where TypeScript is going to basically compile down and transpile down into the actual native JavaScript that the browser needs
So like as an example, TypeScript is another form of JavaScript, which is getting into that strongly typed language that we were talking about earlier, where TypeScript is going to basically compile down and transpile down into the actual native JavaScript that the browser needs And so there's been a lot of work around how do we build the libraries and so on to actually build TypeScript that when we compile it, it's actually compiling down into JavaScript to then run in the browser
And so there's been a lot of work around how do we build the libraries and so on to actually build TypeScript that when we compile it, it's actually compiling down into JavaScript to then run in the browser And so you're writing it in TypeScript and it's going through all the interpreter stuff, but the browser is not reading and executing TypeScript. It's got to be sort of rebuilt into JavaScript. And in that case, you could actually go look at the resulting JavaScript
And so you're writing it in TypeScript and it's going through all the interpreter stuff, but the browser is not reading and executing TypeScript. It's got to be sort of rebuilt into JavaScript. And in that case, you could actually go look at the resulting JavaScript I'm pretty sure with this Python version, though, it's actually just running all in the browser and it's not actually compiling down in a way to actually then go view that JavaScript. It's just kind of interpreting the instructions and building the equivalent JavaScript instructions instead
I'm pretty sure with this Python version, though, it's actually just running all in the browser and it's not actually compiling down in a way to actually then go view that JavaScript. It's just kind of interpreting the instructions and building the equivalent JavaScript instructions instead So it's looking at the code going, if they do a for loop, then I also want to do a for loop that looks like this. Interesting. That is complex yet simple at the same time. And this is where I keep getting stuck in learning programming of things can be very complex and simple
So it's looking at the code going, if they do a for loop, then I also want to do a for loop that looks like this. Interesting. That is complex yet simple at the same time. And this is where I keep getting stuck in learning programming of things can be very complex and simple It's a thin line because if you think about it more, the more complex it can be, even though the bare basics are pretty simple. Okay, and also learning so much of the time of like, when these languages came out and also building upon each other, I see that you have your screens
It's a thin line because if you think about it more, the more complex it can be, even though the bare basics are pretty simple. Okay, and also learning so much of the time of like, when these languages came out and also building upon each other, I see that you have your screens Let me bring that up. So I've got a handful of different bits of code that I can show, like how I use JavaScript and how I use Python just for some of the stuff that I do on a regular basis. So this first one is little API that I wrote. And this also has a bunch of Python code in here as well
Let me bring that up. So I've got a handful of different bits of code that I can show, like how I use JavaScript and how I use Python just for some of the stuff that I do on a regular basis. So this first one is little API that I wrote. And this also has a bunch of Python code in here as well So this is a little jukebox voting app that I built. And basically what it allows you to do is, it's an API. Well, there's two parts of it. So the back end is actually an API that you can hit where you can say, I want to vote for a particular genre of music as well as a decade of music
So this is a little jukebox voting app that I built. And basically what it allows you to do is, it's an API. Well, there's two parts of it. So the back end is actually an API that you can hit where you can say, I want to vote for a particular genre of music as well as a decade of music And so while this code is running, it's capturing people's votes over an API. And so I wrote this because we were doing a partnership event with this company called InfoPip. And they were traveling around the United States
And so while this code is running, it's capturing people's votes over an API. And so I wrote this because we were doing a partnership event with this company called InfoPip. And they were traveling around the United States And they wanted some kind of way of showing off what they're software is capable of. They're a little bit like a Twilio where they can do SMS and chatbots and email and all this kind of stuff. And so I'm like, I like chatbots. Let's build a chatbot in InfoPip
And they wanted some kind of way of showing off what they're software is capable of. They're a little bit like a Twilio where they can do SMS and chatbots and email and all this kind of stuff. And so I'm like, I like chatbots. Let's build a chatbot in InfoPip And so what it allows people to do is you can go in and using an SMS chatbot, you can say, I want to vote for rock in 1990. And it would register that vote. But then I wrote a front end for it that basically queries the back end saying, give me all the votes
And so what it allows people to do is you can go in and using an SMS chatbot, you can say, I want to vote for rock in 1990. And it would register that vote. But then I wrote a front end for it that basically queries the back end saying, give me all the votes And it'll actually start playing a song based on which vote is winning. And so it sounds a little bit like a radio tuner where someone's hitting the button to play a different song. And so whichever song is winning, it starts playing a fragment of that song
And it'll actually start playing a song based on which vote is winning. And so it sounds a little bit like a radio tuner where someone's hitting the button to play a different song. And so whichever song is winning, it starts playing a fragment of that song And if somebody else's vote starts to, they got more votes for, say, pop music in 2010, it'll skip from playing, you know, Journey from 1980 to Taylor Swift in 2010. And it'll actually change the song at that point. And so it sounds a little bit... It reminds me of like a play now on the due box
And if somebody else's vote starts to, they got more votes for, say, pop music in 2010, it'll skip from playing, you know, Journey from 1980 to Taylor Swift in 2010. And it'll actually change the song at that point. And so it sounds a little bit... It reminds me of like a play now on the due box Yeah, yeah, it's basically what it is
Yeah, yeah, it's basically what it is But imagine like if you're driving in your car and you're just changing the radio station and like people can't agree on like which radio station to listen to, when you hit that button, you're gonna go back and listen to that other song, but time has progressed
But imagine like if you're driving in your car and you're just changing the radio station and like people can't agree on like which radio station to listen to, when you hit that button, you're gonna go back and listen to that other song, but time has progressed And so the song has also skipped ahead. And that's basically what this code is doing too. Oh, okay, that's cooler. It's effectively starting all the songs at the same moment, but then as one vote. So they're all playing at the same time, but like right now, Journey is winning
And so the song has also skipped ahead. And that's basically what this code is doing too. Oh, okay, that's cooler. It's effectively starting all the songs at the same moment, but then as one vote. So they're all playing at the same time, but like right now, Journey is winning And so it's playing Journey. And then later on, if Taylor Swift wins, it changes as if somebody hit the button on the radio to change to the Taylor Swift song at that point. So if you're too many minutes into Journey, you're too many minutes into Taylor Swift
And so it's playing Journey. And then later on, if Taylor Swift wins, it changes as if somebody hit the button on the radio to change to the Taylor Swift song at that point. So if you're too many minutes into Journey, you're too many minutes into Taylor Swift You're too many minutes into Taylor Swift, yeah. And then yeah, so it was really fun. But me and I. Yeah, so the API that I built out is literally just go collect some votes. And so it's storing everything in a reddish database
You're too many minutes into Taylor Swift, yeah. And then yeah, so it was really fun. But me and I. Yeah, so the API that I built out is literally just go collect some votes. And so it's storing everything in a reddish database But they can call an endpoint to just say, go get the list of instructions where I'm saying, here the list of genres and the list of decades, I can zoom in on that a little bit more. Thank you. And so yeah, it's looking at how I've set up my music for this
But they can call an endpoint to just say, go get the list of instructions where I'm saying, here the list of genres and the list of decades, I can zoom in on that a little bit more. Thank you. And so yeah, it's looking at how I've set up my music for this So if I have music set up in a particular way where I've got rock music and pop music, I can go run my jukebox player using that structure. If one of my coworkers is doing an event and they want hip hop and jazz, they can set up the song structure that way
So if I have music set up in a particular way where I've got rock music and pop music, I can go run my jukebox player using that structure. If one of my coworkers is doing an event and they want hip hop and jazz, they can set up the song structure that way And so the front end player is basically looking at how you set up your music structure here. So in this case, I had rock music and pop music. And so you set up a folder structure saying, these are the songs
And so the front end player is basically looking at how you set up your music structure here. So in this case, I had rock music and pop music. And so you set up a folder structure saying, these are the songs And then it goes through and it takes that song and it actually breaks it out into all these three second segments. And so when that vote changes, what it's doing is it's saying, okay, well, we're 30 seconds in. So that's, you know, 30 divided by three is 10
And then it goes through and it takes that song and it actually breaks it out into all these three second segments. And so when that vote changes, what it's doing is it's saying, okay, well, we're 30 seconds in. So that's, you know, 30 divided by three is 10 So I need to start playing fragment number 10 of this particular song. Oh, interesting. And so the front end is basically just going through it's constantly pulling that API to say, who's winning? And then it goes and plays that fragment of whichever song is winning
So I need to start playing fragment number 10 of this particular song. Oh, interesting. And so the front end is basically just going through it's constantly pulling that API to say, who's winning? And then it goes and plays that fragment of whichever song is winning So the back end is literally just storing the votes. So if we come back over here and look at what's happening here, I can go in and I can reset all those votes. And this is all written in Python. And so this is a library called Flask
So the back end is literally just storing the votes. So if we come back over here and look at what's happening here, I can go in and I can reset all those votes. And this is all written in Python. And so this is a library called Flask And it's just the back end code of how do I receive a vote? And then how do I go get all the stuff out of the database to give this data back? And so if they call just whatever my host name is with a slash, it's going to give them back the instructions on how to use the API
And it's just the back end code of how do I receive a vote? And then how do I go get all the stuff out of the database to give this data back? And so if they call just whatever my host name is with a slash, it's going to give them back the instructions on how to use the API If they vote, this is an endpoint to actually go get a vote. They have to give us the genre of music. So rock or pop or jazz or hip hop or whatever. And then the decade of that music as well. And then it registers both of those votes in the database
If they vote, this is an endpoint to actually go get a vote. They have to give us the genre of music. So rock or pop or jazz or hip hop or whatever. And then the decade of that music as well. And then it registers both of those votes in the database And then later on, it'll say, okay, go get all the results. Like who's actually winning the vote? And all it does is it goes out to the database and grabs that data and it just gives all that back. So on the front end then, or what I'm calling the front end is just a command line script that I run
And then later on, it'll say, okay, go get all the results. Like who's actually winning the vote? And all it does is it goes out to the database and grabs that data and it just gives all that back. So on the front end then, or what I'm calling the front end is just a command line script that I run And this is going through and saying, okay, well, let's go set all this stuff about where it actually go find the fragments of the songs. And then let's see, somewhere in here, I'm actually calling the API. So this is just doing the setup of like, go figure out which fragment of which song to play
And this is going through and saying, okay, well, let's go set all this stuff about where it actually go find the fragments of the songs. And then let's see, somewhere in here, I'm actually calling the API. So this is just doing the setup of like, go figure out which fragment of which song to play Doing some postman authentication as well. Because we were doing all this stuff in postman. So this is where it's saying, okay, go figure out who my current winner is. And so this line of code and Python is using a library that says, hey, just go call this API and go call this this web endpoint
Doing some postman authentication as well. Because we were doing all this stuff in postman. So this is where it's saying, okay, go figure out who my current winner is. And so this line of code and Python is using a library that says, hey, just go call this API and go call this this web endpoint Just give me back the results of what you got. And so it does all of the hard work of, how do I connect to that server? How do I send that request over? How do I get data back and put that in a result object? And then I say, okay, well, that result is JSON. Now go figure out who the winner is
Just give me back the results of what you got. And so it does all of the hard work of, how do I connect to that server? How do I send that request over? How do I get data back and put that in a result object? And then I say, okay, well, that result is JSON. Now go figure out who the winner is Based on what the winner is and the decade of what's winning, go figure out that MP3 file and start playing that next. And so it's queuing up all these three second segments. And it's pretty fun
Based on what the winner is and the decade of what's winning, go figure out that MP3 file and start playing that next. And so it's queuing up all these three second segments. And it's pretty fun You know, you go to a meetup and you're like, all right, everybody start voting for your music and we're going to start playing it as we go. And it would start playing all these little fragments of music and then people are like, I don't want to listen to like Bon Jovi
You know, you go to a meetup and you're like, all right, everybody start voting for your music and we're going to start playing it as we go. And it would start playing all these little fragments of music and then people are like, I don't want to listen to like Bon Jovi I want to go back to Whitney Houston, 1980 pop music or whatever in it'll. And as they vote that over and over and over, that vote count starts to climb. And as soon as that one starts winning, it'll switch to that song. And so it's really fun
I want to go back to Whitney Houston, 1980 pop music or whatever in it'll. And as they vote that over and over and over, that vote count starts to climb. And as soon as that one starts winning, it'll switch to that song. And so it's really fun Like the first couple of seconds, like, okay, well, everybody's voting for Journey, but like, oh, wait, it just changed to something else. Wait, now it's back to Journey, now it's back to something else. Now it's, and so it kind of hits this critical mass of people
Like the first couple of seconds, like, okay, well, everybody's voting for Journey, but like, oh, wait, it just changed to something else. Wait, now it's back to Journey, now it's back to something else. Now it's, and so it kind of hits this critical mass of people There's like, no, I want to vote like over and over and over and over. And so it was a lot of fun to build this out
There's like, no, I want to vote like over and over and over and over. And so it was a lot of fun to build this out And so this is just a command line Python script, which is going out to the file system and saying, go get that MP3 file that I've got on my file system somewhere and just start playing an MP3 file. And that's all just done in Python code
And so this is just a command line Python script, which is going out to the file system and saying, go get that MP3 file that I've got on my file system somewhere and just start playing an MP3 file. And that's all just done in Python code So it doesn't, it doesn't have to be what we consider back end. This is just system code
So it doesn't, it doesn't have to be what we consider back end. This is just system code So and I think that's maybe just like the part that I may not comprehend yet is when people say like Python command line and yeah, just like when you put it in your terminal, it, I don't know where I'm necessarily getting mixed up, but, so command line isn't written in many different languages, not just like a bash language
So and I think that's maybe just like the part that I may not comprehend yet is when people say like Python command line and yeah, just like when you put it in your terminal, it, I don't know where I'm necessarily getting mixed up, but, so command line isn't written in many different languages, not just like a bash language What was that? So when we open the terminal, it's running a shell. And that shell is an interpreter, very similar to a Python interpreter or a JavaScript interpreter. It's basically watching all these commands that I'm typing like the word source
What was that? So when we open the terminal, it's running a shell. And that shell is an interpreter, very similar to a Python interpreter or a JavaScript interpreter. It's basically watching all these commands that I'm typing like the word source And behind the scenes, it's interpreting what I'm writing. And it's actually going to go, you know, do some things at a machine level to say, what is it that Ian's trying to do here? In this case, I'm trying to activate a virtual environment
And behind the scenes, it's interpreting what I'm writing. And it's actually going to go, you know, do some things at a machine level to say, what is it that Ian's trying to do here? In this case, I'm trying to activate a virtual environment And so bash, in this case, is my shell terminal is just an interpreter. It's watching the instructions that I'm manually typing in and saying, okay, you type the word source. That means that whatever follows, I need to actually go execute that code
And so bash, in this case, is my shell terminal is just an interpreter. It's watching the instructions that I'm manually typing in and saying, okay, you type the word source. That means that whatever follows, I need to actually go execute that code And that code is basically saying go set up my Python virtual environments that I can actually come in here and say, now I want to run my Python interpreter to go do my jukebox player. It's in jukebox player. And I could say Python 3 player
And that code is basically saying go set up my Python virtual environments that I can actually come in here and say, now I want to run my Python interpreter to go do my jukebox player. It's in jukebox player. And I could say Python 3 player And now this would actually be, you know, playing my jukebox player at this point and connecting to that API and trying to figure out who's winning. And then it starts playing the MP3 files in the background based on who's winning. And so I don't know if you can hear the audio
And now this would actually be, you know, playing my jukebox player at this point and connecting to that API and trying to figure out who's winning. And then it starts playing the MP3 files in the background based on who's winning. And so I don't know if you can hear the audio I don't know when it shares my screen if it shares the audio or not. But what it's doing is it's basically going through saying. Let's see if I can stop it here
I don't know when it shares my screen if it shares the audio or not. But what it's doing is it's basically going through saying. Let's see if I can stop it here It went through and it basically was running through and figuring out like who was winning and then like playing the audio segment of that file. Very cool. Interesting. So that just runs in a terminal. And so the actual player just runs in the terminal
It went through and it basically was running through and figuring out like who was winning and then like playing the audio segment of that file. Very cool. Interesting. So that just runs in a terminal. And so the actual player just runs in the terminal The back end code that I wrote, the actual API, is actually running on Heroku. So it's a hosting platform where you can send, you know, back end code and front end code. And they're actually running that API for me over at Heroku
The back end code that I wrote, the actual API, is actually running on Heroku. So it's a hosting platform where you can send, you know, back end code and front end code. And they're actually running that API for me over at Heroku And so my code started up, it pinged over to Heroku, go and hear you awake over there, go tell me who's winning the vote and then it started playing the audio. So I could hear the audio on my site, but I guess I wasn't being shared. So that's one example of how I do Python code
And so my code started up, it pinged over to Heroku, go and hear you awake over there, go tell me who's winning the vote and then it started playing the audio. So I could hear the audio on my site, but I guess I wasn't being shared. So that's one example of how I do Python code I use it for backend APIs. I also do a lot of system level programming. Okay. And another thing that I do quite a lot is my Twitch chat bot. So if anybody ever comes and follows me on Twitch. It's so fun. I've got all kinds of stuff written in here. So this is my static content
I use it for backend APIs. I also do a lot of system level programming. Okay. And another thing that I do quite a lot is my Twitch chat bot. So if anybody ever comes and follows me on Twitch. It's so fun. I've got all kinds of stuff written in here. So this is my static content Let me go find static responses, for example
Let me go find static responses, for example So if you ever come over to my Twitch stream and you type exclamation point A, N, O, N, it'll basically give you back this instruction in chat saying, hey, if you ever want to ask a question on my channel and you want to ask it anonymously, here's what you need to do
So if you ever come over to my Twitch stream and you type exclamation point A, N, O, N, it'll basically give you back this instruction in chat saying, hey, if you ever want to ask a question on my channel and you want to ask it anonymously, here's what you need to do Or if you want information about my audio podcast, you just do exclamation point podcast and it'll give you back the static response. If you want a funny greeting, you do exclamation point hello and it'll randomly pick one of these and send it back. And so this is all Python based code
Or if you want information about my audio podcast, you just do exclamation point podcast and it'll give you back the static response. If you want a funny greeting, you do exclamation point hello and it'll randomly pick one of these and send it back. And so this is all Python based code And it's using someone else's library to actually connect to Twitch and watch the chat for somebody typing in these commands. And then it's also interpreting what people are writing. And so I kind of wrote my own interpreter inside of this as well
And it's using someone else's library to actually connect to Twitch and watch the chat for somebody typing in these commands. And then it's also interpreting what people are writing. And so I kind of wrote my own interpreter inside of this as well So if I go pull up my actual chatbot, let's see, it's my prodbot. I'll show you an example here. So it would be a good one to show. A good one is going to be like when people want to change my lights here to a different color
So if I go pull up my actual chatbot, let's see, it's my prodbot. I'll show you an example here. So it would be a good one to show. A good one is going to be like when people want to change my lights here to a different color So you can actually come into my chatbot and you can redeem channel points to say, like set this to a particular type of pattern or whatever animation on the lights. And so what it's doing in here, so you can find it. It's, I don't believe. Let's see. Oh, that
So you can actually come into my chatbot and you can redeem channel points to say, like set this to a particular type of pattern or whatever animation on the lights. And so what it's doing in here, so you can find it. It's, I don't believe. Let's see. Oh, that Oh, that. Oh, where does that actually get interpreted? There it is. So it's actually calling this blink. If they try to make it blink, otherwise it's interpreting what they type in
Oh, that. Oh, where does that actually get interpreted? There it is. So it's actually calling this blink. If they try to make it blink, otherwise it's interpreting what they type in And so I'm actually breaking their command down into multiple pieces to say, what is it that you're telling me to do? And so if they're typing in the word random, then I say, okay, I'm just going to go set it to one of these random effects
And so I'm actually breaking their command down into multiple pieces to say, what is it that you're telling me to do? And so if they're typing in the word random, then I say, okay, I'm just going to go set it to one of these random effects If you don't give me a list at all, it'll give you a list of the effects that you could set it to
If you don't give me a list at all, it'll give you a list of the effects that you could set it to And so I'm basically breaking this down piece by piece to say, what is it you want me to do here? And so I've basically built my own interpreter into my chatbot so that when you're typing things in, it can interpret what you're trying to do. So this is all written in Python
And so I'm basically breaking this down piece by piece to say, what is it you want me to do here? And so I've basically built my own interpreter into my chatbot so that when you're typing things in, it can interpret what you're trying to do. So this is all written in Python Did you, did like, Manel Leaf come with anything that, like, described that you could do this or like how? I have an API. Yeah, they have a public API. Yep. And then there are people that have written Python libraries for how to interact with that API
Did you, did like, Manel Leaf come with anything that, like, described that you could do this or like how? I have an API. Yeah, they have a public API. Yep. And then there are people that have written Python libraries for how to interact with that API So I don't have to figure out how do I, how do I talk directly to Nanolief? I'm going through another Python library that someone else has already done that work and tested that everything's working properly. And so I just connected that library with an IP addressing
So I don't have to figure out how do I, how do I talk directly to Nanolief? I'm going through another Python library that someone else has already done that work and tested that everything's working properly. And so I just connected that library with an IP addressing This is the IP address of my Nanolief thing on my home network. And then it knows how to send all the instructions back and forth. Very cool
This is the IP address of my Nanolief thing on my home network. And then it knows how to send all the instructions back and forth. Very cool Very cool. And everyone I just linked Nanolief in the chat because this was one of the biggest things when Ian and I first chatted of, I love that I was so captivated by these like last time we talked and now seeing how a practical use case for Python
Very cool. And everyone I just linked Nanolief in the chat because this was one of the biggest things when Ian and I first chatted of, I love that I was so captivated by these like last time we talked and now seeing how a practical use case for Python And since I've been mainly focused on JavaScript that it's really cool to see the difference in looking at a lot of the different code, even though at this point I'm like, I can kind of guess what everything does. Yeah
And since I've been mainly focused on JavaScript that it's really cool to see the difference in looking at a lot of the different code, even though at this point I'm like, I can kind of guess what everything does. Yeah Yeah. But it would definitely be helpful to like, you know, have the documentation with it or something like that. So this is. And that kind of goes back to what I was saying at the beginning of the stream
Yeah. But it would definitely be helpful to like, you know, have the documentation with it or something like that. So this is. And that kind of goes back to what I was saying at the beginning of the stream Like once you learn a couple of high level languages or even one high level language, you can look at this and you can probably guess what all of this stuff is doing. You know, I'm doing the same kind of imports here that you might do in JavaScript where you're importing a third party library
Like once you learn a couple of high level languages or even one high level language, you can look at this and you can probably guess what all of this stuff is doing. You know, I'm doing the same kind of imports here that you might do in JavaScript where you're importing a third party library And then I'm running some instructions here. This is how I'm connecting to my Nanolief. And then I'm telling it like make sure everything gets powered on. So it'll actually turn on the panel of lights if it's not already on. This is just me like watching like old settings and things like that
And then I'm running some instructions here. This is how I'm connecting to my Nanolief. And then I'm telling it like make sure everything gets powered on. So it'll actually turn on the panel of lights if it's not already on. This is just me like watching like old settings and things like that And then guess what it does. It sets the brightness to a value of 34 of 100. And do that over the course of one second
And then guess what it does. It sets the brightness to a value of 34 of 100. And do that over the course of one second Okay, so that if we're looking at this and we wanted to change, you said to put the lights in a slower speed, would we be changing it right there for in one second? Oh, no, you have to. No, so that yeah, so that's happening that's happening somewhere else
Okay, so that if we're looking at this and we wanted to change, you said to put the lights in a slower speed, would we be changing it right there for in one second? Oh, no, you have to. No, so that yeah, so that's happening that's happening somewhere else So this is the code that actually says go find a random red green or blue value. And then send that back as a data structure that we call a tuple, which is kind of like an array of red value, green value, blue value. And it's got all the values between 0 and 255
So this is the code that actually says go find a random red green or blue value. And then send that back as a data structure that we call a tuple, which is kind of like an array of red value, green value, blue value. And it's got all the values between 0 and 255 And so I can set each one of these individual panels to a combination of red, green, blue. So what's basically happening, this is a script that runs when I hit a button on my stream deck that says go blink the lights. And so the timer here is really kind of a count of how many times it's flashing
And so I can set each one of these individual panels to a combination of red, green, blue. So what's basically happening, this is a script that runs when I hit a button on my stream deck that says go blink the lights. And so the timer here is really kind of a count of how many times it's flashing But basically saying we're going to count down those 60 cycles and then say, okay, for every one of those panels, go pick a random color. And then I want to set that panel ID to be that color. Okay
But basically saying we're going to count down those 60 cycles and then say, okay, for every one of those panels, go pick a random color. And then I want to set that panel ID to be that color. Okay Okay. And then it's saying, okay, now that we've told all 43 of those panels to get ready to set itself, I want to go synchronize that and boom, they all turn that color. That's cool
Okay. And then it's saying, okay, now that we've told all 43 of those panels to get ready to set itself, I want to go synchronize that and boom, they all turn that color. That's cool That's cool. To slow it down, all I need to do is add something in here that says, I want to sleep half a second in between each of these. If I save that and I try and run that now, it's actually a little bit slower on that blink
That's cool. To slow it down, all I need to do is add something in here that says, I want to sleep half a second in between each of these. If I save that and I try and run that now, it's actually a little bit slower on that blink What happens if you did sleep like would it be like a 10 to make it that much slower with a 10, make it faster? It would make it slower. So that's telling it like how many seconds to wait. In that case, I don't think it actually ran that one
What happens if you did sleep like would it be like a 10 to make it that much slower with a 10, make it faster? It would make it slower. So that's telling it like how many seconds to wait. In that case, I don't think it actually ran that one So let me, uh, and so far, I know we've had a few people in the chat. Anyone have any questions? Because this is just like answering my curiosity. Yeah, no, it's all right. So notice how much slower they're blinking now
So let me, uh, and so far, I know we've had a few people in the chat. Anyone have any questions? Because this is just like answering my curiosity. Yeah, no, it's all right. So notice how much slower they're blinking now That's because I've introduced that timer saying like after, after setting them all to a random color, sleep half a second and then go do all that again. And it's doing that 60 times. And so what was happening really fast is now taking much, much longer to run
That's because I've introduced that timer saying like after, after setting them all to a random color, sleep half a second and then go do all that again. And it's doing that 60 times. And so what was happening really fast is now taking much, much longer to run But these are all the different effects that I could set it to as well. So I'm actually querying my, my nanoliths saying how many panels are there? What was the current effect? It was this Nemo effect, which is just the orange and white in the background
But these are all the different effects that I could set it to as well. So I'm actually querying my, my nanoliths saying how many panels are there? What was the current effect? It was this Nemo effect, which is just the orange and white in the background And so what happens is it, it goes through that process of like go make them all blink here. And then set it back to the old effect and whatever the original brightness was
And so what happens is it, it goes through that process of like go make them all blink here. And then set it back to the old effect and whatever the original brightness was So again, what I was talking about at the beginning of the stream is I want to kind of tone down the brightness if I do make them flash. So it's not like there's really bright vivid sort of thing. Because I could come in here and I could set this brightness to be a value of 100
So again, what I was talking about at the beginning of the stream is I want to kind of tone down the brightness if I do make them flash. So it's not like there's really bright vivid sort of thing. Because I could come in here and I could set this brightness to be a value of 100 And if I go run this again, you're going to notice these lights are, like it's going to be wildly bright in the background. Like, like, to a point where it becomes hard to see through the camera, what color it actually set. But like, you know, it's reflecting off a painting and stuff back here
And if I go run this again, you're going to notice these lights are, like it's going to be wildly bright in the background. Like, like, to a point where it becomes hard to see through the camera, what color it actually set. But like, you know, it's reflecting off a painting and stuff back here Like it just, it's really, really bright in here. And so if I wanted to be more sensitive to the folks on my stream, I would say, okay, well, let's tone it down. Let's do like a 20 where it's going to be a more muted sort of color. And so now we see it actually faded down quite a lot more
Like it just, it's really, really bright in here. And so if I wanted to be more sensitive to the folks on my stream, I would say, okay, well, let's tone it down. Let's do like a 20 where it's going to be a more muted sort of color. And so now we see it actually faded down quite a lot more And so understanding like, hey, like I want these lights to flash when someone comes in and follows or something. But I don't want it to be this huge like overpowering kind of thing. Well, now, now that I've slowed it down, doing 60 cycles of all those colors takes a long time
And so understanding like, hey, like I want these lights to flash when someone comes in and follows or something. But I don't want it to be this huge like overpowering kind of thing. Well, now, now that I've slowed it down, doing 60 cycles of all those colors takes a long time So maybe I'll bring that down to like only 10 color changes instead. Like, over here, I can stop the script. I can run it again just to see what kind of effect that's going to have. Five, six, seven, eight, nine, 10 and then it stops and it goes back to what it was when it last ran
So maybe I'll bring that down to like only 10 color changes instead. Like, over here, I can stop the script. I can run it again just to see what kind of effect that's going to have. Five, six, seven, eight, nine, 10 and then it stops and it goes back to what it was when it last ran Well, when it last ran, it was set to some random color. So that's why it'll be kind of left on that. So now, now I've basically, I've slowed it down and I've made the colors more muted. And so now and it won't take us long to flash either. So that is so cool
Well, when it last ran, it was set to some random color. So that's why it'll be kind of left on that. So now, now I've basically, I've slowed it down and I've made the colors more muted. And so now and it won't take us long to flash either. So that is so cool So that is so cool. And the car is said that Python is such an elegant language. It is. And like I said, the guy that invented the language wrote it to be easily readable and easily understandable
So that is so cool. And the car is said that Python is such an elegant language. It is. And like I said, the guy that invented the language wrote it to be easily readable and easily understandable And so there's actually a whole team of people at Python that are basically looking at changes that people want to make to Python. And they make a decision as to whether or not yes, this is a good change to make to Python around this whole idea of there should be one way to do a thing
And so there's actually a whole team of people at Python that are basically looking at changes that people want to make to Python. And they make a decision as to whether or not yes, this is a good change to make to Python around this whole idea of there should be one way to do a thing There can be multiple ways of like looping over an array, but really we want everybody to use this one way to do it. So that way when you look at other people's Python code, you have a pretty good idea of what it's doing because everybody kind of does it the same way
There can be multiple ways of like looping over an array, but really we want everybody to use this one way to do it. So that way when you look at other people's Python code, you have a pretty good idea of what it's doing because everybody kind of does it the same way Now, you can go off and you can write it your own way in Wild Wild West, the thing. But they really do want everybody to write Python the same way so that anybody else reading the code has a has a pretty good idea of what's going on or what's happening
Now, you can go off and you can write it your own way in Wild Wild West, the thing. But they really do want everybody to write Python the same way so that anybody else reading the code has a has a pretty good idea of what's going on or what's happening Does Python have frameworks like JavaScript does? Yep, certainly does. Yep. Like on and Aconda. And I don't know why I'm saying that word. So we are right now. And Aconda. And Aconda is, I believe that's one of the data science, data processing, data analytics libraries
Does Python have frameworks like JavaScript does? Yep, certainly does. Yep. Like on and Aconda. And I don't know why I'm saying that word. So we are right now. And Aconda. And Aconda is, I believe that's one of the data science, data processing, data analytics libraries So we do a lot of the heavy math from whatever call. So yeah, so the API that I wrote for the jukebox player is written on a framework called flask. And it's a very lightweight framework and it's used a lot with APIs
So we do a lot of the heavy math from whatever call. So yeah, so the API that I wrote for the jukebox player is written on a framework called flask. And it's a very lightweight framework and it's used a lot with APIs If you want like a full blown web application, you can use a framework called Django. It starts with dj and geo. And it's a full blown, it'll build out admin panels and let you talk to databases and pull up. Like it's really quick to prototype. You know, I've got this database structure
If you want like a full blown web application, you can use a framework called Django. It starts with dj and geo. And it's a full blown, it'll build out admin panels and let you talk to databases and pull up. Like it's really quick to prototype. You know, I've got this database structure How do I make a form out of that database structure? And it'll like it'll interpret what you've got defined in your database and it'll automatically build forms for users to input data and things like that. It's a very powerful framework
How do I make a form out of that database structure? And it'll like it'll interpret what you've got defined in your database and it'll automatically build forms for users to input data and things like that. It's a very powerful framework It's got a pretty steep learning curve, but once you learn it, it's very, very effective. So yeah, there are frameworks as well. And then, you know, on my on my stream, like, I do a lot of Q&A around like career prep and interview prep and things like that
It's got a pretty steep learning curve, but once you learn it, it's very, very effective. So yeah, there are frameworks as well. And then, you know, on my on my stream, like, I do a lot of Q&A around like career prep and interview prep and things like that And so I've got all these other Python scripts and shell scripts of, you know, how do I go do all these other things to then process my video files into smaller videos for YouTube and stuff like that
And so I've got all these other Python scripts and shell scripts of, you know, how do I go do all these other things to then process my video files into smaller videos for YouTube and stuff like that Or how do I go extract the audio to actually go then upload MP3 files for the podcast audio stream and stuff like that? Oh, that's cool
Or how do I go extract the audio to actually go then upload MP3 files for the podcast audio stream and stuff like that? Oh, that's cool Yeah, and so that's all Python and shell script. And but what I wanted to show is that we can also use JavaScript for non-browser things. So what I wanted to show you here is how I use JavaScript on one of my websites. So this is my tech interview guide website that I do my live streaming about
Yeah, and so that's all Python and shell script. And but what I wanted to show is that we can also use JavaScript for non-browser things. So what I wanted to show you here is how I use JavaScript on one of my websites. So this is my tech interview guide website that I do my live streaming about So if you go find eandug with 736 on Twitter, on Twitch, you're going to find this website. And it's basically my career prep advice. But one of the things that I do on here for kind of transparency reasons, I want people to know when I've last updated something on my website
So if you go find eandug with 736 on Twitter, on Twitch, you're going to find this website. And it's basically my career prep advice. But one of the things that I do on here for kind of transparency reasons, I want people to know when I've last updated something on my website So for example, if I go over to here, if I go to techinterview.guide, I have a change log on here
So for example, if I go over to here, if I go to techinterview.guide, I have a change log on here And what this change log is is like, what have I last changed on the website? And so, you know, the last time I actually pushed something in this, I was like updating my financial transparency because all the money I make is a streamer
And what this change log is is like, what have I last changed on the website? And so, you know, the last time I actually pushed something in this, I was like updating my financial transparency because all the money I make is a streamer I put into a diversity and tech fundraiser and then I matched that money
I put into a diversity and tech fundraiser and then I matched that money And so I wanted to make a change log that, you know, could people go see what I'm actually doing on the actual website for career advice? And so in the past, you know, in the change log, it's been like, you know, I was working on the actual book format and things like that
And so I wanted to make a change log that, you know, could people go see what I'm actually doing on the actual website for career advice? And so in the past, you know, in the change log, it's been like, you know, I was working on the actual book format and things like that Or I put all the cover letter and resume notes in the wrong spot. And this was mostly so that people could say like, you know, I haven't been to Ian's website in a while
Or I put all the cover letter and resume notes in the wrong spot. And this was mostly so that people could say like, you know, I haven't been to Ian's website in a while Has anything actually changed? Like, do I need to go through these chapters and look at anything new? And so what I wanted to do is find a way of like, could I grab all of my Git commit messages and build that into a webpage? Oh, that's cool. So this is in JavaScript
Has anything actually changed? Like, do I need to go through these chapters and look at anything new? And so what I wanted to do is find a way of like, could I grab all of my Git commit messages and build that into a webpage? Oh, that's cool. So this is in JavaScript And that was partly just to stretch myself a little bit. And so I have this markdown file called change log. And this is where it's going through and it's actually building, you know, it's in it's fetching all of my Git commit messages and building this as markdown
And that was partly just to stretch myself a little bit. And so I have this markdown file called change log. And this is where it's going through and it's actually building, you know, it's in it's fetching all of my Git commit messages and building this as markdown And then that compiles into HTML using another process. But what I have in here is I've got a script called change log.js. And so when I go run this on the command line, it's basically building like kind of an intermediate version of it
And then that compiles into HTML using another process. But what I have in here is I've got a script called change log.js. And so when I go run this on the command line, it's basically building like kind of an intermediate version of it Where I said, you know, I wanted some transparency about like when I was actually changing something tangible about my website. And then it's going through and saying, okay, well, go find all of my commits as of basically November 2019, like stop looking at any commits older than that
Where I said, you know, I wanted some transparency about like when I was actually changing something tangible about my website. And then it's going through and saying, okay, well, go find all of my commits as of basically November 2019, like stop looking at any commits older than that So if I really wanted to say like only grab like the last 50 commits or something like that, then I could set a date or something or like I haven't really tangibly changed anything since this date. But otherwise, this is going through and it's saying like go get all of my Git commit messages
So if I really wanted to say like only grab like the last 50 commits or something like that, then I could set a date or something or like I haven't really tangibly changed anything since this date. But otherwise, this is going through and it's saying like go get all of my Git commit messages So let's let's walk through what this is doing. So the child process is basically saying, I want to be able to go out to the shell and go run some kind of shell command and then give me back that result. And in order to do that, I also need access to the file system
So let's let's walk through what this is doing. So the child process is basically saying, I want to be able to go out to the shell and go run some kind of shell command and then give me back that result. And in order to do that, I also need access to the file system And so I'm requiring in some JavaScript libraries for this. And then I'm just going to go call Git log. And I can I can literally come in here and I can just call that command myself on the terminal and see what my JavaScript is going to get back
And so I'm requiring in some JavaScript libraries for this. And then I'm just going to go call Git log. And I can I can literally come in here and I can just call that command myself on the terminal and see what my JavaScript is going to get back And so when I call Git log with that, let me pull this up here. It'll actually show me here my commit messages and then showing me the date with this delimiter
And so when I call Git log with that, let me pull this up here. It'll actually show me here my commit messages and then showing me the date with this delimiter And I'm basically forcing it in there so that I can like I can parse things a little bit easier with like a known delimiter value that I can go in and extract these strings basically. But here's my Git log with all of these delimiters in here
And I'm basically forcing it in there so that I can like I can parse things a little bit easier with like a known delimiter value that I can go in and extract these strings basically. But here's my Git log with all of these delimiters in here So, you know, I wanted to basically take this whole Git message here and say, okay, I want that to show up on this change log. And so I say, okay, we'll go run that as a child process. Go do all of this, give it back as this UTF-8 character type
So, you know, I wanted to basically take this whole Git message here and say, okay, I want that to show up on this change log. And so I say, okay, we'll go run that as a child process. Go do all of this, give it back as this UTF-8 character type So there's different ways that we can interpret characters and things like that as strings. And then saying, okay, now in all of that output, I want to split it on that delimiter. And then I want to map over all those results
So there's different ways that we can interpret characters and things like that as strings. And then saying, okay, now in all of that output, I want to split it on that delimiter. And then I want to map over all those results And I want to figure out the message and the actual date of that message. And I build that into a data structure. And then I iterate back over that data structure to say, okay, now I want to go read this file
And I want to figure out the message and the actual date of that message. And I build that into a data structure. And then I iterate back over that data structure to say, okay, now I want to go read this file And how do I then go over all of those commits and then say, okay, well, if it started with this, oh, so this is what I was doing is I was actually saying, like as soon as I see a commit with this date, I throw an accept. And then I go, I'm going to go to the same section that says stop working
And how do I then go over all of those commits and then say, okay, well, if it started with this, oh, so this is what I was doing is I was actually saying, like as soon as I see a commit with this date, I throw an accept. And then I go, I'm going to go to the same section that says stop working Like this is as far back as I want to go in my, in my get log. Otherwise, if I, if I have a commit message that starts with the string, like rebuilding the site, it won't put that in there. Otherwise, it's going to go build all this stuff as markdown
Like this is as far back as I want to go in my, in my get log. Otherwise, if I, if I have a commit message that starts with the string, like rebuilding the site, it won't put that in there. Otherwise, it's going to go build all this stuff as markdown And then it, if there was anything to change, then it goes and it creates that change log file so it pulls this one up as kind of like a early processing version of it. And then ultimately writes it into this change log file here, which is all written as markdown
And then it, if there was anything to change, then it goes and it creates that change log file so it pulls this one up as kind of like a early processing version of it. And then ultimately writes it into this change log file here, which is all written as markdown And then, and then I run another process that says, hey, go through all these folders, find all these markdown files and convert them all into HTML. And then I upload that to the website. So whenever I do a get commit, I then run this, this command here so I can come in here at any time
And then, and then I run another process that says, hey, go through all these folders, find all these markdown files and convert them all into HTML. And then I upload that to the website. So whenever I do a get commit, I then run this, this command here so I can come in here at any time And I can say node, change log.js. And it just went through and you notice it changed something in here. That is so cool. And I like what Bacari said, wow, what a guy. Yeah, you've built this out pretty cool. I, I will say like in Poster syndrome, I'm like, dude, I can never do that
And I can say node, change log.js. And it just went through and you notice it changed something in here. That is so cool. And I like what Bacari said, wow, what a guy. Yeah, you've built this out pretty cool. I, I will say like in Poster syndrome, I'm like, dude, I can never do that And Ian did share that it's taken him a while to get this done. Yeah. Yeah. And, and part of, and part of doing this change log in JavaScript was to stretch myself of like, I want to see if JavaScript can do system level programming. And I actually wrote this script like long, long time ago
And Ian did share that it's taken him a while to get this done. Yeah. Yeah. And, and part of, and part of doing this change log in JavaScript was to stretch myself of like, I want to see if JavaScript can do system level programming. And I actually wrote this script like long, long time ago And I haven't had to change it thankfully. But JavaScript can be used for non browser code. And Python can be used for a lot of different kinds of things as well. It's mostly going to be used as backend code and system code for Python. But now in JavaScript, we can also do system level code
And I haven't had to change it thankfully. But JavaScript can be used for non browser code. And Python can be used for a lot of different kinds of things as well. It's mostly going to be used as backend code and system code for Python. But now in JavaScript, we can also do system level code And you can do backend code if you use a framework like node and express. You can also build out full API back ends as well and talk to your database and process data and all that kind of stuff as well. So there's lots of frameworks out there that you can go do this kind of stuff with
And you can do backend code if you use a framework like node and express. You can also build out full API back ends as well and talk to your database and process data and all that kind of stuff as well. So there's lots of frameworks out there that you can go do this kind of stuff with And, and the nice thing about these high level languages is you can use them for a lot of different purposes. You shouldn't have to feel like, oh, if I'm learning JavaScript, I can only do stuff in the browser. It's like, no, you can certainly do stuff in the terminal here as well
And, and the nice thing about these high level languages is you can use them for a lot of different purposes. You shouldn't have to feel like, oh, if I'm learning JavaScript, I can only do stuff in the browser. It's like, no, you can certainly do stuff in the terminal here as well There's lots of ways that you can use this code and interpret this code to go run and execute. Now, is JavaScript the best tool for this? No, not necessarily. I could have probably done most of this just in regular shell script coding as well
There's lots of ways that you can use this code and interpret this code to go run and execute. Now, is JavaScript the best tool for this? No, not necessarily. I could have probably done most of this just in regular shell script coding as well But like I said, I wanted to stretch myself into how can I do this with JavaScript? Like, it may not be the best tool for the job, but for me, it was a learning experience. And I've been a big fan of learning in public and seeing how I want to do things and how things actually run and execute
But like I said, I wanted to stretch myself into how can I do this with JavaScript? Like, it may not be the best tool for the job, but for me, it was a learning experience. And I've been a big fan of learning in public and seeing how I want to do things and how things actually run and execute And it just, it expands my appreciation for what goes into the JavaScript language by building a script like this to where I can say, oh, this isn't just about like, go interpret these values on a form and do a fetch and process stuff in a browser. Like, JavaScript can do a lot more than that
And it just, it expands my appreciation for what goes into the JavaScript language by building a script like this to where I can say, oh, this isn't just about like, go interpret these values on a form and do a fetch and process stuff in a browser. Like, JavaScript can do a lot more than that I love that. And I was looking really quick just to see if like what the documentation would be. It doesn't let you see very much before logging in for Nano Leaf
I love that. And I was looking really quick just to see if like what the documentation would be. It doesn't let you see very much before logging in for Nano Leaf But I'm like, I almost want to get Nano Leafs and be able to see if I can like program one in JavaScript and then program one in Python just so I compare the two in the process. I'm sure somebody has written an NPM package for that
But I'm like, I almost want to get Nano Leafs and be able to see if I can like program one in JavaScript and then program one in Python just so I compare the two in the process. I'm sure somebody has written an NPM package for that That's what I was just about to look up because I was like, well, it's not really a lot of me see it, so I'll look it up later. But yeah, so yeah, you want to search for something like Nano Leaf client or something like that. Okay. No, I'm not necessarily endorsing that one
That's what I was just about to look up because I was like, well, it's not really a lot of me see it, so I'll look it up later. But yeah, so yeah, you want to search for something like Nano Leaf client or something like that. Okay. No, I'm not necessarily endorsing that one But you know, that's effectively what you want to use. You want some client level software to talk to your Nano Leaf. But Nano Leafy.js looks like API client and command line tool. Now that's specific to one particular kind of Nano Leaf. So let's go look at this Nano Leaf client one real quick
But you know, that's effectively what you want to use. You want some client level software to talk to your Nano Leaf. But Nano Leafy.js looks like API client and command line tool. Now that's specific to one particular kind of Nano Leaf. So let's go look at this Nano Leaf client one real quick And Nano Leaf is sponsoring this either. But I mean, if y'all do one point, please reach out. I will put, I will have more lights everywhere. I will completely redo my background for Nano Leafs
And Nano Leaf is sponsoring this either. But I mean, if y'all do one point, please reach out. I will put, I will have more lights everywhere. I will completely redo my background for Nano Leafs So this one operates very similar to my Python script where it can try to discover like what is the IP address of your Nano Leaf. But it should probably have a way of like because this can actually take a little while
So this one operates very similar to my Python script where it can try to discover like what is the IP address of your Nano Leaf. But it should probably have a way of like because this can actually take a little while If you've got a lot of things on your network, it's going and pinging all of them going, you know, do you know how to talk Nano Leaf? Do you know how to talk Nano Leaf? Do you know, oh, you do know how to, okay, this is the IP address I need to use
If you've got a lot of things on your network, it's going and pinging all of them going, you know, do you know how to talk Nano Leaf? Do you know how to talk Nano Leaf? Do you know, oh, you do know how to, okay, this is the IP address I need to use But if you've got multiple Nano Leafs, which one does this actually talk to? Like if you've got several of them, then you want to be able to talk to each one. So you would have to know the IP address. But otherwise it's the same thing. You have an auth token
But if you've got multiple Nano Leafs, which one does this actually talk to? Like if you've got several of them, then you want to be able to talk to each one. So you would have to know the IP address. But otherwise it's the same thing. You have an auth token And then you can go get information about it. You can get the orientation, which is literally like how they're sitting on the wall
And then you can go get information about it. You can get the orientation, which is literally like how they're sitting on the wall Things like that, you can get the saturation value, turning it on and off, setting your brightness, setting the duration of like fading that brightness in and out that we saw, getting and setting the hue, which is basically a single color value, or setting, you know, the effect like then the MIMO effect that was just the orange and white in the background
Things like that, you can get the saturation value, turning it on and off, setting your brightness, setting the duration of like fading that brightness in and out that we saw, getting and setting the hue, which is basically a single color value, or setting, you know, the effect like then the MIMO effect that was just the orange and white in the background Or you can set like an actual like RGB value or HSL, I forget what HSL stands for. But then they give you full examples of, yep, here's how to talk to your Nano Leaf on an IP address, given your auth token
Or you can set like an actual like RGB value or HSL, I forget what HSL stands for. But then they give you full examples of, yep, here's how to talk to your Nano Leaf on an IP address, given your auth token And then based on that, you know, go get your information and then go run those other commands. So I love this. I mean, if I were going to do this again in JavaScript, I'd probably use this library. This one looks pretty well documented and, you know, pretty straightforward to use
And then based on that, you know, go get your information and then go run those other commands. So I love this. I mean, if I were going to do this again in JavaScript, I'd probably use this library. This one looks pretty well documented and, you know, pretty straightforward to use Thank you for joining Bacari. Good luck. He just said that he has an interview. Oh, awesome. Good luck. Yeah, hope it goes great. Let us know how it goes. And this is so cool. You've taught me so much in such a short period of time of just like everything that can be done
Thank you for joining Bacari. Good luck. He just said that he has an interview. Oh, awesome. Good luck. Yeah, hope it goes great. Let us know how it goes. And this is so cool. You've taught me so much in such a short period of time of just like everything that can be done Like the possibilities, I feel like that's a hard thing for newbies of seeing the possibilities where I liked that you, I don't know where I saw it if it was on your Twitter or you actually talked about it yesterday of suggesting that people can reach out to you for ideas
Like the possibilities, I feel like that's a hard thing for newbies of seeing the possibilities where I liked that you, I don't know where I saw it if it was on your Twitter or you actually talked about it yesterday of suggesting that people can reach out to you for ideas And I'm like, for like something to program for project ideas and stuff. Yeah. So I have a, I have a, yeah, a discord community and actually somebody posted in there last night going, I've got to build my 100 hours project for 100 devs. And I don't have a project idea
And I'm like, for like something to program for project ideas and stuff. Yeah. So I have a, I have a, yeah, a discord community and actually somebody posted in there last night going, I've got to build my 100 hours project for 100 devs. And I don't have a project idea And I'm like, here's, here's what I would do as a project. And basically what I told them, like, pull it up here real quick
And I'm like, here's, here's what I would do as a project. And basically what I told them, like, pull it up here real quick What I suggested to them is here, like the, the general concepts of what you should build out that will make you stand out as a candidate is you, you want something with authentication, maybe form data processing
What I suggested to them is here, like the, the general concepts of what you should build out that will make you stand out as a candidate is you, you want something with authentication, maybe form data processing And so I came up with an idea of like, just make a simple, you know, you can log in, you can build a profile for yourself and you can go visit other people's profiles. And if you're not logged in, then what you see on the profile is very limited in scope
And so I came up with an idea of like, just make a simple, you know, you can log in, you can build a profile for yourself and you can go visit other people's profiles. And if you're not logged in, then what you see on the profile is very limited in scope And so this teaches you all about authentication, like who are you so that you can build your own profile. And then it talks about authorization, which means if I go look at your profile, I shouldn't see the edit profile button, only you should see that when you're logged in
And so this teaches you all about authentication, like who are you so that you can build your own profile. And then it talks about authorization, which means if I go look at your profile, I shouldn't see the edit profile button, only you should see that when you're logged in And if neither of us, like, if no one's logged in and they go to your profile, maybe they just see like your name and your profile picture, they don't see all of the other content that I would see if I'm logged in because if I'm logged in, I'm more trusted with that data or something like that
And if neither of us, like, if no one's logged in and they go to your profile, maybe they just see like your name and your profile picture, they don't see all of the other content that I would see if I'm logged in because if I'm logged in, I'm more trusted with that data or something like that And then maybe for your profile, have a way to like upload a picture. And then where do you store that picture? Like do you put it in an Amazon S3 bucket or something like that? These teach you some very fundamental things about web development and and how the internet works
And then maybe for your profile, have a way to like upload a picture. And then where do you store that picture? Like do you put it in an Amazon S3 bucket or something like that? These teach you some very fundamental things about web development and and how the internet works And so having, having a project that sort of encapsulates all of those things makes for really good project because then you can expand that out to whatever you want it to be. You could build like your own little news feed, make your own little social network kind of website or whatever
And so having, having a project that sort of encapsulates all of those things makes for really good project because then you can expand that out to whatever you want it to be. You could build like your own little news feed, make your own little social network kind of website or whatever But by having the login and having the profile page and having that authorization of what are you allowed to do on that page, you could build out a search where you say, okay, we'll go go find users who have Ian in their name and only show me them
But by having the login and having the profile page and having that authorization of what are you allowed to do on that page, you could build out a search where you say, okay, we'll go go find users who have Ian in their name and only show me them Well, if I've got thousands and thousands of Ian's on my website, I don't want to list all of that on one page
Well, if I've got thousands and thousands of Ian's on my website, I don't want to list all of that on one page So what if we did pagination and we only show you like 10 or 20 at a time? Well, that's also teaching you about database operations and how do we only grab like a little bit at a time
So what if we did pagination and we only show you like 10 or 20 at a time? Well, that's also teaching you about database operations and how do we only grab like a little bit at a time And so the concepts of building a project like that, which you can then expand out into whatever you want, you could turn that into a shopping cart website, you could turn it into like a book lending, you know, between friends kind of site
And so the concepts of building a project like that, which you can then expand out into whatever you want, you could turn that into a shopping cart website, you could turn it into like a book lending, you know, between friends kind of site You could build that into like whatever like that's plan a road trip and go see what the weather's going to be like when we get there. Like you can do all those things of like here's Ian's profile and hear all the road trips that he planned
You could build that into like whatever like that's plan a road trip and go see what the weather's going to be like when we get there. Like you can do all those things of like here's Ian's profile and hear all the road trips that he planned You know, those kinds of things like you can you can expand that idea out into whatever else you want. But these are the kind of core fundamentals I think that that will really stand out as opposed to, you know, I made it to do list application
You know, those kinds of things like you can you can expand that idea out into whatever else you want. But these are the kind of core fundamentals I think that that will really stand out as opposed to, you know, I made it to do list application It's like, okay, that's good because it still shows that you can write a user interface and you can store things in the database. But if I need somebody to be logged in on, you know, at my company, like our customers have to log in to do something
It's like, okay, that's good because it still shows that you can write a user interface and you can store things in the database. But if I need somebody to be logged in on, you know, at my company, like our customers have to log in to do something If you don't know how to do that, I've got to teach you all that authentication and authorization stuff. If you've already got a project where you've walked through that and you have that understanding that's one less thing I have to train you on
If you don't know how to do that, I've got to teach you all that authentication and authorization stuff. If you've already got a project where you've walked through that and you have that understanding that's one less thing I have to train you on And that makes you look like a better candidate for that job. So by building a project where you've got some of those core fundamentals in place, it makes you like sort of a better candidate overall
And that makes you look like a better candidate for that job. So by building a project where you've got some of those core fundamentals in place, it makes you like sort of a better candidate overall As far as like me wanting to hire you because I've got fewer things that I have to sort of train you on once you start on the job. I totally get that. And there's just so much that goes into it
As far as like me wanting to hire you because I've got fewer things that I have to sort of train you on once you start on the job. I totally get that. And there's just so much that goes into it I think that's the exciting yet overwhelming part of the tech world in general and coding and all of the possibilities
I think that's the exciting yet overwhelming part of the tech world in general and coding and all of the possibilities But any last things you want to go over before we end today because we've gone through a lot of like when Python and JavaScript both came out, how they originated, just going through a lot of the differences as well as seeing some use cases on those
But any last things you want to go over before we end today because we've gone through a lot of like when Python and JavaScript both came out, how they originated, just going through a lot of the differences as well as seeing some use cases on those I think the biggest thing, the biggest piece of advice that I give to folks who are just learning technology and learning about programming is study one thing and know it really well
I think the biggest thing, the biggest piece of advice that I give to folks who are just learning technology and learning about programming is study one thing and know it really well So if you're learning JavaScript, learn how to do all these things in JavaScript, learn about how to run things in the terminal, how to like connect to you know internet of things lights
So if you're learning JavaScript, learn how to do all these things in JavaScript, learn about how to run things in the terminal, how to like connect to you know internet of things lights I mean, if you can get like a $10 light bulb on Amazon and learn how to control that, you know, through through internet of things libraries like nanoleaf, you don't have to go buy a nanoleafed in order to do that
I mean, if you can get like a $10 light bulb on Amazon and learn how to control that, you know, through through internet of things libraries like nanoleaf, you don't have to go buy a nanoleafed in order to do that There's much cheaper alternatives out there where you don't need to buy a whole panel of these lights because you can't really just buy one nanoleaf. You have to buy like a whole set of them and they're you know they can be hundreds of dollars
There's much cheaper alternatives out there where you don't need to buy a whole panel of these lights because you can't really just buy one nanoleaf. You have to buy like a whole set of them and they're you know they can be hundreds of dollars But you can go buy like a single light from a company called guvij ove and they're very inexpensive and you can get literally just a light bulb and you can interact with that API that way and use Postman for that
But you can go buy like a single light from a company called guvij ove and they're very inexpensive and you can get literally just a light bulb and you can interact with that API that way and use Postman for that We've got we've got all kinds of fun stuff in Postman that you can interact with these libraries
We've got we've got all kinds of fun stuff in Postman that you can interact with these libraries But when you're when you're learning a new concept, it's easier on your brain to learn one language and learn that really really well and then figure out later on in your career like okay, I've learned JavaScript. Excuse me. I can do all this stuff in JavaScript. I want to go a little bit deeper
But when you're when you're learning a new concept, it's easier on your brain to learn one language and learn that really really well and then figure out later on in your career like okay, I've learned JavaScript. Excuse me. I can do all this stuff in JavaScript. I want to go a little bit deeper What else should I learn? Excuse me. And so at that point you can make a decision on okay, now I think I want to go Devlin and some Python or Ruby or go or Rust or whatever
What else should I learn? Excuse me. And so at that point you can make a decision on okay, now I think I want to go Devlin and some Python or Ruby or go or Rust or whatever But a lot of I think what holds a lot of people back in tech is they see these jobs and they're like oh I can't even apply for that job because I don't know all 15 or 25 of the things that they're asking for. So I need to go learn all 25 of those things
But a lot of I think what holds a lot of people back in tech is they see these jobs and they're like oh I can't even apply for that job because I don't know all 15 or 25 of the things that they're asking for. So I need to go learn all 25 of those things But at the time you go learn all those things that job post isn't even around anymore. And now when you go look at somebody else's job post, it's a completely different list of things and you're like well now I got to go learn all that stuff
But at the time you go learn all those things that job post isn't even around anymore. And now when you go look at somebody else's job post, it's a completely different list of things and you're like well now I got to go learn all that stuff And so you never really feel ready because you feel like you've always got to learn something before you can even go apply for that job. Where if you just go really deep on a particular technology stack, then you can say okay, I know JavaScript really well. I'm just going to go do JavaScript
And so you never really feel ready because you feel like you've always got to learn something before you can even go apply for that job. Where if you just go really deep on a particular technology stack, then you can say okay, I know JavaScript really well. I'm just going to go do JavaScript I'm going to go do that interview in JavaScript. And yeah, maybe I need to go learn Python to actually get that job. But I understand the programming concepts and I understand you know how to do all these different things in JavaScript. I just need to go figure out how to say that in Python
I'm going to go do that interview in JavaScript. And yeah, maybe I need to go learn Python to actually get that job. But I understand the programming concepts and I understand you know how to do all these different things in JavaScript. I just need to go figure out how to say that in Python And so again, if you learn Italian really really really really well, you're going to be able to understand some bits of Spanish and you'll be able to pick up the Spanish language really quickly
And so again, if you learn Italian really really really really well, you're going to be able to understand some bits of Spanish and you'll be able to pick up the Spanish language really quickly And then once you learn Italian and Spanish picking up French, like you'll pick up French in like a week because a lot of that grammar is the same and a lot of the words are the same. You just have to learn how to how to you know maybe there might be like a few differences here and there
And then once you learn Italian and Spanish picking up French, like you'll pick up French in like a week because a lot of that grammar is the same and a lot of the words are the same. You just have to learn how to how to you know maybe there might be like a few differences here and there Same thing with with a lot of like Germanic languages and so on
Same thing with with a lot of like Germanic languages and so on As you learn German, you'll learn like you know, check and you know some of these other languages, they're not identical, but the structure of how those things could put together are going to be very similar and it'll be the same way with programming
As you learn German, you'll learn like you know, check and you know some of these other languages, they're not identical, but the structure of how those things could put together are going to be very similar and it'll be the same way with programming But I would say early in your career when you're just learning this stuff, focus on focus on fewer things. And so I talk about breadth of knowledge and depth of knowledge. As a hiring manager, I would rather hire somebody with a depth of knowledge
But I would say early in your career when you're just learning this stuff, focus on focus on fewer things. And so I talk about breadth of knowledge and depth of knowledge. As a hiring manager, I would rather hire somebody with a depth of knowledge Then a really broad breadth of knowledge where you only know things a very shallow amount. Like if the only thing that you can build in JavaScript is a to-do list application, and if I say go build me an app in Python, you're like I'll go build it to do app because I know how to do that
Then a really broad breadth of knowledge where you only know things a very shallow amount. Like if the only thing that you can build in JavaScript is a to-do list application, and if I say go build me an app in Python, you're like I'll go build it to do app because I know how to do that And then if I say go do it in Ruby, you're going to go build another to-do app because that's all you know how to do
And then if I say go do it in Ruby, you're going to go build another to-do app because that's all you know how to do But if you go really deep and you build a bunch of projects in JavaScript that do all different kinds of things, then you've got more experience that you can then apply to other languages, other technologies, other frameworks. So go really deep on fewer things early in your career
But if you go really deep and you build a bunch of projects in JavaScript that do all different kinds of things, then you've got more experience that you can then apply to other languages, other technologies, other frameworks. So go really deep on fewer things early in your career As you get that job, then you've got time to explore and learn and go do all that stuff. But to go get a job, focus on like one language, one framework and just be be your own expert. You don't have to be the expert or an industry level expert, but be really good at what you know
As you get that job, then you've got time to explore and learn and go do all that stuff. But to go get a job, focus on like one language, one framework and just be be your own expert. You don't have to be the expert or an industry level expert, but be really good at what you know Like to wear your confident like, you know, I've done several projects in this language or in this framework, you're using this technology. I know it really, really well. Now I'm going to go interview and I'm just going to tell them at that interview, I'm going to use these technologies
Like to wear your confident like, you know, I've done several projects in this language or in this framework, you're using this technology. I know it really, really well. Now I'm going to go interview and I'm just going to tell them at that interview, I'm going to use these technologies I'm going to go learn whatever it is you need me to learn on the job, but this is what I know really well and just impress their socks off with what you know really well instead of trying to, oh, you know, they want me to know Python for that interview. Now I got to go learn Python
I'm going to go learn whatever it is you need me to learn on the job, but this is what I know really well and just impress their socks off with what you know really well instead of trying to, oh, you know, they want me to know Python for that interview. Now I got to go learn Python It's like, well, you're not going to become a Python expert enough to pass their interview in a short amount of time. So just go interview in JavaScript and say, I know JavaScript, it'll translate fine into Python and go from there. So fewer things, but good deeper on those fewer things to start
It's like, well, you're not going to become a Python expert enough to pass their interview in a short amount of time. So just go interview in JavaScript and say, I know JavaScript, it'll translate fine into Python and go from there. So fewer things, but good deeper on those fewer things to start I dig it, I dig it. And I feel like our listeners will definitely be able to learn from that as well. And in a way that I've heard this as well is being, there's a difference between being an inch deep and a mile wide, then a mile deep and an inch wide
I dig it, I dig it. And I feel like our listeners will definitely be able to learn from that as well. And in a way that I've heard this as well is being, there's a difference between being an inch deep and a mile wide, then a mile deep and an inch wide So that is something that has really stuck with me over time. So I really appreciate your time today. Ian and I made up out. Yay, so much to learn. Yeah, there's a lot to learn. But like I said, like focus on fewer things. There's also something that we call a T-shape engineer
So that is something that has really stuck with me over time. So I really appreciate your time today. Ian and I made up out. Yay, so much to learn. Yeah, there's a lot to learn. But like I said, like focus on fewer things. There's also something that we call a T-shape engineer So if you think about the the T-shape, it's very much like what you just said. You know, you can go wide on things to a shallow amount, but on one thing, you're going to go really deep and know that one thing really well where everything else is shallow
So if you think about the the T-shape, it's very much like what you just said. You know, you can go wide on things to a shallow amount, but on one thing, you're going to go really deep and know that one thing really well where everything else is shallow And so be that T-shape engineer early in your career. Like you can go learn like, okay, there's a database called Mongo and there's a database called Postgres and there's a database called MySQL and there's a database called Redis. But you don't have to know them all really well
And so be that T-shape engineer early in your career. Like you can go learn like, okay, there's a database called Mongo and there's a database called Postgres and there's a database called MySQL and there's a database called Redis. But you don't have to know them all really well But you know what, I'm going to do everything in Mongo. So I'm going to learn Mongo really deep. And now there's all these other programming languages and I can kind of read through them and understand prints and console logs and you know, puts and whatever for all these different languages
But you know what, I'm going to do everything in Mongo. So I'm going to learn Mongo really deep. And now there's all these other programming languages and I can kind of read through them and understand prints and console logs and you know, puts and whatever for all these different languages But I'm going to go really deep on JavaScript. Okay. And so be that T-shape engineer and just go really deep on fewer things. I did that. And thank you again for the advice and all the learning and teaching and I hope we get to have you back again someday to learn more about Postman too
But I'm going to go really deep on JavaScript. Okay. And so be that T-shape engineer and just go really deep on fewer things. I did that. And thank you again for the advice and all the learning and teaching and I hope we get to have you back again someday to learn more about Postman too Yeah, we'll dig into what APIs are and how they're used and how they hold the world together. Yes. Yes. I'm excited about APIs. All right. We'll happy Friday everyone. We'll see you next time. Thanks Ian.
Yeah, we'll dig into what APIs are and how they're used and how they hold the world together. Yes. Yes. I'm excited about APIs. All right. We'll happy Friday everyone. We'll see you next time. Thanks Ian.