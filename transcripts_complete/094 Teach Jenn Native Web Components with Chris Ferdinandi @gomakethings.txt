another episode of Teach Gen Tech. And today we are here with Chris, who has definitely helped rattle in some of my ADHD-ness of actually posting stuff. So thank you for that, and thank you for the reminders, and getting things moved along But Chris, what are you gonna be teaching us today? Hey everyone, so today we're gonna be talking about browser native web components, what they are, what they do, how they work, and when and why you might wanna use them. Yeah, so should be fun. Yeah, and tell us a bit about yourself
But Chris, what are you gonna be teaching us today? Hey everyone, so today we're gonna be talking about browser native web components, what they are, what they do, how they work, and when and why you might wanna use them. Yeah, so should be fun. Yeah, and tell us a bit about yourself Yeah, so I'm, thank you for having me, by the way. I am a, wow, I can't talk about who I am right now. Okay, yeah, the ADHD's kicking in hard right now. I'm sorry, I teach people JavaScript
Yeah, so I'm, thank you for having me, by the way. I am a, wow, I can't talk about who I am right now. Okay, yeah, the ADHD's kicking in hard right now. I'm sorry, I teach people JavaScript My whole thing is that I believe there's a simpler and easier way to do a lot of the things that we do, and I think a lot of modern best practices are both bad for the web and make things harder for us as developers, so I kinda spend a lot of my time pushing back against that
My whole thing is that I believe there's a simpler and easier way to do a lot of the things that we do, and I think a lot of modern best practices are both bad for the web and make things harder for us as developers, so I kinda spend a lot of my time pushing back against that And yeah, as part of that, I have a daily newsletter that goes out to about 14,000 people, and I'd love to have all you wonderful viewers on it. Yeah, so throughout what we're talking about today, I have put together a ton of related resources and a link to the source code over at gomakethings
And yeah, as part of that, I have a daily newsletter that goes out to about 14,000 people, and I'd love to have all you wonderful viewers on it. Yeah, so throughout what we're talking about today, I have put together a ton of related resources and a link to the source code over at gomakethingscom slash teachgentech, so if you wanna head over there and grab that and follow along, you're more than welcome to or after the show, if that's easier, but just wanna make things as easy as possible for folks
com slash teachgentech, so if you wanna head over there and grab that and follow along, you're more than welcome to or after the show, if that's easier, but just wanna make things as easy as possible for folks Yay, and yes, as a recap, because I know in the show we do things a little differently every time of like, hey, are we gonna be talking theory or are we actually gonna be talking about like coding itself, coding proper
Yay, and yes, as a recap, because I know in the show we do things a little differently every time of like, hey, are we gonna be talking theory or are we actually gonna be talking about like coding itself, coding proper And before I go into what we're actually doing, I do want to say thank you Ben Myers for joining
And before I go into what we're actually doing, I do want to say thank you Ben Myers for joining You're one of my favorite people too. It's kind of crazy how Ben, A, Ben hasn't been on the show forever. We do need to change that Ben
You're one of my favorite people too. It's kind of crazy how Ben, A, Ben hasn't been on the show forever. We do need to change that Ben I don't know like life happens, which is weird because I feel like I talked to Ben really recently, but if I look at our chat, then it's been like months that I'm always like, how did this happen? I don't, okay, okay
I don't know like life happens, which is weird because I feel like I talked to Ben really recently, but if I look at our chat, then it's been like months that I'm always like, how did this happen? I don't, okay, okay Yet Ben has also introduced me to Josh Goldberg who has been doing our TypeScript series, which has been super, super fun. I enjoy learning about TypeScript. It's also been fun because I don't know the ins and outs of JavaScript
Yet Ben has also introduced me to Josh Goldberg who has been doing our TypeScript series, which has been super, super fun. I enjoy learning about TypeScript. It's also been fun because I don't know the ins and outs of JavaScript So learning TypeScript and JavaScript, I almost feel like it makes TypeScript easier because I don't know the differences, but it makes trying to like know what to fix a bit harder. And yes, so today I'm gonna be taking notes while Chris talks about what we'll be doing today
So learning TypeScript and JavaScript, I almost feel like it makes TypeScript easier because I don't know the differences, but it makes trying to like know what to fix a bit harder. And yes, so today I'm gonna be taking notes while Chris talks about what we'll be doing today I'll do it on my handy dandy iPad, like I've done before and taking notes. And then if we need to swap back and forth, I will. But for the most part, Chris will be sharing his screen and then we'll bounce back
I'll do it on my handy dandy iPad, like I've done before and taking notes. And then if we need to swap back and forth, I will. But for the most part, Chris will be sharing his screen and then we'll bounce back And if you have questions, please make sure to drop them in the chat because we will go over them and ask as we go. And yes
And if you have questions, please make sure to drop them in the chat because we will go over them and ask as we go. And yes And yes. Please, I was gonna say I really interrupt as much as you want, if anything I'm saying either doesn't make sense or you want to dig into anything, please feel free to interrupt me. Yay. Cool. We'll do. And you ready to get started. I am, yeah
And yes. Please, I was gonna say I really interrupt as much as you want, if anything I'm saying either doesn't make sense or you want to dig into anything, please feel free to interrupt me. Yay. Cool. We'll do. And you ready to get started. I am, yeah I am, yeah. OK, I will add your share screen to the screen, but also everyone I did link the go make things.com for slash teach gen tech. So that way you can follow along. And also, you can find how to find Chris at the very, very bottom and make sure you go follow Chris on all the things
I am, yeah. OK, I will add your share screen to the screen, but also everyone I did link the go make things.com for slash teach gen tech. So that way you can follow along. And also, you can find how to find Chris at the very, very bottom and make sure you go follow Chris on all the things I'm really impressed that you know the difference between a forward and backslash because I always get them wrong or confused. I can never, I can never remember. Oh, did I say it? You did. Yeah, you said forward slash
I'm really impressed that you know the difference between a forward and backslash because I always get them wrong or confused. I can never, I can never remember. Oh, did I say it? You did. Yeah, you said forward slash I think it's because I used to work in, I worked for GoDaddy, which is all about domains. So we would have to say it all the time. But if I were looking at it in a code editor, I wouldn't know which one's good
I think it's because I used to work in, I worked for GoDaddy, which is all about domains. So we would have to say it all the time. But if I were looking at it in a code editor, I wouldn't know which one's good But because I'm so used to saying domains, I know how to say it, but that's, that's a great call out. This reminds me of when you used to have to say the WWE, like you were watching it come up. Yes, yes. Where they read out the whole thing, HTTP, colon slash slash. Yes. I agree, I agree
But because I'm so used to saying domains, I know how to say it, but that's, that's a great call out. This reminds me of when you used to have to say the WWE, like you were watching it come up. Yes, yes. Where they read out the whole thing, HTTP, colon slash slash. Yes. I agree, I agree I agree, I agree. But we have a, a role six and a role D six and a role D 20. We do. Yes. So we're going to be a little nerdy today. I'm excited. Ben and I played D&D together. So Ben knows our PG fan. Yay. And yeah
I agree, I agree. But we have a, a role six and a role D six and a role D 20. We do. Yes. So we're going to be a little nerdy today. I'm excited. Ben and I played D&D together. So Ben knows our PG fan. Yay. And yeah Yay. And yeah. So today we are, we're going to build a web component that people can use to roll digital dice on a website or a web app. We're going to start by taking a traditional JavaScript library that does the same thing. And we're going to slowly convert it over into a native web component
Yay. And yeah. So today we are, we're going to build a web component that people can use to roll digital dice on a website or a web app. We're going to start by taking a traditional JavaScript library that does the same thing. And we're going to slowly convert it over into a native web component We're going to talk along the way. We're going to talk about some of the benefits, some of the downsides and challenges and weird gutches that you might run into. And hopefully explore when you might want to do this and when it's not necessarily the best choice
We're going to talk along the way. We're going to talk about some of the benefits, some of the downsides and challenges and weird gutches that you might run into. And hopefully explore when you might want to do this and when it's not necessarily the best choice So with that, I like the references you went to because I was playing D&D. I did my first tabletop game as D&D. And we just went over to playing the expanse, which is a D6, not the D20. And so I'm just excited that I actually get to understand what you're saying
So with that, I like the references you went to because I was playing D&D. I did my first tabletop game as D&D. And we just went over to playing the expanse, which is a D6, not the D20. And so I'm just excited that I actually get to understand what you're saying But then also a different Chris was on last week and I asked, we were short of player. So I asked Ben and I asked that Chris. I was like, y'all were short of player on the expanse. Ben was spoken for. So I reached out to Chris and Chris was like, you're my wife. Like loves the expanse
But then also a different Chris was on last week and I asked, we were short of player. So I asked Ben and I asked that Chris. I was like, y'all were short of player on the expanse. Ben was spoken for. So I reached out to Chris and Chris was like, you're my wife. Like loves the expanse And I'm like, yay. We have the game. Thanks a pair to the show is a good because I love the show. I've torn through all the books. So far we're only on episode one. And I may not be the best person to ask because this is all new to me. The expanse is new. Oh, you're absolutely jealous
And I'm like, yay. We have the game. Thanks a pair to the show is a good because I love the show. I've torn through all the books. So far we're only on episode one. And I may not be the best person to ask because this is all new to me. The expanse is new. Oh, you're absolutely jealous Yeah, it took me years to read the book series. Now I feel hollow and empty inside. So. Oh, gosh, gosh. You can attach to your characters and then it's all over. That's true. I do know. This is so true. This is so true. Okay. So we've got our dice. I'm very excited about our dice
Yeah, it took me years to read the book series. Now I feel hollow and empty inside. So. Oh, gosh, gosh. You can attach to your characters and then it's all over. That's true. I do know. This is so true. This is so true. Okay. So we've got our dice. I'm very excited about our dice You get some dice. You click them. It tells you what you rolled relatively straightforward. So the example I have here is like a traditional JavaScript library. So if we jump over to the text editor, I have a button with like a class on it for styling and a unique ID. So we know what it is
You get some dice. You click them. It tells you what you rolled relatively straightforward. So the example I have here is like a traditional JavaScript library. So if we jump over to the text editor, I have a button with like a class on it for styling and a unique ID. So we know what it is And I've got my Rolla D6 text. And then I've got an ARIA Live region that we render the results of the roll into. And as an ARIA Live region, if someone's using a screen reader, it will announce that roll to the screen reader so that you know, visually impaired folks know what the hell's going on
And I've got my Rolla D6 text. And then I've got an ARIA Live region that we render the results of the roll into. And as an ARIA Live region, if someone's using a screen reader, it will announce that roll to the screen reader so that you know, visually impaired folks know what the hell's going on What? That is so cool. So. So with this one, we're using, it's just to start. It's a maybe more traditional JavaScript library. So I've got, I've got a JavaScript class
What? That is so cool. So. So with this one, we're using, it's just to start. It's a maybe more traditional JavaScript library. So I've got, I've got a JavaScript class I'm not going to go into all of the specifics of it just yet because we'll get into that as we start converting this over to a web component. But the way this works is you can create a new dice object by using the new keyword and the constructor object
I'm not going to go into all of the specifics of it just yet because we'll get into that as we start converting this over to a web component. But the way this works is you can create a new dice object by using the new keyword and the constructor object So new roll dice and then you pass in a selector string for the dice and the element to render it into. And you can optimally pass in an object of options if you want to customize anything. So if I wanted to change the size of the dice from its default of D6, I can pass that in as a size property
So new roll dice and then you pass in a selector string for the dice and the element to render it into. And you can optimally pass in an object of options if you want to customize anything. So if I wanted to change the size of the dice from its default of D6, I can pass that in as a size property If I want to change the display text that shows for the result, I can pass that in as a string and this has this handlebars ask little thing that gets replaced out. So with the D20, it says result instead of you rolled a, so pretty basic library here. And then you can style things with CSS
If I want to change the display text that shows for the result, I can pass that in as a string and this has this handlebars ask little thing that gets replaced out. So with the D20, it says result instead of you rolled a, so pretty basic library here. And then you can style things with CSS So I've got my styles up here just to control the different dice and that's why they have these slightly different colors and appearances. So this is typically how JavaScript libraries work
So I've got my styles up here just to control the different dice and that's why they have these slightly different colors and appearances. So this is typically how JavaScript libraries work And it works pretty well, but it has some potential, I don't know what's the potential issues, but there are some, some things with it that especially with like larger components, can be problematic. So really quick. For example, oh, sorry. Quick
And it works pretty well, but it has some potential, I don't know what's the potential issues, but there are some, some things with it that especially with like larger components, can be problematic. So really quick. For example, oh, sorry. Quick Quick. You might be going into this with the example, but also for some reason, me and classes. Yes. Just don't click. Yeah, I heard you talk about that actually in your react episode. A few days back. Yeah. I also talked about it
Quick. You might be going into this with the example, but also for some reason, me and classes. Yes. Just don't click. Yeah, I heard you talk about that actually in your react episode. A few days back. Yeah. I also talked about it I don't think I did it on stream, but y'all learning TypeScript with Josh Goldberg. It is such a dope human and fun. But what we were looking on is we just finished chapter six and chapter eight is what I fear most classes. I'm not looking forward to it
I don't think I did it on stream, but y'all learning TypeScript with Josh Goldberg. It is such a dope human and fun. But what we were looking on is we just finished chapter six and chapter eight is what I fear most classes. I'm not looking forward to it It's not exactly what he said if I wanted to, I could skip it. It's not going to be the end of the world. But I asked that because it's still something that doesn't click as much. So by any means, you're using classes. Is that going to be a requirement to these web components? Yes
It's not exactly what he said if I wanted to, I could skip it. It's not going to be the end of the world. But I asked that because it's still something that doesn't click as much. So by any means, you're using classes. Is that going to be a requirement to these web components? Yes And we will unpack that as we go. So I'll make sure that we can ignore it for purposes of this traditional library. But we can absolutely unpack that as we dig in. Actually, you know what, Jen? No. We're going to talk about this right now. Hold on just a second. Ready? Okay
And we will unpack that as we go. So I'll make sure that we can ignore it for purposes of this traditional library. But we can absolutely unpack that as we dig in. Actually, you know what, Jen? No. We're going to talk about this right now. Hold on just a second. Ready? Okay Ready? Okay. No time like the present. So are you a little bit more comfortable with like prototypal and herdence and using like object prototypes? Is that kind of how you typically work? Or do you not do that either? I typically go, hey, I want to build this
Ready? Okay. No time like the present. So are you a little bit more comfortable with like prototypal and herdence and using like object prototypes? Is that kind of how you typically work? Or do you not do that either? I typically go, hey, I want to build this I have no idea what it's actually called or how to do it. So but I figure out enough to get it to work. Shabby. Shabby. Shabby. I'm really dumb example. Okay. Okay. I'm excited. So let's say I have a library called greeting
I have no idea what it's actually called or how to do it. So but I figure out enough to get it to work. Shabby. Shabby. Shabby. I'm really dumb example. Okay. Okay. I'm excited. So let's say I have a library called greeting And I want to be able to do something like, let's say, let Josh equals new greeting. I don't know what Josh is always my go-to name. I don't know why. Right
And I want to be able to do something like, let's say, let Josh equals new greeting. I don't know what Josh is always my go-to name. I don't know why. Right Right. So we want to be able to do something like like this, right? So we're going to say Josh say hi and that should like, I don't know, log, high Josh into the console or alert it somewhere and do something like that. And then I also want to be able to say bye
Right. So we want to be able to do something like like this, right? So we're going to say Josh say hi and that should like, I don't know, log, high Josh into the console or alert it somewhere and do something like that. And then I also want to be able to say bye This is like the dumbest, simplest example. So this is what this looks like in a like a traditional object oriented programming kind of setup. I've got my constructor function here, which I've called greeting
This is like the dumbest, simplest example. So this is what this looks like in a like a traditional object oriented programming kind of setup. I've got my constructor function here, which I've called greeting And when you create a new greeting, you pass in like some sort of variable, in this case in name. And I'm saving it as a property of the current item, which is what this is. So each instance will have its own name property and it's whatever you passed in
And when you create a new greeting, you pass in like some sort of variable, in this case in name. And I'm saving it as a property of the current item, which is what this is. So each instance will have its own name property and it's whatever you passed in And then I can attach functions to the constructor prototype. So in this case, we have say hi equals function and then we're also going to do one for say bye. And because these are attached to the prototype, they get access to this and any properties that are associated with it
And then I can attach functions to the constructor prototype. So in this case, we have say hi equals function and then we're also going to do one for say bye. And because these are attached to the prototype, they get access to this and any properties that are associated with it So when I run this function, I could do something like hello, we're going to go this name. And then we're going to say hey name GTFO. So let's actually just pop this over to a browser so we can see it here. So you can see now we've got hello Josh and hey Josh, get the fuck out
So when I run this function, I could do something like hello, we're going to go this name. And then we're going to say hey name GTFO. So let's actually just pop this over to a browser so we can see it here. So you can see now we've got hello Josh and hey Josh, get the fuck out And you can do this with like a different name, right? So I could have Toby equals new greeting. This reminds me I really want to rewatch the office, right? So we'll Toby say bye. Hey Toby GTFO
And you can do this with like a different name, right? So I could have Toby equals new greeting. This reminds me I really want to rewatch the office, right? So we'll Toby say bye. Hey Toby GTFO Hey Toby GTFO. If I do Josh again, you know, it's still going to say Josh because this information is tied to each each unique instance. So the prototype is letting you access all of the properties of that instance. Classes make writing these a little bit simpler
Hey Toby GTFO. If I do Josh again, you know, it's still going to say Josh because this information is tied to each each unique instance. So the prototype is letting you access all of the properties of that instance. Classes make writing these a little bit simpler And they also add in newer browsers, like just a buttload of new features that make things really nice. So you can have private properties and functions that are only accessible inside the class and can't be read or accessed externally
And they also add in newer browsers, like just a buttload of new features that make things really nice. So you can have private properties and functions that are only accessible inside the class and can't be read or accessed externally And all sorts of really fun stuff that I won't get into right now. And if I were going to rewrite this as a class, I write class greeting. And this becomes an object. So instead of having to define, you know, function greeting and attach things to the prototype, I just write class greeting
And all sorts of really fun stuff that I won't get into right now. And if I were going to rewrite this as a class, I write class greeting. And this becomes an object. So instead of having to define, you know, function greeting and attach things to the prototype, I just write class greeting And then the constructor is always named constructor, but otherwise works exactly the same way. So here we're going to say name. We're going to say this name. And then for my say hi and say five, say by functions, I just write them like this
And then the constructor is always named constructor, but otherwise works exactly the same way. So here we're going to say name. We're going to say this name. And then for my say hi and say five, say by functions, I just write them like this I shouldn't say just, just as like the worst word in teaching code. But I can go like this. And these automatically get attached to the instance prototype. And so what's nice about this is you create this little scoped object
I shouldn't say just, just as like the worst word in teaching code. But I can go like this. And these automatically get attached to the instance prototype. And so what's nice about this is you create this little scoped object Like normally if I wanted to scope this stuff, I might have to like wrap it in an immediately evoked function expression or put it in an ES module or something. I just I get I get everything kind of contained in this one little object. And this does exactly the same thing as this
Like normally if I wanted to scope this stuff, I might have to like wrap it in an immediately evoked function expression or put it in an ES module or something. I just I get I get everything kind of contained in this one little object. And this does exactly the same thing as this There are just two different ways of writing it. It's maybe a little bit more nuanced than that. There are a couple of like weird little gutches and things
There are just two different ways of writing it. It's maybe a little bit more nuanced than that. There are a couple of like weird little gutches and things Like for example, with traditional object oriented programming, you can do this without the new constructor or instantiator and it'll still work with classes you're forced to use new, which is good. But yeah, that's classes in a nutshell
Like for example, with traditional object oriented programming, you can do this without the new constructor or instantiator and it'll still work with classes you're forced to use new, which is good. But yeah, that's classes in a nutshell And hopefully as we start to dig into this a little bit more, it will make more sense. And if at any point you feel like it's not making sense, Jen, let me know and we can dig into it. Thank you for that
And hopefully as we start to dig into this a little bit more, it will make more sense. And if at any point you feel like it's not making sense, Jen, let me know and we can dig into it. Thank you for that Thank you for that. And I will say like what you're saying makes sense as a I would you say that in and this is going off of like the first LinkedIn learning that I ever tried was JavaScript. And I've got I've been stuck on the way I've learned it tried learning it from there
Thank you for that. And I will say like what you're saying makes sense as a I would you say that in and this is going off of like the first LinkedIn learning that I ever tried was JavaScript. And I've got I've been stuck on the way I've learned it tried learning it from there But do you need classes to be in a different file? Or they normally in a different file? No, they don't have to be. You can drop everything in one one file if you want. A lot of folks put them in different files and import things because that's kind of the modern way people do things
But do you need classes to be in a different file? Or they normally in a different file? No, they don't have to be. You can drop everything in one one file if you want. A lot of folks put them in different files and import things because that's kind of the modern way people do things But for our purposes, I'm literally just everything is in one spot. Like I have a single HTML file for each example and that's how we're getting down. So for on this one, if I'm doing like the constructor or that version as a class, if I had it in a different file, I would just do export
But for our purposes, I'm literally just everything is in one spot. Like I have a single HTML file for each example and that's how we're getting down. So for on this one, if I'm doing like the constructor or that version as a class, if I had it in a different file, I would just do export So it knew what to export. Yeah, so let's say this was either one of these in their own kind of file somewhere. I'm just going to add some white space so it looks like it's on its own. I could go export default greeting or if you prefer to not have a default, you could do that
So it knew what to export. Yeah, so let's say this was either one of these in their own kind of file somewhere. I'm just going to add some white space so it looks like it's on its own. I could go export default greeting or if you prefer to not have a default, you could do that And then in another file, I can import. I import. This function plus all of the prototype functions that go with it. All of its instance methods. There we go. Let's see if it's an name. Would come along with it. I think you just answered the question. The way you described classes made sense to me
And then in another file, I can import. I import. This function plus all of the prototype functions that go with it. All of its instance methods. There we go. Let's see if it's an name. Would come along with it. I think you just answered the question. The way you described classes made sense to me It was like that added to not understanding import exports when I very first started. I think added the extra complication. Okay. Thank you. Thank you for the side track. No, no worries. That's I'm all about tangents. It's a superpower. So. Yes
It was like that added to not understanding import exports when I very first started. I think added the extra complication. Okay. Thank you. Thank you for the side track. No, no worries. That's I'm all about tangents. It's a superpower. So. Yes So. Yes. So circling back, one of the challenges with traditional components and libraries is all the HTML, right? So I have all this HTML here. And if I'm kind of handing this along to a developer to use, I'm trusting them to not fuck it up
So. Yes. So circling back, one of the challenges with traditional components and libraries is all the HTML, right? So I have all this HTML here. And if I'm kind of handing this along to a developer to use, I'm trusting them to not fuck it up So in particular, one thing that could easily get dropped out is if someone forgets to add R.A.L.I.V. to the container that the dice roll result is going into. Now visually impaired people or people who rely on screen readers, not going to be able to know what those results are
So in particular, one thing that could easily get dropped out is if someone forgets to add R.A.L.I.V. to the container that the dice roll result is going into. Now visually impaired people or people who rely on screen readers, not going to be able to know what those results are They won't get any sort of information from this. This library, it matters a little bit less, but like a lot of times you'll have libraries where you also load a style sheet and it's got a bunch of styles that control how things look and behave
They won't get any sort of information from this. This library, it matters a little bit less, but like a lot of times you'll have libraries where you also load a style sheet and it's got a bunch of styles that control how things look and behave And if I type a class wrong on one of these elements, those styles won't get applied. Maybe I already have a thing in my library or in my app or my site rather that has classes with the same name and now they're in collision with each other. And so web components aim to solve a lot of those issues
And if I type a class wrong on one of these elements, those styles won't get applied. Maybe I already have a thing in my library or in my app or my site rather that has classes with the same name and now they're in collision with each other. And so web components aim to solve a lot of those issues So let's take a look at what a web component version of this might look like so you can see what I'm talking about. So here, instead of having all of this stuff, I have a single custom element here, roll dice
So let's take a look at what a web component version of this might look like so you can see what I'm talking about. So here, instead of having all of this stuff, I have a single custom element here, roll dice And we're going to build this up so that it replicates all of the stuff that was in our traditional library. So right off the bat, the ergonomics for a developer who's doing this become a lot easier
And we're going to build this up so that it replicates all of the stuff that was in our traditional library. So right off the bat, the ergonomics for a developer who's doing this become a lot easier All they have to do is make sure the JavaScript that powers this is loaded and drop this element somewhere on the page and all of the other stuff, all of the kind of the other things that go into here will get automatically added for them so they don't have to do anything there
All they have to do is make sure the JavaScript that powers this is loaded and drop this element somewhere on the page and all of the other stuff, all of the kind of the other things that go into here will get automatically added for them so they don't have to do anything there We're also going to, as we move further into this, look at how we can scope or I'm forgetting the word and it starts with a C
We're also going to, as we move further into this, look at how we can scope or I'm forgetting the word and it starts with a C Keep the classes and elements inside here from colluding with other elements on the page that have the same name, basically by putting everything in its own little DOM called the shadow DOM. So we'll take a look at how all this works as we carry on
Keep the classes and elements inside here from colluding with other elements on the page that have the same name, basically by putting everything in its own little DOM called the shadow DOM. So we'll take a look at how all this works as we carry on But for now, I just want to show you if I open up this page, the styling isn't here right now, but I have my little Rola D6 button. Clicking it does nothing. I haven't added any functionality. I just want to show you the basics of how we go from this to having an actual button here
But for now, I just want to show you if I open up this page, the styling isn't here right now, but I have my little Rola D6 button. Clicking it does nothing. I haven't added any functionality. I just want to show you the basics of how we go from this to having an actual button here And if I inspect. Really? Yeah. I don't know why it took me so long to how this clicked, but I'm very excited. So astro components are web components, right? I would think so. You're good. So not exactly. Well, maybe I've never seen a live output from astro before. I've seen how stuff goes in
And if I inspect. Really? Yeah. I don't know why it took me so long to how this clicked, but I'm very excited. So astro components are web components, right? I would think so. You're good. So not exactly. Well, maybe I've never seen a live output from astro before. I've seen how stuff goes in The big one of the big things with astro is what you type in is getting compiled into something else. So I don't know if the output is actually web components or not, but we can find out pretty easily. Let's see. Astro. They have a new website now. So let's see
The big one of the big things with astro is what you type in is getting compiled into something else. So I don't know if the output is actually web components or not, but we can find out pretty easily. Let's see. Astro. They have a new website now. So let's see So let's see. It's possible they're not building their own site with with astro. It's tough to say, but these do not look like web components to me. That doesn't mean maybe someone in the comments will know because I haven't played with astro all that much. Thank you
So let's see. It's possible they're not building their own site with with astro. It's tough to say, but these do not look like web components to me. That doesn't mean maybe someone in the comments will know because I haven't played with astro all that much. Thank you Thank you. And the reason I was bringing up astro is because it's when I first used components. And Ben answered, I'm just trying to finish this thought and then we'll reply with Ben. ReBenz reply. There we go
Thank you. And the reason I was bringing up astro is because it's when I first used components. And Ben answered, I'm just trying to finish this thought and then we'll reply with Ben. ReBenz reply. There we go There we go. Well, it's like, I remember you showing how in the code that it was showing the dice, the roll dice and having that just there, I was like, oh, that's like an astro component. And that's kind of what made me put two and two together
There we go. Well, it's like, I remember you showing how in the code that it was showing the dice, the roll dice and having that just there, I was like, oh, that's like an astro component. And that's kind of what made me put two and two together Let me read all of Ben's replies of astro components are basically compiled into the underlying markup. It's different scenario than custom elements like this actually being added to the DOM
Let me read all of Ben's replies of astro components are basically compiled into the underlying markup. It's different scenario than custom elements like this actually being added to the DOM Astro does actually use web components to handle some of its lazy loading functionality, but your components are not themselves really web components. Thanks, Ben. Really quick. Remind me what is DOM. I feel like I should know that, but I don't know it. Object model. Thank you
Astro does actually use web components to handle some of its lazy loading functionality, but your components are not themselves really web components. Thanks, Ben. Really quick. Remind me what is DOM. I feel like I should know that, but I don't know it. Object model. Thank you Thank you. So it is the interface that JavaScript and believe it or not some other programming languages like Python used to interact with HTML elements
Thank you. So it is the interface that JavaScript and believe it or not some other programming languages like Python used to interact with HTML elements So I've got a button element and then the DOM or document object model is the interface that allows various JavaScript methods to interact with that element. And it's all weird and heavy and confusing. So that's about as much as I know about, you know, just perfect. That is perfect. Thank you
So I've got a button element and then the DOM or document object model is the interface that allows various JavaScript methods to interact with that element. And it's all weird and heavy and confusing. So that's about as much as I know about, you know, just perfect. That is perfect. Thank you Thank you. So you'll notice here though, what we entered into the page is this, this empty element. But what we have kind of rendered out is paragraph with the button and my aria live element on the page. Take a look at how we actually do that
Thank you. So you'll notice here though, what we entered into the page is this, this empty element. But what we have kind of rendered out is paragraph with the button and my aria live element on the page. Take a look at how we actually do that So with web components, you are going to create a class that extends the HTML element object. And I'll get into kind of the needy gritty of that in a minute. But once you have created a class to do that, you can then define a custom element
So with web components, you are going to create a class that extends the HTML element object. And I'll get into kind of the needy gritty of that in a minute. But once you have created a class to do that, you can then define a custom element I like to, this is probably not as necessary now in the world of modern evergreen browsers. But here I'm just checking that the custom elements property actually exists as a thing you can run. And as long as it does, I'm going to use the custom elements define method
I like to, this is probably not as necessary now in the world of modern evergreen browsers. But here I'm just checking that the custom elements property actually exists as a thing you can run. And as long as it does, I'm going to use the custom elements define method I pass in the name of the custom element and the class that I want to use to control and power it. One little note about custom elements with native web components, they have to include a dash. So I couldn't just call this dice
I pass in the name of the custom element and the class that I want to use to control and power it. One little note about custom elements with native web components, they have to include a dash. So I couldn't just call this dice It's one of the like the guard rails that allows you to create custom elements knowing comfortably that they will not collide with existing real elements that are just kind of standard in the browser. So custom elements always have a dash in them and regular, regular standard elements do not
It's one of the like the guard rails that allows you to create custom elements knowing comfortably that they will not collide with existing real elements that are just kind of standard in the browser. So custom elements always have a dash in them and regular, regular standard elements do not And that way that the, the tween never should never shall meet. So within a custom web component class, you have a couple of things. The first is the constructor. And this is the thing that this will run automatically when the browser loads in the JavaScript for the web component runs
And that way that the, the tween never should never shall meet. So within a custom web component class, you have a couple of things. The first is the constructor. And this is the thing that this will run automatically when the browser loads in the JavaScript for the web component runs And you, as long as you've defined that custom element, if the browser detects the custom element, it's automatically going to instantiate a, a version of it for each element on the page
And you, as long as you've defined that custom element, if the browser detects the custom element, it's automatically going to instantiate a, a version of it for each element on the page So the first thing you need to do is run the super constructor and that gives you access to all of the properties that are part of this HTML element class that role dice is extending or that your custom web component is extending
So the first thing you need to do is run the super constructor and that gives you access to all of the properties that are part of this HTML element class that role dice is extending or that your custom web component is extending And then I'm not using shadow DOM yet, but I am rendering some HTML into the page. So when this is instantiated, I am using the inner HTML property on this, which in this case is the element itself, to inject some content into it
And then I'm not using shadow DOM yet, but I am rendering some HTML into the page. So when this is instantiated, I am using the inner HTML property on this, which in this case is the element itself, to inject some content into it And that's how we end up with our, our markup in the UI, even though we didn't actually physically type it. There is a lifecycle for web components. So they're instantiated. And then they get connected in the DOM, which is when they actually kind of get like, appended into the UI
And that's how we end up with our, our markup in the UI, even though we didn't actually physically type it. There is a lifecycle for web components. So they're instantiated. And then they get connected in the DOM, which is when they actually kind of get like, appended into the UI And when that happens, this connected callback function automatically runs
And when that happens, this connected callback function automatically runs If at any point the element is removed from the DOM, say if I used like the remove method or I moved it, maybe I grabbed the element and I used like the append or prepend method to move it around the page somewhere, this disconnected callback method would fire
If at any point the element is removed from the DOM, say if I used like the remove method or I moved it, maybe I grabbed the element and I used like the append or prepend method to move it around the page somewhere, this disconnected callback method would fire And if it was getting then re-added somewhere else, the connected callback would run again. So if you for some reason need to kind of fire things off when stuff gets injected or removed from the DOM, you have some hooks to do that. Really quick. Yeah
And if it was getting then re-added somewhere else, the connected callback would run again. So if you for some reason need to kind of fire things off when stuff gets injected or removed from the DOM, you have some hooks to do that. Really quick. Yeah Really quick. Yeah. Does super need, with random brackets need the need parameters? No, no, you just, you just run it. Actually, let's see what happens if I don't. Yeah, so now I'm getting this must-call super constructor in derived class before accessing this
Really quick. Yeah. Does super need, with random brackets need the need parameters? No, no, you just, you just run it. Actually, let's see what happens if I don't. Yeah, so now I'm getting this must-call super constructor in derived class before accessing this That's what gives you access to the this keyword. So all I have to do is run it. I know sometimes you see it in examples with arguments for this particular use case we don't. Here you can see connected is actually logging into the console gen. That's happening right here
That's what gives you access to the this keyword. So all I have to do is run it. I know sometimes you see it in examples with arguments for this particular use case we don't. Here you can see connected is actually logging into the console gen. That's happening right here So when the element gets appended into the DOM, and I could even do something like, so let's say, here I'm going to cheat. I'm going to use the dollar sign shorthand that's built right into browsers because I'm feeling lazy. So here I've got my rolled-eye element
So when the element gets appended into the DOM, and I could even do something like, so let's say, here I'm going to cheat. I'm going to use the dollar sign shorthand that's built right into browsers because I'm feeling lazy. So here I've got my rolled-eye element And if I were to remove it like that, now that disconnected callback function runs because I disconnected it from the document object model or DOM. But so this is kind of the basics of it here
And if I were to remove it like that, now that disconnected callback function runs because I disconnected it from the document object model or DOM. But so this is kind of the basics of it here So if you had an element that had no interactivity to it, you just wanted to render some piece of UI that had a bunch of pieces to it into the DOM. And that was it. You were done with it, but you wanted to make it easier. Say like a nav menu that just had some links
So if you had an element that had no interactivity to it, you just wanted to render some piece of UI that had a bunch of pieces to it into the DOM. And that was it. You were done with it, but you wanted to make it easier. Say like a nav menu that just had some links And you wanted to just be able to do like, you know, like main nav or something like that. You could do it like this. I don't think that really warrants a web component, but you theoretically could do it. And then you're all set
And you wanted to just be able to do like, you know, like main nav or something like that. You could do it like this. I don't think that really warrants a web component, but you theoretically could do it. And then you're all set Obviously that's not necessarily a great use of this technology, but it probably could serve a purpose in something like a design system where you're really trying to ensure a specific look and consistent kind of layout or way of doing things across the system
Obviously that's not necessarily a great use of this technology, but it probably could serve a purpose in something like a design system where you're really trying to ensure a specific look and consistent kind of layout or way of doing things across the system But we're going to make this more interesting by adding interactivity because that's where these things really shine. So let me pull up my next example. So here, what I want to do is actually make it so that when you click this button, something happens
But we're going to make this more interesting by adding interactivity because that's where these things really shine. So let me pull up my next example. So here, what I want to do is actually make it so that when you click this button, something happens So the first thing I am going to do is after I instantiate my constructor, I'm going to assign a dice property to it. And this is going to be an array of dice values. In this case, one through six, because we're just going to go with a standard D6 for now
So the first thing I am going to do is after I instantiate my constructor, I'm going to assign a dice property to it. And this is going to be an array of dice values. In this case, one through six, because we're just going to go with a standard D6 for now And inside my connected callback, I am going to set up a click event listener so that when my button is clicked, I roll the dice, quote unquote, and display that value into the UI
And inside my connected callback, I am going to set up a click event listener so that when my button is clicked, I roll the dice, quote unquote, and display that value into the UI So in this particular case, I need to get the button rather than requiring the user to pass in specific selectors and things. We can use query selector inside our parent element that roll dice custom element by using this
So in this particular case, I need to get the button rather than requiring the user to pass in specific selectors and things. We can use query selector inside our parent element that roll dice custom element by using this So in the context of a custom element or a web component, this is going to refer to like the custom element itself. I'm saying inside my roll dice element, I'm going to use query selector to find the button that I injected up here
So in the context of a custom element or a web component, this is going to refer to like the custom element itself. I'm saying inside my roll dice element, I'm going to use query selector to find the button that I injected up here If there isn't one for some reason, there should be, but if there isn't, we'll just will quit early with the return operator. But otherwise, we're going to add a click event listener to the button
If there isn't one for some reason, there should be, but if there isn't, we'll just will quit early with the return operator. But otherwise, we're going to add a click event listener to the button And then whenever that fires, we are going to look for the array live region inside that parent element. One little thing here, you'll notice I'm using host, which I have assigned this to
And then whenever that fires, we are going to look for the array live region inside that parent element. One little thing here, you'll notice I'm using host, which I have assigned this to So once you move inside this callback function, this no longer refers to the parent element, it refers to something else. I forget what I think it might be the function, might be the window. So I just, I cashed this to host up here so that I can use it inside here
So once you move inside this callback function, this no longer refers to the parent element, it refers to something else. I forget what I think it might be the function, might be the window. So I just, I cashed this to host up here so that I can use it inside here I think I could have avoided this with arrow functions, but I hate them. Here we are. So I'm getting the array a live region. And then I'll explain this in a second, but I am, I am shuffling my array. So I'm just randomly sorting it
I think I could have avoided this with arrow functions, but I hate them. Here we are. So I'm getting the array a live region. And then I'll explain this in a second, but I am, I am shuffling my array. So I'm just randomly sorting it And then I'm grabbing the first number from the now scrambled array and displaying that as the result using the text content property. If we jump over to the browser, you can see it actually works, which is cool
And then I'm grabbing the first number from the now scrambled array and displaying that as the result using the text content property. If we jump over to the browser, you can see it actually works, which is cool So this shuffle method, this is where we get into classes and your, your hate of them so please feel free to dig into this as much as you'd like. So I have shuffle as a static method. That means it's attached to rolled dice instead of the specific instance
So this shuffle method, this is where we get into classes and your, your hate of them so please feel free to dig into this as much as you'd like. So I have shuffle as a static method. That means it's attached to rolled dice instead of the specific instance Jumping back over actually, this might make more sense here, right? So let's say we had greeting shout, right, as a function. So in this case, you know, we're just going to say, hey you, right? So because this is not attached to the prototype, I would not be able to do Josh shout
Jumping back over actually, this might make more sense here, right? So let's say we had greeting shout, right, as a function. So in this case, you know, we're just going to say, hey you, right? So because this is not attached to the prototype, I would not be able to do Josh shout That wouldn't work because it's not attached to the prototype, which ties it to specific instances. Instead, I would have to run greeting shout and I always have to call it on that main object. And JavaScript classes, static methods work the same way
That wouldn't work because it's not attached to the prototype, which ties it to specific instances. Instead, I would have to run greeting shout and I always have to call it on that main object. And JavaScript classes, static methods work the same way So I'm now assigning this hash shuffle method to roll dice instead of to my specific custom element or instance. And then the reason I'm using the hash before it is that makes it a private function that can only be accessed inside the class, which means you can't call it anywhere else
So I'm now assigning this hash shuffle method to roll dice instead of to my specific custom element or instance. And then the reason I'm using the hash before it is that makes it a private function that can only be accessed inside the class, which means you can't call it anywhere else And there's no real reason to do that here other than just like, I don't know, not wanting people to potentially overwrite it or mess with it in any way. So it's just a private method. It's only used inside this function and or inside this class. And that's it
And there's no real reason to do that here other than just like, I don't know, not wanting people to potentially overwrite it or mess with it in any way. So it's just a private method. It's only used inside this function and or inside this class. And that's it And that's it. And this is using something called a newt yates, I think is the name of a fishery, yates. There we go. Or newt is the other name for it. But it's a, it's a, because JavaScript does not have a native array shuffling algorithm
And that's it. And this is using something called a newt yates, I think is the name of a fishery, yates. There we go. Or newt is the other name for it. But it's a, it's a, because JavaScript does not have a native array shuffling algorithm This is a really good way to shuffle an array that produces more random results than just using math random would. I'm not good with algorithms. I copy pasted this off the internet, but fair enough. Yeah
This is a really good way to shuffle an array that produces more random results than just using math random would. I'm not good with algorithms. I copy pasted this off the internet, but fair enough. Yeah Yeah. So it's shuffling the array and then taking whatever the first number is and injecting into the UI. And that's basically the whole thing on this one. We've now added a little bit of interactivity. And all the user had to do was load the JavaScript file and put the element on the page
Yeah. So it's shuffling the array and then taking whatever the first number is and injecting into the UI. And that's basically the whole thing on this one. We've now added a little bit of interactivity. And all the user had to do was load the JavaScript file and put the element on the page They don't have to create a new, you know, like a new instance of it or instantiate anything. It just, you know, you just load the file and load the element and it does its thing. So right off the bat, we've got some wins with our web component here
They don't have to create a new, you know, like a new instance of it or instantiate anything. It just, you know, you just load the file and load the element and it does its thing. So right off the bat, we've got some wins with our web component here There may be instances where you want to remove interactivity. So let's say, for example, I remove this button off the page or remove the element
There may be instances where you want to remove interactivity. So let's say, for example, I remove this button off the page or remove the element Eventually the browser will garbage collect that event listener, but if we don't want to wait for that to happen, or there's other things that might not get garbage collected, we can remove that interactivity as part of our disconnected callback
Eventually the browser will garbage collect that event listener, but if we don't want to wait for that to happen, or there's other things that might not get garbage collected, we can remove that interactivity as part of our disconnected callback So in this particular case, in order to do that, we need to have access to the, excuse me, the handler function that was used to create the event listener in the first place. So I want to be able to use the remove event listener function and I need the exact same handler that went in
So in this particular case, in order to do that, we need to have access to the, excuse me, the handler function that was used to create the event listener in the first place. So I want to be able to use the remove event listener function and I need the exact same handler that went in So we are going to create another static method called create handler that we're going to use to make that event listener function. So I copy and pasted the stuff that was in there and I just moved it to this, this create handler method that returns the callback function
So we are going to create another static method called create handler that we're going to use to make that event listener function. So I copy and pasted the stuff that was in there and I just moved it to this, this create handler method that returns the callback function And then when the constructor runs, I'm creating my handler and assigning it to a this handler property so that we can access it in our various methods. Before I move forward, does that make sense because I know classes are kind of like a, oh my god, I don't know what's going on for you
And then when the constructor runs, I'm creating my handler and assigning it to a this handler property so that we can access it in our various methods. Before I move forward, does that make sense because I know classes are kind of like a, oh my god, I don't know what's going on for you I just want to make sure that actually makes sense. So where I'm at right now, I would say that I'm mostly conceptually getting what you're seeing. There are a lot of things where I haven't necessarily put together words with though
I just want to make sure that actually makes sense. So where I'm at right now, I would say that I'm mostly conceptually getting what you're seeing. There are a lot of things where I haven't necessarily put together words with though And I'm almost thinking I'm like, I want to continue in the fact that I'm like, okay, like this is soaking in. This is more of like theory explaining it
And I'm almost thinking I'm like, I want to continue in the fact that I'm like, okay, like this is soaking in. This is more of like theory explaining it And then maybe I or you and I vote for the latter, but can come on and actually build it from scratch because it's like now that I understand the overview or like getting there, I'm like, I can actually learn it with implementation because I realize like when you're looking at it on the code itself, I'm like, oh, I'm pretty sure I've done that
And then maybe I or you and I vote for the latter, but can come on and actually build it from scratch because it's like now that I understand the overview or like getting there, I'm like, I can actually learn it with implementation because I realize like when you're looking at it on the code itself, I'm like, oh, I'm pretty sure I've done that But I had no idea that what a handler is or a super constructs, but I'm like, I'm pretty sure I've done those, but it's not. Yeah. Like this is something that I've been struggling a lot with is I don't necessarily have the words to go with what I've done
But I had no idea that what a handler is or a super constructs, but I'm like, I'm pretty sure I've done those, but it's not. Yeah. Like this is something that I've been struggling a lot with is I don't necessarily have the words to go with what I've done And so therefore it can be hard to follow along. The burden of being a self taught developer. Yes. I feel you there is take up doing this like a decade and it's taking me a long time to be like, okay, I know what's going on. And even then not always. Yeah. So like I'm like, I'm enjoying this
And so therefore it can be hard to follow along. The burden of being a self taught developer. Yes. I feel you there is take up doing this like a decade and it's taking me a long time to be like, okay, I know what's going on. And even then not always. Yeah. So like I'm like, I'm enjoying this And I'm like, okay, so I mean, what you went through with the classes is helping me stay like being able to stay where you're at. And I'm writing down the words that I'm getting stuck with. So that way it's not super distracting us
And I'm like, okay, so I mean, what you went through with the classes is helping me stay like being able to stay where you're at. And I'm writing down the words that I'm getting stuck with. So that way it's not super distracting us Like enough that I'm like, okay, I can go look these offline to when I reviewed this again. Okay. That sounds great. Yeah. So just for anybody who's like, I don't know what's going on here. I'm passing the instance in to my create handler function. I'm assigning it to this host variable
Like enough that I'm like, okay, I can go look these offline to when I reviewed this again. Okay. That sounds great. Yeah. So just for anybody who's like, I don't know what's going on here. I'm passing the instance in to my create handler function. I'm assigning it to this host variable And then that gets me around that whole like this keyword scope to the function kind of thing. So I'm doing the same exact stuff I was doing in my event listener callback function before. I'm returning that callback function out. And I'm just saving it as a property on our instance
And then that gets me around that whole like this keyword scope to the function kind of thing. So I'm doing the same exact stuff I was doing in my event listener callback function before. I'm returning that callback function out. And I'm just saving it as a property on our instance And you'll see why in just a second. So now inside my connected callback function, when I run my button add event listener method, instead of passing that anonymous function in straight up, I'm passing in this handler, which is now a reference to that function that we created
And you'll see why in just a second. So now inside my connected callback function, when I run my button add event listener method, instead of passing that anonymous function in straight up, I'm passing in this handler, which is now a reference to that function that we created And the reason I do that is so that when I go to disconnect it later, and I run my button remove event listener method, I can pass that same handler in
And the reason I do that is so that when I go to disconnect it later, and I run my button remove event listener method, I can pass that same handler in In order for this event, the remove event listener method to work, it needs to be run with the same exact arguments as the ones that were used to create it in the first place. So that means it needs to be run on the same element. And it needs to have the same callback function passed in
In order for this event, the remove event listener method to work, it needs to be run with the same exact arguments as the ones that were used to create it in the first place. So that means it needs to be run on the same element. And it needs to have the same callback function passed in We get around that by doing what we just did here. So if I were to open this up, everything continues to work as expected. And then if I were to, here we go, let's do this, roll dice, remove
We get around that by doing what we just did here. So if I were to open this up, everything continues to work as expected. And then if I were to, here we go, let's do this, roll dice, remove So if I were to remove that from the UI, as part of that process, the event listener also gets cleaned up or removed. Just real quick, by the way, I want to make sure everybody knows this is not jQuery. Don't use this in production, but browsers for debugging purposes have a shorthand
So if I were to remove that from the UI, as part of that process, the event listener also gets cleaned up or removed. Just real quick, by the way, I want to make sure everybody knows this is not jQuery. Don't use this in production, but browsers for debugging purposes have a shorthand So the dollar sign and then any valid CSS selector will get you the first matching element. And if you use two dollar signs, it will return an array of all matching elements
So the dollar sign and then any valid CSS selector will get you the first matching element. And if you use two dollar signs, it will return an array of all matching elements So if you're too lazy to type out document query selector or document query selector all, like I am, this is a really great way to just do some quick debugging in the console. Thank you for that call out. You're welcome. It's one of my favorite debugging tricks
So if you're too lazy to type out document query selector or document query selector all, like I am, this is a really great way to just do some quick debugging in the console. Thank you for that call out. You're welcome. It's one of my favorite debugging tricks So now we're going to get into why the shadow DOM matters. And what it even is actually. So right now, we're just injecting our content for this custom element directly into the regular DOM, the plain old UI. And that can lead to some unintended side effects
So now we're going to get into why the shadow DOM matters. And what it even is actually. So right now, we're just injecting our content for this custom element directly into the regular DOM, the plain old UI. And that can lead to some unintended side effects So for example, here I have set pointer events on buttons to none and RALive has display value of none. This is stupid for two reasons. One, I can't click the button at all. So let's go ahead and we'll comment that out so that I can
So for example, here I have set pointer events on buttons to none and RALive has display value of none. This is stupid for two reasons. One, I can't click the button at all. So let's go ahead and we'll comment that out so that I can Now when I click the button, nothing is being rendered into the UI. Oh, actually we got multiple issues happening here. So let's get rid of that for a second. Here we go. So what you can see is I'm actually having a result get displayed in the UI
Now when I click the button, nothing is being rendered into the UI. Oh, actually we got multiple issues happening here. So let's get rid of that for a second. Here we go. So what you can see is I'm actually having a result get displayed in the UI But because I have this element set to hidden, it's not showing up. It's just visually not there. Another really dumb thing that a user could do is get that element and remove the RALive attribute off it entirely if they wanted to
But because I have this element set to hidden, it's not showing up. It's just visually not there. Another really dumb thing that a user could do is get that element and remove the RALive attribute off it entirely if they wanted to And so if you did that, like let's say I was no longer displaying none of that. Here we go. Oh yeah, now the result isn't even rendering because the attribute that you need to render it isn't there
And so if you did that, like let's say I was no longer displaying none of that. Here we go. Oh yeah, now the result isn't even rendering because the attribute that you need to render it isn't there But assuming you use some sort of other selector, you could have a situation where the text shows up, but it doesn't get announced to visually impaired users
But assuming you use some sort of other selector, you could have a situation where the text shows up, but it doesn't get announced to visually impaired users And so the idea here is that you want to be able to encapsulate content inside this custom element to prevent it from being messed with in other parts of the code. Because it's very unlikely that someone would do this kind of thing maliciously
And so the idea here is that you want to be able to encapsulate content inside this custom element to prevent it from being messed with in other parts of the code. Because it's very unlikely that someone would do this kind of thing maliciously It's a lot more likely that someone has some piece of styling or JavaScript functionality where the selectors they use happen overlap with the same selectors you've used in your component. And then you run into these weird unintended side effects
It's a lot more likely that someone has some piece of styling or JavaScript functionality where the selectors they use happen overlap with the same selectors you've used in your component. And then you run into these weird unintended side effects Especially as you have larger projects with bigger teams and maybe you have multiple teams working on different pieces of the same app. It's increasingly likely that you'll have components that have the same class names on them even though they're totally separate and do totally different things
Especially as you have larger projects with bigger teams and maybe you have multiple teams working on different pieces of the same app. It's increasingly likely that you'll have components that have the same class names on them even though they're totally separate and do totally different things And so the shadow DOM is a feature of web components that aims to fix that. So here let's close out some of these many, many tabs that I now have open. So you can see here again, I'm still in this file. I am still saying pointer events, none are alive, display none
And so the shadow DOM is a feature of web components that aims to fix that. So here let's close out some of these many, many tabs that I now have open. So you can see here again, I'm still in this file. I am still saying pointer events, none are alive, display none But I am doing something a little bit different inside my constructor. So after running my super constructor, I am creating a shadow DOM inside my web component. So I'm saying this root. So I'm assigning a root property inside my web component. And I'm running the attach shadow method
But I am doing something a little bit different inside my constructor. So after running my super constructor, I am creating a shadow DOM inside my web component. So I'm saying this root. So I'm assigning a root property inside my web component. And I'm running the attach shadow method Now this has two methods opened and closed. If it's open, you can use JavaScript to pierce into it and manipulate some of the elements. The default value or default mode closed blocks JavaScript from getting in. But CSS is always blocked from piercing through
Now this has two methods opened and closed. If it's open, you can use JavaScript to pierce into it and manipulate some of the elements. The default value or default mode closed blocks JavaScript from getting in. But CSS is always blocked from piercing through So many global styles you have will not affect the content inside. And then when I go to render, oh, sorry, go ahead, Jen. Yeah, that's good to know. And Ben asked a question of because they had to step away for a moment
So many global styles you have will not affect the content inside. And then when I go to render, oh, sorry, go ahead, Jen. Yeah, that's good to know. And Ben asked a question of because they had to step away for a moment Did we talk about display none and how that removes the live region from the screen reader output? And I know that when you were doing the screen reader or when we were looking at it, it didn't have anything in the divs
Did we talk about display none and how that removes the live region from the screen reader output? And I know that when you were doing the screen reader or when we were looking at it, it didn't have anything in the divs Is that like, were we talking about it there where it changed it to display none? Or did I just miss that part? No, there's a couple things that happen
Is that like, were we talking about it there where it changed it to display none? Or did I just miss that part? No, there's a couple things that happen So with CSS where I've got this display none situation going on here, it both removes it visually from the UI and then because it's not being displayed, it's also not being announced
So with CSS where I've got this display none situation going on here, it both removes it visually from the UI and then because it's not being displayed, it's also not being announced So there are changes happening, but nobody can see them and screen reader users don't get those announcements either. The other bone headed thing I was doing was removing the aria live attribute entirely. So even if text was being rendered in and could be seen, it wouldn't get announced. Got it
So there are changes happening, but nobody can see them and screen reader users don't get those announcements either. The other bone headed thing I was doing was removing the aria live attribute entirely. So even if text was being rendered in and could be seen, it wouldn't get announced. Got it Got it. And these are just like weirdly specific examples. Like it could be one of a million different things. It could be even just like something as simple as like, oh, this element is a weird color
Got it. And these are just like weirdly specific examples. Like it could be one of a million different things. It could be even just like something as simple as like, oh, this element is a weird color The text is off because it shares a class name with some other part of the UI that you didn't realize. And so Shadow DOM is an attempt to prevent a lot of that. And so instead of injecting my HTML directly into the element, I now inject it into this
The text is off because it shares a class name with some other part of the UI that you didn't realize. And so Shadow DOM is an attempt to prevent a lot of that. And so instead of injecting my HTML directly into the element, I now inject it into thisroot, which is where we've kind of assigned our newly created Shadow DOM
root, which is where we've kind of assigned our newly created Shadow DOM And so if I were to open this up in the browser and inspect this element, you can see I've got the same content here, but instead of being directly underneath my roll dice element, it's now in this Shadow root element here, or object
And so if I were to open this up in the browser and inspect this element, you can see I've got the same content here, but instead of being directly underneath my roll dice element, it's now in this Shadow root element here, or object And you will sometimes notice this with browser native web components as well that add additional stuff. I'm trying to think of one off the top of my head. I want to say details in summary. Do this with some of their elements, but it could be wrong there
And you will sometimes notice this with browser native web components as well that add additional stuff. I'm trying to think of one off the top of my head. I want to say details in summary. Do this with some of their elements, but it could be wrong there But what I've done here is I've created these elements that now exist inside their own DOM. And so when I push my roll button here, this content continues to show up. Don't open Slack
But what I've done here is I've created these elements that now exist inside their own DOM. And so when I push my roll button here, this content continues to show up. Don't open Slack Don't open Slack. What are you doing here? Even though I've got no pointer event set on my buttons and R-E-Live has displayed none, none of that is affecting these elements because they're encapsulated in their own completely separate DOM away from my main DOM where all this other stuff lives
Don't open Slack. What are you doing here? Even though I've got no pointer event set on my buttons and R-E-Live has displayed none, none of that is affecting these elements because they're encapsulated in their own completely separate DOM away from my main DOM where all this other stuff lives If I were to say try and remove R-E-Live from that element, I'm actually going to get an error in the browser. Cannot read properties of null. I literally can't even get this R-E-Live element because it's hidden inside the Shadow DOM, and I have that set to closed
If I were to say try and remove R-E-Live from that element, I'm actually going to get an error in the browser. Cannot read properties of null. I literally can't even get this R-E-Live element because it's hidden inside the Shadow DOM, and I have that set to closed Just so you can see the difference here if I were to set that to open. Oh, no. What's going on? Maybe I'm wrong about that. Or I'm typing it wrong, also possible. Either way, can't mess with it. So it keeps it. I'm going to have to figure out why that is later
Just so you can see the difference here if I were to set that to open. Oh, no. What's going on? Maybe I'm wrong about that. Or I'm typing it wrong, also possible. Either way, can't mess with it. So it keeps it. I'm going to have to figure out why that is later Is it protected? Is it live demos always so fun because you never know? I'm like, it's very possible I either type something wrong or have something wrong in my head. So that gets us into some other cool features that we can take advantage of now that we are inside the Shadow DOM
Is it protected? Is it live demos always so fun because you never know? I'm like, it's very possible I either type something wrong or have something wrong in my head. So that gets us into some other cool features that we can take advantage of now that we are inside the Shadow DOM One of those is slots. You may recall from our original setup here, we had some interesting icons going on. We even had some different text
One of those is slots. You may recall from our original setup here, we had some interesting icons going on. We even had some different text Right now, user has no option for that because we are just, or the developer has no option for that because we're just rendering this fixed button into the UI. As you can see from this UI, we now have some different things showing up. Let's take a look at how we actually make that happen
Right now, user has no option for that because we are just, or the developer has no option for that because we're just rendering this fixed button into the UI. As you can see from this UI, we now have some different things showing up. Let's take a look at how we actually make that happen I've got one that is just my standard RollDise element. Then I have a few others that have these spans in there with this slot attribute on it and some associated name. I've got one for icon, I've got another slot for text, and I've got one RollDise element that has both
I've got one that is just my standard RollDise element. Then I have a few others that have these spans in there with this slot attribute on it and some associated name. I've got one for icon, I've got another slot for text, and I've got one RollDise element that has both Slots provide your web component with a way to have default content that will show up and also let developers who use your thing hook into them and customize them with their own information instead. I find that things are always a little bit easier with an example, so let's take a look
Slots provide your web component with a way to have default content that will show up and also let developers who use your thing hook into them and customize them with their own information instead. I find that things are always a little bit easier with an example, so let's take a look Inside my inner HTML here now, I am using slots for, I'm just going to change the layout a little bit so this is easier to see. Inside my button, I now have two slot elements. Each one has a name that matches the slot properties that we used up top. We've got slot icons, slot text
Inside my inner HTML here now, I am using slots for, I'm just going to change the layout a little bit so this is easier to see. Inside my button, I now have two slot elements. Each one has a name that matches the slot properties that we used up top. We've got slot icons, slot text These don't have to be spans, they could be anything, could be like a div or whatever you want. But since everything's in line here, I'm just using spans. What this is saying is I have a slot with a name of icon and this is the default that I'm going to use for it
These don't have to be spans, they could be anything, could be like a div or whatever you want. But since everything's in line here, I'm just using spans. What this is saying is I have a slot with a name of icon and this is the default that I'm going to use for it I'm going to use this dice roll emoji. I have a slot with a name of text and that default text is roll a D6. If someone does not include an element with a slot property whose value matches or slot attribute, I'm sorry, whose value matches this name, it will use this default value
I'm going to use this dice roll emoji. I have a slot with a name of text and that default text is roll a D6. If someone does not include an element with a slot property whose value matches or slot attribute, I'm sorry, whose value matches this name, it will use this default value If they do provide one, it will use that value instead. So now I can do things like say, okay, I want the icon to be this bearded wizard dude and I want this text to be toss some cubes. So in this case, it's going to say roll D6, but it's going to have the wizard
If they do provide one, it will use that value instead. So now I can do things like say, okay, I want the icon to be this bearded wizard dude and I want this text to be toss some cubes. So in this case, it's going to say roll D6, but it's going to have the wizard Here, it's still going to use the dice emoji, but it's going to say toss some cubes instead. Now, this one I'm customizing both. If we jump over to the browser, you can see that's exactly what we get. We got that default text with the different emoji
Here, it's still going to use the dice emoji, but it's going to say toss some cubes instead. Now, this one I'm customizing both. If we jump over to the browser, you can see that's exactly what we get. We got that default text with the different emoji Default emoji was in different text and everything customized. Slots are totally optional, but they provide these really nice hooks that you can use for developers to customize the stuff that's being spin out while still providing a baseline default experience if you want one
Default emoji was in different text and everything customized. Slots are totally optional, but they provide these really nice hooks that you can use for developers to customize the stuff that's being spin out while still providing a baseline default experience if you want one And also not giving them too much, it gets back to, if we were doing this the traditional way where the user has to write out all the HTML, they could already do this, but they could also miss things like the RALI attribute
And also not giving them too much, it gets back to, if we were doing this the traditional way where the user has to write out all the HTML, they could already do this, but they could also miss things like the RALI attribute So this allows some customization without giving them control over stuff that they could break or get wrong, if that makes sense. Okay. Any questions? It does. Okay, you have questions. I do, but I don't at the same time
So this allows some customization without giving them control over stuff that they could break or get wrong, if that makes sense. Okay. Any questions? It does. Okay, you have questions. I do, but I don't at the same time It's like, I kind of have to noodle on it because something that is like coming to mind and it was something I asked about earlier is more of just like going between like DOM and shadow DOM and then the nesting of things
It's like, I kind of have to noodle on it because something that is like coming to mind and it was something I asked about earlier is more of just like going between like DOM and shadow DOM and then the nesting of things And I'm like, I feel like that is going to be something that it takes time, not necessarily something to like super dick into
And I'm like, I feel like that is going to be something that it takes time, not necessarily something to like super dick into I will say something that if you could go into this a bit more of, throughout the entire going through everything, you talked about being able to, I believe it was connect and disconnect
I will say something that if you could go into this a bit more of, throughout the entire going through everything, you talked about being able to, I believe it was connect and disconnect And I'm like, but why would you want to connect and disconnect? Wouldn't you just want to like do with own thing and it should auto disconnect? Yeah. So these callback functions, the connected callback and the disconnected callback, you're not running those directly
And I'm like, but why would you want to connect and disconnect? Wouldn't you just want to like do with own thing and it should auto disconnect? Yeah. So these callback functions, the connected callback and the disconnected callback, you're not running those directly These are callback functions that fire automatically when the element itself, so in this case, roll dice, if it gets added to the DOM or removed from the DOM, so you theoretically want to do things if I were to take this element and remove it from the UI
These are callback functions that fire automatically when the element itself, so in this case, roll dice, if it gets added to the DOM or removed from the DOM, so you theoretically want to do things if I were to take this element and remove it from the UI You might want to run some code in response. In this case, we're just attaching and removing event listeners, but it could be something like calling an API endpoint or running some other piece of code to show up in its place or something like that
You might want to run some code in response. In this case, we're just attaching and removing event listeners, but it could be something like calling an API endpoint or running some other piece of code to show up in its place or something like that It just provides a way for you to hook into, okay, this element got rendered into the DOM or this element got removed from the UI. You don't have to use them at all
It just provides a way for you to hook into, okay, this element got rendered into the DOM or this element got removed from the UI. You don't have to use them at all Generally, as a recommended best practice, that's where you want to add or remove your event listeners because you don't need them until the element is in the UI. And once it's removed from the UI, you don't, but you could not use them at all
Generally, as a recommended best practice, that's where you want to add or remove your event listeners because you don't need them until the element is in the UI. And once it's removed from the UI, you don't, but you could not use them at all I've seen web components where all of that stuff just happens in the constructor and you don't use these callbacks at all. They just provide a way to extend your component and you're never going to run them directly
I've seen web components where all of that stuff just happens in the constructor and you don't use these callbacks at all. They just provide a way to extend your component and you're never going to run them directly They are things that run in response to DOM interaction because these elements are elements in the page. You can use other JavaScript methods and DOM manipulation methods to move them around and do stuff like that
They are things that run in response to DOM interaction because these elements are elements in the page. You can use other JavaScript methods and DOM manipulation methods to move them around and do stuff like that Okay, why would, especially when we're talking about the button being removed and then needing to disconnect the callback for the event listener, that's totally making sense, but at least knowing me and just trying to get stuff to work and not work, I tend to do the comment out situation where you comment something out, see if what happens and I uncomment it out is like how, how would someone know which way to go or is there just like a best practice there to like instead of like commenting out to turn off the event listener or something like that, something that you may suggest to just get used to this in all many situations or
Okay, why would, especially when we're talking about the button being removed and then needing to disconnect the callback for the event listener, that's totally making sense, but at least knowing me and just trying to get stuff to work and not work, I tend to do the comment out situation where you comment something out, see if what happens and I uncomment it out is like how, how would someone know which way to go or is there just like a best practice there to like instead of like commenting out to turn off the event listener or something like that, something that you may suggest to just get used to this in all many situations or Yeah, so one thing I guess I will just kind of make note of is this thing where I'm like removing the event listener, it's optional. Like eventually the browser is going to garbage collect that. Okay. Be like, oh, this element isn't here anymore. We don't need this anymore. Gone
Yeah, so one thing I guess I will just kind of make note of is this thing where I'm like removing the event listener, it's optional. Like eventually the browser is going to garbage collect that. Okay. Be like, oh, this element isn't here anymore. We don't need this anymore. Gone Gone. So you could just as easily take all this stuff and drop it up here. Like if you're just getting started, you just drop it all in the constructor and never worry about it again. That's totally fine too. In fact, my first few web components, that's how I wrote them
Gone. So you could just as easily take all this stuff and drop it up here. Like if you're just getting started, you just drop it all in the constructor and never worry about it again. That's totally fine too. In fact, my first few web components, that's how I wrote them I was clean and simple and easy. I'm making this a little bit more robust just because I want to be able to cover all of kind of the different different things you can do with a web component, but that doesn't need to do all of them. Okay. So it's very cool. Very cool
I was clean and simple and easy. I'm making this a little bit more robust just because I want to be able to cover all of kind of the different different things you can do with a web component, but that doesn't need to do all of them. Okay. So it's very cool. Very cool Very cool. One other thing you can do, speaking of kind of interactions, because we were just talking about how this is like an element in the DOM. So one thing you can do with web components is detect when attributes have been added or changed in value on the element and respond to it in some way
Very cool. One other thing you can do, speaking of kind of interactions, because we were just talking about how this is like an element in the DOM. So one thing you can do with web components is detect when attributes have been added or changed in value on the element and respond to it in some way So for example, let's say we wanted to provide a way for like this being used in a tabletop RPG app, right
So for example, let's say we wanted to provide a way for like this being used in a tabletop RPG app, right And you want developers to be able to turn off rolling of that dice in certain situations, like maybe the players unconscious and they can't roll or something like, I don't know whatever it happens to be, right
And you want developers to be able to turn off rolling of that dice in certain situations, like maybe the players unconscious and they can't roll or something like, I don't know whatever it happens to be, right So the way this web component is going to work is a developer can toss the disabled attribute on there and the dice will no longer be able to roll
So the way this web component is going to work is a developer can toss the disabled attribute on there and the dice will no longer be able to roll And obviously you might be doing this with JavaScript. So you might do something like, I'm going to get that element with the query selector method and then I'm going to use the set attribute method to add disabled. And in this case, a little value here, you can't roll right now
And obviously you might be doing this with JavaScript. So you might do something like, I'm going to get that element with the query selector method and then I'm going to use the set attribute method to add disabled. And in this case, a little value here, you can't roll right now So web components allow you to detect that this has been added or changed in value and do something about it. And the way they do that is with the attribute changed callback
So web components allow you to detect that this has been added or changed in value and do something about it. And the way they do that is with the attribute changed callback So they're all they all end with callback, but there's a handful of methods built into web components that run when things happen. And this one runs when attributes are changed
So they're all they all end with callback, but there's a handful of methods built into web components that run when things happen. And this one runs when attributes are changed Now, if it ran every time every single attribute on an element changed, it could run a whole bunch and that would be added for performance. So in order for this to work, it actually requires you to register the attributes you want to detect so that it doesn't run for all of them
Now, if it ran every time every single attribute on an element changed, it could run a whole bunch and that would be added for performance. So in order for this to work, it actually requires you to register the attributes you want to detect so that it doesn't run for all of them So in this case, we, I don't know why they do it this way, but you create a static observed attributes method or static, it's a getter method, observed attributes method. And it returns an array of the attributes that you want to observe. In this case, there's just one, it's the disabled attribute
So in this case, we, I don't know why they do it this way, but you create a static observed attributes method or static, it's a getter method, observed attributes method. And it returns an array of the attributes that you want to observe. In this case, there's just one, it's the disabled attribute And so in this particular situation here, let's actually comment this out for a second. I'm just going to log changed and then it accepts three parameters, name the original value and the new value. It's going to log those things to the console. And here I'm doing two things
And so in this particular situation here, let's actually comment this out for a second. I'm just going to log changed and then it accepts three parameters, name the original value and the new value. It's going to log those things to the console. And here I'm doing two things I'm setting a hello attribute and a disabled attribute. And if we jump over to the browser and open up the console, the only one that gets logged is disabled because I did not register the other one as something that should be observed
I'm setting a hello attribute and a disabled attribute. And if we jump over to the browser and open up the console, the only one that gets logged is disabled because I did not register the other one as something that should be observed So you can see hello you is on the element, but it did not trigger that attribute changed callback function to run, only disabled it. And I get the name of the attribute. Its old value was null because it didn't exist and its new value is you can't roll right now
So you can see hello you is on the element, but it did not trigger that attribute changed callback function to run, only disabled it. And I get the name of the attribute. Its old value was null because it didn't exist and its new value is you can't roll right now So let's actually do something with it because there's no real point in kind of listening for this if we're not actually going to take action. So in our case, let's say when the button gets disabled, we want to let the user know
So let's actually do something with it because there's no real point in kind of listening for this if we're not actually going to take action. So in our case, let's say when the button gets disabled, we want to let the user know And so to do that, we are going to use the query selector method to get the array alive element inside our shadow DOM. So in this root instead of just this. And we are going to update the this should really be text content and not inter HTML. I don't know why I'm doing that
And so to do that, we are going to use the query selector method to get the array alive element inside our shadow DOM. So in this root instead of just this. And we are going to update the this should really be text content and not inter HTML. I don't know why I'm doing that Let's change that right now. But so we will update the text content. If the new value has a value of null, which is what will happen if we remove the attribute, it will have a value of null instead of some sort of string
Let's change that right now. But so we will update the text content. If the new value has a value of null, which is what will happen if we remove the attribute, it will have a value of null instead of some sort of string So if it's null, we're going to wipe that array live attributes text out entirely. Otherwise we're going to set it to the new value. And now what ends up happening is I get you can't roll right now. So we're letting the user know they can't roll right now
So if it's null, we're going to wipe that array live attributes text out entirely. Otherwise we're going to set it to the new value. And now what ends up happening is I get you can't roll right now. So we're letting the user know they can't roll right now And if I were to remove that attribute, so if I say remove, what do we call this disabled. That message goes away. We can also hook into the presence of that attribute inside our click event listener
And if I were to remove that attribute, so if I say remove, what do we call this disabled. That message goes away. We can also hook into the presence of that attribute inside our click event listener So here we're saying if that host element has the disabled attribute on it, just return right away. Don't actually roll the dice or display anything into the DOM. So now when I click this element, it never updates this because my custom element is disabled and I'm not doing anything
So here we're saying if that host element has the disabled attribute on it, just return right away. Don't actually roll the dice or display anything into the DOM. So now when I click this element, it never updates this because my custom element is disabled and I'm not doing anything And this is just like an example. Obviously there's like a million different ways you could use this. But the idea here is that you can listen for attributes being added or removed to an element or having their value changed and you can respond to it in some way inside your element
And this is just like an example. Obviously there's like a million different ways you could use this. But the idea here is that you can listen for attributes being added or removed to an element or having their value changed and you can respond to it in some way inside your element It's a little bit like how for those of you who are familiar with the details and summary elements, if you add the open attribute to the details element, it will automatically expand and show content. So similar kind of thing there
It's a little bit like how for those of you who are familiar with the details and summary elements, if you add the open attribute to the details element, it will automatically expand and show content. So similar kind of thing there You're providing hooks that allow developers to interact with your components through the HTML instead of directly with JavaScript. So for anybody here who likes view, you might enjoy this. It's a little bit more like view and a little bit less like react. Interesting. Okay
You're providing hooks that allow developers to interact with your components through the HTML instead of directly with JavaScript. So for anybody here who likes view, you might enjoy this. It's a little bit more like view and a little bit less like react. Interesting. Okay Interesting. Okay. And if I were to remove that disabled attribute, not only does our our a live region get wiped clean, but now I can I can start rolling again. And the numbers show up. All right
Interesting. Okay. And if I were to remove that disabled attribute, not only does our our a live region get wiped clean, but now I can I can start rolling again. And the numbers show up. All right All right. Well, I think I'm pretty good on on questions just because it's it as I said, it's a it's a new to the thing. You got a new to on it. Although, what questions do all of you have because I would love to hear those
All right. Well, I think I'm pretty good on on questions just because it's it as I said, it's a it's a new to the thing. You got a new to on it. Although, what questions do all of you have because I would love to hear those I will remove Chris's screen just for the moment so we can just focus on the chat and see what everybody else is saying. I do want to give a shout out to Ben and his show. Some antics. That's just a fun one and just tagged it there
I will remove Chris's screen just for the moment so we can just focus on the chat and see what everybody else is saying. I do want to give a shout out to Ben and his show. Some antics. That's just a fun one and just tagged it there You all should also go follow Ben because Ben is who introduced us and introduces me to a really a ton of really dope people. And Ben is also just an all around great human. Oh my gosh, I know
You all should also go follow Ben because Ben is who introduced us and introduces me to a really a ton of really dope people. And Ben is also just an all around great human. Oh my gosh, I know Oh my gosh, I know. I always feel like so weird when I'm like, I'm just like people's number one fans and I'm like, maybe I'm just creepy. I don't know. I'm not sure
Oh my gosh, I know. I always feel like so weird when I'm like, I'm just like people's number one fans and I'm like, maybe I'm just creepy. I don't know. I'm not sure I'm not sure. And then also I'm going to re post because Ben also helped pin the actual website that we were working off of and what we'll be going to later on, which I'm pretty excited about. So let me grab that as well
I'm not sure. And then also I'm going to re post because Ben also helped pin the actual website that we were working off of and what we'll be going to later on, which I'm pretty excited about. So let me grab that as well Do you think there's anything that we like missed that you wanted to go over that? Yeah, but yeah, the one thing that I think is probably important to talk about is, so if the Shadow DOM block CSS from getting in, how the hell do you actually style your web moves? Okay
Do you think there's anything that we like missed that you wanted to go over that? Yeah, but yeah, the one thing that I think is probably important to talk about is, so if the Shadow DOM block CSS from getting in, how the hell do you actually style your web moves? Okay So if we have a little bit of time, I'd love to just pick into a couple of ways to do that. But I do want to make sure before we dive into that, if anybody has any kind of questions about anything we've talked about so far that we address that
So if we have a little bit of time, I'd love to just pick into a couple of ways to do that. But I do want to make sure before we dive into that, if anybody has any kind of questions about anything we've talked about so far that we address that I feel like I know for some of the streams, it's like not a very active stream itself with questions, but it's like something people go back through and watch and have questions. I feel like that's also where I'm at because I'm like, it makes sense, but it doesn't make sense
I feel like I know for some of the streams, it's like not a very active stream itself with questions, but it's like something people go back through and watch and have questions. I feel like that's also where I'm at because I'm like, it makes sense, but it doesn't make sense So that means I'm going to noodle on it. And then next week, I'm going to be like, oh, damn, that totally made sense. And now I can go rewatch it and go, okay, cool. Let me now ask the questions. So let me go ahead and share your screen so you can show that to us. Oh, perfect
So that means I'm going to noodle on it. And then next week, I'm going to be like, oh, damn, that totally made sense. And now I can go rewatch it and go, okay, cool. Let me now ask the questions. So let me go ahead and share your screen so you can show that to us. Oh, perfect Oh, perfect. And let me get out of inception. Inception mode. Oh, it's so fun. Oh, man. All right, cool. So styling. So there's a few different ways to do this. One of them, the most kind of straightforward, but also I think potentially least palatable is with inline styles inside the shadow DOM
Oh, perfect. And let me get out of inception. Inception mode. Oh, it's so fun. Oh, man. All right, cool. So styling. So there's a few different ways to do this. One of them, the most kind of straightforward, but also I think potentially least palatable is with inline styles inside the shadow DOM So here I've created a style element and I've added styles for my button and my button on hover. And if I were to open up the page here, you can see that now my button is styled
So here I've created a style element and I've added styles for my button and my button on hover. And if I were to open up the page here, you can see that now my button is styled And if I were to look inside here, I've actually got my little my style element with these styles inside that shadow DOM element or shadow root. So styles can't come in. Those styles don't bleed out into the regular DOM. They're just there encapsulated to this to this element
And if I were to look inside here, I've actually got my little my style element with these styles inside that shadow DOM element or shadow root. So styles can't come in. Those styles don't bleed out into the regular DOM. They're just there encapsulated to this to this element So yeah, so that's cool. But one inline styles kind of suck. We'll talk about that in a minute. But the other thing is this completely strips developers of the ability to actually customize styles for these things that are going to be rendered into their app
So yeah, so that's cool. But one inline styles kind of suck. We'll talk about that in a minute. But the other thing is this completely strips developers of the ability to actually customize styles for these things that are going to be rendered into their app So if this is something, you know, in a design system that's being used by a company, you might want that. You may want to prevent people from tweaking colors and sizes and things
So if this is something, you know, in a design system that's being used by a company, you might want that. You may want to prevent people from tweaking colors and sizes and things But for an open source project that's designed to be used by lots of different people and different types of apps and sites, you might want to provide more control. So one really easy way to do that is with CSS variables
But for an open source project that's designed to be used by lots of different people and different types of apps and sites, you might want to provide more control. So one really easy way to do that is with CSS variables So while CSS itself doesn't bleed into web components, CSS variables or custom properties, I think is what they're called. There's an official name for them. It's not variables, but everybody calls them variables because you define them with with far
So while CSS itself doesn't bleed into web components, CSS variables or custom properties, I think is what they're called. There's an official name for them. It's not variables, but everybody calls them variables because you define them with with far Those do bleed into your web components if you want them to. So in this example, I still have my inline styles, but I am referencing CSS variables as their values
Those do bleed into your web components if you want them to. So in this example, I still have my inline styles, but I am referencing CSS variables as their values So here I'm saying if there's a BG color variable, use it, otherwise use this fallback color, same thing for border and radius size and text color and all that. So with this type of setup, I have some smart defaults. I provided developers with some hooks to customize things if they want to
So here I'm saying if there's a BG color variable, use it, otherwise use this fallback color, same thing for border and radius size and text color and all that. So with this type of setup, I have some smart defaults. I provided developers with some hooks to customize things if they want to And I'm also only allowing them to customize the things I want them to have control over. So I would not allow them to say, hide this RALive element. But there might be a world where I'd let them control the size of it
And I'm also only allowing them to customize the things I want them to have control over. So I would not allow them to say, hide this RALive element. But there might be a world where I'd let them control the size of it So it would be entirely within bounds, I think, to do something like font size equals var, let's say message size as a property. And we'll just give it one M by default, but someone could control that if they wanted to
So it would be entirely within bounds, I think, to do something like font size equals var, let's say message size as a property. And we'll just give it one M by default, but someone could control that if they wanted to And so what you end up with is something like this where I've got, if we scroll up, on my RALDIES elements, I'm saying I want a default radius of zero, not the one M that I think I had defined or quarter of an M, whatever I had is my normal
And so what you end up with is something like this where I've got, if we scroll up, on my RALDIES elements, I'm saying I want a default radius of zero, not the one M that I think I had defined or quarter of an M, whatever I had is my normal If it has a size value of 20, we skipped over this, but you can add attributes and properties to things and hook into them when you're creating your elements
If it has a size value of 20, we skipped over this, but you can add attributes and properties to things and hook into them when you're creating your elements But so in this case, for the one that has a size of 20, which makes it a D20, we actually want to go with a different border color and text color. And on hover, we want the background color to be rub back a purple as well and the color to be white
But so in this case, for the one that has a size of 20, which makes it a D20, we actually want to go with a different border color and text color. And on hover, we want the background color to be rub back a purple as well and the color to be white And that's how you end up with this button right here that looks a little bit different from from that button. So that is better. Where this approach also kind of falls apart is if you have a bunch of web components as part of a broader system
And that's how you end up with this button right here that looks a little bit different from from that button. So that is better. Where this approach also kind of falls apart is if you have a bunch of web components as part of a broader system What you're effectively being forced to do is manually create a bunch of inline styles for a bunch of things. And there's a lot of repeating yourself. Let's say I have a bunch of different components that have buttons in them
What you're effectively being forced to do is manually create a bunch of inline styles for a bunch of things. And there's a lot of repeating yourself. Let's say I have a bunch of different components that have buttons in them I'm now having to define button styles in each of those different components. And that really sucks. One of the ways that you can get around this is a newer approach called Constructable Style Sheets
I'm now having to define button styles in each of those different components. And that really sucks. One of the ways that you can get around this is a newer approach called Constructable Style Sheets And the way this works is you can import a style sheet just like you would import a Java script file. So here I've set my type to module instead of just a normal script tag. And normally you would you would do this like as an external file and an ES module
And the way this works is you can import a style sheet just like you would import a Java script file. So here I've set my type to module instead of just a normal script tag. And normally you would you would do this like as an external file and an ES module But here just because I'm keeping everything in line, I've got it. I've got it right here. And so I'm importing a style sheet from styles.css. And I have to add this assert type equals CSS. Otherwise it'll try and port it as JavaScript and it'll throw an error
But here just because I'm keeping everything in line, I've got it. I've got it right here. And so I'm importing a style sheet from styles.css. And I have to add this assert type equals CSS. Otherwise it'll try and port it as JavaScript and it'll throw an error And once I've imported it inside my constructor, I can set the adopted style sheets for my shadow DOM to an array of style sheets that I want to add. Browsers are really smart about this
And once I've imported it inside my constructor, I can set the adopted style sheets for my shadow DOM to an array of style sheets that I want to add. Browsers are really smart about this So if I have multiple elements importing the same style sheet, it will only download that style sheet once and attach it to the shadow DOM for all of those different components
So if I have multiple elements importing the same style sheet, it will only download that style sheet once and attach it to the shadow DOM for all of those different components So if I were building say a design system for a company, this is a really good way to reuse bits of CSS like button styles and things like that across all of my web components without having to manually in line all my things. Because I'm using a ES module here, I need to load this as a browser
So if I were building say a design system for a company, this is a really good way to reuse bits of CSS like button styles and things like that across all of my web components without having to manually in line all my things. Because I'm using a ES module here, I need to load this as a browser I mean, as a live server, that's not right. What am I doing here? There we go. Cool. And so now again, you can see my buttons are styled. I have in here this style sheet where I've got that same stuff I was inlining. It's now part of this external style sheet
I mean, as a live server, that's not right. What am I doing here? There we go. Cool. And so now again, you can see my buttons are styled. I have in here this style sheet where I've got that same stuff I was inlining. It's now part of this external style sheet So I'm able to load that up and code some things. One caveat about this. So let's pull up Firefox for a second. I think, yeah, so this does not work in Firefox and it doesn't work in Safari. It currently only works in Chrome and browsers. So there's the rub
So I'm able to load that up and code some things. One caveat about this. So let's pull up Firefox for a second. I think, yeah, so this does not work in Firefox and it doesn't work in Safari. It currently only works in Chrome and browsers. So there's the rub So there's the rub. If you like this type of experience though and you want to use web components today, Lit is a tool for compiling them that allows you to use this approach where you create your external style sheets and it will automatically inline them for you. So you do have an option there
So there's the rub. If you like this type of experience though and you want to use web components today, Lit is a tool for compiling them that allows you to use this approach where you create your external style sheets and it will automatically inline them for you. So you do have an option there It is the one thing that kind of falls apart if you want to use them fully natively and once Firefox, which supports it behind a flag and Safari, which doesn't support it at all
It is the one thing that kind of falls apart if you want to use them fully natively and once Firefox, which supports it behind a flag and Safari, which doesn't support it at all Once those catch up, it will be possible to run fully native web components and actually kind of style them a lot more effortlessly. Yeah, I'll shout out now, Jen. Sorry, I've been talking a lot
Once those catch up, it will be possible to run fully native web components and actually kind of style them a lot more effortlessly. Yeah, I'll shout out now, Jen. Sorry, I've been talking a lot Do you have any questions? Anything you want to talk about? I've never dig into around the styling piece of it. Uh oh. Hold on. I can't hear you and I don't know if it's you or me, one sec. No, it was totally me. It was totally me. I was on mute. That's cool
Do you have any questions? Anything you want to talk about? I've never dig into around the styling piece of it. Uh oh. Hold on. I can't hear you and I don't know if it's you or me, one sec. No, it was totally me. It was totally me. I was on mute. That's cool That's cool. I do want to say that I've literally done that during conferences when I'm MC and then I'm like, oh shit, I'm on mute. It's really fun to do that in front of like 2000 people. Yeah. So I think it was a lot
That's cool. I do want to say that I've literally done that during conferences when I'm MC and then I'm like, oh shit, I'm on mute. It's really fun to do that in front of like 2000 people. Yeah. So I think it was a lot I really like that you also referenced it to view and there's like so many different things I've talked about. It is something at least for myself. I going back to it's so weird to me. So the way today feels is like when I was confused about Docker because I haven't gone this deep into it yet
I really like that you also referenced it to view and there's like so many different things I've talked about. It is something at least for myself. I going back to it's so weird to me. So the way today feels is like when I was confused about Docker because I haven't gone this deep into it yet I'm looking forward to reviewing it and unpacking it. Wait, are you not confused about Docker anymore? Because I'm still very confused. Not so very confused about Docker. Yeah, yeah, no, I actually get that a bit more but the actual like a lot of what you talked about
I'm looking forward to reviewing it and unpacking it. Wait, are you not confused about Docker anymore? Because I'm still very confused. Not so very confused about Docker. Yeah, yeah, no, I actually get that a bit more but the actual like a lot of what you talked about I'm like, these are, I get it, but I don't get it. And it's a lot of it is practicing it and also as I'm coding myself going, oh, okay, cool. This is something that Chris talked about. I just didn't know it had a name. And that takes time
I'm like, these are, I get it, but I don't get it. And it's a lot of it is practicing it and also as I'm coding myself going, oh, okay, cool. This is something that Chris talked about. I just didn't know it had a name. And that takes time It's like one of the most frustrating parts of learning is I'm like, you're a great teacher. What you said does make sense, but it doesn't make sense at the same time
It's like one of the most frustrating parts of learning is I'm like, you're a great teacher. What you said does make sense, but it doesn't make sense at the same time And to be fair, in a like a workshop or a classroom type environment, this kind of thing would get spread out over like a long period of time. And there would be like learn to thing, go work on it, learn another thing, go work on it. I threw a lot at you and I'm sorry about that. Don't be
And to be fair, in a like a workshop or a classroom type environment, this kind of thing would get spread out over like a long period of time. And there would be like learn to thing, go work on it, learn another thing, go work on it. I threw a lot at you and I'm sorry about that. Don't be Don't be. It's one of the reasons I love because I had somebody on the show about it was Docker, Kubernetes and PowerShell. So all very, very difficult concepts yet going through it with theory helps me go, okay, cool. I am doing good for a bit and it made more sense. And we do have a question
Don't be. It's one of the reasons I love because I had somebody on the show about it was Docker, Kubernetes and PowerShell. So all very, very difficult concepts yet going through it with theory helps me go, okay, cool. I am doing good for a bit and it made more sense. And we do have a question Let's see. Yeah. So we're going to build a new design system for our company now and even not knowing a lot about web components, I think we should give it a shot. So we didn't get attached to any specific framework is it's it's it the moment already web components with lit our production ready
Let's see. Yeah. So we're going to build a new design system for our company now and even not knowing a lot about web components, I think we should give it a shot. So we didn't get attached to any specific framework is it's it's it the moment already web components with lit our production ready Yes, definitely. What? You'd be joining companies like Google sales force, GitHub. Sales force is probably the most vocal about it. Their whole design system is built with web components and they're really proud of it. They've talked about it at conferences a whole bunch
Yes, definitely. What? You'd be joining companies like Google sales force, GitHub. Sales force is probably the most vocal about it. Their whole design system is built with web components and they're really proud of it. They've talked about it at conferences a whole bunch GitHub has leaned really heavily into them and Google also has done a lot of work here. So yeah, they're definitely they're definitely production ready. Oh, Microsoft too. Nice. Awesome. That's been. Yeah
GitHub has leaned really heavily into them and Google also has done a lot of work here. So yeah, they're definitely they're definitely production ready. Oh, Microsoft too. Nice. Awesome. That's been. Yeah That's been. Yeah. I do think I do think using a tool like lit is probably where you need to be at for, you know, for kind of production ready. I think it's probably the right way to describe it as you noted there
That's been. Yeah. I do think I do think using a tool like lit is probably where you need to be at for, you know, for kind of production ready. I think it's probably the right way to describe it as you noted there One other thing if you need a good starting point, Jared White actually just introduced this to me last week. If you head over to shoelace.style, it is a web component library. Even if you don't kind of you might just use it as a starting point or as inspiration
One other thing if you need a good starting point, Jared White actually just introduced this to me last week. If you head over to shoelace.style, it is a web component library. Even if you don't kind of you might just use it as a starting point or as inspiration But think about it as like bootstrap, but with web components instead of, you know, what bootstrap is, all of those were built with lit as well for kind of unifying the CSS and everything. But might be worth a look just if you need some inspiration. That's really cool and linked that one as well
But think about it as like bootstrap, but with web components instead of, you know, what bootstrap is, all of those were built with lit as well for kind of unifying the CSS and everything. But might be worth a look just if you need some inspiration. That's really cool and linked that one as well Anyone else have any questions before we start wrapping up because I know, oh, we got one. Yay. What do you think about writing static? I don't know if I should say pound or hashtag when reading it out loud
Anyone else have any questions before we start wrapping up because I know, oh, we got one. Yay. What do you think about writing static? I don't know if I should say pound or hashtag when reading it out loud I know you're saying, yeah, so I, the reason I have a create handler function that returns another function is Ben will help me out. This is not the same thing as curing, right? But it's like a similar kind of concept. But the idea is I need a way to encapsulate this
I know you're saying, yeah, so I, the reason I have a create handler function that returns another function is Ben will help me out. This is not the same thing as curing, right? But it's like a similar kind of concept. But the idea is I need a way to encapsulate this And if I had a static variable, I no longer have access to the this keyword or the instance, which is really important for what we were doing in this particular web component. Otherwise not a not a bad idea
And if I had a static variable, I no longer have access to the this keyword or the instance, which is really important for what we were doing in this particular web component. Otherwise not a not a bad idea Just want, you know, if I was just running a more generic, if I were running, if I had my components set up differently where I didn't need access to the instance, that would work well, where like if I only needed the event object, for example, I'm in this particular case, I did need access to the specific instance, which makes what you're describing not viable although there are other ways I could have worked around that
Just want, you know, if I was just running a more generic, if I were running, if I had my components set up differently where I didn't need access to the instance, that would work well, where like if I only needed the event object, for example, I'm in this particular case, I did need access to the specific instance, which makes what you're describing not viable although there are other ways I could have worked around that Like I could have detected the element that was clicked and then crawled up to the parent element and then started doing some stuff that way. But I think it's a little convoluted and I just found this a little bit more, more simple. Sorry, I'm getting super into the weeds. Not a terrible idea
Like I could have detected the element that was clicked and then crawled up to the parent element and then started doing some stuff that way. But I think it's a little convoluted and I just found this a little bit more, more simple. Sorry, I'm getting super into the weeds. Not a terrible idea One that I think creates more problems than it solves in this particular case. And again, and this is the reason why I linked it while you were talking is on the site that has all of the notes from today on going things
One that I think creates more problems than it solves in this particular case. And again, and this is the reason why I linked it while you were talking is on the site that has all of the notes from today on going thingscom for its last teach Shendak is down at the bottom is there are ways to get a hold of Chris. And I say that because yes, you can comment on this. Like it's going to be going to YouTube here shortly. Let us know your questions. Chris can help reply there
com for its last teach Shendak is down at the bottom is there are ways to get a hold of Chris. And I say that because yes, you can comment on this. Like it's going to be going to YouTube here shortly. Let us know your questions. Chris can help reply there It's definitely something that even though it's out of my ballpark right now, this is the great thing about this platform is we have access to experts. And that is definitely something that I love and thank you for joining us. Now something we didn't ask in the beginning and I'm curious
It's definitely something that even though it's out of my ballpark right now, this is the great thing about this platform is we have access to experts. And that is definitely something that I love and thank you for joining us. Now something we didn't ask in the beginning and I'm curious How did you get into all of this? Oh, that's a whole podcast episode on its own, Jen. Yay. The short version is I used to work in HR. I had a blog. I wanted to control how it looked more. And so I started kind of hacking my way through WordPress. I became known as the HR guy who knows web stuff
How did you get into all of this? Oh, that's a whole podcast episode on its own, Jen. Yay. The short version is I used to work in HR. I had a blog. I wanted to control how it looked more. And so I started kind of hacking my way through WordPress. I became known as the HR guy who knows web stuff And then one day when my boss and I were trying to like play around with ideas for like a learning platform kind of thing that was more like YouTube and not like sit butts and seats for eight hours, we couldn't find anybody who could like build a prototype for like less than half a million dollars
And then one day when my boss and I were trying to like play around with ideas for like a learning platform kind of thing that was more like YouTube and not like sit butts and seats for eight hours, we couldn't find anybody who could like build a prototype for like less than half a million dollars And so he looked at me and he's like, can you build it? I know you do web stuff. And I was like, no, I definitely can't build this. And he goes, can you learn? And I was like, I don't know, but I'll try
And so he looked at me and he's like, can you build it? I know you do web stuff. And I was like, no, I definitely can't build this. And he goes, can you learn? And I was like, I don't know, but I'll try And then two weeks later, I came back with this really shitty like, but kind of functional prototype. And that was the moment that I knew I wanted to do this and not HR anymore. I was just hooked. And that was it for me. I love that. I love that
And then two weeks later, I came back with this really shitty like, but kind of functional prototype. And that was the moment that I knew I wanted to do this and not HR anymore. I was just hooked. And that was it for me. I love that. I love that I love that. And I love that you're still doing teaching and this aspect now. And yay. Well, thank you for joining us today, Chris. And I am going to go find someone to array. It looks like the only person that I'm following right now is primogen
I love that. And I love that you're still doing teaching and this aspect now. And yay. Well, thank you for joining us today, Chris. And I am going to go find someone to array. It looks like the only person that I'm following right now is primogen Is that how you say a thing? Why am I so bad at saying a thing? Primogen, primogen, prim, prim, the dude that's really popular and really funny and does super techy stuff. That is where we're going to go today. And he does, it's very knowledgeable stuff
Is that how you say a thing? Why am I so bad at saying a thing? Primogen, primogen, prim, prim, the dude that's really popular and really funny and does super techy stuff. That is where we're going to go today. And he does, it's very knowledgeable stuff I'm always impressed by it, but I'm always, it does go over my head. But okay, y'all, enjoy the raid. Thank you. And see you later.
I'm always impressed by it, but I'm always, it does go over my head. But okay, y'all, enjoy the raid. Thank you. And see you later.