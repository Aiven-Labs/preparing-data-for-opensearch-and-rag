Hello, hello beautiful humans. Welcome to another episode of Teach Gen Tech. And today we have Zachary here. Yay! Thank you for joining us and Zachary please introduce yourself and what you'll be teaching us today. Sure yeah, hi everyone. So I am well, let's start I've been an Android developer for about 10 years. It's probably the easiest way to sum it up. In a more recent life I was an Android developer advocate and I'm actually now a manager in developer relations
I've been an Android developer for about 10 years. It's probably the easiest way to sum it up. In a more recent life I was an Android developer advocate and I'm actually now a manager in developer relations So I kind of split my time between being someone that advocates for developer relations in general and managing people and then also someone who absolutely loves Android and continues to try and be an Android developer in what little free time they have. That does come in me
So I kind of split my time between being someone that advocates for developer relations in general and managing people and then also someone who absolutely loves Android and continues to try and be an Android developer in what little free time they have. That does come in me That's a good explanation and I am excited because I've been and so the last two weeks everybody has definitely heard me complain about being back on my window on a Windows machine because I was running to a live stream and I had my laptop in my arm and a cup of water and I ran into a door
That's a good explanation and I am excited because I've been and so the last two weeks everybody has definitely heard me complain about being back on my window on a Windows machine because I was running to a live stream and I had my laptop in my arm and a cup of water and I ran into a door Like the door just like I wasn't spatial as it just didn't work and I ran into it and it's built water and fried everything like right before my live stream. So I had to cancel it and luckily my partner has a Windows laptop
Like the door just like I wasn't spatial as it just didn't work and I ran into it and it's built water and fried everything like right before my live stream. So I had to cancel it and luckily my partner has a Windows laptop He wasn't he doesn't use for work so I had that to use and I was like I can't do it. I love all Apple and Mac things. It just my brain does not function like this
He wasn't he doesn't use for work so I had that to use and I was like I can't do it. I love all Apple and Mac things. It just my brain does not function like this And I bring that up because in my journey of like understanding OSS and open source and also talking about it and realizing and I think in fact it was like a conversation with it was a conversation with you or be duggy that was like oh my gosh I've been talking about open source way longer than I knew what open source was because it was probably 2007 when Android's and iPhones 2008 and Android's and iPhones started really coming out
And I bring that up because in my journey of like understanding OSS and open source and also talking about it and realizing and I think in fact it was like a conversation with it was a conversation with you or be duggy that was like oh my gosh I've been talking about open source way longer than I knew what open source was because it was probably 2007 when Android's and iPhones 2008 and Android's and iPhones started really coming out I worked at Verizon mobile company here in the States and everyone I remember the first Motorola that came out. It was like a slide up and had a full keyboard and I absolutely loved it and it was like yet I kept crashing it because the apps didn't always play nice with each other
I worked at Verizon mobile company here in the States and everyone I remember the first Motorola that came out. It was like a slide up and had a full keyboard and I absolutely loved it and it was like yet I kept crashing it because the apps didn't always play nice with each other And then we got iPhones and what up Ryan? Then we got iPhones and so I was like what's the difference? I learned it's I would say closed sourced that's how I explained it. And I was and I just was like every to explain it to a customer
And then we got iPhones and what up Ryan? Then we got iPhones and so I was like what's the difference? I learned it's I would say closed sourced that's how I explained it. And I was and I just was like every to explain it to a customer A Android is where it was so customizable you can change everything you can really make it what you want. Yet there's no guarantee that all the apps will get along together
A Android is where it was so customizable you can change everything you can really make it what you want. Yet there's no guarantee that all the apps will get along together And then you have an iPhone where you can't customize a ton of it unless you jailbreak it and yet it's going to be much more reliable because you can't customize it that much and it just comes as it is. And it was ever since that that I've never turned back to go back to Android or Windows
And then you have an iPhone where you can't customize a ton of it unless you jailbreak it and yet it's going to be much more reliable because you can't customize it that much and it just comes as it is. And it was ever since that that I've never turned back to go back to Android or Windows They are not the same everyone so please know they I'm not saying they're the same thing they're just much more customizable and not Apple. That I associate them together but I loved Android in the fact of so much of it was customizable and it was a lot easier to do a lot of things change things
They are not the same everyone so please know they I'm not saying they're the same thing they're just much more customizable and not Apple. That I associate them together but I loved Android in the fact of so much of it was customizable and it was a lot easier to do a lot of things change things For my memory of them and also like a lot of my friends and family have them is they it also made it a lot easier to customize the like what are they called like the on the home pages but they are like the bigger versions of them. Widgets thank you widgets
For my memory of them and also like a lot of my friends and family have them is they it also made it a lot easier to customize the like what are they called like the on the home pages but they are like the bigger versions of them. Widgets thank you widgets I've always didn't have widgets for a really long time. And Ryan is looking forward to your call chat on Tuesday. Yay. I'm assuming that's a coffee tech chat. Nice. Nice. I'm excited. It's very good. But yeah, no you're completely right
I've always didn't have widgets for a really long time. And Ryan is looking forward to your call chat on Tuesday. Yay. I'm assuming that's a coffee tech chat. Nice. Nice. I'm excited. It's very good. But yeah, no you're completely right You're completely right on Android basically being the the open source mobile operating system. And I think today really what I want to do is kind of when we talk about Android development and being an Android dev most people associate that with being an app developer for Android
You're completely right on Android basically being the the open source mobile operating system. And I think today really what I want to do is kind of when we talk about Android development and being an Android dev most people associate that with being an app developer for Android But I'd like to kind of go through the other side of it first today which is actually looking at the operating system actually looking at what Android is and how you might develop in the operating system how you might actually customize the operating system
But I'd like to kind of go through the other side of it first today which is actually looking at the operating system actually looking at what Android is and how you might develop in the operating system how you might actually customize the operating system That's something that I did for many years and it's kind of not something that so many people have exposure to so it would be quite fun to look at
That's something that I did for many years and it's kind of not something that so many people have exposure to so it would be quite fun to look at After that though I think we then should look at the Android app side of the world and I know that we've got another livestream in the future where we will actually then build an app as well
After that though I think we then should look at the Android app side of the world and I know that we've got another livestream in the future where we will actually then build an app as well So I think hopefully by the end of this and end of today you'll have kind of an idea of where we're going and then next time we can kind of really dig into building something fun
So I think hopefully by the end of this and end of today you'll have kind of an idea of where we're going and then next time we can kind of really dig into building something fun I'm everyone probably to see that my the light is changing so I'm totally looking up something at the same time of the versions because I'm trying to see what version I got to before yeah I stopped working at Verizon by the time it got to fro you
I'm everyone probably to see that my the light is changing so I'm totally looking up something at the same time of the versions because I'm trying to see what version I got to before yeah I stopped working at Verizon by the time it got to fro you Okay yeah it sounds like your mic might be doing something kind of Ryan do you hear that too? I'm just I don't know if it's like my headphones or something. It just sounds like it's like a weird connection. It might be something interfering. Oh that fixed it whatever you just did
Okay yeah it sounds like your mic might be doing something kind of Ryan do you hear that too? I'm just I don't know if it's like my headphones or something. It just sounds like it's like a weird connection. It might be something interfering. Oh that fixed it whatever you just did So far yeah it sounds like clicking. Yeah so far you sound great. Yeah I think I had a phone too close to my microphone. I'm just trying to get a text on that. I'm going to do many mobiles out of the way. Yeah it was I mean I might have been there okay I was still there for gingerbread
So far yeah it sounds like clicking. Yeah so far you sound great. Yeah I think I had a phone too close to my microphone. I'm just trying to get a text on that. I'm going to do many mobiles out of the way. Yeah it was I mean I might have been there okay I was still there for gingerbread I'm looking at yours now and honeycomb. Okay apparently was I I was there for ice cream sandwich too. And jelly bean okay I just don't remember it. Maybe that's one of the number to iPhone was you know before I would
I'm looking at yours now and honeycomb. Okay apparently was I I was there for ice cream sandwich too. And jelly bean okay I just don't remember it. Maybe that's one of the number to iPhone was you know before I would And the thing is as well like Google for a long time didn't really kind of publicize the version numbering or anything like that. It wasn't a very public facing kind of thing
And the thing is as well like Google for a long time didn't really kind of publicize the version numbering or anything like that. It wasn't a very public facing kind of thing It was just this runs Android which caused a lot of issues which I'm sure we'll get into but because you know all these different versions running all these different kind of environments they didn't work together but yeah. But yes yes it's been around like I say it's been around for a long time
It was just this runs Android which caused a lot of issues which I'm sure we'll get into but because you know all these different versions running all these different kind of environments they didn't work together but yeah. But yes yes it's been around like I say it's been around for a long time It's been around since kind of 2007 publicly
It's been around since kind of 2007 publicly But I will sort of give you a little bit of a history lesson and I will also actually say that if you're ever interested in really digging into the Android history there's a book called Android's which is by Cheat Hayes who was one of the kind of quite early Android developers actually at Google working on it
But I will sort of give you a little bit of a history lesson and I will also actually say that if you're ever interested in really digging into the Android history there's a book called Android's which is by Cheat Hayes who was one of the kind of quite early Android developers actually at Google working on it So I will plug his book because it's an incredible book that really goes into detail about how Android was built from nothing. And what was his name again? Cheat Hayes I will pop it in the twist check. Cheat. I was like I'll Google it
So I will plug his book because it's an incredible book that really goes into detail about how Android was built from nothing. And what was his name again? Cheat Hayes I will pop it in the twist check. Cheat. I was like I'll Google it He has you know I know there is like a PDF version and all that sort of fun stuff as well but it's a very good book. So I will plug that slash because that's kind of one of my primary sources because you know a lot of this information wasn't publicized until very recently. Oh wow okay
He has you know I know there is like a PDF version and all that sort of fun stuff as well but it's a very good book. So I will plug that slash because that's kind of one of my primary sources because you know a lot of this information wasn't publicized until very recently. Oh wow okay Oh wow okay. And so basically if we go right back to when Android started, Android started as an idea to build a new operating system for digital cameras. The two people that kind of invented Android, they didn't like the systems that existed for digital cameras
Oh wow okay. And so basically if we go right back to when Android started, Android started as an idea to build a new operating system for digital cameras. The two people that kind of invented Android, they didn't like the systems that existed for digital cameras They were rubbish and they were rubbish and they probably are still quite rubbish. And actually a lot of phone, a lot of cameras do now use Android which kind of is a bit strange but anyway this was the original idea
They were rubbish and they were rubbish and they probably are still quite rubbish. And actually a lot of phone, a lot of cameras do now use Android which kind of is a bit strange but anyway this was the original idea This was the original plan they were going to be able to operate system for digital cameras that were going to make them much more user friendly and much more feature rich
This was the original plan they were going to be able to operate system for digital cameras that were going to make them much more user friendly and much more feature rich And at the same time Google was starting to look at how they were going to build an operating system for this brand new things called smartphones. They had the blackberries and pom pilots. And a pom pilot. There was rumors that Apple were going to be bringing something
And at the same time Google was starting to look at how they were going to build an operating system for this brand new things called smartphones. They had the blackberries and pom pilots. And a pom pilot. There was rumors that Apple were going to be bringing something There was all these kind of things in the air and Google wanted it
There was all these kind of things in the air and Google wanted it So they actually ended up talking to these two guys who were coming up with Android and said hey we really like what you're doing but can we instead of doing it for cameras, can we do it for mobile phones? Which is a bit of a segue but they did. And they said yeah maybe
So they actually ended up talking to these two guys who were coming up with Android and said hey we really like what you're doing but can we instead of doing it for cameras, can we do it for mobile phones? Which is a bit of a segue but they did. And they said yeah maybe And basically what they did is they came up with a prototype of how this might work. It was literally just a web application that they built as like a little demo UI thing of how an operating system might work. Yeah. Oh okay. And that's what Google bought was a JavaScript demo
And basically what they did is they came up with a prototype of how this might work. It was literally just a web application that they built as like a little demo UI thing of how an operating system might work. Yeah. Oh okay. And that's what Google bought was a JavaScript demo That was all there was. They had no code. There was nothing behind it. It wasn't anything. So Google bought this and then the founders of Android realized we actually have to now build an operating system
That was all there was. They had no code. There was nothing behind it. It wasn't anything. So Google bought this and then the founders of Android realized we actually have to now build an operating system So they went about building the whole mobile operating system essentially from scratch, from just this idea. And it was obviously an awful lot of work. And as I say the book goes into great detail about how kind of then over that this was like 2005
So they went about building the whole mobile operating system essentially from scratch, from just this idea. And it was obviously an awful lot of work. And as I say the book goes into great detail about how kind of then over that this was like 2005 So then over the course of the next two years they spent this time building out this operating system. And what you'll see is if I if I can share my screen, you might remember that the first Android device was the HTC Dream or the T-Mobile G1 in the US
So then over the course of the next two years they spent this time building out this operating system. And what you'll see is if I if I can share my screen, you might remember that the first Android device was the HTC Dream or the T-Mobile G1 in the US But what we had was this test device which was the first and device to run Android. And this is a very early version of Android as well. It looks an awful lot like a Blackberry. This is what they were thinking smartphones were going to be. And then the iPhone released. Yes
But what we had was this test device which was the first and device to run Android. And this is a very early version of Android as well. It looks an awful lot like a Blackberry. This is what they were thinking smartphones were going to be. And then the iPhone released. Yes Yes. And suddenly everyone went, oh no. That isn't what people want as a smartphone. So within the space of less than a year, they released this instead. And this was the first actually publicly available Android device
Yes. And suddenly everyone went, oh no. That isn't what people want as a smartphone. So within the space of less than a year, they released this instead. And this was the first actually publicly available Android device And they basically had to take a complete like right hand turn to include a touch screen to build an interface around that and do something completely different to what they planned. And so the early days of Android were very rocky. It was it wasn't a very well polished thing at all
And they basically had to take a complete like right hand turn to include a touch screen to build an interface around that and do something completely different to what they planned. And so the early days of Android were very rocky. It was it wasn't a very well polished thing at all It was quite bumpy. It was very limited. There wasn't a whole what you could do. But what it did have was integration into Google services. So things like you could use Google Maps. You could use Google to search and you could it has an app store which actually the iPhone didn't at the time
It was quite bumpy. It was very limited. There wasn't a whole what you could do. But what it did have was integration into Google services. So things like you could use Google Maps. You could use Google to search and you could it has an app store which actually the iPhone didn't at the time Oh really? The first iPhone had no app store. So Android was the first platform to kind of actually open itself up to developers in that sense. But the other thing which was massive was that they didn't just open up the platform for allow app developers
Oh really? The first iPhone had no app store. So Android was the first platform to kind of actually open itself up to developers in that sense. But the other thing which was massive was that they didn't just open up the platform for allow app developers They opened up the whole operating system and they released it all the source code fully open source and said anyone can use this if they want to. This is like so bizarre to me
They opened up the whole operating system and they released it all the source code fully open source and said anyone can use this if they want to. This is like so bizarre to me In the fact like you're explaining like so much of it that I didn't just being somebody that was like a salesperson of this or customer service and like having to fix so much of it or like having to take it apart like because back then we have like the actual like tech area to fix phones and this is like so surreal
In the fact like you're explaining like so much of it that I didn't just being somebody that was like a salesperson of this or customer service and like having to fix so much of it or like having to take it apart like because back then we have like the actual like tech area to fix phones and this is like so surreal Like learning about it beforehand. With the knowledge I have this is this is weird and really cool. And hi homie just to catch up on everything. Interesting
Like learning about it beforehand. With the knowledge I have this is this is weird and really cool. And hi homie just to catch up on everything. Interesting Interesting. Okay so So it was a big yeah it was a bit it was it was a it was a thing that existed and it was yeah it really was quite rocky to start with. It took a few releases a few versions of Android before things started to get stabilized and kind of the market started to grow
Interesting. Okay so So it was a big yeah it was a bit it was it was a it was a thing that existed and it was yeah it really was quite rocky to start with. It took a few releases a few versions of Android before things started to get stabilized and kind of the market started to grow But the biggest thing was the fact that it was for the open source and it's still open source today and for anyone that doesn't really know what that actually means it literally means that you can go to this website android.com.4 slash android and you have all of the code that makes up android
But the biggest thing was the fact that it was for the open source and it's still open source today and for anyone that doesn't really know what that actually means it literally means that you can go to this website android.com.4 slash android and you have all of the code that makes up android Everything is here in I mean in lots of directories and there's lots of there's lots of code there's millions of lines of code but everything you need to actually build a version of android yourself is publicly freely available for you to use
Everything is here in I mean in lots of directories and there's lots of there's lots of code there's millions of lines of code but everything you need to actually build a version of android yourself is publicly freely available for you to use And that was kind of unheard of in across all mobile platforms you know back then of course things like Nokia's stuff was still huge and they had an operating system but it was much simpler. But this was just like completely unheard of brand new territory
And that was kind of unheard of in across all mobile platforms you know back then of course things like Nokia's stuff was still huge and they had an operating system but it was much simpler. But this was just like completely unheard of brand new territory But what it did mean is phone manufacturers didn't have to build their own operating system. The likes of Samsung HTC, you know Motorola they could focus on building the hardware and they didn't have to invest thousands and thousands of millions in software developers to build the operating system
But what it did mean is phone manufacturers didn't have to build their own operating system. The likes of Samsung HTC, you know Motorola they could focus on building the hardware and they didn't have to invest thousands and thousands of millions in software developers to build the operating system They just needed a small team. Is HTC still a thing? I mean as technically as a company there is a company exists that's called HTC but it is nothing like it used to be and I think that's one of the very sad parts of android history. It's just how like quickly like HTC was the first company
They just needed a small team. Is HTC still a thing? I mean as technically as a company there is a company exists that's called HTC but it is nothing like it used to be and I think that's one of the very sad parts of android history. It's just how like quickly like HTC was the first company They they manufactured that prototype device I sort showed you. They manufactured that HTC dream and yet over the course of the year, Samsung just grew and grew and grew and kind of just completely dominated the market partly because oh go ahead
They they manufactured that prototype device I sort showed you. They manufactured that HTC dream and yet over the course of the year, Samsung just grew and grew and grew and kind of just completely dominated the market partly because oh go ahead Now it looks like partly because even Google kind of sided with them really. Yeah because even in Motorola was pushed out because Motorola was of the very first ones too. Yeah yeah they were it was basically it was HTC and then Motorola very quickly behind
Now it looks like partly because even Google kind of sided with them really. Yeah because even in Motorola was pushed out because Motorola was of the very first ones too. Yeah yeah they were it was basically it was HTC and then Motorola very quickly behind Samsung was actually quite late to the game you know a few years down the road and as yeah it does it sad to me because a lot of very cool HTC devices were created
Samsung was actually quite late to the game you know a few years down the road and as yeah it does it sad to me because a lot of very cool HTC devices were created Interesting and I'm also like thinking back to you and this is just like experience with these devices of like which ones worked well or which ones didn't and because like that's how we would have to advise people on them and it's so weird to me because especially now knowing more of that the manufacturers only had to work on hardware instead of the software
Interesting and I'm also like thinking back to you and this is just like experience with these devices of like which ones worked well or which ones didn't and because like that's how we would have to advise people on them and it's so weird to me because especially now knowing more of that the manufacturers only had to work on hardware instead of the software I'm really seeing how much of that was when we would talk about battery life and Motorola this is going off a memory definitely not facts but it was from what I remember it was like Motorola did so much better with battery life than HTC or like the touch HTC at least what from what I remember we didn't sell a lot of them because like the touch screens would stop working and that type of thing which is interesting to me especially if they're the ones who came out first and that being pushed out from everywhere one else so very interesting
I'm really seeing how much of that was when we would talk about battery life and Motorola this is going off a memory definitely not facts but it was from what I remember it was like Motorola did so much better with battery life than HTC or like the touch HTC at least what from what I remember we didn't sell a lot of them because like the touch screens would stop working and that type of thing which is interesting to me especially if they're the ones who came out first and that being pushed out from everywhere one else so very interesting Yeah and I think the thing is what happened is that in Google's perfect world so you know this was an open source project that anyone could use anyone who used freely however if they wanted access to Google services and namely they wanted access to the Android marketplace or what's now the Play Store you had to sign an agreement with Google so you had to kind of conform to Google's requirements wishes whatever it might be to become a certified device like that and so what that meant is in Google's mind they wanted everything to kind of be the same they wanted the same feeling the same operating system across whatever device you bought because that would be easier for users like what you'd be picking is the hardware did you want a physical keyboard did you want a better camera or better battery but actually what happened is manufacturers didn't like that because it meant that their phones all looked very much the same and from a branding point of view that didn't work so you get this fragmentation where they take the operating system because it's open source and freely available and they start customizing it they add their own theme they add their own like pre-installed apps yes and it's these things that started to really slow down Android really kind of bug things down because it just yeah it didn't work well and a homie asked that this this is crazy so you could still today really tinker and make your own Android OS essentially exactly exactly you can definitely still do that today getting it running on a device is a little harder like like an actual commercial phone because you kind of have to root the phone like bypass the protection that manufacturers have stored but you can do it and you can definitely you can definitely still do it and you can definitely do it in more like um developer devices and stuff that you can buy online 100% possible developer devices now I'm googling that really quick um google actually used to you do arrange themselves uh called net they were the nexus devices so oh nexus s nexus one there was loads of them and those were like google sanctioned developer devices unfortunately they stopped doing those and started to focus on the pixel devices but there are a lot of um kind of developer platforms and stuff out there that you can still do it does still it does still happen and there are still ways that you can like root your phone and then install your own stuff on it um it's just kind of stuff gets a bit more locked down these days if it um it like when I remember hearing it for Android I would hear things like root your phone that type of thing but when it's going to you iPhones I would always hear like jailbreak is there a difference yeah so um there isn't there isn't a particularly difference both them is about gaining control over your device and doing what you want with it the reason why in Android we call it root is actually because um Android was built on top of a thing called Linux so Linux is an operating system it's an operating system that kind of more traditionally runs on either servers or desktop or actually it can run pretty much anywhere it's it's essentially kind of that low layer of the code that sits between the actual hardware and like actually on the processor so it's what's converting your your nice code that you're writing in JavaScript or something into something that a processor actually understands as binary information you know the memory understands it in the kind of the hardware level so it was built on top of this thing called Linux and Linux has this idea of users so just the same way as like your computer you can have a user on your computer so you might you might have a user with your programs installed and then someone else might have their own user with their programs installed and you don't have access to each other's programs right like you've got this own area yeah so Linux has this idea of users and it has a special user called root and root has access to everything that's kind of like your admin or your kind of full permissions user so on Android we say root your device because it's literally gaining access to that user that has access to everything because then from there you can delete stuff you can edit stuff you can do whatever you want you know you have full control over the system is a developer device then just a getting to the root and it just comes preset up like that instead of having to do it yourself yeah so essentially it'll either just come preset up and you'll have direct access to root or the other thing that these manufacturers of phones do is they do think they lock the kind of boot-up process so when the compute when the device is turning on you don't have control of saying which user you want to access it just automatically logs you straight into the user environment let's say for the phone you know whereas if you think about a desktop computer it'll take you to a login screen and ask you so what you might find is actually on a development device you kind of essentially get that login screen it's not as like pretty as an actual login screen but that's the poll you can like select how you turn your device on so that you can then boot it into the root user do whatever you want to do and then maybe you want to boot it into a different user because you want to test something else this is like so you're like answering all these questions that I had when I was working in the industry that no one could ever answer because by the time it got to the stores it wasn't like we had developers around to be able to explain what was going on but like I remember on different Android devices how it would be like if something really broke it would be just like a screen of code and back then I had no idea like how what it said or how to read it that it would just be like an almost automatic we're just going to swap your device yeah there's a bit um and I've been googling over here of like different development or and developer Android phone and I'm going down a rabbit hole so I'm going to stop looking at that because now I really want to find one and see what I can do with it um so putting that on the side now when is in you mentioned this earlier that Android was originally built with JavaScript is it still JavaScript no so essentially essentially what they did is when Google bought it the guys that came up with this through that demo in the bin and got rid of everything that they'd done so literally through away what Google actually bought and started fresh um you know I'm not entirely sure at the time how much like the execs at Google were aware of what was actually what they'd actually bought and I think it was much more conceptual than much more like is this idea that we have and yeah we can totally make it we don't know how we're going to make it but we can totally do it um so no that was all thrown away okay and what you actually what you actually have now is most of so the Linux layer the low level that's all written in C okay which is a very low level programming language and then everything on top of that is a mixture of C++ so that's kind of a C++ is basically a language that's still quite low level that's what called C but it uses it allows you to do things like objects and um it has like it's an object-oriented language can it can we pause really quick for a funny story yep so I'm giggling at C++ because when I was like I'm going to be able to get my computer science degree and this is going to be awesome in school I took the class and it just didn't click it did not click whatsoever and but I really needed to pass the class so I just started skipping class and the instructor was like you can pass the class if you catch up on all of your homework and I was like okay so I went to Craigslist and found a someone who understood when it was being asked and just purposely made mistakes in them so that way it wasn't perfect but did all my homework for me um not the smartest move just and I'm not suggesting this for anyone but that was my introduction to programming and I always felt like because I was dyslexic back then but once I learned I was dyslexic I was like oh that's probably why I kind of understand it and I never knew how to start understanding the theory behind it to be able to understand the coding going on so now that you're talking about that it's like different layers and that it's C and then C++ and what you'll continue with I'm like I wish I understood that back then no sure at least now I have funny story yeah exactly so yeah so so you know that that is what actually makes up the Android operating system is C and then C++ then what they did to like so they built this thing they built this this operate system it worked but then they had this issue of well how do you build applications for it it's a completely new form factor it's a completely new world and at the time they actually had the guys that built it actually had experience using Java so they'd built like Java applications on like old style phones so you had like these Java minigames I don't know if you remember them it definitely dates me but they existed and like what I've tried to get some names of them now it was like it was it was after snake and it was kind of like you know the next level I'm not going to lie I went from snake to brick breaker and I'm like but that's like you know the really really old school phones to Blackberry like were there any other ones I don't remember anyway so yeah no no no so so they they just kind of leverage their experience and they thought well right we will allow developers to build apps in using Java which is a programming language and the specific reason for that is Java when you when you write your code in Java not to be confused with JavaScript they are completely separate when you write your code in Java it actually then runs in like a virtual machine so your code has no idea about the outside world basically it doesn't know that it's running on an Android device the idea there is you could write an application in Java and it would work anywhere that has a virtual machine so it used to happen a lot on old websites as well there would be a lot of Java on websites you'd have to install plugins to get it to work and keep those up today and they'd never work and it was quite popular at the time like early like 2008 2009 and so they decided to go down this route because it meant that there was a security element there if your Android app didn't know what was going on around it it couldn't do anything bad was the theory you couldn't do anything malicious it couldn't like read the information from another app you wouldn't want you wouldn't want some malicious app to be able to read your banking information from your banking app for example so there was this idea of built-in security it didn't work very well but that was the just to repeat back I might have missed this part of why certain phone like phone manufacturers had their additional software in it yeah okay yeah so that's the layer where they started installing these additional things so basically coming all the way around Android ended up with these three layers you had Linux at the bottom actually interacting with the hardware the C++ that was the actual operating system like the actual code like the code converted your SMS text message to a signal that your radio or your device understood and sent it you know that kind of level and then on top of that you had Java and that's that was where you could actually then build applications okay and that was that was what was built up and decided as was this was going to be what we released and they released it and it worked it worked well ish but as you explained we kind of had these issues where that's at the point where actually manufacturers started installing their own applications their own applications that weren't particularly well-made they were consume a lot of resource they would run a lot of background things and and they would absolutely slow down the device to basically unbearable speeds um and it caused a lot of issues um you really are like just bringing back memories of there was a phone I was so excited about it it was an HTC phone and it um was called the the rhyme and it was okay and I was so excited about it and then I got it and HTC put so much on top of it that it would run really really slow compared to a Motorola device this is like okay so weird and you had an even at a lay and we even above that because not only were manufacturers putting stuff on it but the carriers were also putting stuff on them oh yeah because they would have like the default Verizon app this is why we didn't get a lot of I say we because I was you know Verizon back then um we didn't get a lot of the capabilities that they wanted as in like it took years before Verizon was allowed to sell the iPhone actually yeah and Verizon wouldn't get a lot of the phones that AT&T did because of them wanting to have a specific control over the phone so weird like so fun but it's like so weird bringing this all background okay so we got all three layers and then you know the manufacturer and the carrier would put extra apps on it yeah but all those apps were running they were all Java and they were running within that kind of third layer okay now the problem with that of course was the fact that they were taking up a lot of resource these apps would run in the background so they were just permanently taking up space and that was that was a problem and throughout the years kind of Google did a lot to try and stop that happening it's definitely not so much the case anymore and you know I'd say essentially for about 10 years if you wanted to build an Android app you were writing Java code which was fine the problem with that was the Java code you wrote for Android was not at all the same as the Java code that you would write for other platforms so this we had they had this big idea that you would be able to use Java which meant you could write it once and use it everywhere but never worked out Android never supported like the whole language it never supported everything that you could normally do in Java so you kind of they kind of ended up with their own their own programming language that just had the same syntax as Java so if you looked at the code you'd say yeah that's that's Java code but if you googled how do you do this thing in Java the answers you've got wouldn't work you had to Google how do I do this thing in Android oh precisely so as a developer it was a nightmare and it was especially a nightmare if you perhaps like early on there was a lot of people who'd already been who are already Java developers maybe they were making desktop applications they were doing web stuff they were doing whatever it was and they saw this new platform I thought oh great I can start being an Android developer and then they'd get into it and they'd realize that it was some hellish mutation of the language they knew and it was you know not not not great so so this was a problem for a long time and on top of that Android had its own way of making UI of like you had you had Java on the code doing the logic doing your code but basically how you presented that on the screen was all done using XML layouts so XML it's kind of I'm not sure if it's something that you've come across in your in your learnings but it's it's a lot like HTML in that it's a markup language and so you have like if you think HTML it's the same sort of thing you have tags which you know you open and close you kind of nest things and all that sort of stuff XML is just kind of more arbitrary like you can define your own tags and you can kind of build your own system around it I'm googling while you're explaining and isn't the other maybe I'm getting this wrong but isn't there an XML file for like Excel files too
Yeah and I think the thing is what happened is that in Google's perfect world so you know this was an open source project that anyone could use anyone who used freely however if they wanted access to Google services and namely they wanted access to the Android marketplace or what's now the Play Store you had to sign an agreement with Google so you had to kind of conform to Google's requirements wishes whatever it might be to become a certified device like that and so what that meant is in Google's mind they wanted everything to kind of be the same they wanted the same feeling the same operating system across whatever device you bought because that would be easier for users like what you'd be picking is the hardware did you want a physical keyboard did you want a better camera or better battery but actually what happened is manufacturers didn't like that because it meant that their phones all looked very much the same and from a branding point of view that didn't work so you get this fragmentation where they take the operating system because it's open source and freely available and they start customizing it they add their own theme they add their own like pre-installed apps yes and it's these things that started to really slow down Android really kind of bug things down because it just yeah it didn't work well and a homie asked that this this is crazy so you could still today really tinker and make your own Android OS essentially exactly exactly you can definitely still do that today getting it running on a device is a little harder like like an actual commercial phone because you kind of have to root the phone like bypass the protection that manufacturers have stored but you can do it and you can definitely you can definitely still do it and you can definitely do it in more like um developer devices and stuff that you can buy online 100% possible developer devices now I'm googling that really quick um google actually used to you do arrange themselves uh called net they were the nexus devices so oh nexus s nexus one there was loads of them and those were like google sanctioned developer devices unfortunately they stopped doing those and started to focus on the pixel devices but there are a lot of um kind of developer platforms and stuff out there that you can still do it does still it does still happen and there are still ways that you can like root your phone and then install your own stuff on it um it's just kind of stuff gets a bit more locked down these days if it um it like when I remember hearing it for Android I would hear things like root your phone that type of thing but when it's going to you iPhones I would always hear like jailbreak is there a difference yeah so um there isn't there isn't a particularly difference both them is about gaining control over your device and doing what you want with it the reason why in Android we call it root is actually because um Android was built on top of a thing called Linux so Linux is an operating system it's an operating system that kind of more traditionally runs on either servers or desktop or actually it can run pretty much anywhere it's it's essentially kind of that low layer of the code that sits between the actual hardware and like actually on the processor so it's what's converting your your nice code that you're writing in JavaScript or something into something that a processor actually understands as binary information you know the memory understands it in the kind of the hardware level so it was built on top of this thing called Linux and Linux has this idea of users so just the same way as like your computer you can have a user on your computer so you might you might have a user with your programs installed and then someone else might have their own user with their programs installed and you don't have access to each other's programs right like you've got this own area yeah so Linux has this idea of users and it has a special user called root and root has access to everything that's kind of like your admin or your kind of full permissions user so on Android we say root your device because it's literally gaining access to that user that has access to everything because then from there you can delete stuff you can edit stuff you can do whatever you want you know you have full control over the system is a developer device then just a getting to the root and it just comes preset up like that instead of having to do it yourself yeah so essentially it'll either just come preset up and you'll have direct access to root or the other thing that these manufacturers of phones do is they do think they lock the kind of boot-up process so when the compute when the device is turning on you don't have control of saying which user you want to access it just automatically logs you straight into the user environment let's say for the phone you know whereas if you think about a desktop computer it'll take you to a login screen and ask you so what you might find is actually on a development device you kind of essentially get that login screen it's not as like pretty as an actual login screen but that's the poll you can like select how you turn your device on so that you can then boot it into the root user do whatever you want to do and then maybe you want to boot it into a different user because you want to test something else this is like so you're like answering all these questions that I had when I was working in the industry that no one could ever answer because by the time it got to the stores it wasn't like we had developers around to be able to explain what was going on but like I remember on different Android devices how it would be like if something really broke it would be just like a screen of code and back then I had no idea like how what it said or how to read it that it would just be like an almost automatic we're just going to swap your device yeah there's a bit um and I've been googling over here of like different development or and developer Android phone and I'm going down a rabbit hole so I'm going to stop looking at that because now I really want to find one and see what I can do with it um so putting that on the side now when is in you mentioned this earlier that Android was originally built with JavaScript is it still JavaScript no so essentially essentially what they did is when Google bought it the guys that came up with this through that demo in the bin and got rid of everything that they'd done so literally through away what Google actually bought and started fresh um you know I'm not entirely sure at the time how much like the execs at Google were aware of what was actually what they'd actually bought and I think it was much more conceptual than much more like is this idea that we have and yeah we can totally make it we don't know how we're going to make it but we can totally do it um so no that was all thrown away okay and what you actually what you actually have now is most of so the Linux layer the low level that's all written in C okay which is a very low level programming language and then everything on top of that is a mixture of C++ so that's kind of a C++ is basically a language that's still quite low level that's what called C but it uses it allows you to do things like objects and um it has like it's an object-oriented language can it can we pause really quick for a funny story yep so I'm giggling at C++ because when I was like I'm going to be able to get my computer science degree and this is going to be awesome in school I took the class and it just didn't click it did not click whatsoever and but I really needed to pass the class so I just started skipping class and the instructor was like you can pass the class if you catch up on all of your homework and I was like okay so I went to Craigslist and found a someone who understood when it was being asked and just purposely made mistakes in them so that way it wasn't perfect but did all my homework for me um not the smartest move just and I'm not suggesting this for anyone but that was my introduction to programming and I always felt like because I was dyslexic back then but once I learned I was dyslexic I was like oh that's probably why I kind of understand it and I never knew how to start understanding the theory behind it to be able to understand the coding going on so now that you're talking about that it's like different layers and that it's C and then C++ and what you'll continue with I'm like I wish I understood that back then no sure at least now I have funny story yeah exactly so yeah so so you know that that is what actually makes up the Android operating system is C and then C++ then what they did to like so they built this thing they built this this operate system it worked but then they had this issue of well how do you build applications for it it's a completely new form factor it's a completely new world and at the time they actually had the guys that built it actually had experience using Java so they'd built like Java applications on like old style phones so you had like these Java minigames I don't know if you remember them it definitely dates me but they existed and like what I've tried to get some names of them now it was like it was it was after snake and it was kind of like you know the next level I'm not going to lie I went from snake to brick breaker and I'm like but that's like you know the really really old school phones to Blackberry like were there any other ones I don't remember anyway so yeah no no no so so they they just kind of leverage their experience and they thought well right we will allow developers to build apps in using Java which is a programming language and the specific reason for that is Java when you when you write your code in Java not to be confused with JavaScript they are completely separate when you write your code in Java it actually then runs in like a virtual machine so your code has no idea about the outside world basically it doesn't know that it's running on an Android device the idea there is you could write an application in Java and it would work anywhere that has a virtual machine so it used to happen a lot on old websites as well there would be a lot of Java on websites you'd have to install plugins to get it to work and keep those up today and they'd never work and it was quite popular at the time like early like 2008 2009 and so they decided to go down this route because it meant that there was a security element there if your Android app didn't know what was going on around it it couldn't do anything bad was the theory you couldn't do anything malicious it couldn't like read the information from another app you wouldn't want you wouldn't want some malicious app to be able to read your banking information from your banking app for example so there was this idea of built-in security it didn't work very well but that was the just to repeat back I might have missed this part of why certain phone like phone manufacturers had their additional software in it yeah okay yeah so that's the layer where they started installing these additional things so basically coming all the way around Android ended up with these three layers you had Linux at the bottom actually interacting with the hardware the C++ that was the actual operating system like the actual code like the code converted your SMS text message to a signal that your radio or your device understood and sent it you know that kind of level and then on top of that you had Java and that's that was where you could actually then build applications okay and that was that was what was built up and decided as was this was going to be what we released and they released it and it worked it worked well ish but as you explained we kind of had these issues where that's at the point where actually manufacturers started installing their own applications their own applications that weren't particularly well-made they were consume a lot of resource they would run a lot of background things and and they would absolutely slow down the device to basically unbearable speeds um and it caused a lot of issues um you really are like just bringing back memories of there was a phone I was so excited about it it was an HTC phone and it um was called the the rhyme and it was okay and I was so excited about it and then I got it and HTC put so much on top of it that it would run really really slow compared to a Motorola device this is like okay so weird and you had an even at a lay and we even above that because not only were manufacturers putting stuff on it but the carriers were also putting stuff on them oh yeah because they would have like the default Verizon app this is why we didn't get a lot of I say we because I was you know Verizon back then um we didn't get a lot of the capabilities that they wanted as in like it took years before Verizon was allowed to sell the iPhone actually yeah and Verizon wouldn't get a lot of the phones that AT&T did because of them wanting to have a specific control over the phone so weird like so fun but it's like so weird bringing this all background okay so we got all three layers and then you know the manufacturer and the carrier would put extra apps on it yeah but all those apps were running they were all Java and they were running within that kind of third layer okay now the problem with that of course was the fact that they were taking up a lot of resource these apps would run in the background so they were just permanently taking up space and that was that was a problem and throughout the years kind of Google did a lot to try and stop that happening it's definitely not so much the case anymore and you know I'd say essentially for about 10 years if you wanted to build an Android app you were writing Java code which was fine the problem with that was the Java code you wrote for Android was not at all the same as the Java code that you would write for other platforms so this we had they had this big idea that you would be able to use Java which meant you could write it once and use it everywhere but never worked out Android never supported like the whole language it never supported everything that you could normally do in Java so you kind of they kind of ended up with their own their own programming language that just had the same syntax as Java so if you looked at the code you'd say yeah that's that's Java code but if you googled how do you do this thing in Java the answers you've got wouldn't work you had to Google how do I do this thing in Android oh precisely so as a developer it was a nightmare and it was especially a nightmare if you perhaps like early on there was a lot of people who'd already been who are already Java developers maybe they were making desktop applications they were doing web stuff they were doing whatever it was and they saw this new platform I thought oh great I can start being an Android developer and then they'd get into it and they'd realize that it was some hellish mutation of the language they knew and it was you know not not not great so so this was a problem for a long time and on top of that Android had its own way of making UI of like you had you had Java on the code doing the logic doing your code but basically how you presented that on the screen was all done using XML layouts so XML it's kind of I'm not sure if it's something that you've come across in your in your learnings but it's it's a lot like HTML in that it's a markup language and so you have like if you think HTML it's the same sort of thing you have tags which you know you open and close you kind of nest things and all that sort of stuff XML is just kind of more arbitrary like you can define your own tags and you can kind of build your own system around it I'm googling while you're explaining and isn't the other maybe I'm getting this wrong but isn't there an XML file for like Excel files too That's xls oh okay slightly different but if you actually open a spreadsheet file in like a what in a text editor as just raw text it is actually XML as well that's probably so no I haven't gone into it but I'm like I know I've seen this somewhere and I never know what to do with it when we start looking at it sort of probably next time you'll definitely recognize it because it is like a big you're a big you're a bit quiet across okay okay it pops up a lot so so so a top of Java not they're not supporting the real Java they also had the own way of creating UI using XML so it was really difficult to get into because basically you had to throw away everything you already knew so 2017 basically Google said we've had enough we're building well we're changing programming languages we're going to use Kotlin instead and that kind of solved a lot of the issue because Kotlin was new and it worked a lot more like JavaScript like when you look at Kotlin code it looks quite a lot like JavaScript and it was also it's own it was literally its own language so now when you Google how do I do something in Kotlin it will work in Android as opposed to the issues they used to have so that is a very whistle stop tour of the history of Android and the structure of Android I'm googling again if you can tell and I'm not doing just like what it it came up as like I did Kotlin Java and it has questions like is Kotlin harder than Java is Kotlin replacing Java so if I understand correctly then Kotlin is is that now only for Android still
That's xls oh okay slightly different but if you actually open a spreadsheet file in like a what in a text editor as just raw text it is actually XML as well that's probably so no I haven't gone into it but I'm like I know I've seen this somewhere and I never know what to do with it when we start looking at it sort of probably next time you'll definitely recognize it because it is like a big you're a big you're a bit quiet across okay okay it pops up a lot so so so a top of Java not they're not supporting the real Java they also had the own way of creating UI using XML so it was really difficult to get into because basically you had to throw away everything you already knew so 2017 basically Google said we've had enough we're building well we're changing programming languages we're going to use Kotlin instead and that kind of solved a lot of the issue because Kotlin was new and it worked a lot more like JavaScript like when you look at Kotlin code it looks quite a lot like JavaScript and it was also it's own it was literally its own language so now when you Google how do I do something in Kotlin it will work in Android as opposed to the issues they used to have so that is a very whistle stop tour of the history of Android and the structure of Android I'm googling again if you can tell and I'm not doing just like what it it came up as like I did Kotlin Java and it has questions like is Kotlin harder than Java is Kotlin replacing Java so if I understand correctly then Kotlin is is that now only for Android still No so you can use Kotlin elsewhere essentially when you build a program that's built in Kotlin it actually generates a Java program so you can still use it in other places that you would normally use Java and in fact you can actually go as far as to have some Kotlin code in your Java application it's a little confusing a bit weird but the two are replaceable basically with that be and this is just me not knowing all like the languages break down enough yet and the ecosystem but couldn't say that Kotlin is almost like a framework of Java kind of like TypeScript is to JavaScript or yeah we act as to JavaScript the concepts is is definitely very similar I think if you publicly say that Kotlin is a framework of Java people are going to get very angry good to know but if you're purely thinking in concepts yes I said to me Kotlin is a new way of writing code but actually under the hood when it gets built you end up with Java and it runs in the Java environment now there's another thing is to add more confusion because this whole core is just pure confusion yeah there is another thing called Kotlin multi-platform which actually allows you to then build right in Kotlin and then build it into a iOS code so you can build for iOS and Kotlin and also into JavaScript it will convert it into JavaScript so you can build for the web as well so they've essentially come up with this this whole thing this whole like build process that would allow you to as the name kind of suggests write Kotlin and it be built for multiple platforms what are iPhone apps built within so iPhone originally was built in Objective-C and now it's built in Swift the iPhone itself or the apps the apps the iPhone itself is a much more convoluted mess because it's closed source we don't we can't see it yeah yeah so we only really know what people have kind of publicly said and it much like with all Apple things it's a it's a mix match of lots of bits and pieces homey just asked a good question of Kotlin seems super flexible why do you think it's not more widely used I just read that in a different way than you actually typed it thanks dyslexia it's all good don't worry I read it in a completely different way as well so why do I think it's not widely used well it's still quite new so it really was only like 2017 that it started to take off and it only really took off because Google said right we're going to use it for Android and the other issue is especially with the multi-platform side of things convincing developers to move away from their native platforms convincing JavaScript developers that Kotlin is better to do and convincing iOS developers that it's better to use Kotlin over Apple stuff that's like near impossible so it's it's taken a lot to kind of convince people to start using it but also it's just it's just not a very mature thing if you think about the fact that Java is existed for about 30 years now something that's only existed for five years is you know much less of an attractive thing when you're deciding what you know you're super important super reliable application you want something that's kind of reliable but it's it's it's expanding I really think that we're going to see a lot more of Kotlin in the future and I'm a big fan of it I have been enjoying my Google's during our stream today in the fact of just like it's helping piece it together a lot more and also being able to look at the histories of these languages and like what they influence and when they came out really helps to go along with this story as well so I appreciate that it's okay so we've been mainly talking about the operating system thus far right yeah how are apps built yeah so as we kind of said let's and we'll kind of focus on how they're built now because the other thing is just as much as Android itself has changed the apps themselves have changed significantly as well over the years and there's been lots of like ways of building things that are just completely disregarded now so there'll be no point in learning them because you would never use them so in terms of the app side we definitely want to focus on Kotlin and how how we build from there essentially you have your app is immediately split into two parts you have the UI and then you have the what we call the business logic the actual code behind it that's deciding what to do so when a user presses this button what should that button do you've separately you've got well how does that button look how does that button feel you know that sort of thing and then you've got well what happens when you press it so that gets split down and you can still use the XML layouts that's still very much something that exists and it's probably what we'll do in our sort of future app because it's it's definitely the easiest it's the most established but there are new ways of doing that as well so you can actually write your UI in Kotlin using like a framework called Jetpack Compose which allows you to allow you to do a lot of really cool stuff but again that's a very new thing to evolving you know it's not there yet so so apps to build in Kotlin and they're built using an IDE an integrated development environment called Android Studio there are other ways that you can build apps but this is kind of the definitely the the Google approved way of doing it and so so what you would do and what you can do it whether it's now or or after this is you download Android Studio and that gives you a piece of software that looks a lot like this it is an IDE it's actually made in joint with IntelliJ okay and they do other IDE as well so if you're familiar with their products it looks very similar but again a lot of people have very opinionated views on what is the right IDE to use whether it's Visual Code or you know whatever it might be that's probably the one plus side of Android development is you don't really have that you have the one IDE that you use and everyone uses it and and this provides a lot of different kind of tools not just your code editing but also has an emulator built into it so you can actually run a Android emulator on your computer and see what it would look like when you're running your app and you're and you can interact with your app like live and that is actually emulating an Android device which is which is pretty cool that's really cool and that obviously makes it much easier to develop because a it removes that barrier of entry you don't actually need an Android phone to be able to Android app it also means that you know you don't always have to have your phone connected to your computer to do it you can just kind of iterate make a change run it on the emulator make a change you know that sort of thing and then you know it's got all the other sort of normal things so what we can actually what we can actually do I think the easiest way would be to download and look Android Studio on your side and I'll walk you through kind of getting that set up and if we have time maybe we'll open up their sort of template hello world application do do do I'm downloading you guys can't see it but I will get there I'm just very concentrated on it today share screen this one share there we go cool I'm gonna bring you up a bit bigger so I can see your screen as well there we go you're gonna open no okay time yeah yay cool so you don't need to import any settings because you've never used it before sweet and we will open Android Studio which is the latest version is code named often that's right and then so so basically what we do is it takes you through quite a nice setup wizard which is actually quick pre-stray for so we'll you know the other thing probably to mention at this point is you know at this point in history now Android isn't just for your phones Android you have Android tablets you have Android you know wearables like watches Android in in your car you have sort of that system so all of these systems use the same coding language and the same setup so you can do it all within this idea so this will just kind of go through and basically download everything that you need you'll need to click on the Android SDK preview license as well and accept that as well and that'll then basically download the emulator and all the other sort of gubbins that that build it together this was all this all used to be much less straightforward I must say this is probably a very good time in history to be starting Android development because you have things like this that just download it for you yeah this is cool and now going back to what we were talking a bit about earlier is how Kotlin will has something that will also put it for make an iPhone app to will this help with that so not really that kind of is something that's what they kept it as a separate project that's why it's that specifically called Kotlin multi-platform because it's kind of another layer on top so you were still used Android studio for your Android bit but then actually when you're building an iOS app you would use Xcode and they just then share a lot of code it's all again it's probably something we could specifically talk on for about 10 years just on that but it is pretty cool like how they how they managed to do it okay interesting it's I put the link in as well because I think it's definitely something it's interesting because since I've started the show people have asked me like when I'm going to start niching down into like one specific area and I'm like how can I I don't know everything that's out there it's also cool so I'm going to start me doing a hundred days of code in JavaScript just so that way I have it built out in a proficient in one language yet I'm loving the show of like there's so many different things to load yeah so so here we go yeah and we can hit new project and this gives you loads of template projects that you can kind of get started with so let's go with the let's go with the login activity actually that that's on the right there that's quite a good one because that gives you a bit of an idea of what's going on and then you can literally gives you so I help put a name your application and you know settle you know settle these sort of things up there's the the minimum SD minimum SDK thing is quite interesting so I don't know if you you might have actually heard about it when you were sort of on the retail side but this whole like fragmentation of different devices running different versions of Android so as a developer when they release a new version of Android you obviously want to use those new features they'll bring in new cool new things however those cool new features only work on the new version so if your users aren't using the new version you can't use those cool new features so this is where you have to kind of set a minimum SDK to say my app will only run on devices newer than whatever version and it gives you a little prompt there that says like you've selected API 21 which is Lollipop your app will run on 98
No so you can use Kotlin elsewhere essentially when you build a program that's built in Kotlin it actually generates a Java program so you can still use it in other places that you would normally use Java and in fact you can actually go as far as to have some Kotlin code in your Java application it's a little confusing a bit weird but the two are replaceable basically with that be and this is just me not knowing all like the languages break down enough yet and the ecosystem but couldn't say that Kotlin is almost like a framework of Java kind of like TypeScript is to JavaScript or yeah we act as to JavaScript the concepts is is definitely very similar I think if you publicly say that Kotlin is a framework of Java people are going to get very angry good to know but if you're purely thinking in concepts yes I said to me Kotlin is a new way of writing code but actually under the hood when it gets built you end up with Java and it runs in the Java environment now there's another thing is to add more confusion because this whole core is just pure confusion yeah there is another thing called Kotlin multi-platform which actually allows you to then build right in Kotlin and then build it into a iOS code so you can build for iOS and Kotlin and also into JavaScript it will convert it into JavaScript so you can build for the web as well so they've essentially come up with this this whole thing this whole like build process that would allow you to as the name kind of suggests write Kotlin and it be built for multiple platforms what are iPhone apps built within so iPhone originally was built in Objective-C and now it's built in Swift the iPhone itself or the apps the apps the iPhone itself is a much more convoluted mess because it's closed source we don't we can't see it yeah yeah so we only really know what people have kind of publicly said and it much like with all Apple things it's a it's a mix match of lots of bits and pieces homey just asked a good question of Kotlin seems super flexible why do you think it's not more widely used I just read that in a different way than you actually typed it thanks dyslexia it's all good don't worry I read it in a completely different way as well so why do I think it's not widely used well it's still quite new so it really was only like 2017 that it started to take off and it only really took off because Google said right we're going to use it for Android and the other issue is especially with the multi-platform side of things convincing developers to move away from their native platforms convincing JavaScript developers that Kotlin is better to do and convincing iOS developers that it's better to use Kotlin over Apple stuff that's like near impossible so it's it's taken a lot to kind of convince people to start using it but also it's just it's just not a very mature thing if you think about the fact that Java is existed for about 30 years now something that's only existed for five years is you know much less of an attractive thing when you're deciding what you know you're super important super reliable application you want something that's kind of reliable but it's it's it's expanding I really think that we're going to see a lot more of Kotlin in the future and I'm a big fan of it I have been enjoying my Google's during our stream today in the fact of just like it's helping piece it together a lot more and also being able to look at the histories of these languages and like what they influence and when they came out really helps to go along with this story as well so I appreciate that it's okay so we've been mainly talking about the operating system thus far right yeah how are apps built yeah so as we kind of said let's and we'll kind of focus on how they're built now because the other thing is just as much as Android itself has changed the apps themselves have changed significantly as well over the years and there's been lots of like ways of building things that are just completely disregarded now so there'll be no point in learning them because you would never use them so in terms of the app side we definitely want to focus on Kotlin and how how we build from there essentially you have your app is immediately split into two parts you have the UI and then you have the what we call the business logic the actual code behind it that's deciding what to do so when a user presses this button what should that button do you've separately you've got well how does that button look how does that button feel you know that sort of thing and then you've got well what happens when you press it so that gets split down and you can still use the XML layouts that's still very much something that exists and it's probably what we'll do in our sort of future app because it's it's definitely the easiest it's the most established but there are new ways of doing that as well so you can actually write your UI in Kotlin using like a framework called Jetpack Compose which allows you to allow you to do a lot of really cool stuff but again that's a very new thing to evolving you know it's not there yet so so apps to build in Kotlin and they're built using an IDE an integrated development environment called Android Studio there are other ways that you can build apps but this is kind of the definitely the the Google approved way of doing it and so so what you would do and what you can do it whether it's now or or after this is you download Android Studio and that gives you a piece of software that looks a lot like this it is an IDE it's actually made in joint with IntelliJ okay and they do other IDE as well so if you're familiar with their products it looks very similar but again a lot of people have very opinionated views on what is the right IDE to use whether it's Visual Code or you know whatever it might be that's probably the one plus side of Android development is you don't really have that you have the one IDE that you use and everyone uses it and and this provides a lot of different kind of tools not just your code editing but also has an emulator built into it so you can actually run a Android emulator on your computer and see what it would look like when you're running your app and you're and you can interact with your app like live and that is actually emulating an Android device which is which is pretty cool that's really cool and that obviously makes it much easier to develop because a it removes that barrier of entry you don't actually need an Android phone to be able to Android app it also means that you know you don't always have to have your phone connected to your computer to do it you can just kind of iterate make a change run it on the emulator make a change you know that sort of thing and then you know it's got all the other sort of normal things so what we can actually what we can actually do I think the easiest way would be to download and look Android Studio on your side and I'll walk you through kind of getting that set up and if we have time maybe we'll open up their sort of template hello world application do do do I'm downloading you guys can't see it but I will get there I'm just very concentrated on it today share screen this one share there we go cool I'm gonna bring you up a bit bigger so I can see your screen as well there we go you're gonna open no okay time yeah yay cool so you don't need to import any settings because you've never used it before sweet and we will open Android Studio which is the latest version is code named often that's right and then so so basically what we do is it takes you through quite a nice setup wizard which is actually quick pre-stray for so we'll you know the other thing probably to mention at this point is you know at this point in history now Android isn't just for your phones Android you have Android tablets you have Android you know wearables like watches Android in in your car you have sort of that system so all of these systems use the same coding language and the same setup so you can do it all within this idea so this will just kind of go through and basically download everything that you need you'll need to click on the Android SDK preview license as well and accept that as well and that'll then basically download the emulator and all the other sort of gubbins that that build it together this was all this all used to be much less straightforward I must say this is probably a very good time in history to be starting Android development because you have things like this that just download it for you yeah this is cool and now going back to what we were talking a bit about earlier is how Kotlin will has something that will also put it for make an iPhone app to will this help with that so not really that kind of is something that's what they kept it as a separate project that's why it's that specifically called Kotlin multi-platform because it's kind of another layer on top so you were still used Android studio for your Android bit but then actually when you're building an iOS app you would use Xcode and they just then share a lot of code it's all again it's probably something we could specifically talk on for about 10 years just on that but it is pretty cool like how they how they managed to do it okay interesting it's I put the link in as well because I think it's definitely something it's interesting because since I've started the show people have asked me like when I'm going to start niching down into like one specific area and I'm like how can I I don't know everything that's out there it's also cool so I'm going to start me doing a hundred days of code in JavaScript just so that way I have it built out in a proficient in one language yet I'm loving the show of like there's so many different things to load yeah so so here we go yeah and we can hit new project and this gives you loads of template projects that you can kind of get started with so let's go with the let's go with the login activity actually that that's on the right there that's quite a good one because that gives you a bit of an idea of what's going on and then you can literally gives you so I help put a name your application and you know settle you know settle these sort of things up there's the the minimum SD minimum SDK thing is quite interesting so I don't know if you you might have actually heard about it when you were sort of on the retail side but this whole like fragmentation of different devices running different versions of Android so as a developer when they release a new version of Android you obviously want to use those new features they'll bring in new cool new things however those cool new features only work on the new version so if your users aren't using the new version you can't use those cool new features so this is where you have to kind of set a minimum SDK to say my app will only run on devices newer than whatever version and it gives you a little prompt there that says like you've selected API 21 which is Lollipop your app will run on 988% of all devices and and that's fine and you can kind of go all the way up to you know the latest versions and like you say yeah the latest version there aren't any really any devices yet and and it's it's definitely interesting to see how segregated and like split out Android still is which is a shame but this is interesting okay which one were we glowy
8% of all devices and and that's fine and you can kind of go all the way up to you know the latest versions and like you say yeah the latest version there aren't any really any devices yet and and it's it's definitely interesting to see how segregated and like split out Android still is which is a shame but this is interesting okay which one were we glowy so it's it's something as well but like iOS developers don't really have to deal with because Android Apple is so are you know better at move keeping the momentum forward so everyone always wants to get the new iPhone and because there's also only one iPhone they only have to they support like four or five old iPhones keep up keep updated and then when they release a new one they just remove the oldest and it keeps that momentum forward whether where is with Android because you as a manufacturer can select whatever version of Android you want you do still get devices that are being produced brand new that actually have running versions of Android that are four years old and that's interesting they haven't internally updated they don't have a developer to do that or whether it might be having a lot of issues that is so interesting and so like to use the legacy support ones with make it so that way if it's using like old stuff so if we I'm guessing for the minimum SDK if we did that it would be using like jelly bean which would make it before they had the the apps placed or yeah yeah exactly so you can definitely don't like that no there's no yeah definitely and again Google's done a lot of work to try and make it easier by like backporting changes so older versions get updates through the play store but it's still very a fragmented mess to be honest but yeah so we this is just going to kind of compile why are you already having just like it's fine I'm sure it's fine it's still building yeah it's it's doing it's doing the thing down the bottom that right I'm calling oh I'm like why are you still like I just got you this is so cool like this will so what up Akari I'm definitely getting some type of Android by the next week now sounds good because I want to will it make a much of a difference if I get a tablet instead not really we can definitely explore you know the UI difference of having a big screen versus a small screen and the headache that that causes but yeah yeah we it functionally put it the same this is uh play the good so yes so it's so it's so it's now just kind of pulling in everything to build the template application that we've asked it to build and I think just because it's the first run it does take it like and so would it be possible do we have to use this IDE or could we use like VS Code instead so so you could but the the problem is when it comes to actually building the app and making it into a file that people can install you kind of now have to use Android Studio for that step oh interesting okay so there are ways you can do it from the command line you can like directly run the programs that actually do the building and stuff that's like under the hood but they've really tightened down on saying that no this is the only way we officially support so it can be it can be it can be a pain like yeah I would this would be the only thing I'd recommend and this is another thing is I don't even know where it saved this too I can fix that but just as a I'm newer to GitHub and need a working on it but as long as I save it to like my code folder it'll still be the same as uploading for I can upload a repo for it yeah you can actually you can do that within Android Studio as well okay so along the top menu you've got one that says vcs oh yes and that's your version control and so you can create a Git repository you can share a project and get help you could do all of these things it'll probably ask just they ask you to log in and do all that sort of fun stuff but um oh why would you definitely get hub enterprise so yeah there we go it has it has it has set up so on the left hand side now you see there's a a directory called app and if you click on that that'll expand out to different areas of the app oh I mean um well that was fun not what I meant to click but that was fun that that works it so I was gonna see if I can just make it bigger it doesn't appear and you should be able to just I don't yeah don't don't you should be able to just drag oh you might like physically yeah yeah um you can change the UI size but it is a little bit of a pain yeah like it doesn't do it like vscode or in a browser oh for next time we'll we'll get you set up with okay being a little bit more happy for people that are actually watching because yes I appreciate it's it's quite small so everybody's gonna squint this is why I have to use my glasses while streaming because I'm always like I can't see it yeah we will get there we will get there but this is oh wow so this is the project that's been around for us yeah and what and what you did is kind of expanded everything which is cool because you know we can now see it and there's a lot going on here so I guess the question is do you want to go through this now or shall we save this as a surprise I kind of want to save it because I think it'd be good to we got it installed we got there yeah so we don't have to wait for that next time and we got the history I think actually going through this is going to be more helpful as we're building it so we don't have to recap it again next week oh this is so fun oh my gosh this is so cool way cooler than I like originally thought it was well that's because as because if I say Android development is cool people just love it well I think a lot of it is like it's been hard for me to conceptualize and how it goes from point A to point B like I can understand like people doing the code but then how to actually create and you know run it especially on a device is like something that I'm like I know it exists I know I know it's possible I've just never done it so it's harder for me to go oh that was actually way easier or way cooler than I thought it was and now I'm starting to see that too yeah I think that's the thing is these things have come on a long way it is a lot easier and it's a really fun way to develop because you can physically get it on your device as you're building it test things out actually interact with it and there's a very kind of tactile element that compared to like maybe doing web development or back end development where it's just you're looking at code and running it and hope it works so yeah it's definitely something that I really enjoy interesting well thank you so much for coming on the show today Zachary and be so everybody look forward to next Friday because that's when Zachary I think is coming back on pretty sure it's next Friday I'm gonna go double check my calendar now so I don't lead anyone astray I don't know why y'all I made my life confusing with all these calendars but yes it's next Friday the 21st oh and the day before that I'm learning about Kafka oh I think you probably know as much as I do to be honest I like getting into sticky situations with the show of not knowing what I'm talking like even an idea of it so this is going to be quite enjoyable learning how to do that and I am excited because you if I remember correctly you said Kotlin is a lot like JavaScript yeah I think so it's very similar in terms of its structure and kind of what you're looking at and I think when we start getting into some code it'll kind of resonate cool cool and then homey did say that he thinks it's a little intimidating but this helped him understand a bit more and it's very interesting good I'm good thank you it's always nice when other people think it's interesting yes not just it I really do like I think this I also think that I'm partially like really into learning about it because I used to work in the field so I'm like finally gonna be able to answer all of these questions yeah exactly yeah because I actually quit Verizon in 2013 so almost 10 years almost exactly 10 years so that is that's pretty crazy and then because we're using Android Studio do I need to download download download download Kotlin no so everything will have been pulled in for you it's all in there now nice again that's a perk if using it like if you want to go down the route of using a different IDE it takes a lot of setup it's just not worth it it's all one who doing you can get started and yeah yeah awesome well thank you so much for your time today and coming back next week I'm excited you might also get stuck being requested even more because I'm like but there's more we could do yeah there's a lot more week awesome well thank you for your time Zachary bye everyone
so it's it's something as well but like iOS developers don't really have to deal with because Android Apple is so are you know better at move keeping the momentum forward so everyone always wants to get the new iPhone and because there's also only one iPhone they only have to they support like four or five old iPhones keep up keep updated and then when they release a new one they just remove the oldest and it keeps that momentum forward whether where is with Android because you as a manufacturer can select whatever version of Android you want you do still get devices that are being produced brand new that actually have running versions of Android that are four years old and that's interesting they haven't internally updated they don't have a developer to do that or whether it might be having a lot of issues that is so interesting and so like to use the legacy support ones with make it so that way if it's using like old stuff so if we I'm guessing for the minimum SDK if we did that it would be using like jelly bean which would make it before they had the the apps placed or yeah yeah exactly so you can definitely don't like that no there's no yeah definitely and again Google's done a lot of work to try and make it easier by like backporting changes so older versions get updates through the play store but it's still very a fragmented mess to be honest but yeah so we this is just going to kind of compile why are you already having just like it's fine I'm sure it's fine it's still building yeah it's it's doing it's doing the thing down the bottom that right I'm calling oh I'm like why are you still like I just got you this is so cool like this will so what up Akari I'm definitely getting some type of Android by the next week now sounds good because I want to will it make a much of a difference if I get a tablet instead not really we can definitely explore you know the UI difference of having a big screen versus a small screen and the headache that that causes but yeah yeah we it functionally put it the same this is uh play the good so yes so it's so it's so it's now just kind of pulling in everything to build the template application that we've asked it to build and I think just because it's the first run it does take it like and so would it be possible do we have to use this IDE or could we use like VS Code instead so so you could but the the problem is when it comes to actually building the app and making it into a file that people can install you kind of now have to use Android Studio for that step oh interesting okay so there are ways you can do it from the command line you can like directly run the programs that actually do the building and stuff that's like under the hood but they've really tightened down on saying that no this is the only way we officially support so it can be it can be it can be a pain like yeah I would this would be the only thing I'd recommend and this is another thing is I don't even know where it saved this too I can fix that but just as a I'm newer to GitHub and need a working on it but as long as I save it to like my code folder it'll still be the same as uploading for I can upload a repo for it yeah you can actually you can do that within Android Studio as well okay so along the top menu you've got one that says vcs oh yes and that's your version control and so you can create a Git repository you can share a project and get help you could do all of these things it'll probably ask just they ask you to log in and do all that sort of fun stuff but um oh why would you definitely get hub enterprise so yeah there we go it has it has it has set up so on the left hand side now you see there's a a directory called app and if you click on that that'll expand out to different areas of the app oh I mean um well that was fun not what I meant to click but that was fun that that works it so I was gonna see if I can just make it bigger it doesn't appear and you should be able to just I don't yeah don't don't you should be able to just drag oh you might like physically yeah yeah um you can change the UI size but it is a little bit of a pain yeah like it doesn't do it like vscode or in a browser oh for next time we'll we'll get you set up with okay being a little bit more happy for people that are actually watching because yes I appreciate it's it's quite small so everybody's gonna squint this is why I have to use my glasses while streaming because I'm always like I can't see it yeah we will get there we will get there but this is oh wow so this is the project that's been around for us yeah and what and what you did is kind of expanded everything which is cool because you know we can now see it and there's a lot going on here so I guess the question is do you want to go through this now or shall we save this as a surprise I kind of want to save it because I think it'd be good to we got it installed we got there yeah so we don't have to wait for that next time and we got the history I think actually going through this is going to be more helpful as we're building it so we don't have to recap it again next week oh this is so fun oh my gosh this is so cool way cooler than I like originally thought it was well that's because as because if I say Android development is cool people just love it well I think a lot of it is like it's been hard for me to conceptualize and how it goes from point A to point B like I can understand like people doing the code but then how to actually create and you know run it especially on a device is like something that I'm like I know it exists I know I know it's possible I've just never done it so it's harder for me to go oh that was actually way easier or way cooler than I thought it was and now I'm starting to see that too yeah I think that's the thing is these things have come on a long way it is a lot easier and it's a really fun way to develop because you can physically get it on your device as you're building it test things out actually interact with it and there's a very kind of tactile element that compared to like maybe doing web development or back end development where it's just you're looking at code and running it and hope it works so yeah it's definitely something that I really enjoy interesting well thank you so much for coming on the show today Zachary and be so everybody look forward to next Friday because that's when Zachary I think is coming back on pretty sure it's next Friday I'm gonna go double check my calendar now so I don't lead anyone astray I don't know why y'all I made my life confusing with all these calendars but yes it's next Friday the 21st oh and the day before that I'm learning about Kafka oh I think you probably know as much as I do to be honest I like getting into sticky situations with the show of not knowing what I'm talking like even an idea of it so this is going to be quite enjoyable learning how to do that and I am excited because you if I remember correctly you said Kotlin is a lot like JavaScript yeah I think so it's very similar in terms of its structure and kind of what you're looking at and I think when we start getting into some code it'll kind of resonate cool cool and then homey did say that he thinks it's a little intimidating but this helped him understand a bit more and it's very interesting good I'm good thank you it's always nice when other people think it's interesting yes not just it I really do like I think this I also think that I'm partially like really into learning about it because I used to work in the field so I'm like finally gonna be able to answer all of these questions yeah exactly yeah because I actually quit Verizon in 2013 so almost 10 years almost exactly 10 years so that is that's pretty crazy and then because we're using Android Studio do I need to download download download download Kotlin no so everything will have been pulled in for you it's all in there now nice again that's a perk if using it like if you want to go down the route of using a different IDE it takes a lot of setup it's just not worth it it's all one who doing you can get started and yeah yeah awesome well thank you so much for your time today and coming back next week I'm excited you might also get stuck being requested even more because I'm like but there's more we could do yeah there's a lot more week awesome well thank you for your time Zachary bye everyone