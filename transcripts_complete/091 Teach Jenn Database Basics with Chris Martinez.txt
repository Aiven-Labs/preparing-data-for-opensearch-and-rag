Well, humans, welcome to another episode of Teach Gen Tech. Today is Teach Gen, not data basics, but data-based basics. We're adding to it, data-based basics with Chris. Hi, Chris. Hey, we're ready. Who are you? I'm good, I'm great, yourself. Good, good Good, good. And how, I've been trying to think about like how I tell people that I met you. And I'm just like, I awkwardly walked up to a bunch of people at Dunvers Startup Week. It was like, hi. You're cool. Let's be friends. And I'm pretty sure that's how we met
Good, good. And how, I've been trying to think about like how I tell people that I met you. And I'm just like, I awkwardly walked up to a bunch of people at Dunvers Startup Week. It was like, hi. You're cool. Let's be friends. And I'm pretty sure that's how we met Would you add anything to that? It was at the that rooftop party. Oh, yeah. It was like a rooftop party at Dunvers Startup Week. And yeah, there's just a circle of other than one person, everyone in that circle is a complete stranger to me to that moment
Would you add anything to that? It was at the that rooftop party. Oh, yeah. It was like a rooftop party at Dunvers Startup Week. And yeah, there's just a circle of other than one person, everyone in that circle is a complete stranger to me to that moment So you picked a perfect one to walk into, because that weren't really each other anyway. And yeah, Gen introduced herself and seemed cool, told me about the show. I really loved the concept, jumped in and watched a few of them, and had a bunch of commentary in the chat. And now here we are
So you picked a perfect one to walk into, because that weren't really each other anyway. And yeah, Gen introduced herself and seemed cool, told me about the show. I really loved the concept, jumped in and watched a few of them, and had a bunch of commentary in the chat. And now here we are Thank you. Yes. And thank you. And that was a fun part. So in case anyone is curious, I think this is a key point. I still, to this day, get nervous about walking into a group of people. I'm going, oh, I'm just going to be really weird and say, hi. It's still something that happens
Thank you. Yes. And thank you. And that was a fun part. So in case anyone is curious, I think this is a key point. I still, to this day, get nervous about walking into a group of people. I'm going, oh, I'm just going to be really weird and say, hi. It's still something that happens Having my podcasts and having my show, give me a really good excuse, because saying, yeah, I have a podcast called Shit You Don't Want to Talk About. And a show called Teach Gen Tech. The first one, let's me gauge if they're going to be super judgy. The kind of gives me a temp check
Having my podcasts and having my show, give me a really good excuse, because saying, yeah, I have a podcast called Shit You Don't Want to Talk About. And a show called Teach Gen Tech. The first one, let's me gauge if they're going to be super judgy. The kind of gives me a temp check And then also if they're going to be super judgy on being around a beginner. And now I get to add to it, I am a dev rel at Ivan. So there's more. And to why we are learning databases
And then also if they're going to be super judgy on being around a beginner. And now I get to add to it, I am a dev rel at Ivan. So there's more. And to why we are learning databases And yes, Chris has joined a lot of them and had a great call out, which I'm working on everyone, of being consistent and having a schedule. That's all my to-do list. There's all my to-do list. They should be around this time. And I'm hoping to stick to Monday, Tuesday, Wednesday
And yes, Chris has joined a lot of them and had a great call out, which I'm working on everyone, of being consistent and having a schedule. That's all my to-do list. There's all my to-do list. They should be around this time. And I'm hoping to stick to Monday, Tuesday, Wednesday So we're working on it. We're working on it. What are we learning about today? Like exactly, because there's a lot. Yeah. So I'm going to try to distill 10, 15 years of database not-hologin to roughly an hour and a half. But the biggest piece is that we are going to really just touch on the basics
So we're working on it. We're working on it. What are we learning about today? Like exactly, because there's a lot. Yeah. So I'm going to try to distill 10, 15 years of database not-hologin to roughly an hour and a half. But the biggest piece is that we are going to really just touch on the basics If there's any DBAs or former DBAs in the audience today, you're probably going to have opinions that are contrary to a lot of what I say. And that's totally cool
If there's any DBAs or former DBAs in the audience today, you're probably going to have opinions that are contrary to a lot of what I say. And that's totally cool Remember that this is, how do you help someone who's never really worked directly with a database before get on their feet? Not what's the best way to build a database that can handle 10,000 queries a second. And that brings me to another really big point
Remember that this is, how do you help someone who's never really worked directly with a database before get on their feet? Not what's the best way to build a database that can handle 10,000 queries a second. And that brings me to another really big point For whatever reason, in my experience, it has been that developers and technological people in general are the most opinionated about databases more than anything. I used to joke, if you ever want to see two developers get in a fight, have them design a database together
For whatever reason, in my experience, it has been that developers and technological people in general are the most opinionated about databases more than anything. I used to joke, if you ever want to see two developers get in a fight, have them design a database together And I've heard that from multiple people. Yeah. So if we come to blows during this, no heart feelings. That's good to know. I would say I'm fortunate in the fact that I don't know a ton of bottom-up. You've seen a lot of the ones that I've been doing with Postgres
And I've heard that from multiple people. Yeah. So if we come to blows during this, no heart feelings. That's good to know. I would say I'm fortunate in the fact that I don't know a ton of bottom-up. You've seen a lot of the ones that I've been doing with Postgres And also for everybody's knowledge, we are sticking to, we're starting with Postgres not because it's like, hey, I'm just going to pick something random. It's because it's part of my real job. So I'm using my show to help me learn my real job
And also for everybody's knowledge, we are sticking to, we're starting with Postgres not because it's like, hey, I'm just going to pick something random. It's because it's part of my real job. So I'm using my show to help me learn my real job And part of that is creating videos to get started with Postgres, MySQL, and Redis. So there is the background to it of why you might be like, why are you asking just these ones? Eventually, I'd love to expand, but that is our starting knowledge base. So. Yeah
And part of that is creating videos to get started with Postgres, MySQL, and Redis. So there is the background to it of why you might be like, why are you asking just these ones? Eventually, I'd love to expand, but that is our starting knowledge base. So. Yeah So. Yeah. What? And last bit of disclaimer is, as I mentioned, people are incredibly opinionated about all aspects of database design management, implementation, usage, et cetera. So remember that you are getting my highly colored opinion on this
So. Yeah. What? And last bit of disclaimer is, as I mentioned, people are incredibly opinionated about all aspects of database design management, implementation, usage, et cetera. So remember that you are getting my highly colored opinion on this So look at everything we talk about today through that lens. Talk to other developers over time. They're going to tell you different things. And it's not that necessarily either of us are explicitly right or wrong unless they're telling you something that's technically impossible or dangerous
So look at everything we talk about today through that lens. Talk to other developers over time. They're going to tell you different things. And it's not that necessarily either of us are explicitly right or wrong unless they're telling you something that's technically impossible or dangerous If they're like, oh, just expose all your ports to everybody. Everyone loves being publicly accessible. You don't need roles yet. Other than that kind of stuff, everything, every opinion is to an extent valid
If they're like, oh, just expose all your ports to everybody. Everyone loves being publicly accessible. You don't need roles yet. Other than that kind of stuff, everything, every opinion is to an extent valid That's interesting because one of the things that I'm working on, like, grasping is why we would secure specific IP addresses or like, white list them
That's interesting because one of the things that I'm working on, like, grasping is why we would secure specific IP addresses or like, white list them Just as something that I'm like, in my own head, I'm having a problem like, wait, so would you do that? Because anyway, I will go through that later. Yeah. I have a problem with authority for a public shift. We don't need to go through that one just yet. All right
Just as something that I'm like, in my own head, I'm having a problem like, wait, so would you do that? Because anyway, I will go through that later. Yeah. I have a problem with authority for a public shift. We don't need to go through that one just yet. All right All right. So I will say we are going through. And just because I just love doing this on my iPad. So I'm going to share it really quick. It's my Notes app. We do have a whiteboard that we'll be working with as well. But this one is my Notes app. So give me a second. We want this to do
All right. So I will say we are going through. And just because I just love doing this on my iPad. So I'm going to share it really quick. It's my Notes app. We do have a whiteboard that we'll be working with as well. But this one is my Notes app. So give me a second. We want this to do We want this to do. It's also not exactly even yet. OK, that's even. Even? No, it's not even. But it took me forever. But this does show us what we're going through. I have them based on size, not necessarily order, just so everybody knows
We want this to do. It's also not exactly even yet. OK, that's even. Even? No, it's not even. But it took me forever. But this does show us what we're going through. I have them based on size, not necessarily order, just so everybody knows I'm excited to learn about what's relational and non-relational, the code verse versus database verse, basic SQL queries, which I'm very excited about, and database design. And hello, learner. Thanks for joining today. And yeah, so this is what we're going to talk about some parts on
I'm excited to learn about what's relational and non-relational, the code verse versus database verse, basic SQL queries, which I'm very excited about, and database design. And hello, learner. Thanks for joining today. And yeah, so this is what we're going to talk about some parts on And where do you want to start? Because there's a lot of different options. Yeah. So let's start with, for those who either haven't, there's your first time tuning in, or like me, you don't always make it every week and all the way caught up
And where do you want to start? Because there's a lot of different options. Yeah. So let's start with, for those who either haven't, there's your first time tuning in, or like me, you don't always make it every week and all the way caught up Let's start with, and I recommend this process for any technology implementation. Let's start with talking about the problem that you're trying to solve
Let's start with, and I recommend this process for any technology implementation. Let's start with talking about the problem that you're trying to solve So talk about the website that you're putting together that you that drove you to want to have a database, want to implement a database, and then we'll start talking about the kinds of database and move on from there. Yeah
So talk about the website that you're putting together that you that drove you to want to have a database, want to implement a database, and then we'll start talking about the kinds of database and move on from there. Yeah Yeah. And just as you said that, I finally got the image even on my screen, because that is the random stuff that drives me bananas. So ding, ding, ding, ding. And for those who I do need to bring up the mirror board to try to explain this
Yeah. And just as you said that, I finally got the image even on my screen, because that is the random stuff that drives me bananas. So ding, ding, ding, ding. And for those who I do need to bring up the mirror board to try to explain this So it's like double-sided of, I want to do this because of my website, because I want to make it a lot easier for everyone to actually be able to consume the content that we're working on, but then also to learn the new company and job I have. So it's great when they all work together
So it's like double-sided of, I want to do this because of my website, because I want to make it a lot easier for everyone to actually be able to consume the content that we're working on, but then also to learn the new company and job I have. So it's great when they all work together So I have a website. ding, ding, ding. Oh, Jen Jenadaqa. It's very exciting, very original. And I want to make it where we don't need to worry about this Ivan one. That's something that's going to be built on. Ivan, I'll just link to it. But we have Teach and Tech, which has over 80 episodes
So I have a website. ding, ding, ding. Oh, Jen Jenadaqa. It's very exciting, very original. And I want to make it where we don't need to worry about this Ivan one. That's something that's going to be built on. Ivan, I'll just link to it. But we have Teach and Tech, which has over 80 episodes But nobody would know it unless you go through YouTube and go through YouTube is going to be not fun. Not fun at all. And then we have my podcast, which has probably 60 issue episodes. I paused it for a while
But nobody would know it unless you go through YouTube and go through YouTube is going to be not fun. Not fun at all. And then we have my podcast, which has probably 60 issue episodes. I paused it for a while But again, people can't really search it unless they go to specific places because I took down their old websites because it was a lot to keep up with. Yeah. And ding, ding, ding, ding, ding, ding, ding. So in my head, what would happen is they would both have their own episode notes
But again, people can't really search it unless they go to specific places because I took down their old websites because it was a lot to keep up with. Yeah. And ding, ding, ding, ding, ding, ding, ding. So in my head, what would happen is they would both have their own episode notes Like, hey, I need these X amount of things to go into every page that I create for Teach, Jen, Tech. Like I need the YouTube, the episode description, the guest contact, any associated links, and the transcript. OK, cool. The podcast needs a little bit more
Like, hey, I need these X amount of things to go into every page that I create for Teach, Jen, Tech. Like I need the YouTube, the episode description, the guest contact, any associated links, and the transcript. OK, cool. The podcast needs a little bit more It needs the Apple link and the Spotify link to that exact episode too. So it's a little bit more, but not like a ton more. And I'm like, I think I can do that with the database
It needs the Apple link and the Spotify link to that exact episode too. So it's a little bit more, but not like a ton more. And I'm like, I think I can do that with the database I think, but is it just one database? Do I need multiple databases? Do I use a JSON file instead? Because the last thing to show all of you is, let's go to our cell. We're cell. Not this one. Go to this one. Go. Uh-oh. Did I lose my stuff? Uh-oh. Is it this one? The blimax? Maybe. Now I lost it
I think, but is it just one database? Do I need multiple databases? Do I use a JSON file instead? Because the last thing to show all of you is, let's go to our cell. We're cell. Not this one. Go to this one. Go. Uh-oh. Did I lose my stuff? Uh-oh. Is it this one? The blimax? Maybe. Now I lost it Now I lost it. I'll just go to the GitHub. The GitHub will tell me. Nene, Nene, Nene, Nene, Nene, Nene, Nene. OK. So this is what the old website looked like before I got hired, which is great. I don't have to say hire me really big anymore. This is lovely. Thank you, Ivan
Now I lost it. I'll just go to the GitHub. The GitHub will tell me. Nene, Nene, Nene, Nene, Nene, Nene, Nene. OK. So this is what the old website looked like before I got hired, which is great. I don't have to say hire me really big anymore. This is lovely. Thank you, Ivan Thank you, Ivan. And under livestream, I would have the stream schedule. So this is one JSON file that I would have to update manually. And then I would go to portfolio. And code is a second JSON file. Writing is a third JSON file. And speaking is a fourth JSON file
Thank you, Ivan. And under livestream, I would have the stream schedule. So this is one JSON file that I would have to update manually. And then I would go to portfolio. And code is a second JSON file. Writing is a third JSON file. And speaking is a fourth JSON file I'm not saying this is the proper way of doing things. I'm saying this is how I winged it and got it to work the way I wanted it to look to be able to go get a job. Not necessarily the proper way of doing things
I'm not saying this is the proper way of doing things. I'm saying this is how I winged it and got it to work the way I wanted it to look to be able to go get a job. Not necessarily the proper way of doing things And also not knowing what's when you would use a JSON file and why there are some items that you would put, I'm maybe mixing up language right now. But I think I've heard that you can put JSON files within a database as well. And I'm just like, I don't know
And also not knowing what's when you would use a JSON file and why there are some items that you would put, I'm maybe mixing up language right now. But I think I've heard that you can put JSON files within a database as well. And I'm just like, I don't know But that's why I was like, so could I have had one database for even though they're all using different things? Or yeah. So that is the base knowledge that I'm at of, yeah. I don't know
But that's why I was like, so could I have had one database for even though they're all using different things? Or yeah. So that is the base knowledge that I'm at of, yeah. I don't know I don't know. So part of the beauty of that example is it's an excellent segue into talking about the two main, like super types of database, which are relational databases, your typical SQL-based SQL flavor, although they're other kinds that we won't get into databases
I don't know. So part of the beauty of that example is it's an excellent segue into talking about the two main, like super types of database, which are relational databases, your typical SQL-based SQL flavor, although they're other kinds that we won't get into databases And then your non-relational no SQL, which does not stand for not SQL or doesn't have SQL, it stands for not only SQL. Well, I don't think I ever realized that. More of a piece of trivia than important to the current discussion
And then your non-relational no SQL, which does not stand for not SQL or doesn't have SQL, it stands for not only SQL. Well, I don't think I ever realized that. More of a piece of trivia than important to the current discussion But what's called unstructured or semi-structured data, and what you had going there with your collection of JSON files sounds like unintentionally, but regardless, you basically had a rudimentary unstructured no SQL database that you built yourself out of raw JSON files. That's fun
But what's called unstructured or semi-structured data, and what you had going there with your collection of JSON files sounds like unintentionally, but regardless, you basically had a rudimentary unstructured no SQL database that you built yourself out of raw JSON files. That's fun That's fun. There have been plenty of times where I just needed to stick data in a place for a minute and get it out real quick and do a lot of crazy stuff to it, where I've just stuck some JSON files in an S3 bucket. And that was my database
That's fun. There have been plenty of times where I just needed to stick data in a place for a minute and get it out real quick and do a lot of crazy stuff to it, where I've just stuck some JSON files in an S3 bucket. And that was my database Other more formal ways to use those that unstructured or semi-structured data include things like MongoDB. That's the one everyone really knows. And yes, you can store JSON data as a data type, which we'll talk about when we get more into the databases within your Postgres
Other more formal ways to use those that unstructured or semi-structured data include things like MongoDB. That's the one everyone really knows. And yes, you can store JSON data as a data type, which we'll talk about when we get more into the databases within your Postgres And also, my SQL now supports storing JSON data type as well. Interesting. And this is something that I'm very excited about asking about
And also, my SQL now supports storing JSON data type as well. Interesting. And this is something that I'm very excited about asking about And I warned Chris that at one point, I will ask this of like, what's the difference between Postgres and my SQL? Whenever we get there, I'm very excited about it because it's something that as I share my journey with others that they're like, well, what's the difference? I've heard of my SQL
And I warned Chris that at one point, I will ask this of like, what's the difference between Postgres and my SQL? Whenever we get there, I'm very excited about it because it's something that as I share my journey with others that they're like, well, what's the difference? I've heard of my SQL And I'm like, I don't know yet. I will get there. Yeah. And I don't want to get there just yet. Let's finish the going over just the two super types. I don't believe that's a technical term, but that's the term how many is super of database
And I'm like, I don't know yet. I will get there. Yeah. And I don't want to get there just yet. Let's finish the going over just the two super types. I don't believe that's a technical term, but that's the term how many is super of database So the use cases for them and when and why there are two different types and when to use them does matter quite a bit. And that's where the first place for technological people to start fighting about databases
So the use cases for them and when and why there are two different types and when to use them does matter quite a bit. And that's where the first place for technological people to start fighting about databases There are certainly people who have made reasonable arguments for using a no-SQL database for your entire application. And there's no reason unless you're a bank, that's the one example everyone gives where you always have to have a relational database where they say, that's fine
There are certainly people who have made reasonable arguments for using a no-SQL database for your entire application. And there's no reason unless you're a bank, that's the one example everyone gives where you always have to have a relational database where they say, that's fine Use MongoDB for your entire app. You don't need a relational database, semi-structured or unstructured data is the best. And it does have plenty of upsides and advantages. I'm just realizing I am using, I will say just for clarification
Use MongoDB for your entire app. You don't need a relational database, semi-structured or unstructured data is the best. And it does have plenty of upsides and advantages. I'm just realizing I am using, I will say just for clarification I'm not using the whiteboard we're supposed to do because I was faster and know how to do this one better for now. OK. So we can save the other whiteboard for we start diagramming this. OK, cool. Because I'm like, that one's like harder to non-relational
I'm not using the whiteboard we're supposed to do because I was faster and know how to do this one better for now. OK. So we can save the other whiteboard for we start diagramming this. OK, cool. Because I'm like, that one's like harder to non-relational Is it non-relational, right? Yeah, non-relational or sometimes they'll be called semi-structured or just no-SQL. Oh, I have no SQL I think is the word I'm looking for. Yeah. OK. And sometimes things like, excuse me, my allergies have been profoundly inconvenient. But I don't know what happens
Is it non-relational, right? Yeah, non-relational or sometimes they'll be called semi-structured or just no-SQL. Oh, I have no SQL I think is the word I'm looking for. Yeah. OK. And sometimes things like, excuse me, my allergies have been profoundly inconvenient. But I don't know what happens But streaming is happened to me on so many streams. But I'm like, I'm fine all day. And then as soon as I get it ready to stream, I'm like, allergies. Can't do it. OK, so we got relational and non-relational. I'll just say unstructured semi-structured. Yeah. OK
But streaming is happened to me on so many streams. But I'm like, I'm fine all day. And then as soon as I get it ready to stream, I'm like, allergies. Can't do it. OK, so we got relational and non-relational. I'll just say unstructured semi-structured. Yeah. OK Yeah. OK. And that's also important to understand that even in your no-SQL databases, there are still ways to relate data and entities to each other. It's just not as tightly coupled or as strong as with a relational database, which we'll get into
Yeah. OK. And that's also important to understand that even in your no-SQL databases, there are still ways to relate data and entities to each other. It's just not as tightly coupled or as strong as with a relational database, which we'll get into I don't want to spend too much time on, especially because your technical requirements more or less require you to use a relational database. I'm not going to go too deep into the other type, other than to say it exists. And you're going to hear about them
I don't want to spend too much time on, especially because your technical requirements more or less require you to use a relational database. I'm not going to go too deep into the other type, other than to say it exists. And you're going to hear about them And it's good to have at least a basic knowledge of what they are. They're very, very good if you have a whole lot of data coming in and out that doesn't have to have a lot to do with other data in the system
And it's good to have at least a basic knowledge of what they are. They're very, very good if you have a whole lot of data coming in and out that doesn't have to have a lot to do with other data in the system So for example, the classic use case that a lot of people use is if you have a social media app, all of a person's posts, they just need to fall under that person's bucket
So for example, the classic use case that a lot of people use is if you have a social media app, all of a person's posts, they just need to fall under that person's bucket So when you use your Twitter and you send out a tweet, or tweet, or whichever one of those is the correct term, that probably is just stored as a piece of JSON somewhere. And every time you do it, there's another one. If I go and start a Twitter account and send one out, there is no need
So when you use your Twitter and you send out a tweet, or tweet, or whichever one of those is the correct term, that probably is just stored as a piece of JSON somewhere. And every time you do it, there's another one. If I go and start a Twitter account and send one out, there is no need Even if you and I worked together, or even though we're friends, it doesn't matter. There doesn't need to be any relation between my bucket of tweets and your bucket of tweets. OK. Now, compare that to this. The whiteboard we're going to be using somewhere else
Even if you and I worked together, or even though we're friends, it doesn't matter. There doesn't need to be any relation between my bucket of tweets and your bucket of tweets. OK. Now, compare that to this. The whiteboard we're going to be using somewhere else It's probably not exactly how they're storing it. But let's say we were making a whiteboard app, and you and I work for the same company. Ivan decides they need more engineering managers, and they hire me. And we both work for Ivan, and we have this shared whiteboard that you and I are working in
It's probably not exactly how they're storing it. But let's say we were making a whiteboard app, and you and I work for the same company. Ivan decides they need more engineering managers, and they hire me. And we both work for Ivan, and we have this shared whiteboard that you and I are working in So now, you and I each have our own account. And that's stored in the database table somewhere. And there's this whiteboard, which lives in its own table
So now, you and I each have our own account. And that's stored in the database table somewhere. And there's this whiteboard, which lives in its own table But because we both work in the same organization, which is Ivan, and someone else over here works at Twitter, and they have their own whiteboard, this whiteboard needs to know which organization does it belong to, who at that organization is using this whiteboard, who's allowed to see it
But because we both work in the same organization, which is Ivan, and someone else over here works at Twitter, and they have their own whiteboard, this whiteboard needs to know which organization does it belong to, who at that organization is using this whiteboard, who's allowed to see it And that's where the tight relational entities and stuff need to need to happen. That's where things need to relate to each other. Because otherwise, it's all whiteboards later. And that's a good example. Thank you. Yes. So you mentioned the no-sequel versions is like Mongo, Kafka, or Kafka
And that's where the tight relational entities and stuff need to need to happen. That's where things need to relate to each other. Because otherwise, it's all whiteboards later. And that's a good example. Thank you. Yes. So you mentioned the no-sequel versions is like Mongo, Kafka, or Kafka Maybe, and Middly, I'm not super smart on Kafka. I couldn't tell you much about it. But things like, OK, this is my, I don't know, file. But postgres is over here. Very much a relational. Although postgres will, it's a little, it's its own special animal
Maybe, and Middly, I'm not super smart on Kafka. I couldn't tell you much about it. But things like, OK, this is my, I don't know, file. But postgres is over here. Very much a relational. Although postgres will, it's a little, it's its own special animal And we'll talk about that when we get into the difference between my sequel and postgres. It's like, it goes in the relational column, but you can kind of put it close to the line. I'm pointing with my finger as though I'm able to point at your tablet
And we'll talk about that when we get into the difference between my sequel and postgres. It's like, it goes in the relational column, but you can kind of put it close to the line. I'm pointing with my finger as though I'm able to point at your tablet It can dance around in, just like, kind of right on the line of like, it's something. Most people use it as a relational database that I know. And we'll be pitchfork wielding commenters to tell me I'm wrong. Learner, I just look down and saw your couch DB and Redis is that on relational as well
It can dance around in, just like, kind of right on the line of like, it's something. Most people use it as a relational database that I know. And we'll be pitchfork wielding commenters to tell me I'm wrong. Learner, I just look down and saw your couch DB and Redis is that on relational as well I think they are. Because it has Redis. And I think Redis is relational. Unstructured. OK, cool. Thank you. I'm glad I asked. Like, there we go. So that couch. Yeah, there's so many that I feel like I haven't heard of
I think they are. Because it has Redis. And I think Redis is relational. Unstructured. OK, cool. Thank you. I'm glad I asked. Like, there we go. So that couch. Yeah, there's so many that I feel like I haven't heard of This is something I need to look up is like, how many database is not like our tons? And they all have their own special job. Like, they have a reason to exist. Like, there's a reason why. And again, anyone tell me I'm misunderstanding because I don't play too much in unstructured land
This is something I need to look up is like, how many database is not like our tons? And they all have their own special job. Like, they have a reason to exist. Like, there's a reason why. And again, anyone tell me I'm misunderstanding because I don't play too much in unstructured land But Redis is good for like data warehousing where you have just a ton of data that you don't really need to you need to look at it, but you don't need to do anything with it if that makes sense. Like, it doesn't change
But Redis is good for like data warehousing where you have just a ton of data that you don't really need to you need to look at it, but you don't need to do anything with it if that makes sense. Like, it doesn't change It just lives there where Mongo might be like your app's main database and has a lot of in and out. And that's a lot of people have explained that to me as well for, it does not help if I can't. There, we just move you down here
It just lives there where Mongo might be like your app's main database and has a lot of in and out. And that's a lot of people have explained that to me as well for, it does not help if I can't. There, we just move you down here And I'm going to put that for Redis is, yeah, a lot of people use it as their cache instead of its own standalone. Yeah. I was a Redis the one that lives like in memory. Am I? It's so. Somebody tell me. I like to hang out with. Yes, yes, yes. OK. Redis lots of times is used for cache
And I'm going to put that for Redis is, yeah, a lot of people use it as their cache instead of its own standalone. Yeah. I was a Redis the one that lives like in memory. Am I? It's so. Somebody tell me. I like to hang out with. Yes, yes, yes. OK. Redis lots of times is used for cache And I'm going to why am I like spacing down a spelled cache? Yeah, you're right. C-A-C-H-E. OK, because I'm like that's it's. Oh, you have a bonus C in there. Oh, that's why. OK, that's why. We'll just make this a C cache
And I'm going to why am I like spacing down a spelled cache? Yeah, you're right. C-A-C-H-E. OK, because I'm like that's it's. Oh, you have a bonus C in there. Oh, that's why. OK, that's why. We'll just make this a C cache Or any, there we go, cache and uses memory, which is a whole other thing that I like to hang out with our Ospo team. And like they mentioned it one time. And then I'm like, I'm lost now. OK, again, anyone who knows better than me tell me I'm completely wrong because I might be
Or any, there we go, cache and uses memory, which is a whole other thing that I like to hang out with our Ospo team. And like they mentioned it one time. And then I'm like, I'm lost now. OK, again, anyone who knows better than me tell me I'm completely wrong because I might be But I think Redis is like if you have a, like something that lives in a Lambda function or something that doesn't stay alive all the time, like a web service, Redis is what preserves your data where you might store a variable in session
But I think Redis is like if you have a, like something that lives in a Lambda function or something that doesn't stay alive all the time, like a web service, Redis is what preserves your data where you might store a variable in session If you're on a always on web server, I think Redis sort of acts like that. Oh, and Firebase. Stand in for session. But again, anybody tell me I'm wrong. We all look that up later on. But relational, we have like my sequel. We got Postgres being its own like random thing
If you're on a always on web server, I think Redis sort of acts like that. Oh, and Firebase. Stand in for session. But again, anybody tell me I'm wrong. We all look that up later on. But relational, we have like my sequel. We got Postgres being its own like random thing Any other big players? I mean, Microsoft SQL or just SQL server. You'll see it written both ways like MS SQL or SQL Server. I think Oracle still has Oracle bot my sequel. But I think there's still like an Oracle SQL database somewhere. You know what? I never said I could spell by starting this
Any other big players? I mean, Microsoft SQL or just SQL server. You'll see it written both ways like MS SQL or SQL Server. I think Oracle still has Oracle bot my sequel. But I think there's still like an Oracle SQL database somewhere. You know what? I never said I could spell by starting this So we're just going to go with that Oracle server. I will say that it's MS like Microsoft SQL on the one of Oracle. No problem. And then Maria. So yeah, Maria is like a flavor of my sequel. It didn't Maria come from. I guess there's also like a lot of drama with tech is also what I found is like
So we're just going to go with that Oracle server. I will say that it's MS like Microsoft SQL on the one of Oracle. No problem. And then Maria. So yeah, Maria is like a flavor of my sequel. It didn't Maria come from. I guess there's also like a lot of drama with tech is also what I found is like Yeah, Maria. There's a lot of drama because they like break off from me for and do something else. And Maria is like that. Yeah, much like Activision, the video game company was started by a bunch of disgruntled Atari developers. Maria DeVee was started by a bunch of disgruntled my sequel
Yeah, Maria. There's a lot of drama because they like break off from me for and do something else. And Maria is like that. Yeah, much like Activision, the video game company was started by a bunch of disgruntled Atari developers. Maria DeVee was started by a bunch of disgruntled my sequel I'm just going to put those to get like this. And they're so not like their differences. They're so superficial. It's not in my opinion in my highly opinionated database opinion, not worth learning why they're different. That's good to know. Yeah. There's DB to my gosh, there's so many different
I'm just going to put those to get like this. And they're so not like their differences. They're so superficial. It's not in my opinion in my highly opinionated database opinion, not worth learning why they're different. That's good to know. Yeah. There's DB to my gosh, there's so many different Yeah. Well, and then if you want to get wacky, Amazon has like all these things that are basically my sequel, but not. I'll just put Amazon in general. Yeah. OK. That all they're all like versions of RDS. You can spin up, which is relational database or relational data storage, something like that
Yeah. Well, and then if you want to get wacky, Amazon has like all these things that are basically my sequel, but not. I'll just put Amazon in general. Yeah. OK. That all they're all like versions of RDS. You can spin up, which is relational database or relational data storage, something like that OK. What really is important here is to know that all of these that are written up here use some version of SQL. So SQL just stands for structured query language. And Postgres is going to have its own sweet, extra cool features
OK. What really is important here is to know that all of these that are written up here use some version of SQL. So SQL just stands for structured query language. And Postgres is going to have its own sweet, extra cool features And my sequel is going to have its features that the other ones don't have. And then T SQL, which stands for transact SQL, it's got its own features and quirks, but they're all based on SQL. And if you just learn the basics of SQL, you will be able to get by
And my sequel is going to have its features that the other ones don't have. And then T SQL, which stands for transact SQL, it's got its own features and quirks, but they're all based on SQL. And if you just learn the basics of SQL, you will be able to get by And I think that goes to another question of like a lot of people have told me that like SQL as a language may not be something that anybody really needs to learn. And but like don't all relational databases use SQL, therefore we don't even want to learn it
And I think that goes to another question of like a lot of people have told me that like SQL as a language may not be something that anybody really needs to learn. And but like don't all relational databases use SQL, therefore we don't even want to learn it So there are a lot of frameworks and tools that generate SQL queries for you. OK. Or act as a stand-in for SQL. I come from a .NET development background and .NET has something called entity framework that handles. And then there's also something called link and LINQ
So there are a lot of frameworks and tools that generate SQL queries for you. OK. Or act as a stand-in for SQL. I come from a .NET development background and .NET has something called entity framework that handles. And then there's also something called link and LINQ And those are libraries that let the .NET framework talk directly to your database. And you never have to write one line of SQL. That's cool. On the node side, there's Kinex. A lot of people use that. And same thing. It generates queries. It's spelled like the toy. Oh, wow
And those are libraries that let the .NET framework talk directly to your database. And you never have to write one line of SQL. That's cool. On the node side, there's Kinex. A lot of people use that. And same thing. It generates queries. It's spelled like the toy. Oh, wow Oh, wow. I will say those are incredibly useful tools. There are some people who say never use them. And is it cool if I swear I'm here or no? Oh, yeah. I have a podcast called Shit You Don't Want to Talk About. So fuck it. Like, let's go. OK
Oh, wow. I will say those are incredibly useful tools. There are some people who say never use them. And is it cool if I swear I'm here or no? Oh, yeah. I have a podcast called Shit You Don't Want to Talk About. So fuck it. Like, let's go. OK Like, let's go. OK. But with the sum, people will say, don't ever use them and fuck you for even thinking about it. Only write SQL. And then there's, I don't agree with those people. I think you should absolutely use them when it makes sense, too, which is most of the time
Like, let's go. OK. But with the sum, people will say, don't ever use them and fuck you for even thinking about it. Only write SQL. And then there's, I don't agree with those people. I think you should absolutely use them when it makes sense, too, which is most of the time However, I also am a firm believer that you should know SQL
However, I also am a firm believer that you should know SQL Because there are going to be times when you're debugging or doing some kind of experiment in development, something in your development environment where you're going to want to directly query your database and you're going to need to write SQL. And the other thing is it's not that hard
Because there are going to be times when you're debugging or doing some kind of experiment in development, something in your development environment where you're going to want to directly query your database and you're going to need to write SQL. And the other thing is it's not that hard It's not, you're not, it's not like learning. I'm not asking you to learn like another high level programming language. It's not like, all right. You know, Python and Node, let's tackle C sharp right now, yet. Thank you. No, it's very simple and very logical
It's not, you're not, it's not like learning. I'm not asking you to learn like another high level programming language. It's not like, all right. You know, Python and Node, let's tackle C sharp right now, yet. Thank you. No, it's very simple and very logical The commands, in my opinion, I'm going to say that so much. In my opinion, there's no SQL command where you can't immediately tell what it's asking the database to do. OK. And I saw that a bit when we streamed a few weeks ago. Yeah. Oh my gosh
The commands, in my opinion, I'm going to say that so much. In my opinion, there's no SQL command where you can't immediately tell what it's asking the database to do. OK. And I saw that a bit when we streamed a few weeks ago. Yeah. Oh my gosh Yeah. Oh my gosh. I can't believe that was a few weeks ago, just because I've been traveling so much. I'm like, I streamed like yesterday. No, no, it's been weeks. Yeah. That's weird. But you said that during that. And I was like, oh, OK
Yeah. Oh my gosh. I can't believe that was a few weeks ago, just because I've been traveling so much. I'm like, I streamed like yesterday. No, no, it's been weeks. Yeah. That's weird. But you said that during that. And I was like, oh, OK And there's going to also be times where it either doesn't make sense or you're working in a language or framework that doesn't support one of those query generators
And there's going to also be times where it either doesn't make sense or you're working in a language or framework that doesn't support one of those query generators And at that point, you're either writing your own from scratch, which is usually unnecessary, or you're just going to write SQL directly. So I am an advocate for using querying tools. I'm a huge advocate for leveraging frameworks that make it easier to interact with your database
And at that point, you're either writing your own from scratch, which is usually unnecessary, or you're just going to write SQL directly. So I am an advocate for using querying tools. I'm a huge advocate for leveraging frameworks that make it easier to interact with your database But I also believe that anyone who wants to call themselves a full stack developer should know SQL. Good to know. Good to know. All right. No SQL, I mean be able to look at the references on W3 schools and know, oh, yeah, that's how I do that. Yeah
But I also believe that anyone who wants to call themselves a full stack developer should know SQL. Good to know. Good to know. All right. No SQL, I mean be able to look at the references on W3 schools and know, oh, yeah, that's how I do that. Yeah Yeah. I don't think you have to have it committed to memory and be able to write a perfect SQL query without looking anything up. But you should damn well know what you're looking up. Yeah. And that's been a big struggle with being self-taught
Yeah. I don't think you have to have it committed to memory and be able to write a perfect SQL query without looking anything up. But you should damn well know what you're looking up. Yeah. And that's been a big struggle with being self-taught And I hear this from other self-taught people is that you don't always know what to look at. Yeah. So it's like, I know I need a look of something, but I don't know the terminology or what I need to look at. Yeah. So, and then really quick, just to get, I do, there we go
And I hear this from other self-taught people is that you don't always know what to look at. Yeah. So it's like, I know I need a look of something, but I don't know the terminology or what I need to look at. Yeah. So, and then really quick, just to get, I do, there we go To, I want to get this see if I remember what it is because it's JavaScript object something. Notation. OK. Not script object notation. And I will ask more about that later. OK. Yeah. I just wanted to remember what it was
To, I want to get this see if I remember what it is because it's JavaScript object something. Notation. OK. Not script object notation. And I will ask more about that later. OK. Yeah. I just wanted to remember what it was And then anything else you think we should know about, like comparing the two. Probably not on this level. I think now we're ready to get into what makes my SQL and Postgres different, which I know you wanted to talk about. I'm just putting that so I remember that they can do so many, so many. OK
And then anything else you think we should know about, like comparing the two. Probably not on this level. I think now we're ready to get into what makes my SQL and Postgres different, which I know you wanted to talk about. I'm just putting that so I remember that they can do so many, so many. OK OK. Here. Can I, do you mind if I drive for a moment? Yeah. I think you'll have to reshare your screen it went away from me. No problem. But at least you don't have to get the browser to do it for you because that's why I always ask people to join beforehand
OK. Here. Can I, do you mind if I drive for a moment? Yeah. I think you'll have to reshare your screen it went away from me. No problem. But at least you don't have to get the browser to do it for you because that's why I always ask people to join beforehand If I ever have to learn from another, or like go from another browser, I'm like, oh, goodness. But I didn't realize I had to share it. Thanks, Apple, for making my life hard. I'm sticking this link in our internal chat that you can share with the. Yay. Thank you. A world at large
If I ever have to learn from another, or like go from another browser, I'm like, oh, goodness. But I didn't realize I had to share it. Thanks, Apple, for making my life hard. I'm sticking this link in our internal chat that you can share with the. Yay. Thank you. A world at large A world at large. I think there's a good, well-written article that really highlights the difference between the two and doesn't come with a strong opinion about which one is better
A world at large. I think there's a good, well-written article that really highlights the difference between the two and doesn't come with a strong opinion about which one is better It really says this is the use case for one and this is the use case for the other, where a lot of these types of article will just be like, oh, Postgres is better all the time. But where I sequel and the horse it rode in on. But really, they both have their place. OK
It really says this is the use case for one and this is the use case for the other, where a lot of these types of article will just be like, oh, Postgres is better all the time. But where I sequel and the horse it rode in on. But really, they both have their place. OK OK. So the very short answer is more people know my sequel than Postgres because it's been around longer. It is potentially faster. But this article even talks about why that's not 100% of the time true
OK. So the very short answer is more people know my sequel than Postgres because it's been around longer. It is potentially faster. But this article even talks about why that's not 100% of the time true But it's worth knowing that if fractions of a second matter, which sometimes it really does in programming, my sequel can often give you an edge. But Postgres just does so many crazy cool things that my sequel didn't use to do
But it's worth knowing that if fractions of a second matter, which sometimes it really does in programming, my sequel can often give you an edge. But Postgres just does so many crazy cool things that my sequel didn't use to do And you'll notice a lot of these things in this chart, my sequel now does and didn't use to. They're both working into each other because they both, I don't want to say they see each other's a threat because they're both open source. But they definitely take the good things from each other
And you'll notice a lot of these things in this chart, my sequel now does and didn't use to. They're both working into each other because they both, I don't want to say they see each other's a threat because they're both open source. But they definitely take the good things from each other Like for a long time, you couldn't stick Jason in a my sequel database in the same way that you could a Postgres database, which now you really can. And the other thing is you can write
Like for a long time, you couldn't stick Jason in a my sequel database in the same way that you could a Postgres database, which now you really can. And the other thing is you can write And that's probably another reason why there are some people saying you don't need to learn sequel is Postgres will let you write in other languages. Let me go. So you can query in other languages. Yeah, and somewhere. And my sequel does that a little bit too
And that's probably another reason why there are some people saying you don't need to learn sequel is Postgres will let you write in other languages. Let me go. So you can query in other languages. Yeah, and somewhere. And my sequel does that a little bit too But in my opinion, everybody take a drink every time I say that and you want to try back to work. In my opinion, it's going to be quicker to just write the line of sequel to do your query than it is going to be to write your query out in one of these languages
But in my opinion, everybody take a drink every time I say that and you want to try back to work. In my opinion, it's going to be quicker to just write the line of sequel to do your query than it is going to be to write your query out in one of these languages So yeah, okay, still worth learning learning sequel in my opinion. But yeah, I recommend reading this article. We're not going to go in too much depth because it could take the whole, it could take the whole session
So yeah, okay, still worth learning learning sequel in my opinion. But yeah, I recommend reading this article. We're not going to go in too much depth because it could take the whole, it could take the whole session But the big thousand yard view is my sequel is older and so more people are familiar with it and have worked with it more. But Postgres is old enough now that's not necessarily true. But also like, doesn't and this word press is mostly on my sequel entirely built on my sequel. Yes. Yeah
But the big thousand yard view is my sequel is older and so more people are familiar with it and have worked with it more. But Postgres is old enough now that's not necessarily true. But also like, doesn't and this word press is mostly on my sequel entirely built on my sequel. Yes. Yeah Yes. Yeah. So and WordPress being so large as something that's considered easier than like a fresh website. And great. That's great example of why it's a real good idea
Yes. Yeah. So and WordPress being so large as something that's considered easier than like a fresh website. And great. That's great example of why it's a real good idea Even if you normally use query generators or those kind of tools, really great example of why it's important to know sequel is say you're working with a client who has their marketing website out on WordPress
Even if you normally use query generators or those kind of tools, really great example of why it's important to know sequel is say you're working with a client who has their marketing website out on WordPress And especially if you work in services, if you work at some kind of agency, if you do one technical, it's been my experience. I love to qualify everything
And especially if you work in services, if you work at some kind of agency, if you do one technical, it's been my experience. I love to qualify everything It's been my experience that if you do a technical project for someone who does not have their own IT department, you become their IT department. Yes. Yes. Yes. And so you built this really cool web app that uses, uses Postgres and does all this cool snazzy stuff for them
It's been my experience that if you do a technical project for someone who does not have their own IT department, you become their IT department. Yes. Yes. Yes. And so you built this really cool web app that uses, uses Postgres and does all this cool snazzy stuff for them And suddenly their marketing websites broken and they don't know who to turn to. They're going to come to you. So now it would be really handy to know enough sequel to go into their WordPress database and disable whatever plug. And made it so you can't get into the WordPress back end
And suddenly their marketing websites broken and they don't know who to turn to. They're going to come to you. So now it would be really handy to know enough sequel to go into their WordPress database and disable whatever plug. And made it so you can't get into the WordPress back end Cause nine times out of 10, that's what it is is some fucked up plug in. Yep. And just knowing how to write the sequel query that lets you disable that plug in. And it's crazy. And this is a big reason why I appreciate like so many guests coming on the show to learn these things
Cause nine times out of 10, that's what it is is some fucked up plug in. Yep. And just knowing how to write the sequel query that lets you disable that plug in. And it's crazy. And this is a big reason why I appreciate like so many guests coming on the show to learn these things Cause the example you just gave me, I used to have to do when I worked at GoDaddy all like time, like people would call in something broke, even on managed WordPress or if they had it on like their own server because they wouldn't know how to get into my sequel to or the admin sequel admin. Yeah
Cause the example you just gave me, I used to have to do when I worked at GoDaddy all like time, like people would call in something broke, even on managed WordPress or if they had it on like their own server because they wouldn't know how to get into my sequel to or the admin sequel admin. Yeah Yeah. My admin. Thank you. I'm like, I don't remember what it's called, but we would have to go through and be able to do that. That it was really, really helpful being able to learn how to compare them. And y'all just because this is such a was a really, really good example of it
Yeah. My admin. Thank you. I'm like, I don't remember what it's called, but we would have to go through and be able to do that. That it was really, really helpful being able to learn how to compare them. And y'all just because this is such a was a really, really good example of it I had Roy on the show. And we talked through the differences because I was having a really hard time understanding all of the different like, Versailles versus like shared hosting. Yes. And this video goes through this. So I definitely really appreciate that
I had Roy on the show. And we talked through the differences because I was having a really hard time understanding all of the different like, Versailles versus like shared hosting. Yes. And this video goes through this. So I definitely really appreciate that And yes, please continue because I was like, Oh, yeah, I have done that. I forgot. Yeah. See, yeah, that's my, my example of why it's, it's worth your time to learn, to learn sequel, even even if you can spend the entire rest of your career using query generators. That's awesome. That is awesome
And yes, please continue because I was like, Oh, yeah, I have done that. I forgot. Yeah. See, yeah, that's my, my example of why it's, it's worth your time to learn, to learn sequel, even even if you can spend the entire rest of your career using query generators. That's awesome. That is awesome That is awesome. Thank you. Thank you. Yeah. No problem. All right. So we talked about why Postgres and my sequel are different. We talked about relational versus non relational databases. Now let's talk about code first versus database first. And sometimes you don't get a choice. Okay. Good. No
That is awesome. Thank you. Thank you. Yeah. No problem. All right. So we talked about why Postgres and my sequel are different. We talked about relational versus non relational databases. Now let's talk about code first versus database first. And sometimes you don't get a choice. Okay. Good. No Okay. Good. No. When you're making a database. Oh, yeah, that's right. That's awesome. But you know, it's still use a sequel. Still, still, well done. Sequel at the end of the day. So we will learn some, some basic sequel before the day is over
Okay. Good. No. When you're making a database. Oh, yeah, that's right. That's awesome. But you know, it's still use a sequel. Still, still, well done. Sequel at the end of the day. So we will learn some, some basic sequel before the day is over But when you're creating a database, everything in a relational database, let me make that super clear. We're talking entirely about relational databases right now. Everything in a relational database is stored in tables, which well relate to one another
But when you're creating a database, everything in a relational database, let me make that super clear. We're talking entirely about relational databases right now. Everything in a relational database is stored in tables, which well relate to one another And we'll go over what that looks like and why and how later. But you can either come up with all of your entities, as they're called, or your tables, your things you're storing in the database and how they relate to each other. And you create them. That's a great way to put it
And we'll go over what that looks like and why and how later. But you can either come up with all of your entities, as they're called, or your tables, your things you're storing in the database and how they relate to each other. And you create them. That's a great way to put it They do kind of look like a bunch of Excel spreadsheets that reference each other. But you map out all these things and define them. And then you have to go into the database, create the tables, define each of the columns, et cetera
They do kind of look like a bunch of Excel spreadsheets that reference each other. But you map out all these things and define them. And then you have to go into the database, create the tables, define each of the columns, et cetera And if you don't have, if you're not working with the framework that supports a code first database, that's just how you have to do it. Code first database. Is where you go and you write out your classes, your either your JavaScript classes or your C sharp classes
And if you don't have, if you're not working with the framework that supports a code first database, that's just how you have to do it. Code first database. Is where you go and you write out your classes, your either your JavaScript classes or your C sharp classes I believe Java also has some version of this. The one thing I actually like about Django is the way it handles code first databases
I believe Java also has some version of this. The one thing I actually like about Django is the way it handles code first databases So you write out your Python classes, whatever, whatever object-oriented languages, you write out these classes, and then you run some kind of command that generates a database based on those classes. And it puts the schema together for you
So you write out your Python classes, whatever, whatever object-oriented languages, you write out these classes, and then you run some kind of command that generates a database based on those classes. And it puts the schema together for you You don't have to, now I like to go and look and make sure it didn't do anything stupid because none of them were perfect. But a lot of the time they work great. Really quick. I had a question. What was my question? Damn, I forgot the question. Well, you know, if I think of it, we'll go back to it
You don't have to, now I like to go and look and make sure it didn't do anything stupid because none of them were perfect. But a lot of the time they work great. Really quick. I had a question. What was my question? Damn, I forgot the question. Well, you know, if I think of it, we'll go back to it And if, if given a choice, I prefer doing code first. Yeah, someone learner 0 418 is talking about O RM, which is, I believe, object relational mapping software or library. The node of one that I know of is called SQLize. And you use that on code first
And if, if given a choice, I prefer doing code first. Yeah, someone learner 0 418 is talking about O RM, which is, I believe, object relational mapping software or library. The node of one that I know of is called SQLize. And you use that on code first Yeah, to generate, to generate and update your database
Yeah, to generate, to generate and update your database That's the other really nice thing about using an O RM is if you have to change something, if you have to change the properties and an object, because you just thought it was going to do something different when you first planned all that out. It's easier to say, hey, go update my database for me
That's the other really nice thing about using an O RM is if you have to change something, if you have to change the properties and an object, because you just thought it was going to do something different when you first planned all that out. It's easier to say, hey, go update my database for me Because otherwise you got to change your object. Then you got to manually go into your database and say, all right, I had to change my database so that it doesn't get pissed off that my object is different when I go to make my query
Because otherwise you got to change your object. Then you got to manually go into your database and say, all right, I had to change my database so that it doesn't get pissed off that my object is different when I go to make my query So I've been working on actually doing this and it's really funny because in case and NAMI mentioned, you want to learn Prisma for this
So I've been working on actually doing this and it's really funny because in case and NAMI mentioned, you want to learn Prisma for this Well, I've been setting that up with, I got challenged, I got challenged like in this group that I run, run it with, I feel like such a cool kid, aka just like my discord server friends that if I can create the T3 app, I'm more of my questions
Well, I've been setting that up with, I got challenged, I got challenged like in this group that I run, run it with, I feel like such a cool kid, aka just like my discord server friends that if I can create the T3 app, I'm more of my questions And I'm laughing because it has you connected database and then push it and have it do code first, which I didn't realize that's what you were doing. It was code first because you do with Prisma once it's connected. It does npx Prisma DB push and it creates it for you and it updates it for you
And I'm laughing because it has you connected database and then push it and have it do code first, which I didn't realize that's what you were doing. It was code first because you do with Prisma once it's connected. It does npx Prisma DB push and it creates it for you and it updates it for you I got stuck on a different error, but it's interesting because I wouldn't have realized that that was what I was doing. Yeah. So that being said, if I just to see if it's connecting dots or not, let me stop this one and reshare for my entire screen window, not that one entire screen, this one
I got stuck on a different error, but it's interesting because I wouldn't have realized that that was what I was doing. Yeah. So that being said, if I just to see if it's connecting dots or not, let me stop this one and reshare for my entire screen window, not that one entire screen, this one I had to scroll up on my thing, this is it in case anybody is curious about it. I'm only like halfway through it. But if I'm over here, excuse you, excuse you, if I made all of these first in the database, that would be database first because I'm like, I want all of these things
I had to scroll up on my thing, this is it in case anybody is curious about it. I'm only like halfway through it. But if I'm over here, excuse you, excuse you, if I made all of these first in the database, that would be database first because I'm like, I want all of these things That being said, would that be the database, the schema or the table? So the schema is what defines the, what the tables are and what they look like inside of the database. So each of those things that are in your diagram there would probably be a table. Okay
That being said, would that be the database, the schema or the table? So the schema is what defines the, what the tables are and what they look like inside of the database. So each of those things that are in your diagram there would probably be a table. Okay Okay. And the schema would define what columns are in that table and how the tables relate to one another. And then eventually you can get into things like stored procedures and indexing and stuff, all the, all the DBA shit that makes them go faster and be more efficient
Okay. And the schema would define what columns are in that table and how the tables relate to one another. And then eventually you can get into things like stored procedures and indexing and stuff, all the, all the DBA shit that makes them go faster and be more efficient But I would argue are not as important as learning the fundamentals so we're not going to cover them here. But yes, that is. So once one schema can have multiple tables. Yes, shit loads of tables. It's many tables as you need. Can one database have more than one schema? Yes, but it's not common
But I would argue are not as important as learning the fundamentals so we're not going to cover them here. But yes, that is. So once one schema can have multiple tables. Yes, shit loads of tables. It's many tables as you need. Can one database have more than one schema? Yes, but it's not common Almost always it's going to be one schema per database. To the point of I can't, even though I've heard of it, I've never even seen it out in the wild. I just know that for example Postgres will absolutely do it
Almost always it's going to be one schema per database. To the point of I can't, even though I've heard of it, I've never even seen it out in the wild. I just know that for example Postgres will absolutely do it I'm not even sure my sequel will allow a Postgres definitely will, but I cannot think of a use case for it
I'm not even sure my sequel will allow a Postgres definitely will, but I cannot think of a use case for it I would say if you need two schemas, you probably need two databases, unless somehow in some, some wacky world, you have the exact same data, but you need two distinct ways to model it or map it. And I just can't, if anyone comes up with an interesting reason why you would do that. Let me know
I would say if you need two schemas, you probably need two databases, unless somehow in some, some wacky world, you have the exact same data, but you need two distinct ways to model it or map it. And I just can't, if anyone comes up with an interesting reason why you would do that. Let me know Let me know. I know I'm switching a little bit over here. So please bear with me. Do because these are it. So if I have teach Gentech as one table and then like shit, you don't want to talk about as another table
Let me know. I know I'm switching a little bit over here. So please bear with me. Do because these are it. So if I have teach Gentech as one table and then like shit, you don't want to talk about as another table Do I need to define the same things? Can I say like this is a string? This is whatever. Like having. So here's where the relation part of a relational database gets awesome. So both of your, both of your things have a YouTube embed, right? Right here
Do I need to define the same things? Can I say like this is a string? This is whatever. Like having. So here's where the relation part of a relational database gets awesome. So both of your, both of your things have a YouTube embed, right? Right here Let me see if I can put these by each other a little better. Okay. And we're probably going to want to hop over to our shared whiteboard soon after this. Because this is where we start getting into database design. This is where the fight starts. Okay
Let me see if I can put these by each other a little better. Okay. And we're probably going to want to hop over to our shared whiteboard soon after this. Because this is where we start getting into database design. This is where the fight starts. Okay Okay. So you have, shit, you don't want to talk about and you have teach Gentech, but they both have a YouTube embed. Right. And there's probably not any reason for them to be different
Okay. So you have, shit, you don't want to talk about and you have teach Gentech, but they both have a YouTube embed. Right. And there's probably not any reason for them to be different A YouTube embeds, a YouTube embed, it has a link, it has a thing, but you're probably only having one YouTube embed per show. I don't know why this episode of Teach Gentech would end up on shit. You don't want to talk about unless this conversation gets weird
A YouTube embeds, a YouTube embed, it has a link, it has a thing, but you're probably only having one YouTube embed per show. I don't know why this episode of Teach Gentech would end up on shit. You don't want to talk about unless this conversation gets weird But that is a great way of saying that. Thank you. So what you would do is you'd have one tube embed table and then you would have some way to relate that YouTube embed to the other show
But that is a great way of saying that. Thank you. So what you would do is you'd have one tube embed table and then you would have some way to relate that YouTube embed to the other show Now, you could either have just one column that's like show ID that is either teach Gentech or shit, you don't want to talk about. And that's one way to do it
Now, you could either have just one column that's like show ID that is either teach Gentech or shit, you don't want to talk about. And that's one way to do it And that's called a one to many mapping where one show teach Gentech has many YouTube embeds or shit, you don't want to talk about has many YouTube embeds. But let's say this, this episode of Teach Gentech does get really deep
And that's called a one to many mapping where one show teach Gentech has many YouTube embeds or shit, you don't want to talk about has many YouTube embeds. But let's say this, this episode of Teach Gentech does get really deep We suddenly start talking about, I don't know, I don't even want to try to go up to the topic. But something really deep and we leave database world for a minute to work through that. And now suddenly we have a YouTube embed that we really do want in both places
We suddenly start talking about, I don't know, I don't even want to try to go up to the topic. But something really deep and we leave database world for a minute to work through that. And now suddenly we have a YouTube embed that we really do want in both places So now we need a way to map it to where it could be associated with both. And that is where you have a many to many relationship where many YouTube embeds could belong to many shows. And that's that's done through a special kind of table that will, we'll, we'll go through only start
So now we need a way to map it to where it could be associated with both. And that is where you have a many to many relationship where many YouTube embeds could belong to many shows. And that's that's done through a special kind of table that will, we'll, we'll go through only start Okay, I'm, I'm excited for the designing. Clearly, because I'm like, this is where I'm also really stuck on. Okay, this needs roll out here
Okay, I'm, I'm excited for the designing. Clearly, because I'm like, this is where I'm also really stuck on. Okay, this needs roll out here The other thing is, it doesn't matter if you go and code first or database first, making a, I mean, there are some people that say a data, database diagram is a very specific thing. And if you're not drawing it a certain way, it's not a legitimate database diagram. I don't agree with that
The other thing is, it doesn't matter if you go and code first or database first, making a, I mean, there are some people that say a data, database diagram is a very specific thing. And if you're not drawing it a certain way, it's not a legitimate database diagram. I don't agree with that If it's, if the thing you write down is what makes it so you can create the database correctly, it's a fucking database diagram. Okay. I'm really excited about this yet kind of nervous because I'm like, it still doesn't click yet, but this is why I have the show because I got to learn this stuff
If it's, if the thing you write down is what makes it so you can create the database correctly, it's a fucking database diagram. Okay. I'm really excited about this yet kind of nervous because I'm like, it still doesn't click yet, but this is why I have the show because I got to learn this stuff I'm stuck and I'm stuck and I'm like, and this is like just for all learners out there and literally learn it because you're here. I like that you have that as your username
I'm stuck and I'm stuck and I'm like, and this is like just for all learners out there and literally learn it because you're here. I like that you have that as your username Is that we all learn very differently and a lot of learning is finding out about our topic and learning about a topic multiple ways, probably multiple mediums and possibly multiple people
Is that we all learn very differently and a lot of learning is finding out about our topic and learning about a topic multiple ways, probably multiple mediums and possibly multiple people Say all of that, say, I've had repeat customers repeat guests on the show and I'm then like six months down the road. I'm like, oh, it finally clicks. I wish they did that more often. We're getting there. We are getting there. Okay. So do you want to. Yes. One of the comments
Say all of that, say, I've had repeat customers repeat guests on the show and I'm then like six months down the road. I'm like, oh, it finally clicks. I wish they did that more often. We're getting there. We are getting there. Okay. So do you want to. Yes. One of the comments Forgive me for butchering your screen name. Not me. Curro. Wouldn't code first also help with keeping track of database changes over time. Probably. If you're, if you're migration history supports that. I know that the code first tools associated with entity framework in
Forgive me for butchering your screen name. Not me. Curro. Wouldn't code first also help with keeping track of database changes over time. Probably. If you're, if you're migration history supports that. I know that the code first tools associated with entity framework innet certainly do a pretty good job of it. I just don't have enough experience with things like. SQLizer Prisma to say what they do. And yeah, you. Someone commented storing logs is really good. A really good practice. Again, at least in entity framework and it. Keeps kind of keeps track for you
net certainly do a pretty good job of it. I just don't have enough experience with things like. SQLizer Prisma to say what they do. And yeah, you. Someone commented storing logs is really good. A really good practice. Again, at least in entity framework and it. Keeps kind of keeps track for you If you, if you look it, go back and look at your code. And part of that is because you can always roll back migrations. A migration being just a change pushed out to the database. I'm slowly typing. I'm not very fast type of. Prisma is. I've been talking to Prisma. They've been on the show before
If you, if you look it, go back and look at your code. And part of that is because you can always roll back migrations. A migration being just a change pushed out to the database. I'm slowly typing. I'm not very fast type of. Prisma is. I've been talking to Prisma. They've been on the show before But it was when I was actually interviewing with Ivan and. I don't know what I was doing. I'm even more so than now. Let me look for that at the so really quick. Just so that way. You have it. But then also. I'm talking to them about coming back on the show. Because it is something that
But it was when I was actually interviewing with Ivan and. I don't know what I was doing. I'm even more so than now. Let me look for that at the so really quick. Just so that way. You have it. But then also. I'm talking to them about coming back on the show. Because it is something that I feel it is a bit different conversation now. Yeah. I'm excited because I. In comparison compared to the. You know, decade I've been working with.net. Note is still comparatively new to me. And so I'm very interested in learning what kind of tools are out there in that ecosystem
I feel it is a bit different conversation now. Yeah. I'm excited because I. In comparison compared to the. You know, decade I've been working with.net. Note is still comparatively new to me. And so I'm very interested in learning what kind of tools are out there in that ecosystem And so I'm really interested in. Okay. Here is the print. That we had. It's like six month old. It does have to do with some. I've any things because it was when I was interviewing here. But it we actually dealt with a sequel light. Yeah. So it's definitely something that
And so I'm really interested in. Okay. Here is the print. That we had. It's like six month old. It does have to do with some. I've any things because it was when I was interviewing here. But it we actually dealt with a sequel light. Yeah. So it's definitely something that I'm really excited about the set list. We're very excited about it. I'm going to take a look at the time codes for chapters. Dude, I don't know what all Give you. But I will give you Like a huge shout out. I'll send you a hat or something. I don't own hats. But you know how? I want to make hats me
I'm really excited about the set list. We're very excited about it. I'm going to take a look at the time codes for chapters. Dude, I don't know what all Give you. But I will give you Like a huge shout out. I'll send you a hat or something. I don't own hats. But you know how? I want to make hats me I should I should. Because it's like. Hello. Dev has yet to be on the show and I'm very excited
I should I should. Because it's like. Hello. Dev has yet to be on the show and I'm very excited I don't know what we're talking about yet, but yeah, I'm gonna put some stuff together, but the, so just as a side note, we talked about this a while ago, but I am setting up like my stuff within the OSRG Guild, which is the open source rate guild and many of you know Jacob, who has been on the show and is also looking to come back on the show, so that'll be cool
I don't know what we're talking about yet, but yeah, I'm gonna put some stuff together, but the, so just as a side note, we talked about this a while ago, but I am setting up like my stuff within the OSRG Guild, which is the open source rate guild and many of you know Jacob, who has been on the show and is also looking to come back on the show, so that'll be cool Is he now has a store for all of his swag. And I'm trying to look for it really quick because this is like my third time losing it. How do I keep losing the store? Like the link, I just, a magic is what I've decided. Magic I'm losing shit. But anyway, I will share it later
Is he now has a store for all of his swag. And I'm trying to look for it really quick because this is like my third time losing it. How do I keep losing the store? Like the link, I just, a magic is what I've decided. Magic I'm losing shit. But anyway, I will share it later That one already has a store and has swag, so that's a start and then maybe one day he'll let me like put teaching and text stuff with it, so it's like they're together and that would be cute. Anyway, yes. Prisma, go check it out
That one already has a store and has swag, so that's a start and then maybe one day he'll let me like put teaching and text stuff with it, so it's like they're together and that would be cute. Anyway, yes. Prisma, go check it out Dev, do you wanna be on the show for clerk? Wait, that could be cool. Unless I'm like just forgetting where Dev decided to just started working, and that could be really funny
Dev, do you wanna be on the show for clerk? Wait, that could be cool. Unless I'm like just forgetting where Dev decided to just started working, and that could be really funny Yeah, wait, I just went to your, is it your birthday today because I feel like I just got balloons on your, Dev, is it your birthday? I'm gonna very, very awkwardly. Yay, I'm gonna awkwardly sing you happy birthday really quick. Happy birthday to you. Happy birthday to you
Yeah, wait, I just went to your, is it your birthday today because I feel like I just got balloons on your, Dev, is it your birthday? I'm gonna very, very awkwardly. Yay, I'm gonna awkwardly sing you happy birthday really quick. Happy birthday to you. Happy birthday to you Happy birthday, dear Dev. Happy birthday to you. Yay, and many more on channel four, because I don't know why that's a thing. Cause it rhymes. You were more than welcome to Clipit. But yes, yes. Oh, that is so cool. Having anniversary
Happy birthday, dear Dev. Happy birthday to you. Yay, and many more on channel four, because I don't know why that's a thing. Cause it rhymes. You were more than welcome to Clipit. But yes, yes. Oh, that is so cool. Having anniversary Having anniversary. Okay, Chris, because I now get to be friends with your wife too. How long have you guys been together? I'm curious. So we started dating in 2005. We got married in 2010. So we've been married for 13 years. And together for almost 20. Yeah
Having anniversary. Okay, Chris, because I now get to be friends with your wife too. How long have you guys been together? I'm curious. So we started dating in 2005. We got married in 2010. So we've been married for 13 years. And together for almost 20. Yeah Yeah. I'm like, if I'm mapping right, right? Yeah, yeah. Okay. Am I mapping right now? Yay. Congratulations. And for those who don't know, because I just have fun. On the OSRG Guild, his wife has joined us to play the expanse
Yeah. I'm like, if I'm mapping right, right? Yeah, yeah. Okay. Am I mapping right now? Yay. Congratulations. And for those who don't know, because I just have fun. On the OSRG Guild, his wife has joined us to play the expanse And it took me like, okay, it took Roy three hours on a call to teach me, it helped me work through my character development. But these are all things for another time. I'm really great at Debrailine. Sorry, Chris. That's all right. All right, on that note
And it took me like, okay, it took Roy three hours on a call to teach me, it helped me work through my character development. But these are all things for another time. I'm really great at Debrailine. Sorry, Chris. That's all right. All right, on that note The new channel is teach gen gaming principles. I mean, we just had a burn out of character really quick. Here's how to I mean, trying to create a character like I can't, I don't know if I should share all of it like Roy might get mad, but it ended up being three pages of a character background
The new channel is teach gen gaming principles. I mean, we just had a burn out of character really quick. Here's how to I mean, trying to create a character like I can't, I don't know if I should share all of it like Roy might get mad, but it ended up being three pages of a character background Like this brings me back to school. Three pages, no spacing, like single space is not even double spaced. And I was like, this isn't freaking novel. But I really get experience all learning. Okay. We are a role assist. That's true. That's true. Because I'm just, we're just going to run down
Like this brings me back to school. Three pages, no spacing, like single space is not even double spaced. And I was like, this isn't freaking novel. But I really get experience all learning. Okay. We are a role assist. That's true. That's true. Because I'm just, we're just going to run down We're going to chase this squirrel for a minute. And once we once we've caught it, we'll come back to databases. I was going to say, because doesn't your wife do this? Yeah. So she works for a company called pinnacle that makes a system called Savage Worlds
We're going to chase this squirrel for a minute. And once we once we've caught it, we'll come back to databases. I was going to say, because doesn't your wife do this? Yeah. So she works for a company called pinnacle that makes a system called Savage Worlds And their whole thing is called their tagline is fast, furious fun. And if it takes you more than a half hour to build your Savage Worlds character, you thought way too damn hard about it. It's that is crazy
And their whole thing is called their tagline is fast, furious fun. And if it takes you more than a half hour to build your Savage Worlds character, you thought way too damn hard about it. It's that is crazy It's that is crazy. I've, I've, I've had someone, I've been running a Savage Worlds game at a convention had someone walk up to my table and say, hey, do you mind if I make my own character? And you know, in a convention, you only have a limited amount of time to run your game
It's that is crazy. I've, I've, I've had someone, I've been running a Savage Worlds game at a convention had someone walk up to my table and say, hey, do you mind if I make my own character? And you know, in a convention, you only have a limited amount of time to run your game So with most systems like, sorry, man, you either use one of my pre-gents or bring one. You already probably don't have time for that Savage roles. I'm like, yeah, go nuts. Here's the book
So with most systems like, sorry, man, you either use one of my pre-gents or bring one. You already probably don't have time for that Savage roles. I'm like, yeah, go nuts. Here's the book Here's the book. By the time we're done saying hi, as everyone gets their drinks topped off, you'll have a character cranked out. That is crazy. That is completely crazy to me. Okay. Oh, that's where. Okay. Sorry. I am setting up. I got Accela draw on on here
Here's the book. By the time we're done saying hi, as everyone gets their drinks topped off, you'll have a character cranked out. That is crazy. That is completely crazy to me. Okay. Oh, that's where. Okay. Sorry. I am setting up. I got Accela draw on on here I just as I'm so excited for Sarah joining a, it's also someone that really knows the expanse. And for anybody that's wondering, I'm still having finished watching it
I just as I'm so excited for Sarah joining a, it's also someone that really knows the expanse. And for anybody that's wondering, I'm still having finished watching it And I'm not going to start listening to the books until I finish watching it because the guys have been like, if you do that, you're going to get kind of confused. So don't do that. But it is a really cool show and book series
And I'm not going to start listening to the books until I finish watching it because the guys have been like, if you do that, you're going to get kind of confused. So don't do that. But it is a really cool show and book series And let me see if I can find this in the amount of time it takes you to talk about the expanse. But for Comic Con one year, Sarah had us all dresses, expanse characters. And I'm trying to find the picture to share it really quickly. It's Jacob. Hi, Jacob
And let me see if I can find this in the amount of time it takes you to talk about the expanse. But for Comic Con one year, Sarah had us all dresses, expanse characters. And I'm trying to find the picture to share it really quickly. It's Jacob. Hi, Jacob Hi, Jacob. And then we can go back to talking about databases. We will get there. I mean, at least Jacob is also part of the expanse crew. This is Sarah's wife, Sarah's husband, the other half of the crew. Yeah, we're going to get to database talk. We got one more thing to show promise
Hi, Jacob. And then we can go back to talking about databases. We will get there. I mean, at least Jacob is also part of the expanse crew. This is Sarah's wife, Sarah's husband, the other half of the crew. Yeah, we're going to get to database talk. We got one more thing to show promise Dev, we had to take a break to see new happy birthday as well. And well, here, while you do that, I will show everyone and catch them up and see what corrections we need. Because Dev and Jacob just joined. So, do do do do do do do do do do do. Okay
Dev, we had to take a break to see new happy birthday as well. And well, here, while you do that, I will show everyone and catch them up and see what corrections we need. Because Dev and Jacob just joined. So, do do do do do do do do do do do. Okay Okay. So we started talking about relational databases versus like unstructured so SQL versus no SQL and Postgres is kind of like its own weird thing where it's mostly relational, but it can do a lot of crazy stuff. Maria DB came from my sequel because of some cool drama
Okay. So we started talking about relational databases versus like unstructured so SQL versus no SQL and Postgres is kind of like its own weird thing where it's mostly relational, but it can do a lot of crazy stuff. Maria DB came from my sequel because of some cool drama And then Redis does a lot, a lot of times it's actually used for caching, not necessarily as its own thing. And I don't remember where Kafka goes. So that's cool
And then Redis does a lot, a lot of times it's actually used for caching, not necessarily as its own thing. And I don't remember where Kafka goes. So that's cool So that's cool. And then there's no need to necessarily learn SQL because like, you know, there's so many tools out there that can do it for you, but to know at least understand it enough to make your own commands. So you know what to Google is the one of the best things to do
So that's cool. And then there's no need to necessarily learn SQL because like, you know, there's so many tools out there that can do it for you, but to know at least understand it enough to make your own commands. So you know what to Google is the one of the best things to do And then we were comparing Postgres and SQL, which there's a link I sent out later. I will send it out later on. And it is comparing the two. And then I also need to put Roy's video as a bookmark because we talked about word press and it's good reference
And then we were comparing Postgres and SQL, which there's a link I sent out later. I will send it out later on. And it is comparing the two. And then I also need to put Roy's video as a bookmark because we talked about word press and it's good reference Well, no, we talked about database versus a database first versus code first. And for Dev and Jacob, who weren't here earlier, I was talking about the T3 app because in part of it, you have to push Prisma to push and create the tables within the database
Well, no, we talked about database versus a database first versus code first. And for Dev and Jacob, who weren't here earlier, I was talking about the T3 app because in part of it, you have to push Prisma to push and create the tables within the database And then we started talking about schemas and stuff. And I'm getting lost on database design. And we are almost there. When we went happy birthday, Dev and a bit of gaming stuff. All right, here we go. I'll show that picture and then we'll get back to databases. Okay
And then we started talking about schemas and stuff. And I'm getting lost on database design. And we are almost there. When we went happy birthday, Dev and a bit of gaming stuff. All right, here we go. I'll show that picture and then we'll get back to databases. Okay Okay. Share your screen one more time and I got you. And Dev, we got it. We can't go with manga. We got to start going with Ivan stuff. There we go. Oh, that's so fun. Connicon pictures and she's in her Belter costume and I'm in my MCR and costume. That is awesome. That is awesome
Okay. Share your screen one more time and I got you. And Dev, we got it. We can't go with manga. We got to start going with Ivan stuff. There we go. Oh, that's so fun. Connicon pictures and she's in her Belter costume and I'm in my MCR and costume. That is awesome. That is awesome That is awesome. Thank you for that. Yeah. Actually, a lot of people that I work with came from Mungo. So, you know, I got to learn them though. I got to learn them no matter what I have to learn about all the databases, no matter where I work, I need to understand databases
That is awesome. Thank you for that. Yeah. Actually, a lot of people that I work with came from Mungo. So, you know, I got to learn them though. I got to learn them no matter what I have to learn about all the databases, no matter where I work, I need to understand databases So that brings us to the super fun, Excel, a draw board where we are talking about design. I think we're on to design. Yeah. All right. So we have design. Here we go. So the other thing you're going to want to have open, not necessarily
So that brings us to the super fun, Excel, a draw board where we are talking about design. I think we're on to design. Yeah. All right. So we have design. Here we go. So the other thing you're going to want to have open, not necessarily You can put it on the other monitor or whatever is your diagram that you had of your. My funny diagram. Give me a second. No problem. That's the one. If we do this, we can do this. And then we can do this. All right. And well, maybe I don't know if I'll need that stuff, but. All right
You can put it on the other monitor or whatever is your diagram that you had of your. My funny diagram. Give me a second. No problem. That's the one. If we do this, we can do this. And then we can do this. All right. And well, maybe I don't know if I'll need that stuff, but. All right All right. Really quick just for those who have just joined. I feel like Jacob knows about a lot of this stuff because Jacob got stuck helping me with this website. This, this one, this one, it was such a pretty website that I killed because
All right. Really quick just for those who have just joined. I feel like Jacob knows about a lot of this stuff because Jacob got stuck helping me with this website. This, this one, this one, it was such a pretty website that I killed because I'm no longer looking for work and I need to update my website anyway. But it was a lot of really hard work. Thanks, Astro. I do appreciate you. I built a lot of JSON things. And this is my new website. And I want to be able to say, hey, everyone, go to my website
I'm no longer looking for work and I need to update my website anyway. But it was a lot of really hard work. Thanks, Astro. I do appreciate you. I built a lot of JSON things. And this is my new website. And I want to be able to say, hey, everyone, go to my website So that way people are here for the podcast, start looking at teach Gen Tech stuff and teach Gen Tech stuff. We'll look at the podcast stuff and it'll be fun. And I can make them all the same processes because right now everything's frozen and I don't do anything with podcast
So that way people are here for the podcast, start looking at teach Gen Tech stuff and teach Gen Tech stuff. We'll look at the podcast stuff and it'll be fun. And I can make them all the same processes because right now everything's frozen and I don't do anything with podcast That leads us to this page, which I should probably change the order of the, oh, yeah, they're the same order. Yay. Of the teach Gen Tech. I want these five things in every single one of them. Of YouTube embed episode description, guest contact, associated links and transcript
That leads us to this page, which I should probably change the order of the, oh, yeah, they're the same order. Yay. Of the teach Gen Tech. I want these five things in every single one of them. Of YouTube embed episode description, guest contact, associated links and transcript Which I just found out about whisper. So I want to see if whisper AI can like auto transcribe and put it into the database. That is a question for another time. It sounds really cool
Which I just found out about whisper. So I want to see if whisper AI can like auto transcribe and put it into the database. That is a question for another time. It sounds really cool And then the second one, there's a little bit more needed because we need the Apple podcast link and the Spotify link also in the podcast one. But they also, to me, in my head are two different shows. So this is where we're at and Excel, I draw. All right
And then the second one, there's a little bit more needed because we need the Apple podcast link and the Spotify link also in the podcast one. But they also, to me, in my head are two different shows. So this is where we're at and Excel, I draw. All right All right. So a lot of times and that probably isn't going to be the case. Here. So people don't really need to be logged in to look at these things. Right. There's no reason for them to be. So we can ignore users and permissions and all that
All right. So a lot of times and that probably isn't going to be the case. Here. So people don't really need to be logged in to look at these things. Right. There's no reason for them to be. So we can ignore users and permissions and all that That's usually where I like to start when I'm designing a database, but almost every app I've ever created has required some kind of. There's been a reason to have users and accounts and things. We don't really have that going on here. So we're just going to go with. Starting on
That's usually where I like to start when I'm designing a database, but almost every app I've ever created has required some kind of. There's been a reason to have users and accounts and things. We don't really have that going on here. So we're just going to go with. Starting on Starting on. We just need to pick a place to start. Let's start with shows. So right now you have two shows you have. I don't know why I don't have a. The average, but it shows me a D. I don't see a D on my side. That's so weird. Well, we'll just have two D's that on my. That's fine. Whatever
Starting on. We just need to pick a place to start. Let's start with shows. So right now you have two shows you have. I don't know why I don't have a. The average, but it shows me a D. I don't see a D on my side. That's so weird. Well, we'll just have two D's that on my. That's fine. Whatever Whatever. All right. So the first thing is going to be a show. So we're going to have shows because right now you have teach Jen tech and you have shit you don't want to talk about. But what if you decide to spend up teach Jen gaming or. Jen's crazy Phoenix adventure or. I roll to dev
Whatever. All right. So the first thing is going to be a show. So we're going to have shows because right now you have teach Jen tech and you have shit you don't want to talk about. But what if you decide to spend up teach Jen gaming or. Jen's crazy Phoenix adventure or. I roll to dev I roll to dev. I roll to dev. That is will be another one. Anyway, please keep dead. Yeah. So. For now, let's let's say and this this may or may not be the case. That's the other thing is never let your database diagram. Become don't write a bad app because you made a
I roll to dev. I roll to dev. That is will be another one. Anyway, please keep dead. Yeah. So. For now, let's let's say and this this may or may not be the case. That's the other thing is never let your database diagram. Become don't write a bad app because you made a A just is a plan to deviate from don't. What this is not written in stone. It's written on a on a screen. It can be deleted erased updated. This is this is forgetting our our heads wrapped around this
A just is a plan to deviate from don't. What this is not written in stone. It's written on a on a screen. It can be deleted erased updated. This is this is forgetting our our heads wrapped around this I've seen too many times such dogmatic adherence to a database diagram to the detriment of the five. I know product that I feel the need to express my. My warning about that. This this is a plan to deviate from. So here with that
I've seen too many times such dogmatic adherence to a database diagram to the detriment of the five. I know product that I feel the need to express my. My warning about that. This this is a plan to deviate from. So here with that So here with that. Because like when when you got to build this thing you may decide it makes no damn sense to have a show table shows. You know, it can just be a field in in one of these other things or so. But for now let's let's say there's going to be a show table in the database. Okay
So here with that. Because like when when you got to build this thing you may decide it makes no damn sense to have a show table shows. You know, it can just be a field in in one of these other things or so. But for now let's let's say there's going to be a show table in the database. Okay Okay. So I I'm going to do the first one just so you can see what what they often look like. So I'm going to write show in tiny ass font. How do I make that bigger? I can like super zoom. That is like so small. I used the text tool instead of the writing tool. Well, and that's fine
Okay. So I I'm going to do the first one just so you can see what what they often look like. So I'm going to write show in tiny ass font. How do I make that bigger? I can like super zoom. That is like so small. I used the text tool instead of the writing tool. Well, and that's fine Look how much I can like zoom in. It'll be fine. Yeah. It's just yeah, that's a little wacky. And yes. Uh, that that is something because Jacob like said in another way of what you said of like diagrams are only useful. If they were a percent that needs accurately a needs change
Look how much I can like zoom in. It'll be fine. Yeah. It's just yeah, that's a little wacky. And yes. Uh, that that is something because Jacob like said in another way of what you said of like diagrams are only useful. If they were a percent that needs accurately a needs change And yeah, I need to not on a lot of this. I get like analysis paralysis because I'm like, what about this? What about this? And that's that's not going to think about this. That is where the fuck lottery of database design begins. Fair enough. I am. All right. There we go. Well, you do that
And yeah, I need to not on a lot of this. I get like analysis paralysis because I'm like, what about this? What about this? And that's that's not going to think about this. That is where the fuck lottery of database design begins. Fair enough. I am. All right. There we go. Well, you do that Well, you do that. I'm going to log in here to try to make this a smaller screen. Here we go. I got an Excel font size. That's better. Not again. Yay. So I don't know
Well, you do that. I'm going to log in here to try to make this a smaller screen. Here we go. I got an Excel font size. That's better. Not again. Yay. So I don't know And this is something that we talked about earlier and I'm excited about learning more about is like, what is the like what schemas can go into like how many schemas can you have? How many databases can you have or not
And this is something that we talked about earlier and I'm excited about learning more about is like, what is the like what schemas can go into like how many schemas can you have? How many databases can you have or not Well, yes, databases, but also how many tables and so it is good to know the answer to both of those questions is as many as your server can handle
Well, yes, databases, but also how many tables and so it is good to know the answer to both of those questions is as many as your server can handle Have as many databases and tables as your server. There we go. Yeah, okay. But that is a thing to look out for is over over table. If if if a table only has one column and there's never going to be a reason why it would ever have a second column, it probably doesn't need to be a table
Have as many databases and tables as your server. There we go. Yeah, okay. But that is a thing to look out for is over over table. If if if a table only has one column and there's never going to be a reason why it would ever have a second column, it probably doesn't need to be a table And the reason why we would have and I think this is something that's going to help is the way that I visualize like the show and things is I'm like each show would be. I don't know. Now I'm having hard time saying it. I don't know. I'm going to wait till you have that part done and
And the reason why we would have and I think this is something that's going to help is the way that I visualize like the show and things is I'm like each show would be. I don't know. Now I'm having hard time saying it. I don't know. I'm going to wait till you have that part done and Alright, so we've got a show and every show every everything and some people don't write this down. They just take for granted and that's that's up to you, especially when you're in the beginning. I like to and I still do it, frankly, every show has an ID. Okay
Alright, so we've got a show and every show every everything and some people don't write this down. They just take for granted and that's that's up to you, especially when you're in the beginning. I like to and I still do it, frankly, every show has an ID. Okay Okay. That's because it's unlikely with show, but we're going to use it. What if there's somehow two shows called teach gen tech or better better example is maybe later we have like a viewer table of people who watch the show regularly. And maybe there's two people named Chris Martinez
Okay. That's because it's unlikely with show, but we're going to use it. What if there's somehow two shows called teach gen tech or better better example is maybe later we have like a viewer table of people who watch the show regularly. And maybe there's two people named Chris Martinez So you need an ID to make damn sure that everything in your databases unique. Okay. And then learner just asked is show as a super type. Yeah, I haven't even gotten into typing show is a table. In this in this example. Cool. So every show has an ID and every show has a name
So you need an ID to make damn sure that everything in your databases unique. Okay. And then learner just asked is show as a super type. Yeah, I haven't even gotten into typing show is a table. In this in this example. Cool. So every show has an ID and every show has a name And I can heads up y'all we are both using a tool that is a bit newer of the Accelerator. I've used it before with Ben. And then when he was on the show. So if we're both like what? Yeah, that's why. And thank you learner for joining
And I can heads up y'all we are both using a tool that is a bit newer of the Accelerator. I've used it before with Ben. And then when he was on the show. So if we're both like what? Yeah, that's why. And thank you learner for joining Yes, please get some sleep and I will tag you when I post it on Twitter. So that way you get the notification. Yeah, all right. So every show has a has a name. Now every show also is shown on a channel. So like this show is on Twitch. But it's going to be on YouTube later
Yes, please get some sleep and I will tag you when I post it on Twitter. So that way you get the notification. Yeah, all right. So every show has a has a name. Now every show also is shown on a channel. So like this show is on Twitch. But it's going to be on YouTube later And I think it might be live streaming on YouTube now. Actually, no, I'm just doing a Twitch right now, but yes, I have before. So that means that a show can have many channels. Yes. So we probably should not have channel be a column because a show can be on many channels. OK. And a channel
And I think it might be live streaming on YouTube now. Actually, no, I'm just doing a Twitch right now, but yes, I have before. So that means that a show can have many channels. Yes. So we probably should not have channel be a column because a show can be on many channels. OK. And a channel OK. And a channel. Also has an ID and a name. Now. A. So now we could say. OK, does this channel have a list of shows? Well, yeah, more than one show can be on the same channel. But one show can also be on multiple channels. So we need a way to store that relationship
OK. And a channel. Also has an ID and a name. Now. A. So now we could say. OK, does this channel have a list of shows? Well, yeah, more than one show can be on the same channel. But one show can also be on multiple channels. So we need a way to store that relationship Because this is a relational database. So we're going to make what's called a many to many table. And it's going to be called show channel. And it's going to have a show ID and a channel ID. And that ID is going to come from here. I'm sure it's going to make these curry
Because this is a relational database. So we're going to make what's called a many to many table. And it's going to be called show channel. And it's going to have a show ID and a channel ID. And that ID is going to come from here. I'm sure it's going to make these curry And then learner just said, same for podcasts. Leak Snow need to have columns for iTunes and Spotify, which we may reach there. Oh, yeah, because they would be a channel, right? Yeah, like they would also be channels. OK. And so this you'll notice the show channel table does not have its own ID
And then learner just said, same for podcasts. Leak Snow need to have columns for iTunes and Spotify, which we may reach there. Oh, yeah, because they would be a channel, right? Yeah, like they would also be channels. OK. And so this you'll notice the show channel table does not have its own ID It just has a show ID and a channel ID. And that's because that in and of itself will always make a unique value. You would never have two of the same show on the same channel. It's not possible. You can't have two unique teach Gen text on Twitch
It just has a show ID and a channel ID. And that's because that in and of itself will always make a unique value. You would never have two of the same show on the same channel. It's not possible. You can't have two unique teach Gen text on Twitch And so by virtue of, let's say we're using numbers for our IDs. Most of the time it's this long string of randomly generated crap, color, gooid, but we're going to say that it's a number because it's easier. And some people do still use numbers for IDs for certain things
And so by virtue of, let's say we're using numbers for our IDs. Most of the time it's this long string of randomly generated crap, color, gooid, but we're going to say that it's a number because it's easier. And some people do still use numbers for IDs for certain things So teach Gen Tech is show number one and switch your channel number one. So the show channel table is going to have a one and a one. Shit, you don't want to talk about is show number two. And Twitch is still channel number one. So you're going to have a two and a one. That's a separate thing
So teach Gen Tech is show number one and switch your channel number one. So the show channel table is going to have a one and a one. Shit, you don't want to talk about is show number two. And Twitch is still channel number one. So you're going to have a two and a one. That's a separate thing So that denotes teach Gen Tech is on Twitch. Shit, you don't want to talk about is on Twitch. Now first now we have YouTube is another channel
So that denotes teach Gen Tech is on Twitch. Shit, you don't want to talk about is on Twitch. Now first now we have YouTube is another channel And we've decided that because of YouTube's algorithm, they won't even monetize a show called shit, you don't want to talk about because they don't like to word shit. So we're not going to bother putting those on YouTube. They're only going to be on Twitch
And we've decided that because of YouTube's algorithm, they won't even monetize a show called shit, you don't want to talk about because they don't like to word shit. So we're not going to bother putting those on YouTube. They're only going to be on Twitch So there's going to be another one for teach Gen Tech and YouTube, but not one for teach Gen Tech and sorry, not one for shit, you want to talk about and YouTube. Does that does that make sense? Do you I can also like write out what it would look like with data in it if that's helpful? Here
So there's going to be another one for teach Gen Tech and YouTube, but not one for teach Gen Tech and sorry, not one for shit, you want to talk about and YouTube. Does that does that make sense? Do you I can also like write out what it would look like with data in it if that's helpful? Here So I'm doing on my tablet really quick. I know nobody can really see me, but hey, so if it's like show ID would be like. So let's say it's. This is a shorthand that I. Yeah, I guess maybe show me the first one because it's not 100% like clicking. No problem
So I'm doing on my tablet really quick. I know nobody can really see me, but hey, so if it's like show ID would be like. So let's say it's. This is a shorthand that I. Yeah, I guess maybe show me the first one because it's not 100% like clicking. No problem No problem. So I'm going to write this on here, but I'm going to like delete it afterwards. Just so it's not taking up space. But I mean, we can zoom in and out. Look how much space we have. We have lots of space. It's not let me reword that it's not that I don't want it taking up space
No problem. So I'm going to write this on here, but I'm going to like delete it afterwards. Just so it's not taking up space. But I mean, we can zoom in and out. Look how much space we have. We have lots of space. It's not let me reword that it's not that I don't want it taking up space It's that I don't want it creating confusion later on. Fair enough. So and it's going to be ID one name. Tech. And now we've got another. Show two. Let's see. Let me look at the stream. Okay. Yeah. It's on there. I'm looking at the whiteboard on a different screen that's covering up the stream
It's that I don't want it creating confusion later on. Fair enough. So and it's going to be ID one name. Tech. And now we've got another. Show two. Let's see. Let me look at the stream. Okay. Yeah. It's on there. I'm looking at the whiteboard on a different screen that's covering up the stream Make sure it was showing. And now we've got. Whoops. That's a dot. Text. Channel. One. Two. Is it? T. W. I. T. C. H. I don't know how to spell twitch. No way. Yeah, that's right. There you go. So we got twitch. We got YouTube. We got teach gen tech. We got shit. You don't want to talk about
Make sure it was showing. And now we've got. Whoops. That's a dot. Text. Channel. One. Two. Is it? T. W. I. T. C. H. I don't know how to spell twitch. No way. Yeah, that's right. There you go. So we got twitch. We got YouTube. We got teach gen tech. We got shit. You don't want to talk about So now we need a way to denote. Teach gen tech on YouTube. Yeah. One. Channel. There. I'm drawing them. Nice. I was like, this will make more sense because for some reason as it's, you know, probably not that distracting for others, but I'm like, it's covering stuff
So now we need a way to denote. Teach gen tech on YouTube. Yeah. One. Channel. There. I'm drawing them. Nice. I was like, this will make more sense because for some reason as it's, you know, probably not that distracting for others, but I'm like, it's covering stuff So I'm having a hard time paying attention to it. There we go. So this shows. That works. Come on. Right. Like it's like, I'm going to have like a hard time with everything. It's cool. We will become Excel a draw masters eventually. Yes
So I'm having a hard time paying attention to it. There we go. So this shows. That works. Come on. Right. Like it's like, I'm going to have like a hard time with everything. It's cool. We will become Excel a draw masters eventually. Yes Yes. Anyone who's an expert at Excel a draw wants to be on the show. That would be fun. And learner just said, foreign keys already covered. Yeah. So that's what this is called. And I'll, I'll explain that once it's drawn out. That's where I was going with this is what a foreign key is
Yes. Anyone who's an expert at Excel a draw wants to be on the show. That would be fun. And learner just said, foreign keys already covered. Yeah. So that's what this is called. And I'll, I'll explain that once it's drawn out. That's where I was going with this is what a foreign key is But I wanted to show the example first. That works because I'm like, I don't know what a foreign key is. So that's cool. All right
But I wanted to show the example first. That works because I'm like, I don't know what a foreign key is. So that's cool. All right All right. So in this nightmarish drawing, we have teach Gen Tech and we have teach Gen Tech on YouTube, which is show ID number one for teach Gen Tech and channel ID number one, which is YouTube
All right. So in this nightmarish drawing, we have teach Gen Tech and we have teach Gen Tech on YouTube, which is show ID number one for teach Gen Tech and channel ID number one, which is YouTube Those show IDs and those channel IDs are called foreign keys and it's saying, hey, I'm using the idea of another table to show a relationship. Does this make a new table then? So these are and none of these things are tables. These are all rows in the table. So these are all the table
Those show IDs and those channel IDs are called foreign keys and it's saying, hey, I'm using the idea of another table to show a relationship. Does this make a new table then? So these are and none of these things are tables. These are all rows in the table. So these are all the table These are like the header names. And these are all rows. If we're using an Excel spreadsheet as an example. So these are the names of the columns and these are the actual values. So yeah, those now let's say we've decided, you know what? This multi channel thing is confusing
These are like the header names. And these are all rows. If we're using an Excel spreadsheet as an example. So these are the names of the columns and these are the actual values. So yeah, those now let's say we've decided, you know what? This multi channel thing is confusing We don't ever want to do it. I'm not saying that's true, but for the sake of argument, we've decided no show can ever be on two channels. But one channel can have multiple shows. So if we do all that, I'm going to move. Do you, if you want me to save this, I'll save it. Let me see if it
We don't ever want to do it. I'm not saying that's true, but for the sake of argument, we've decided no show can ever be on two channels. But one channel can have multiple shows. So if we do all that, I'm going to move. Do you, if you want me to save this, I'll save it. Let me see if it Let me see if it. Let me see if it'll let me move it. Yes. I think you should be able to. Okay. But if it's easier, I can. Oh, there you go. And I'm going to label this. Many many example. Yay. Thank you. Over here. We're going to have
Let me see if it. Let me see if it'll let me move it. Yes. I think you should be able to. Okay. But if it's easier, I can. Oh, there you go. And I'm going to label this. Many many example. Yay. Thank you. Over here. We're going to have So in this one, instead of the show being able to be on multiple channels, it can only be on one channel. We have we have moved to syndication. In fact, I'll use TV shows as an example. You just got teach Gen Tech the TV show. So the you. All right. This is this is exciting
So in this one, instead of the show being able to be on multiple channels, it can only be on one channel. We have we have moved to syndication. In fact, I'll use TV shows as an example. You just got teach Gen Tech the TV show. So the you. All right. This is this is exciting We're we're moving up in the world. Channel ID. Come on. Come on you little bastard. Let me write, I will end you. There we go. I just had to threaten that. Sounds about right. So, make another channel. So, teach Gen Tech because that's how the TV World Works can only be on one TV network
We're we're moving up in the world. Channel ID. Come on. Come on you little bastard. Let me write, I will end you. There we go. I just had to threaten that. Sounds about right. So, make another channel. So, teach Gen Tech because that's how the TV World Works can only be on one TV network They don't really nice it together. So it won't ever be on NBC. So in that case, instead of having this one many to many relationship, we have one to many because CBS will have multiple shows, but each show will only be on CBS
They don't really nice it together. So it won't ever be on NBC. So in that case, instead of having this one many to many relationship, we have one to many because CBS will have multiple shows, but each show will only be on CBS NBC will have its own multiple shows, but each of those shows will only be on NBC. Okay, that's making sense. I'm going to help this write one more to drive the point home. So now, you have two shows on CBS and one on NBC
NBC will have its own multiple shows, but each of those shows will only be on NBC. Okay, that's making sense. I'm going to help this write one more to drive the point home. So now, you have two shows on CBS and one on NBC So is that, is that do a good job for you of illustrating the difference between a one to many and a many to many relationship? Yes. So, I think the next part that I'm stuck on is just like visualizing how I would write it out and actually create the databases
So is that, is that do a good job for you of illustrating the difference between a one to many and a many to many relationship? Yes. So, I think the next part that I'm stuck on is just like visualizing how I would write it out and actually create the databases Right, and that's what we're doing up here. Sweet, and let me scroll up for everyone too. So this is a, this here is a many to many because multiple shows will be on multiple channels. Yeah. And if you want to drag all that other shit out of the way for a minute, this is about to get big
Right, and that's what we're doing up here. Sweet, and let me scroll up for everyone too. So this is a, this here is a many to many because multiple shows will be on multiple channels. Yeah. And if you want to drag all that other shit out of the way for a minute, this is about to get big The top part. Yeah. Okay, hold on just like, it's going to be like really far away. And I don't even sweeten. It's there to get out later. All right. So we have our show table. We got our channel table and we've got our show channel relationship table
The top part. Yeah. Okay, hold on just like, it's going to be like really far away. And I don't even sweeten. It's there to get out later. All right. So we have our show table. We got our channel table and we've got our show channel relationship table So that covers our, well, you know, our part that talks about Teach Gen Tech and our part that talks about shit, you don't want to talk about in your other diagram. That covers YouTube. Mm hmm. Oh, so let's talk about more things that a show is going to have
So that covers our, well, you know, our part that talks about Teach Gen Tech and our part that talks about shit, you don't want to talk about in your other diagram. That covers YouTube. Mm hmm. Oh, so let's talk about more things that a show is going to have And this is, this is where someone might come, come, come fuck me up in the comments about how I like to do this. Every YouTube. Well, no. So that's an interesting question. YouTube embeds, those, those are all episodes, aren't they? Yeah, I mean, it's not a link to your YouTube channel as a whole
And this is, this is where someone might come, come, come fuck me up in the comments about how I like to do this. Every YouTube. Well, no. So that's an interesting question. YouTube embeds, those, those are all episodes, aren't they? Yeah, I mean, it's not a link to your YouTube channel as a whole Right. Like I might want to do like a playlist later on, but that was it. Yeah. Okay. So now that brings us to get another, another episode or another, another table. I said, because I was looking. So we're going to have an episode table and like all things, it is going to have an ID
Right. Like I might want to do like a playlist later on, but that was it. Yeah. Okay. So now that brings us to get another, another episode or another, another table. I said, because I was looking. So we're going to have an episode table and like all things, it is going to have an ID Does it have a name? Do you name your episodes? I mean, like this one. Yeah, because I named this one like Teach Gen Data Big Basics. Yeah. Yeah. The video has to have a name. And it's got a lot. Learner, what I don't know if I know what you mean by your comment. Let me see the comment
Does it have a name? Do you name your episodes? I mean, like this one. Yeah, because I named this one like Teach Gen Data Big Basics. Yeah. Yeah. The video has to have a name. And it's got a lot. Learner, what I don't know if I know what you mean by your comment. Let me see the comment Sorry, design changes for episodes. Yes, because the other thing was talking about the show as a whole, not about the individual episode. The individual episodes within within a show, which is also nice, because it lets us illustrate a one to many relationship. I get what you say
Sorry, design changes for episodes. Yes, because the other thing was talking about the show as a whole, not about the individual episode. The individual episodes within within a show, which is also nice, because it lets us illustrate a one to many relationship. I get what you say I get what you say. So that's and that that brings us to our our previous question of do you and this is, this is the part in this or do I risk painting myself into a quarter? Because you could say show ID and say every episode only exists on one show
I get what you say. So that's and that that brings us to our our previous question of do you and this is, this is the part in this or do I risk painting myself into a quarter? Because you could say show ID and say every episode only exists on one show This live stream that we are doing will only ever be on Teach Gen Tech. It doesn't matter what else we talk about. It will only ever be on Teach Gen Tech. In that case, we have a show ID column and it's going to be the ID for Teach Gen Tech. That's not cute. Why? Okay
This live stream that we are doing will only ever be on Teach Gen Tech. It doesn't matter what else we talk about. It will only ever be on Teach Gen Tech. In that case, we have a show ID column and it's going to be the ID for Teach Gen Tech. That's not cute. Why? Okay But do we ever think that the situation might arise where a show episode, either because it's a very special episode of Teach Gen Tech in which Chris learns to stop smoking or is it and that becomes an episode for ball shows or is there no way in hell that's going to happen
But do we ever think that the situation might arise where a show episode, either because it's a very special episode of Teach Gen Tech in which Chris learns to stop smoking or is it and that becomes an episode for ball shows or is there no way in hell that's going to happen And even if Chris learns about the dangers of second-hand smoke in this episode of Teach Gen Tech, it is staying on Teach Gen Tech Damage
And even if Chris learns about the dangers of second-hand smoke in this episode of Teach Gen Tech, it is staying on Teach Gen Tech Damage Neither thing is wrong
Neither thing is wrong What could happen is we have overcomplicated, over designed our database for a scenario that will never happen if we make it a many to many table or we have shot ourselves into a foot and painted ourselves into the corner when we finally reached that day where the very special episode of Teach Gen Tech happens and we wanted it to be on ball shows
What could happen is we have overcomplicated, over designed our database for a scenario that will never happen if we make it a many to many table or we have shot ourselves into a foot and painted ourselves into the corner when we finally reached that day where the very special episode of Teach Gen Tech happens and we wanted it to be on ball shows And that is a question that you just, there's not a right answer or wrong answer. But if I do that, I could just input it twice, right? One for Teach Gen Tech and one for... You could. You absolutely could do it
And that is a question that you just, there's not a right answer or wrong answer. But if I do that, I could just input it twice, right? One for Teach Gen Tech and one for... You could. You absolutely could do it Like if it is a one-off because it wouldn't be a regular thing, it might be a one-off, but if I need them to show up on both, then I could just create a place. And there's an example of why ID matters. Okay
Like if it is a one-off because it wouldn't be a regular thing, it might be a one-off, but if I need them to show up on both, then I could just create a place. And there's an example of why ID matters. Okay Okay. Because those are both going to have the same name, but they're going to have a different ID and a different show ID. And there are people who will tell you that the same name but a different show ID is enough to differentiate. I don't personally like to work that way
Okay. Because those are both going to have the same name, but they're going to have a different ID and a different show ID. And there are people who will tell you that the same name but a different show ID is enough to differentiate. I don't personally like to work that way I like the definite unique ID except in my many to many tables where there is not a way for them not to be unique. Okay. All right. So this ID goes down here. Sweet. So we're going to do that then. And yeah, cool. If there's a very special episode, it will be... It will just get two entries
I like the definite unique ID except in my many to many tables where there is not a way for them not to be unique. Okay. All right. So this ID goes down here. Sweet. So we're going to do that then. And yeah, cool. If there's a very special episode, it will be... It will just get two entries And that's totally acceptable, especially if you're not doing it a ton. Yeah, business decisions. That's exactly what you call these where this that..
And that's totally acceptable, especially if you're not doing it a ton. Yeah, business decisions. That's exactly what you call these where this that.... And it sucks because the one you really thought you thought out all the way is the one that ends up with this fucked up edge case that happens all the time after some milestone. And the end up having to either refactor or have like dead columns in your database. And there's just no avoiding
.. And it sucks because the one you really thought you thought out all the way is the one that ends up with this fucked up edge case that happens all the time after some milestone. And the end up having to either refactor or have like dead columns in your database. And there's just no avoiding It happens to everyone. No one has ever to my knowledge in the history of humankind ever designed a perfect database the first time. I wish. I wish. Got a database of dead tables or dead columns or unnormalized data. It's... Yeah. It's going to happen
It happens to everyone. No one has ever to my knowledge in the history of humankind ever designed a perfect database the first time. I wish. I wish. Got a database of dead tables or dead columns or unnormalized data. It's... Yeah. It's going to happen And the quicker you can come to terms of the fact that it is going to happen, the... Oh. You can bend these. Hell yes. That's amazing. That is amazing. What color is this? The green one. Yeah. I don't know. I... Oh my tablet just gave me color options. Oh, it didn't give me a hex color. Let me..
And the quicker you can come to terms of the fact that it is going to happen, the... Oh. You can bend these. Hell yes. That's amazing. That is amazing. What color is this? The green one. Yeah. I don't know. I... Oh my tablet just gave me color options. Oh, it didn't give me a hex color. Let me.. Let me... Hold on, hold on. Let's see if I can guess. Let's see if my design is still where I can... Okay. You guess and I will tell you if you're accurate. Uh-huh. Maybe just a little bit, believe me. No, that's too green. Uh, funny. Would you like me just to tell you what it is? Yeah
Let me... Hold on, hold on. Let's see if I can guess. Let's see if my design is still where I can... Okay. You guess and I will tell you if you're accurate. Uh-huh. Maybe just a little bit, believe me. No, that's too green. Uh, funny. Would you like me just to tell you what it is? Yeah Wait, let me try one more time. Okay. Well, that's closer, but yeah, go ahead and tell me. Uh, it's 087 F5B. All right. Sweet. So there you go. You can apparently grab this little like knobby thing. Oh. Bend the window. Sweet. Now we know. Precision arrows. Sweet. All right
Wait, let me try one more time. Okay. Well, that's closer, but yeah, go ahead and tell me. Uh, it's 087 F5B. All right. Sweet. So there you go. You can apparently grab this little like knobby thing. Oh. Bend the window. Sweet. Now we know. Precision arrows. Sweet. All right Sweet. All right. So now we would just go through and do these for all the rest of them. And there may be more attributes to an episode. We decide later on. I'm just trying to show you like the basics
Sweet. All right. So now we would just go through and do these for all the rest of them. And there may be more attributes to an episode. We decide later on. I'm just trying to show you like the basics If we actually spin up a database today, I fully expect us to blow it away at the end of the episode. Like not. This is this. Right. Right. For our exercise, if we want to completely. Yeah, but if we do. So we got the name, we got a link, we got a show ID. The link would be the YouTube embed
If we actually spin up a database today, I fully expect us to blow it away at the end of the episode. Like not. This is this. Right. Right. For our exercise, if we want to completely. Yeah, but if we do. So we got the name, we got a link, we got a show ID. The link would be the YouTube embed Uh, yeah. It would be the. The URL to that episode. So would I then instead of using like link, would I say YouTube embed. So that way I knew what that link was supposed to be, especially like on the podcast one, there's more than one link. So if there's multiple. Links. Yeah, like. Episode
Uh, yeah. It would be the. The URL to that episode. So would I then instead of using like link, would I say YouTube embed. So that way I knew what that link was supposed to be, especially like on the podcast one, there's more than one link. So if there's multiple. Links. Yeah, like. Episode Episode. Yeah, let me give me a second. Okay, so there's. There's a few ways to do that. And that's totally. Interesting because there's a. So. You can either have. A. Link table. And it's going to be called like episode link. And it's going to have. A URL and an episode ID. And you could have
Episode. Yeah, let me give me a second. Okay, so there's. There's a few ways to do that. And that's totally. Interesting because there's a. So. You can either have. A. Link table. And it's going to be called like episode link. And it's going to have. A URL and an episode ID. And you could have And you could have. 500 of those because the internet gets real fucking weird in 10 years. Yeah. So that's option what. Okay. And that's probably the. In my opinion, everybody take a drink. In my opinion, that's probably the best way to handle that. But I'm going to
And you could have. 500 of those because the internet gets real fucking weird in 10 years. Yeah. So that's option what. Okay. And that's probably the. In my opinion, everybody take a drink. In my opinion, that's probably the best way to handle that. But I'm going to But I'm going to. I'm going to throw out some additional possibilities. Okay. You're right. And that all down. Another option is to make one field that's links. And make them like comma separated or like pipe delimited. Or if you're using a postgres database, maybe that's the time to use that
But I'm going to. I'm going to throw out some additional possibilities. Okay. You're right. And that all down. Another option is to make one field that's links. And make them like comma separated or like pipe delimited. Or if you're using a postgres database, maybe that's the time to use that Jason data type. But let's you stick some Jason in there. That's a bunch of links. I don't think any of those things I said are the best idea. But I want to make sure you know that those are options. When you start doing weird shit like that is when you're
Jason data type. But let's you stick some Jason in there. That's a bunch of links. I don't think any of those things I said are the best idea. But I want to make sure you know that those are options. When you start doing weird shit like that is when you're Like trying to undo a mistake you made before. Like you made. You made link a single column and you made it to where it kept ever be empty. It's called a non-knowable column. So there always has to be something in there. But later on you're like shit. I want multiple links in these
Like trying to undo a mistake you made before. Like you made. You made link a single column and you made it to where it kept ever be empty. It's called a non-knowable column. So there always has to be something in there. But later on you're like shit. I want multiple links in these That's when you're like well, fuck it. We're just going to come separate them. But since we're we're nice and at the beginning, we're going to. So we're going to do it. So we're going to do it. Oh, sweet. I get what you're doing. You're writing an example
That's when you're like well, fuck it. We're just going to come separate them. But since we're we're nice and at the beginning, we're going to. So we're going to do it. So we're going to do it. Oh, sweet. I get what you're doing. You're writing an example Yeah, because I'm like I'm not piecing together. Exactly what you're saying. So I think just getting the out of them. Because what I'm wondering is. If like using. I don't know if this is. Okay. There we go. Because like if I had it where it. Or what I sent the. Or whatever it would be
Yeah, because I'm like I'm not piecing together. Exactly what you're saying. So I think just getting the out of them. Because what I'm wondering is. If like using. I don't know if this is. Okay. There we go. Because like if I had it where it. Or what I sent the. Or whatever it would be I already changed doing things. I already thought of some clean. Um, forgot was. Twitch. Date. Maybe the exact best orders. But. And then. disk. Sень. So I got. Let me zoom in on the
I already changed doing things. I already thought of some clean. Um, forgot was. Twitch. Date. Maybe the exact best orders. But. And then. disk. Sень. So I got. Let me zoom in on the stream is basically the I'm wondering what I do it like this even though okay because maybe next year maybe you decide that you know what I want to start offering my show on TikTok or I vine becomes a thing again like do you want to have to add a column every time a new possible vector for a link comes out and that's why having a separate table is is a good idea okay so if I it would be a copy is there a copy option I mean I'm talking you mean oh it's right there okay cool and that so that's interesting so maybe show and channel is not the relationship maybe it's episode and channels and this is this is where database design gets extra fun and extra wacky and and why it should always be a plan to deviate from and not a piece of concrete because yeah through I'm starting to feel like definitely episode is gonna have multiple channels and that's also nice because maybe one episode didn't used to be on older episodes maybe they weren't offered on a certain channel back back in the day yeah so right now here's here's an example of where a point of points of discussion or argument happened in the comments we have learner suggesting make show and episode link to channel and my thought process is at any point does it really matter not we've talked this through that show and channel ever touch each other is it really only the individual episode that matters what channel it's on and that's because the show is always going to be made up of several episodes yeah one even if it's it's a very special episode and so my my my thought processes let's just make it let's just relate channel and episode instead of channel and show so that would mean that it would be episode ID and then it would be like within episode yeah if we scroll back up to our other diagram yeah okay sorry I was looking at all my tablet go scroll scroll all right so if we get rid of that arrow between show and channel that green hand drawn one and then we're gonna rename that table episode channel show and channel get rid of the one between this one no no I'm gonna redo it anyway because we found out that we can bend stuff it's true okay let's see yeah there go nice love it love it so we're gonna rename that table episode channel instead of show channel okay now I'm gonna do on my computer because yeah written yeah okay episode yep and we're gonna show ID to episode ID now instead of drawing an arrow from the show table to the show channel table we're drawing an arrow from the leave that so it's episode so I would draw the arrow going from the ID column of episode yeah but make the arrow go the other way well let's see there we go not not horrible you can grab your middle and I would draw the point of the arrow going to the episode ID column to make it clear it's the ID it's the same value that's the ID of that I get you and then we still also need an arrow going from the ID of the show table to that show ID column in the episode table okay that was not my plan what are you doing that was not okay we are learning a lot about today I teach Jen tech how to write or in the scale it we're learning we're learning all right so this ID it's I could feel a little better whatever it works okay this is making a lot more sense and so then so now yeah now we can start putting more attributes on that episode table like date is probably a good one air date or whatever yeah and I figured like if it shows future it'll you know people can see if it's in the future or in the past based on the date okay yeah I don't know why I'm having to do this I have have access to other piece of weirdness so you really take a second to think about that so right in the memes oh sorry go ahead actually never mind I already already thought through it because right now we're I'll talk through the logic still even though it already resolved itself in my head so right now we are streaming live on Twitch it's happening right now it's the air date was May night you can go back and watch things on Twitch you know like we watched your guys this game last night even though it aired on Sunday and we watched it on Twitch not on another channel right the air date was the same though when this gets put on YouTube the date's gonna be different I was still gonna put it the same okay because it to have and that might be something like a note like is you mean it will do purple sure is air date not published date yeah okay it's good enough and then I don't necessarily want it to go for Twitch as an embed because Twitch video on demands go away yeah unless you make a shit ton of money on it and you can keep it for longer oh you know what else we should do is move that link over to that episode channel table because the link is gonna be different for each channel the YouTube link is not the Twitch link is not the Spotify link say that one more time move this down there move this yeah get rid of that in the episode table and move it to the episode channel table because it's episode channel link oh yeah because it's doing a different table okay okay I'm starting to get it starting to get it I think sure we're just gonna yeah yeah there you go yeah yeah okay so this would be link maybe probably just link because it's just the URL of that that takes you to that episode right yeah but if they have multiple links right but each link is gonna go is gonna belong to a different channel for that episode okay so here I'm gonna write an example of one yes thank you so so episode channel episode ID is gonna be this is what you say this is episode nine what do you know what episode number this is probably like 87 we're gonna go with channel oh I think in our our example we made YouTube channel two yeah I think so channel two I think so 87 I know that's not really what a YouTube link looks like but it is for the just for fun or I the whole damn thing out and this is probably where date actually belongs no date can well no date belongs the episode because you just said you want to use the same date no matter what channel it's on right right yeah so these are the only things that belong in this episode channel date would still belong to episode okay what you're showing me make sense because it's episode channel what's not making sense now and thank you learner agreed is now now that we have this and I'm like okay cool I'm starting to keep it together how would I visualize what I build what what do you mean like how it'll look in the database or in your code or in the database itself like just to go for my own brain at the moment of zoom out thank you and we'll say we will do orange for now so let me zoom back in for the orange because I think the other part that I'm currently stuck on is we need we got boxes we got boxes we got we got a box we got another box maybe we got another box we got another box and then we got another box and then and then so it would mean that if it's show like this is one table show ID is table so it's like this is show ID it's not a minor reader judge so ID so I would create three different channel or three different four different tables or yep these are all four unique tables okay so show okay now I am basically read right already grow but in a way I can visualize it yes which feels very funny but you know sometimes you got to do what you got to do so it would be ID and then it would be whatever we have both name okay this is making sounds they're gonna be written across the top oh so it'd be ID and then name and then I guess show is not a really involved thing yet okay that is where I think I was getting a bit lost so and I feel like now that I kind of I'm visualizing it I can just do it here it's not something that I need to try to stay up to up to the speed of someone talking that is normally why I write things out is because I'm like I can't keep up with what they're talking and type I don't want I would like you to be a different color thank you but I do need the typing okay so we got show is one table yeah channel so and then these would all just be one schema but that is that whole collection of tables is a schema yes okay and do you create a schema like do you have to make detailed directions of a schema or it learns it by creating the table so if you are doing database first then as you create the table it makes a change to the schema that says this schema now includes this table okay and this table has all of these columns and each of those columns has a data type okay and is it is it queries that populate something that pulls the information from all of these yeah queries are what get the information out of the table or put information in the table I mean every every everything in the SQL is every like typed command in SQL is technically a query okay but it's not a good like descriptive word this should have called up come a yeah but hey so for actually you know what for funsy since it was something you want to cover anyway if you want to because I know I know we're getting at the the two hour mark and I'm happy to keep going I just want to make sure a that we cover everything you want to cover and b that we're respectful of urine everyone watching time if you wanted since you wanted to cover some basic SQL commands and wanted to cover creating a database we could go make a simple database with just these four tables really quick okay well probably have to it probably won't be a database we can like use and production later on you'll you'll have to blow it up and remake it later but it learns by table database first but in code that could be big yeah code first is yeah a different animal okay so y'all you know I'm gonna use Ivan because it makes my brain properly oh back to back to dashboard hey look I made one five hours ago as an example and I'm pretty sure I have pd admin on here so yay maybe maybe please load please load yay I don't know what that was so it's easy but good news is I'm just going to remove server group because I'd elie did that one a while ago why do you have to be a problem okay create server group sure uh it looks like you have a server group and you should be able to stick a database in that server group okay okay that's wonky right not wait what was that deploy count why refresh no bro I just wanted to lead everything I just wanted to delete no no okay well you know what hey what's this we'll just click random things till you do something no well let's fuck it let's start again let's make a a server group after all uh well let's oh it's gonna still put it under okay yeah call tjt yeah that would be great yeah and then connect now guess host name address cannot must be specified go to connection there uh try typing local hosts see if it'll let you do that local host and that's just saying host this on the machine right now yeah and then okay save crypt key is missing oh would you do that as the ip address for the is that the default local host it might want something and it's been a good while since I've made a postgres database not code first so forgive me for not being a sharp on this anymore is it under that I don't even see something called crypt key connection yes so good advance see what's in there um oh we got comments maybe someone knows what the hell they're doing yeah learner I was like wait a second um doing locally would be easier instead of all these off-prem stuff but if I do it this way it shouldn't be too hard because this is just a service ur i okay let's see if I don't think you're gonna import anything everything for me quick connect oh well there you go use that pg admin and prepare copy that json and okay do do do do do no that's not what I want uh saying in pg admin go tools import export servers and then copy that json file over okay see how we are going to do yes we want to lose everything I'll be click on tools import export that was exciting file name oh I still have to create the file let's find just save that is something that json just opened like the escoder something did he did he did he you do do you file new text file but not there yeah there no this isn't a different project yeah new window that'll open it in a new like space thank you new file text file here you go um we want to file save us thank you until judge this is today's and we are going to put it in the right folder maybe we're going to put it in the right folder I would like to put it in the right folder there we go safe that was very exciting stuff here we go here's the json file and next and we'll put it in group test next finish okay all right now click that dealio and think it should be this one oh I didn't put the password in I don't think like they go and then just put that password in there okay no why are you I guess that's fine okay now we get that one save this password okay good news we got it we are good we've got the database going so let me go back over here fantastic so we have our table spaces table data bases and table spaces yeah that's not confusing whatsoever all right so let's make a new database excuse me create a new database then call it whatever we'll call it yeah okay do we need to go through any of these other things uh let's look at security and make sure it doesn't want to pass your right now okay it doesn't care right now go ahead and save save all right so now um right so if you click on schemas right now which is down there and click the little arrow cool if you go down to tables there may or may not be a default table that it sticks in there it doesn't know sweet so we're gonna make a table two ways the first way is uh yep by doing create table yeah cool and pick one of those worms we want to create i'm gonna do them in the order that we uh do i select a table space or anything about what what are the options in there PG default just leave it blank if it'll let you all right so now we're going to uh this is where we start sticking shit in here okay and have an ID let's our favorite so click ID ID all right then data type is going to be if you want to be a number just have it be an int or it probably doesn't need to be a big int unless you're just getting crazy with it or yeah there's a lot of data types it doesn't have a regular integer that's interval integer integer wow that's the guy cool uh okay we want so two things do you see those two little switches there yes not know we definitely want that we want to make sure that nobody can ever create something in there that doesn't have an ID that would be disastrous okay the next thing is this primary key column most databases and database tools will lose their mind at you if you don't call something your primary key and it's typically the ID oh yeah it's the first column that identifies a unique entry okay cool so go ahead and then yep and then the next one is name yep and that one is a string be their string or text it might be called text yeah what's the difference between the one with a bracket without the bracket I have no idea what the one with the bracket is if you're true okay because the other one had it so let's do that and we don't want these blank it is not the primary key right uh okay so there's apparently an array of text oh well that'll get wacky well let's see if I can get it yeah see if it'll let you if not I'll show you how to change it we'll learn about our table properties columns sweet we just want regular text yeah yeah maybe bro delete like all of it yeah that works too there's nothing in there yeah wouldn't let me delete the um what we're doing there so are they're going to rename it something we don't want it as no we are going to hit save yeah and then do the same thing for the other four or three yeah so the next one we're going to do by sequel command just to do it oh go good okay sequel yeah I'm guessing this is where I go yeah all right so I just put in to the private chat but you're welcome to put it in the public chat a link to the w3 school sequel reference honestly like as as simple as it is like this is probably the best easiest to understand sequel reference I know of uh this is going to be generic sequel it's not going to be anything postgres specific uh but it's it's going to work 99% of the time in every flavor of sequel you're going to come across and in fact this is how 10 years ago I learned sequel is through this tutorial so um oh learner I missed that you said alter table implicitly I don't mean command we're not we're not to that yet we'll get to what all those things are okay so we are going to use select from customers no so that's just an example of a sequel oh okay okay make it bigger so your hamburger menus expand it out or just drop your hamburger and you know that works too so sequel create scroll down keep going great table yep all right so let's talk about uh let's talk about what each of these things in here are okay so create table is just the create table command it's it's what you do when you when you make a new table and um you give it a name you write the name of the column and the data type that it is and this is the simplest way to do it uh if you look in that sequel thing that's that was just there a second go back yeah it wouldn't let me type like I can't type anything oh that's weird that's why I was oh but I think it's because I'm in the table not the schema maybe uh right click on the database itself for a second do database itself oh no there we go there's okay it's not in there go down to the table name and right click and then like like off to tables yeah right click query tool that's what we want sweet this will let you type yay okay whatever the hell you want sweet all right so now we're gonna create a table all right so uh this one is over here somewhere yeah we should do channel yeah so channel yeah I'm going back to the reference it is column one is id column two is name I need to change their data types yeah and we're gonna add water column constraints it looks like it also stuck a bunch of dots in there that we don't want and to dots and yeah how do I call it which one yeah I got it done here uh exactly the right question to ask how do you tell it which thing is a primary key which things a forward key uh so let's go back over I don't know can you look what um what learner just said should be for primary yeah in tiger chin tiger I don't know what that means uh it made up being there but uh oh integer all right oh that makes so much more sense okay so it wants you to write out the whole word integer in post-grest okay that's thank you I didn't know because I would have wrote in as well all right so now if we hit another space after integer before the comma before the comma yeah and type pk that it may make you capitalize it but we'll try it without and that uh I was just seeing if it uh like change color or anything yeah yeah and that tells you it's the primary key and then if you hit another space because we want the next thing is real important is not no and I believe it's with a space not a dash not a dash that is one karnawakki thing is there's like a lot of places where spaces are okay so hold up oh that's all right now we get to learn about that okay apparently it's not oh apparently you write primary key all the way oh after commerce she's primary key oh yeah it's pink like it's Josh and hi Josh and everybody and for everyone curious Josh is going to be on the show on friday what up Chrissy we are learning databases we have done a lot we have been streaming for a while okay apparently call apparently primary key goes all the way at the end it's been a long time since I've written this out manual oh column type column column two type primary key how will it know the first one is primary key then so see how it has ID in the like parentheses there and that makes sense yeah that makes sense okay I'm just like sure that text is our name is also not no okay yes learner thanks for coming to hang out appreciate it and good night especially because you were gonna leave like an hour ago I do enjoy that you were happy you know yes yes not oh I don't need caps so you don't have to type caps but that's generally like the convention like you'll see that sequel like if you look at your create tables and caps sequel no sequel thing that I know of gives a flying fuck about capitalization but that's just like the convention that most people follow okay okay well so now write primary key um see this one is in all caps primary key and then a parentheses with ID and you see already there you go and that's telling it the ID it's saying creative table with an ID column that's an integer their name column that is a text neither one can be null and the ID is uh is the primary key so now this is yes yeah and let's run it yay all right so now we'll make a look at our tables we may have to refresh I think right there might be a right quick refresh yay yay okay so um the pk style uh reminded learner of um MS access I'm guessing Microsoft access yeah so my access used to be like part of Microsoft office and it it basically made like a weird ass like halfway sequel database that was like localized to your machine and it was usually used by companies in place of like a CRM before they got popular they was their own access databases with their customers and shit in it I remember this now because I could never uh yes yes Josh uh everyone knows excel is the best CRM in database you're right it totally is um and just as a very quick update for everybody that has joined us we're gonna take quick pause to be like hey what have we done so far because we've been streaming for a while and oh I need do do do do do do do do if you go back here and go over here we have gone through a lot we started with relational versus unstructured databases and that uh like relational uses structured uh query language and unstructured or semi-structured is no sequel and um then it's I don't even think I can like switch back and forth as well um with the structured query the reason we're learning some sequel is so that way we can query things ourselves in case there's an error even though there is a ton of options out there in the world and then we talked about postgres versus my sequel and there's a link that I will share later on about that one then we also talked about database first and code first and right now we're creating databases first because talking about these schemas and define the columns and like what it takes what you technically can have more than one uh schema per uh per database but it's never really been done but in theory you can um and so that got me to trying to understand what we are doing with designing things which is never a great way to go into things because then I got really stuck on this yeah I won't confuse you with that this is what my website looks like and it's been built by brutal uh on brutal on astro and eventually I will have the creator that I'm not going to butcher his name today on the show and but I was like I need these to be built out we need to build these oh this is cool I didn't know they were all different colors okay anyway so we go to our lovely mirror board what did I do with my mirror board oh I think it's in a different window damn it Jen so many windows okay let's uh there's probably another one on here there we go um and we were talking about all the things we want to have in teach shentek and shit you don't want to talk about because that's my podcast and there's a bunch of shit that we need them both of them and then we went to again too many windows Jen too many windows why do I have to have so many windows open at once no no no no no no no no then we figured out that we need these four tables this took a while because we also talked about uh one to many and uh many to many type of databases and we'll go into that more later but right now we are creating these so we can kind of like see a visualization of them and learner you are right um it probably will help me a lot I also need to learn how to like be ready to showcase where we're at instead of you know floundering because I for we had new people come in because it's always exciting when new people come all right and we are in pg admin and we created channel and show channel we created through sequel command and show we created through right clicking and hitting create alright i am i think that catches the sub sweet uh so i need to create two more tables yep which we're on these ones so the thing the thing so now do you want to create the episode table through a command or do you want to use the table builder
stream is basically the I'm wondering what I do it like this even though okay because maybe next year maybe you decide that you know what I want to start offering my show on TikTok or I vine becomes a thing again like do you want to have to add a column every time a new possible vector for a link comes out and that's why having a separate table is is a good idea okay so if I it would be a copy is there a copy option I mean I'm talking you mean oh it's right there okay cool and that so that's interesting so maybe show and channel is not the relationship maybe it's episode and channels and this is this is where database design gets extra fun and extra wacky and and why it should always be a plan to deviate from and not a piece of concrete because yeah through I'm starting to feel like definitely episode is gonna have multiple channels and that's also nice because maybe one episode didn't used to be on older episodes maybe they weren't offered on a certain channel back back in the day yeah so right now here's here's an example of where a point of points of discussion or argument happened in the comments we have learner suggesting make show and episode link to channel and my thought process is at any point does it really matter not we've talked this through that show and channel ever touch each other is it really only the individual episode that matters what channel it's on and that's because the show is always going to be made up of several episodes yeah one even if it's it's a very special episode and so my my my thought processes let's just make it let's just relate channel and episode instead of channel and show so that would mean that it would be episode ID and then it would be like within episode yeah if we scroll back up to our other diagram yeah okay sorry I was looking at all my tablet go scroll scroll all right so if we get rid of that arrow between show and channel that green hand drawn one and then we're gonna rename that table episode channel show and channel get rid of the one between this one no no I'm gonna redo it anyway because we found out that we can bend stuff it's true okay let's see yeah there go nice love it love it so we're gonna rename that table episode channel instead of show channel okay now I'm gonna do on my computer because yeah written yeah okay episode yep and we're gonna show ID to episode ID now instead of drawing an arrow from the show table to the show channel table we're drawing an arrow from the leave that so it's episode so I would draw the arrow going from the ID column of episode yeah but make the arrow go the other way well let's see there we go not not horrible you can grab your middle and I would draw the point of the arrow going to the episode ID column to make it clear it's the ID it's the same value that's the ID of that I get you and then we still also need an arrow going from the ID of the show table to that show ID column in the episode table okay that was not my plan what are you doing that was not okay we are learning a lot about today I teach Jen tech how to write or in the scale it we're learning we're learning all right so this ID it's I could feel a little better whatever it works okay this is making a lot more sense and so then so now yeah now we can start putting more attributes on that episode table like date is probably a good one air date or whatever yeah and I figured like if it shows future it'll you know people can see if it's in the future or in the past based on the date okay yeah I don't know why I'm having to do this I have have access to other piece of weirdness so you really take a second to think about that so right in the memes oh sorry go ahead actually never mind I already already thought through it because right now we're I'll talk through the logic still even though it already resolved itself in my head so right now we are streaming live on Twitch it's happening right now it's the air date was May night you can go back and watch things on Twitch you know like we watched your guys this game last night even though it aired on Sunday and we watched it on Twitch not on another channel right the air date was the same though when this gets put on YouTube the date's gonna be different I was still gonna put it the same okay because it to have and that might be something like a note like is you mean it will do purple sure is air date not published date yeah okay it's good enough and then I don't necessarily want it to go for Twitch as an embed because Twitch video on demands go away yeah unless you make a shit ton of money on it and you can keep it for longer oh you know what else we should do is move that link over to that episode channel table because the link is gonna be different for each channel the YouTube link is not the Twitch link is not the Spotify link say that one more time move this down there move this yeah get rid of that in the episode table and move it to the episode channel table because it's episode channel link oh yeah because it's doing a different table okay okay I'm starting to get it starting to get it I think sure we're just gonna yeah yeah there you go yeah yeah okay so this would be link maybe probably just link because it's just the URL of that that takes you to that episode right yeah but if they have multiple links right but each link is gonna go is gonna belong to a different channel for that episode okay so here I'm gonna write an example of one yes thank you so so episode channel episode ID is gonna be this is what you say this is episode nine what do you know what episode number this is probably like 87 we're gonna go with channel oh I think in our our example we made YouTube channel two yeah I think so channel two I think so 87 I know that's not really what a YouTube link looks like but it is for the just for fun or I the whole damn thing out and this is probably where date actually belongs no date can well no date belongs the episode because you just said you want to use the same date no matter what channel it's on right right yeah so these are the only things that belong in this episode channel date would still belong to episode okay what you're showing me make sense because it's episode channel what's not making sense now and thank you learner agreed is now now that we have this and I'm like okay cool I'm starting to keep it together how would I visualize what I build what what do you mean like how it'll look in the database or in your code or in the database itself like just to go for my own brain at the moment of zoom out thank you and we'll say we will do orange for now so let me zoom back in for the orange because I think the other part that I'm currently stuck on is we need we got boxes we got boxes we got we got a box we got another box maybe we got another box we got another box and then we got another box and then and then so it would mean that if it's show like this is one table show ID is table so it's like this is show ID it's not a minor reader judge so ID so I would create three different channel or three different four different tables or yep these are all four unique tables okay so show okay now I am basically read right already grow but in a way I can visualize it yes which feels very funny but you know sometimes you got to do what you got to do so it would be ID and then it would be whatever we have both name okay this is making sounds they're gonna be written across the top oh so it'd be ID and then name and then I guess show is not a really involved thing yet okay that is where I think I was getting a bit lost so and I feel like now that I kind of I'm visualizing it I can just do it here it's not something that I need to try to stay up to up to the speed of someone talking that is normally why I write things out is because I'm like I can't keep up with what they're talking and type I don't want I would like you to be a different color thank you but I do need the typing okay so we got show is one table yeah channel so and then these would all just be one schema but that is that whole collection of tables is a schema yes okay and do you create a schema like do you have to make detailed directions of a schema or it learns it by creating the table so if you are doing database first then as you create the table it makes a change to the schema that says this schema now includes this table okay and this table has all of these columns and each of those columns has a data type okay and is it is it queries that populate something that pulls the information from all of these yeah queries are what get the information out of the table or put information in the table I mean every every everything in the SQL is every like typed command in SQL is technically a query okay but it's not a good like descriptive word this should have called up come a yeah but hey so for actually you know what for funsy since it was something you want to cover anyway if you want to because I know I know we're getting at the the two hour mark and I'm happy to keep going I just want to make sure a that we cover everything you want to cover and b that we're respectful of urine everyone watching time if you wanted since you wanted to cover some basic SQL commands and wanted to cover creating a database we could go make a simple database with just these four tables really quick okay well probably have to it probably won't be a database we can like use and production later on you'll you'll have to blow it up and remake it later but it learns by table database first but in code that could be big yeah code first is yeah a different animal okay so y'all you know I'm gonna use Ivan because it makes my brain properly oh back to back to dashboard hey look I made one five hours ago as an example and I'm pretty sure I have pd admin on here so yay maybe maybe please load please load yay I don't know what that was so it's easy but good news is I'm just going to remove server group because I'd elie did that one a while ago why do you have to be a problem okay create server group sure uh it looks like you have a server group and you should be able to stick a database in that server group okay okay that's wonky right not wait what was that deploy count why refresh no bro I just wanted to lead everything I just wanted to delete no no okay well you know what hey what's this we'll just click random things till you do something no well let's fuck it let's start again let's make a a server group after all uh well let's oh it's gonna still put it under okay yeah call tjt yeah that would be great yeah and then connect now guess host name address cannot must be specified go to connection there uh try typing local hosts see if it'll let you do that local host and that's just saying host this on the machine right now yeah and then okay save crypt key is missing oh would you do that as the ip address for the is that the default local host it might want something and it's been a good while since I've made a postgres database not code first so forgive me for not being a sharp on this anymore is it under that I don't even see something called crypt key connection yes so good advance see what's in there um oh we got comments maybe someone knows what the hell they're doing yeah learner I was like wait a second um doing locally would be easier instead of all these off-prem stuff but if I do it this way it shouldn't be too hard because this is just a service ur i okay let's see if I don't think you're gonna import anything everything for me quick connect oh well there you go use that pg admin and prepare copy that json and okay do do do do do no that's not what I want uh saying in pg admin go tools import export servers and then copy that json file over okay see how we are going to do yes we want to lose everything I'll be click on tools import export that was exciting file name oh I still have to create the file let's find just save that is something that json just opened like the escoder something did he did he did he you do do you file new text file but not there yeah there no this isn't a different project yeah new window that'll open it in a new like space thank you new file text file here you go um we want to file save us thank you until judge this is today's and we are going to put it in the right folder maybe we're going to put it in the right folder I would like to put it in the right folder there we go safe that was very exciting stuff here we go here's the json file and next and we'll put it in group test next finish okay all right now click that dealio and think it should be this one oh I didn't put the password in I don't think like they go and then just put that password in there okay no why are you I guess that's fine okay now we get that one save this password okay good news we got it we are good we've got the database going so let me go back over here fantastic so we have our table spaces table data bases and table spaces yeah that's not confusing whatsoever all right so let's make a new database excuse me create a new database then call it whatever we'll call it yeah okay do we need to go through any of these other things uh let's look at security and make sure it doesn't want to pass your right now okay it doesn't care right now go ahead and save save all right so now um right so if you click on schemas right now which is down there and click the little arrow cool if you go down to tables there may or may not be a default table that it sticks in there it doesn't know sweet so we're gonna make a table two ways the first way is uh yep by doing create table yeah cool and pick one of those worms we want to create i'm gonna do them in the order that we uh do i select a table space or anything about what what are the options in there PG default just leave it blank if it'll let you all right so now we're going to uh this is where we start sticking shit in here okay and have an ID let's our favorite so click ID ID all right then data type is going to be if you want to be a number just have it be an int or it probably doesn't need to be a big int unless you're just getting crazy with it or yeah there's a lot of data types it doesn't have a regular integer that's interval integer integer wow that's the guy cool uh okay we want so two things do you see those two little switches there yes not know we definitely want that we want to make sure that nobody can ever create something in there that doesn't have an ID that would be disastrous okay the next thing is this primary key column most databases and database tools will lose their mind at you if you don't call something your primary key and it's typically the ID oh yeah it's the first column that identifies a unique entry okay cool so go ahead and then yep and then the next one is name yep and that one is a string be their string or text it might be called text yeah what's the difference between the one with a bracket without the bracket I have no idea what the one with the bracket is if you're true okay because the other one had it so let's do that and we don't want these blank it is not the primary key right uh okay so there's apparently an array of text oh well that'll get wacky well let's see if I can get it yeah see if it'll let you if not I'll show you how to change it we'll learn about our table properties columns sweet we just want regular text yeah yeah maybe bro delete like all of it yeah that works too there's nothing in there yeah wouldn't let me delete the um what we're doing there so are they're going to rename it something we don't want it as no we are going to hit save yeah and then do the same thing for the other four or three yeah so the next one we're going to do by sequel command just to do it oh go good okay sequel yeah I'm guessing this is where I go yeah all right so I just put in to the private chat but you're welcome to put it in the public chat a link to the w3 school sequel reference honestly like as as simple as it is like this is probably the best easiest to understand sequel reference I know of uh this is going to be generic sequel it's not going to be anything postgres specific uh but it's it's going to work 99% of the time in every flavor of sequel you're going to come across and in fact this is how 10 years ago I learned sequel is through this tutorial so um oh learner I missed that you said alter table implicitly I don't mean command we're not we're not to that yet we'll get to what all those things are okay so we are going to use select from customers no so that's just an example of a sequel oh okay okay make it bigger so your hamburger menus expand it out or just drop your hamburger and you know that works too so sequel create scroll down keep going great table yep all right so let's talk about uh let's talk about what each of these things in here are okay so create table is just the create table command it's it's what you do when you when you make a new table and um you give it a name you write the name of the column and the data type that it is and this is the simplest way to do it uh if you look in that sequel thing that's that was just there a second go back yeah it wouldn't let me type like I can't type anything oh that's weird that's why I was oh but I think it's because I'm in the table not the schema maybe uh right click on the database itself for a second do database itself oh no there we go there's okay it's not in there go down to the table name and right click and then like like off to tables yeah right click query tool that's what we want sweet this will let you type yay okay whatever the hell you want sweet all right so now we're gonna create a table all right so uh this one is over here somewhere yeah we should do channel yeah so channel yeah I'm going back to the reference it is column one is id column two is name I need to change their data types yeah and we're gonna add water column constraints it looks like it also stuck a bunch of dots in there that we don't want and to dots and yeah how do I call it which one yeah I got it done here uh exactly the right question to ask how do you tell it which thing is a primary key which things a forward key uh so let's go back over I don't know can you look what um what learner just said should be for primary yeah in tiger chin tiger I don't know what that means uh it made up being there but uh oh integer all right oh that makes so much more sense okay so it wants you to write out the whole word integer in post-grest okay that's thank you I didn't know because I would have wrote in as well all right so now if we hit another space after integer before the comma before the comma yeah and type pk that it may make you capitalize it but we'll try it without and that uh I was just seeing if it uh like change color or anything yeah yeah and that tells you it's the primary key and then if you hit another space because we want the next thing is real important is not no and I believe it's with a space not a dash not a dash that is one karnawakki thing is there's like a lot of places where spaces are okay so hold up oh that's all right now we get to learn about that okay apparently it's not oh apparently you write primary key all the way oh after commerce she's primary key oh yeah it's pink like it's Josh and hi Josh and everybody and for everyone curious Josh is going to be on the show on friday what up Chrissy we are learning databases we have done a lot we have been streaming for a while okay apparently call apparently primary key goes all the way at the end it's been a long time since I've written this out manual oh column type column column two type primary key how will it know the first one is primary key then so see how it has ID in the like parentheses there and that makes sense yeah that makes sense okay I'm just like sure that text is our name is also not no okay yes learner thanks for coming to hang out appreciate it and good night especially because you were gonna leave like an hour ago I do enjoy that you were happy you know yes yes not oh I don't need caps so you don't have to type caps but that's generally like the convention like you'll see that sequel like if you look at your create tables and caps sequel no sequel thing that I know of gives a flying fuck about capitalization but that's just like the convention that most people follow okay okay well so now write primary key um see this one is in all caps primary key and then a parentheses with ID and you see already there you go and that's telling it the ID it's saying creative table with an ID column that's an integer their name column that is a text neither one can be null and the ID is uh is the primary key so now this is yes yeah and let's run it yay all right so now we'll make a look at our tables we may have to refresh I think right there might be a right quick refresh yay yay okay so um the pk style uh reminded learner of um MS access I'm guessing Microsoft access yeah so my access used to be like part of Microsoft office and it it basically made like a weird ass like halfway sequel database that was like localized to your machine and it was usually used by companies in place of like a CRM before they got popular they was their own access databases with their customers and shit in it I remember this now because I could never uh yes yes Josh uh everyone knows excel is the best CRM in database you're right it totally is um and just as a very quick update for everybody that has joined us we're gonna take quick pause to be like hey what have we done so far because we've been streaming for a while and oh I need do do do do do do do do if you go back here and go over here we have gone through a lot we started with relational versus unstructured databases and that uh like relational uses structured uh query language and unstructured or semi-structured is no sequel and um then it's I don't even think I can like switch back and forth as well um with the structured query the reason we're learning some sequel is so that way we can query things ourselves in case there's an error even though there is a ton of options out there in the world and then we talked about postgres versus my sequel and there's a link that I will share later on about that one then we also talked about database first and code first and right now we're creating databases first because talking about these schemas and define the columns and like what it takes what you technically can have more than one uh schema per uh per database but it's never really been done but in theory you can um and so that got me to trying to understand what we are doing with designing things which is never a great way to go into things because then I got really stuck on this yeah I won't confuse you with that this is what my website looks like and it's been built by brutal uh on brutal on astro and eventually I will have the creator that I'm not going to butcher his name today on the show and but I was like I need these to be built out we need to build these oh this is cool I didn't know they were all different colors okay anyway so we go to our lovely mirror board what did I do with my mirror board oh I think it's in a different window damn it Jen so many windows okay let's uh there's probably another one on here there we go um and we were talking about all the things we want to have in teach shentek and shit you don't want to talk about because that's my podcast and there's a bunch of shit that we need them both of them and then we went to again too many windows Jen too many windows why do I have to have so many windows open at once no no no no no no no no then we figured out that we need these four tables this took a while because we also talked about uh one to many and uh many to many type of databases and we'll go into that more later but right now we are creating these so we can kind of like see a visualization of them and learner you are right um it probably will help me a lot I also need to learn how to like be ready to showcase where we're at instead of you know floundering because I for we had new people come in because it's always exciting when new people come all right and we are in pg admin and we created channel and show channel we created through sequel command and show we created through right clicking and hitting create alright i am i think that catches the sub sweet uh so i need to create two more tables yep which we're on these ones so the thing the thing so now do you want to create the episode table through a command or do you want to use the table builder I think the table builder is way easier
I think the table builder is way easier So that means I have to do it through the command or I'll forget how to do it through the command. But now that this one is built, can I just replace it and. Yep. Okay. Cool. Cool. Cool. All right. So we have episode. So we need you episode first because episode channel uses. Yeah. Yeah. Cool
So that means I have to do it through the command or I'll forget how to do it through the command. But now that this one is built, can I just replace it and. Yep. Okay. Cool. Cool. Cool. All right. So we have episode. So we need you episode first because episode channel uses. Yeah. Yeah. Cool Yeah. Yeah. Cool. I need to show ID. All right. And for those watching, I'm going to not tell her something critical so that I can show her how to do an alter table. So save your pitch works and screaming. No. Like, can we just add it? Yeah. Put it in there. Yeah. It's not Twitter. But okay
Yeah. Yeah. Cool. I need to show ID. All right. And for those watching, I'm going to not tell her something critical so that I can show her how to do an alter table. So save your pitch works and screaming. No. Like, can we just add it? Yeah. Put it in there. Yeah. It's not Twitter. But okay But okay. Hold on. I need name an episode. Episode. Yeah. And then. Maybe. Right. I want to write maybe. Oh, do it. Well, I haven't looked at it yet. I haven't looked at your comment. Yeah. I'm going to do this. And then. See if I can create a database. Oh, wait. No, I want to reference
But okay. Hold on. I need name an episode. Episode. Yeah. And then. Maybe. Right. I want to write maybe. Oh, do it. Well, I haven't looked at it yet. I haven't looked at your comment. Yeah. I'm going to do this. And then. See if I can create a database. Oh, wait. No, I want to reference I will tell you this right now. If you run this command, which you, which I do want you to do right now, after you finish giving it. It's. Data type. And it's going to be. Yeah. It's going to get taxed as well. And an integer because that other idea is an integer. I'm all done with you last. Yeah
I will tell you this right now. If you run this command, which you, which I do want you to do right now, after you finish giving it. It's. Data type. And it's going to be. Yeah. It's going to get taxed as well. And an integer because that other idea is an integer. I'm all done with you last. Yeah Yeah. Here's another question. Can a show. Can an episode and I think the answer is no, but Can an episode exist out on its own. Without being tight, do a show ever. than it needs to be known because if I do an episode like to reference a show I was in, it should not
Yeah. Here's another question. Can a show. Can an episode and I think the answer is no, but Can an episode exist out on its own. Without being tight, do a show ever. than it needs to be known because if I do an episode like to reference a show I was in, it should not So just there you go, just integer, there you go. And now. So now run the query. And it will run and it will create a table. Cool. So now here's what we're missing is it does not know right now that. Episode and show are related. Right. Show ID is supposed to be calling for another table
So just there you go, just integer, there you go. And now. So now run the query. And it will run and it will create a table. Cool. So now here's what we're missing is it does not know right now that. Episode and show are related. Right. Show ID is supposed to be calling for another table And that's what I'm telling everyone hold up. That's why I didn't I intentionally did not tell her to make the foreign key because we're going to alter the table now. We're going to fix it. Or in this case didn't know. And that's okay database table. Alter table. Alter this table
And that's what I'm telling everyone hold up. That's why I didn't I intentionally did not tell her to make the foreign key because we're going to alter the table now. We're going to fix it. Or in this case didn't know. And that's okay database table. Alter table. Alter this table Alter this table. To give it the foreign key. Okay, alter table. So I would delete this right. Yeah, it doesn't. Delete which is here to me. Alter. And then we are going to. Episode. Episode. And then I'm guessing brackets. All right. And it's parentheses. Yeah, this. Okay. And
Alter this table. To give it the foreign key. Okay, alter table. So I would delete this right. Yeah, it doesn't. Delete which is here to me. Alter. And then we are going to. Episode. Episode. And then I'm guessing brackets. All right. And it's parentheses. Yeah, this. Okay. And Okay. And. Are the parentheses knows parentheses are dots. Why might. Which ones are parentheses? These are parentheses. These. Right. Yeah, yeah, this is moving on to parentheses. I do not know why that confused me so much. Job column. Yeah, alter. So. So. And. And that's why. That's why
Okay. And. Are the parentheses knows parentheses are dots. Why might. Which ones are parentheses? These are parentheses. These. Right. Yeah, yeah, this is moving on to parentheses. I do not know why that confused me so much. Job column. Yeah, alter. So. So. And. And that's why. That's why That's why. Is that a correct answer column. I actually go in there to the. On the right scroll down more and find one that says foreign keys. Oh, back in your W3 school. Foreign key. Yeah. And then if you scroll down, there's an alter table example. For making something a foreign key. Oh, okay
That's why. Is that a correct answer column. I actually go in there to the. On the right scroll down more and find one that says foreign keys. Oh, back in your W3 school. Foreign key. Yeah. And then if you scroll down, there's an alter table example. For making something a foreign key. Oh, okay Oh, okay. Let me make this bigger for everyone. This one. Okay, so alter table add for and key. Oh, so it's okay. Give me this. This is my out. Yep. So we're going to change that to show ID. Yep. Show ID. Yep, references. And then it's going to be the show table. And it knows that it's the table
Oh, okay. Let me make this bigger for everyone. This one. Okay, so alter table add for and key. Oh, so it's okay. Give me this. This is my out. Yep. So we're going to change that to show ID. Yep. Show ID. Yep, references. And then it's going to be the show table. And it knows that it's the table So that inner part is the column name. So it should that inner part ID. And that should be the table name. Okay. And then there you go. I think. Wait, would it be down there or would it be before the. I'll try it and then it'll tell me if I got it wrong. Mwah
So that inner part is the column name. So it should that inner part ID. And that should be the table name. Okay. And then there you go. I think. Wait, would it be down there or would it be before the. I'll try it and then it'll tell me if I got it wrong. Mwah Mwah. Okay, I doesn't want those parentheses just delete them the outer ones. There you go. Play. Yay. So now if you make the episode table, if you click the little thing, it'll. I'm having to like lean in myself so I can see the. Let me see if it's in. Kind of. There we go. Okay, so
Mwah. Okay, I doesn't want those parentheses just delete them the outer ones. There you go. Play. Yay. So now if you make the episode table, if you click the little thing, it'll. I'm having to like lean in myself so I can see the. Let me see if it's in. Kind of. There we go. Okay, so Okay, so. Let's go back down, please. Oh, it like jumped. And so now if you see there's these columns. And if you expand that, you can see that. And if you click on constraints, I believe, and make that bigger that talks about how there's the primary key and the. Foreign key that shows. Hey. There
Okay, so. Let's go back down, please. Oh, it like jumped. And so now if you see there's these columns. And if you expand that, you can see that. And if you click on constraints, I believe, and make that bigger that talks about how there's the primary key and the. Foreign key that shows. Hey. There Hey. There. So. No, that shit is not that important unless you're getting really into it. No, I was. You know that it's. You know that it's referencing that other table. Yeah, I guess this is just me not knowing databases enough yet
Hey. There. So. No, that shit is not that important unless you're getting really into it. No, I was. You know that it's. You know that it's referencing that other table. Yeah, I guess this is just me not knowing databases enough yet Is I kind of guess it would have like a pretty way to be able to see it. Well, we don't have any data in it yet. But it still won't show you as the columns or things just for creating the table. Can you? Click on the episode table itself. Oh, and. Okay
Is I kind of guess it would have like a pretty way to be able to see it. Well, we don't have any data in it yet. But it still won't show you as the columns or things just for creating the table. Can you? Click on the episode table itself. Oh, and. Okay Oh, and. Okay. Yeah, this I don't see a good way to look at it without data in it. So let's. But let's throw some shit in there. Let's. And let's make a channel. Because channels are easy and they don't have a lot of crap going on. Okay. So go back
Oh, and. Okay. Yeah, this I don't see a good way to look at it without data in it. So let's. But let's throw some shit in there. Let's. And let's make a channel. Because channels are easy and they don't have a lot of crap going on. Okay. So go back Okay. So go back. Right click on channel or one of the other tables and do. Query tool down. There we go. Yeah, it's that's one thing I don't like about the postgres admin tool is that there's not a quick way to get a query. Like right the hell now that I know
Okay. So go back. Right click on channel or one of the other tables and do. Query tool down. There we go. Yeah, it's that's one thing I don't like about the postgres admin tool is that there's not a quick way to get a query. Like right the hell now that I know Maybe one that I just don't know about. Like it might be like a you know a key shortcut to. Yeah, it might be. But either way, let's. Let's throw a new channel in there. So we are going to use the handy. We're going to use the update command. Update SQL update. Okay. Well. Okay. And we do this
Maybe one that I just don't know about. Like it might be like a you know a key shortcut to. Yeah, it might be. But either way, let's. Let's throw a new channel in there. So we are going to use the handy. We're going to use the update command. Update SQL update. Okay. Well. Okay. And we do this And we do this. To put it all the way back. The table name is. Why do you keep scrolling back up? Oh, you're right. It is insert. Sorry, it's been a minute. Oh, yeah, because we're not. Update. We're updating. We're updating only change and existing. We got to insert first
And we do this. To put it all the way back. The table name is. Why do you keep scrolling back up? Oh, you're right. It is insert. Sorry, it's been a minute. Oh, yeah, because we're not. Update. We're updating. We're updating only change and existing. We got to insert first Would it be up insert into? I would think. Yeah. It's I don't think there is just insert. It's insert into. But. Most people, if you say insert, know what you mean. Yeah. New peer. I like. Like, oh, that's really what it is. No, no, it's not. Calm down. So we got channel. And
Would it be up insert into? I would think. Yeah. It's I don't think there is just insert. It's insert into. But. Most people, if you say insert, know what you mean. Yeah. New peer. I like. Like, oh, that's really what it is. No, no, it's not. Calm down. So we got channel. And And. So you can write down. The names of all of the columns. That's really mostly only useful if you're doing some of them. Oh. If you're doing all of them, you don't have to do all that. Just delete that. And then insert into channel. And then values are going to be. And then. And. And
And. So you can write down. The names of all of the columns. That's really mostly only useful if you're doing some of them. Oh. If you're doing all of them, you don't have to do all that. Just delete that. And then insert into channel. And then values are going to be. And then. And. And And then. And. And. So normally. And this is, this is where my. Reduced. It's been a long time since I manually inserted something into a database like this. Normally. It will. Okay, you have to tell it to automatically stick an ID in there. And then. And. Which we didn't want we created it
And then. And. And. So normally. And this is, this is where my. Reduced. It's been a long time since I manually inserted something into a database like this. Normally. It will. Okay, you have to tell it to automatically stick an ID in there. And then. And. Which we didn't want we created it We'll save that for another day. But typically. I just want to. 27. But 27 is fine. It'll take it as long as you never give something else the idea of 27 again. Okay. So go ahead and. Run. Okay, I think it doesn't like. Well, okay. Then we'll just do this
We'll save that for another day. But typically. I just want to. 27. But 27 is fine. It'll take it as long as you never give something else the idea of 27 again. Okay. So go ahead and. Run. Okay, I think it doesn't like. Well, okay. Then we'll just do this This oh you have to put it sorry you have to put single quotes around text oh Yeah, because it's a string not double quotes double quotes is every other programming language you've ever worked with single SQL every flavor of sequel in cis on single quotes and Whoever came up with that rule all right, so now it worked Delete all that And type select star from channel Like this star or the other one Yeah, that's yeah, that's the only star I know and you got types from So star and star means get everything so space from channel and Right, yeah, oh hey We got something y'all it made some things we got some things and stuff
This oh you have to put it sorry you have to put single quotes around text oh Yeah, because it's a string not double quotes double quotes is every other programming language you've ever worked with single SQL every flavor of sequel in cis on single quotes and Whoever came up with that rule all right, so now it worked Delete all that And type select star from channel Like this star or the other one Yeah, that's yeah, that's the only star I know and you got types from So star and star means get everything so space from channel and Right, yeah, oh hey We got something y'all it made some things we got some things and stuff Yep So they can visualize what it what it looks like I Think I think we're doing good and So now that I have episode I have episode I have channel I have show I Would Make the episode and let's do this one in The builder instead of doing it through SQL query because One we're using multiple foreign keys And I just say that backwards Episode channel episode channel
Yep So they can visualize what it what it looks like I Think I think we're doing good and So now that I have episode I have episode I have channel I have show I Would Make the episode and let's do this one in The builder instead of doing it through SQL query because One we're using multiple foreign keys And I just say that backwards Episode channel episode channel Okay, cool Uh columns Oh wait inherit from ha ha I need I need to be able to put these side by side see what that does I've never used that so I Can't I can't promise what that's gonna do Fair enough I Can't promise what it's gonna do either but well we'll give it a shot I need episode ID so do that one first
Okay, cool Uh columns Oh wait inherit from ha ha I need I need to be able to put these side by side see what that does I've never used that so I Can't I can't promise what that's gonna do Fair enough I Can't promise what it's gonna do either but well we'll give it a shot I need episode ID so do that one first Oh, that is not what we want all right delete that That was that was easy Click the big black trash can that should on the left there you go So I'm happy
Oh, that is not what we want all right delete that That was that was easy Click the big black trash can that should on the left there you go So I'm happy Yes, no For that one Okay, there we go Adaro name And yeah episode ID ID and then graded type want to juror And to jury yeah, and then not no Primary key it might it might do something don't don't have a default Ted another row and let's see if it lets us oh Make a new row like you're good
Yes, no For that one Okay, there we go Adaro name And yeah episode ID ID and then graded type want to juror And to jury yeah, and then not no Primary key it might it might do something don't don't have a default Ted another row and let's see if it lets us oh Make a new row like you're good Just make a second row
Just make a second row Okay, and make that one Channel ID And once my last one link okay, just so I can stop looking back at for it link link And this one is gonna be an integer Integer yeah, and this one is gonna be a link is link It's gonna be a it's gonna be a three text yeah, you can also do varchar We can that's a different Different days discussion is the difference between all the different text types Oh, this is fun
Okay, and make that one Channel ID And once my last one link okay, just so I can stop looking back at for it link link And this one is gonna be an integer Integer yeah, and this one is gonna be a link is link It's gonna be a it's gonna be a three text yeah, you can also do varchar We can that's a different Different days discussion is the difference between all the different text types Oh, this is fun Okay, I will stop clicking around Everyone can everyone can save your pitch for it later about which is the right one We're just trying to get off the ground
Okay, I will stop clicking around Everyone can everyone can save your pitch for it later about which is the right one We're just trying to get off the ground So now make channel ID also primary key Didn't bitch because the combination of those two is what makes the primary key Ah, okay, I like that so now over to constraints Oh, and you want a foreign key constraint Name is gonna be I Would create two right episode ID and channel ID Call it episode channel
So now make channel ID also primary key Didn't bitch because the combination of those two is what makes the primary key Ah, okay, I like that so now over to constraints Oh, and you want a foreign key constraint Name is gonna be I Would create two right episode ID and channel ID Call it episode channel I want to see what it does now columns Yeah, no, it's not let me So What did I just episode ID Hey No, really maybe What happens when you click the pencil pencil There we go now go to definitions columns local type is episode ID and then references episode ID there you go, okay And then instead of calling that episode ID because that's the name of the other column call it Most of the time when it auto generates is gonna call it like episode channel episode ID It's like the name of the tide the name of the table and then the name of the That's not it doesn't really matters as long as it's something unique, but It's one of those like conventions
I want to see what it does now columns Yeah, no, it's not let me So What did I just episode ID Hey No, really maybe What happens when you click the pencil pencil There we go now go to definitions columns local type is episode ID and then references episode ID there you go, okay And then instead of calling that episode ID because that's the name of the other column call it Most of the time when it auto generates is gonna call it like episode channel episode ID It's like the name of the tide the name of the table and then the name of the That's not it doesn't really matters as long as it's something unique, but It's one of those like conventions Oh episode ID F key Yeah, that's awesome, but really it could be anything as long as it's unique But Is good as anything else. Yeah, okay That's five And that's oh episode ID ID Act Cool, so now click another one. Oh It just yeah Delete All right click the plus again or there it goes
Oh episode ID F key Yeah, that's awesome, but really it could be anything as long as it's unique But Is good as anything else. Yeah, okay That's five And that's oh episode ID ID Act Cool, so now click another one. Oh It just yeah Delete All right click the plus again or there it goes Yeah, and then this one channel ID F key key And then we're gonna hit pencil go to Collins local column channel look channel ID at and Go Now you should just be able to hit save and everything's um, I think It created this one as an extra. Okay. Yeah, it's delete it Maybe yep, there you go
Yeah, and then this one channel ID F key key And then we're gonna hit pencil go to Collins local column channel look channel ID at and Go Now you should just be able to hit save and everything's um, I think It created this one as an extra. Okay. Yeah, it's delete it Maybe yep, there you go It's not what we had saved still Go back to general. I want to see if that oh Sorry, no under constraints. There's multiple things labeled general. Oh Yeah, I Think it deleted it like what But I what Cops see this is why I like this is a good example
It's not what we had saved still Go back to general. I want to see if that oh Sorry, no under constraints. There's multiple things labeled general. Oh Yeah, I Think it deleted it like what But I what Cops see this is why I like this is a good example Why prefer code first data basis? This stuff's a pain Okay, general All right now go down to the next one and make sure we read that one Julie D ID ad There we go now we save. Oh yeah, now let me Wow All right Oh, uh, I forgot link No, I didn't need your link, but I think I ended up deleting it
Why prefer code first data basis? This stuff's a pain Okay, general All right now go down to the next one and make sure we read that one Julie D ID ad There we go now we save. Oh yeah, now let me Wow All right Oh, uh, I forgot link No, I didn't need your link, but I think I ended up deleting it So here's something kind of fun. Oh, I did. Okay. You're right. Okay. Do this select star from episode channel Okay, even though there's no data in it. Oh no type episode channel. That's the name of the table
So here's something kind of fun. Oh, I did. Okay. You're right. Okay. Do this select star from episode channel Okay, even though there's no data in it. Oh no type episode channel. That's the name of the table Oh yeah And it should go ahead and let it run No No, it does not like it when there's nothing in there some of them will give you just the column names and you do that Some of them has no data So got it Okay, so I think This is good at least for Yeah For now like for everything that we were wanting to go over Because we went over a lot
Oh yeah And it should go ahead and let it run No No, it does not like it when there's nothing in there some of them will give you just the column names and you do that Some of them has no data So got it Okay, so I think This is good at least for Yeah For now like for everything that we were wanting to go over Because we went over a lot I mean we did stream for three hours instead of two And thank you for that. Thank you for that
I mean we did stream for three hours instead of two And thank you for that. Thank you for that Thank you for that. This was extremely helpful and I feel like now it's just a A piece of me kind of figuring this kind of stuff out Which is easy enough not easy enough, but like easy as in I can conceptualize it so I could work through it not easy It's not easy
Thank you for that. This was extremely helpful and I feel like now it's just a A piece of me kind of figuring this kind of stuff out Which is easy enough not easy enough, but like easy as in I can conceptualize it so I could work through it not easy It's not easy It takes time So Learner you are supposed to go to bed like hours ago Um, no, you're not too jaddy. I feel bad that it's so late there. I've appreciated all your comments It's been really great having you here. Oh see This is good. This is good. I gotta learn the sequels the sequels
It takes time So Learner you are supposed to go to bed like hours ago Um, no, you're not too jaddy. I feel bad that it's so late there. I've appreciated all your comments It's been really great having you here. Oh see This is good. This is good. I gotta learn the sequels the sequels That's what I'll call it Uh before you go to bed learner anything else you wanted us to cover that you had curiosities of Or Anyone else that's still hanging out with us Maybe maybe All right, well Chris how do people reach out to you
That's what I'll call it Uh before you go to bed learner anything else you wanted us to cover that you had curiosities of Or Anyone else that's still hanging out with us Maybe maybe All right, well Chris how do people reach out to you Uh in case they want to reach out to you or anything you want to tell anybody before we Raid everyone I can throw my LinkedIn into the chat real quick sweet Okay Okay Learner you'll just have to we'll have to have Chris on again so you can ask him these questions and let me grab Let's So if anybody wants to reach out to Chris here is his information and We are going to raid the channel that I first did my very first PR Many moons ago Many many moons ago during hactober fast
Uh in case they want to reach out to you or anything you want to tell anybody before we Raid everyone I can throw my LinkedIn into the chat real quick sweet Okay Okay Learner you'll just have to we'll have to have Chris on again so you can ask him these questions and let me grab Let's So if anybody wants to reach out to Chris here is his information and We are going to raid the channel that I first did my very first PR Many moons ago Many many moons ago during hactober fast So thank you all for joining and joy be duggies Channel thing I'm a jig and I'm gonna hit end and
So thank you all for joining and joy be duggies Channel thing I'm a jig and I'm gonna hit end and