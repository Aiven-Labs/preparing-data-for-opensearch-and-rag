Well, humans, welcome to another episode of Teach Gen Tech. Well, Teach Gen TypeScripts. Hey, it's still TJT. I dig it. I just got there. Took us enough episodes for me to put two and two together. Yeah, hello. And we're learning TypeScripts Chapter six of Josh's book, Learning TypeScript, The Book. And Josh, who are you? And do you want to tell us a bit about what we're learning today with arrays? Yeah, we're excited. I like the energy. This is good. This is high intensity
Chapter six of Josh's book, Learning TypeScript, The Book. And Josh, who are you? And do you want to tell us a bit about what we're learning today with arrays? Yeah, we're excited. I like the energy. This is good. This is high intensity The difference between a Monday, Stream, and a Friday, Stream. Yes. Hi, everyone. I'm Josh. I'm the author of Learning TypeScripts, a book published almost a year ago now by O'Reilly about Learning TypeScript. I know it's wild. I also do general TypeScript stuff
The difference between a Monday, Stream, and a Friday, Stream. Yes. Hi, everyone. I'm Josh. I'm the author of Learning TypeScripts, a book published almost a year ago now by O'Reilly about Learning TypeScript. I know it's wild. I also do general TypeScript stuff I'm a full-time independent open source maintainer. I work on TypeScript VSLint, which is the tooling that lets you run ESLint, prettier, and similar on TypeScript. It is neither TypeScript nor VSLint. Very confusing
I'm a full-time independent open source maintainer. I work on TypeScript VSLint, which is the tooling that lets you run ESLint, prettier, and similar on TypeScript. It is neither TypeScript nor VSLint. Very confusing Very confusing. And in general, I work on open source stuff in the JavaScript TypeScript ecosystem. And I also really like teaching and learning and exploring how people teach and learn. So I'm real excited to be here. Jen is a fun person to hang out with. Thanks. And I agree
Very confusing. And in general, I work on open source stuff in the JavaScript TypeScript ecosystem. And I also really like teaching and learning and exploring how people teach and learn. So I'm real excited to be here. Jen is a fun person to hang out with. Thanks. And I agree And I agree. You're a fun person to hang out with, too. Where I agree I am, too. I don't know the best way of saying that. But you keep showing up. And it's been holy cow. I think we even started streaming six months ago. Yeah. I mean, they're very spaced out
And I agree. You're a fun person to hang out with, too. Where I agree I am, too. I don't know the best way of saying that. But you keep showing up. And it's been holy cow. I think we even started streaming six months ago. Yeah. I mean, they're very spaced out The average is like once every two weeks? Two to, yeah. The average, I think, is every three weeks. The goal was every two weeks. But the average is every three weeks. And I will say that we got to do this really quick of making sure that everybody goes and follows Josh's stream. Yeah
The average is like once every two weeks? Two to, yeah. The average, I think, is every three weeks. The goal was every two weeks. But the average is every three weeks. And I will say that we got to do this really quick of making sure that everybody goes and follows Josh's stream. Yeah Yeah. Let's see if I did it right. Yeah, I did. I have to do it off of memory sometimes. And I'm like, there's, I don't know why. But having this while your whole name out, I'm like, there's so many more letters than normal. Because I call you Josh. I hear Josh Goldberg from people
Yeah. Let's see if I did it right. Yeah, I did. I have to do it off of memory sometimes. And I'm like, there's, I don't know why. But having this while your whole name out, I'm like, there's so many more letters than normal. Because I call you Josh. I hear Josh Goldberg from people And then I'm like, what am I typing? Josh Goldberg was taken. And now I'm Joshua K. Goldberg, Evigore, even though literally no one in real life calls me Joshua, except for people who only know me online for the first five minutes in real life. Yeah, it's a whole thing. Oh, that's so fun
And then I'm like, what am I typing? Josh Goldberg was taken. And now I'm Joshua K. Goldberg, Evigore, even though literally no one in real life calls me Joshua, except for people who only know me online for the first five minutes in real life. Yeah, it's a whole thing. Oh, that's so fun Oh, that's so fun. I also have like six different emails because I kept switching life is hard. That is fair. That is fair. And since last time, because I went on work, I went on work, I went on work trip. There we go. I went on a work trip
Oh, that's so fun. I also have like six different emails because I kept switching life is hard. That is fair. That is fair. And since last time, because I went on work, I went on work, I went on work trip. There we go. I went on a work trip And then you've been doing some travels as well in some conferences. What conferences have you been going to the last month? Last month. Most recent one was Sturtrek. These are all great, by the way. They had a thoroughly excellent time at all of them
And then you've been doing some travels as well in some conferences. What conferences have you been going to the last month? Last month. Most recent one was Sturtrek. These are all great, by the way. They had a thoroughly excellent time at all of them Sturtrek in Columbus, Ohio, which had a show in the Guardians of the Galaxy III, which was very fun, volume three. I just I see that one. It was good. It was good. I've been hit by the Marvel fatigue, but this movie was it over again. It was good
Sturtrek in Columbus, Ohio, which had a show in the Guardians of the Galaxy III, which was very fun, volume three. I just I see that one. It was good. It was good. I've been hit by the Marvel fatigue, but this movie was it over again. It was good It was good. I sat in the back with like two things a free popcorn and two things of M&M's and like a cream soda and just picked out the whole time. It was awesome. I felt gross in a good way. Cream soda when I was eight. I don't know if anybody else has this when you're a little kid
It was good. I sat in the back with like two things a free popcorn and two things of M&M's and like a cream soda and just picked out the whole time. It was awesome. I felt gross in a good way. Cream soda when I was eight. I don't know if anybody else has this when you're a little kid You do something really dumb at a scars you for life. That was me and cream soda and great jelly because I had root beer, cream soda, and great jelly sandwiches. Multiple of each. I think you can see where that might lead in why I dislike them so much now
You do something really dumb at a scars you for life. That was me and cream soda and great jelly because I had root beer, cream soda, and great jelly sandwiches. Multiple of each. I think you can see where that might lead in why I dislike them so much now But, all right, what was the next conference? Ooh. In reverse chronological order, it was Reatt Miami, which was in Miami, in Miami Beach, which is just a beautiful location filled with beautiful people. Obsettingly beautiful. But it was a great conference also. I really enjoyed it. It's cool
But, all right, what was the next conference? Ooh. In reverse chronological order, it was Reatt Miami, which was in Miami, in Miami Beach, which is just a beautiful location filled with beautiful people. Obsettingly beautiful. But it was a great conference also. I really enjoyed it. It's cool It's cool. It's interesting seeing the two common types of conferences. RM, I can call it that. Miami was a single track. So it was a bit more curated. There was a real story being told, like an alternating a wave of technical, not technical, react. That's cool. Yeah
It's cool. It's interesting seeing the two common types of conferences. RM, I can call it that. Miami was a single track. So it was a bit more curated. There was a real story being told, like an alternating a wave of technical, not technical, react. That's cool. Yeah That's cool. Yeah. Whereas Stir Track was multi-track. Like, there are five, six at a time, I think. So you could pick and choose and make it more of your own conference. And there are a lot more different results. It was cool. Yeah. I like both. Yeah
That's cool. Yeah. Whereas Stir Track was multi-track. Like, there are five, six at a time, I think. So you could pick and choose and make it more of your own conference. And there are a lot more different results. It was cool. Yeah. I like both. Yeah I like both. Yeah. I like that's something that JavaScript Jam was talking about last week of, like, when you have two people, like the big conferences or the little conferences, but so many different options, so many different options
I like both. Yeah. I like that's something that JavaScript Jam was talking about last week of, like, when you have two people, like the big conferences or the little conferences, but so many different options, so many different options I think the solid JS Jam people there, unless I'm mistaking them for other people. Have you asked Miami? Maybe I am. Anthony? Anthony, yeah, yeah. Yeah. Yeah. I'm like, Anthony, that is, I finally got to say in his last name right, Campolo. It's not as hard as it looks. A lot of names are tricky
I think the solid JS Jam people there, unless I'm mistaking them for other people. Have you asked Miami? Maybe I am. Anthony? Anthony, yeah, yeah. Yeah. Yeah. I'm like, Anthony, that is, I finally got to say in his last name right, Campolo. It's not as hard as it looks. A lot of names are tricky They're tricky. Yeah. Yeah. But unless tricky. This is true. This is true. Oh, really? So are you ready to dive into chapter six of arrays? I am so ready. Oh, Anthony's in the chat. Oh, hey, we're talking about you
They're tricky. Yeah. Yeah. But unless tricky. This is true. This is true. Oh, really? So are you ready to dive into chapter six of arrays? I am so ready. Oh, Anthony's in the chat. Oh, hey, we're talking about you Oh, hey, hey, where you at? React, you were at, where you're at, where you're at, where you're at, where you're at. React Miami, right? Anthony? See if I can talk. Oh, yay. Oh, yay. Ah, yay. I'm not going. I'm so jealous. Yeah, I hear renders going to be amazing. I also. Maybe in Greece. Oh
Oh, hey, hey, where you at? React, you were at, where you're at, where you're at, where you're at, where you're at. React Miami, right? Anthony? See if I can talk. Oh, yay. Oh, yay. Ah, yay. I'm not going. I'm so jealous. Yeah, I hear renders going to be amazing. I also. Maybe in Greece. Oh Oh. Oh, so sad. So sad. Yeah. Woo is me visiting Santa, Rene, Anthony. I am going to have a birthday and hanging out with my fan here. And then we're moving. So I'm basically just packing the next month and a half
Oh. Oh, so sad. So sad. Yeah. Woo is me visiting Santa, Rene, Anthony. I am going to have a birthday and hanging out with my fan here. And then we're moving. So I'm basically just packing the next month and a half And I'm like, I'm OK with it because there's lots of fun adventures coming on later this year. That's actually exciting, though. What's the story with them? Why are you looking forward to it? I showed the move. And what if I can go in into this? I think a lot of people have wondered. I am moving
And I'm like, I'm OK with it because there's lots of fun adventures coming on later this year. That's actually exciting, though. What's the story with them? Why are you looking forward to it? I showed the move. And what if I can go in into this? I think a lot of people have wondered. I am moving I am moving. So currently I'm in Denver, Colorado in the States. And we, my partner and I, we moved up here almost three years ago, two and a half, three years ago, because a previous job told me, hey, you got to move to Austin or you got to move to Denver. One or the two. We chose Denver
I am moving. So currently I'm in Denver, Colorado in the States. And we, my partner and I, we moved up here almost three years ago, two and a half, three years ago, because a previous job told me, hey, you got to move to Austin or you got to move to Denver. One or the two. We chose Denver We chose Denver. And now that I no longer work for them, I'm full of remote. My partner, he can be fully remote. We have it. There's a good startup community here. And I love the startup world. Denver startup week is so fun. And yeah, all of our closest friends are in Phoenix
We chose Denver. And now that I no longer work for them, I'm full of remote. My partner, he can be fully remote. We have it. There's a good startup community here. And I love the startup world. Denver startup week is so fun. And yeah, all of our closest friends are in Phoenix His family is in San Diego. My family is in New Mexico. So Phoenix is just like the perfect in between. And what I'm getting more excited about is convincing him that we need a pool. This is what I'm excited about. He's a pool. I don't know if it's actually going to happen. We're going to rent
His family is in San Diego. My family is in New Mexico. So Phoenix is just like the perfect in between. And what I'm getting more excited about is convincing him that we need a pool. This is what I'm excited about. He's a pool. I don't know if it's actually going to happen. We're going to rent And he goes out at the beginning of next month and a couple weeks to go look for a place. But fingers crossed, we're going to get a pool. Good luck. No. If anybody's coming to hang out in Phoenix, I'll be in Phoenix starting in July, where it's some of the hottest months and monsoons, monsoons
And he goes out at the beginning of next month and a couple weeks to go look for a place. But fingers crossed, we're going to get a pool. Good luck. No. If anybody's coming to hang out in Phoenix, I'll be in Phoenix starting in July, where it's some of the hottest months and monsoons, monsoons I'm very excited for monsoons. I love monsoons. Sorry, monsoons, like the weather phenomenon, common itself in the. Yeah, they happen in Phoenix too. What? Intuson. What? Yeah. I don't believe you. So do huboops. You can do it up. Right, so do what? Huboops. I'm looking at this. Well, wow
I'm very excited for monsoons. I love monsoons. Sorry, monsoons, like the weather phenomenon, common itself in the. Yeah, they happen in Phoenix too. What? Intuson. What? Yeah. I don't believe you. So do huboops. You can do it up. Right, so do what? Huboops. I'm looking at this. Well, wow Well, wow. This is, I should have, I'm being disrespectful. I should believe you when you tell me pieces of information about the city you're moving to. Wow, I did not know there were monsoons in Phoenix or what a huboob is. Dust storm
Well, wow. This is, I should have, I'm being disrespectful. I should believe you when you tell me pieces of information about the city you're moving to. Wow, I did not know there were monsoons in Phoenix or what a huboob is. Dust storm Dust storm. Why is there a region that has both dust storms and whatever a monsoon is? Whatever you classify as a wild. Heavy rain. Well, yeah. Well, yeah. Because it's a desert. So the dust storms are because of the desert, but so is the heavy rain. It's like once a year, it gets all of its rain
Dust storm. Why is there a region that has both dust storms and whatever a monsoon is? Whatever you classify as a wild. Heavy rain. Well, yeah. Well, yeah. Because it's a desert. So the dust storms are because of the desert, but so is the heavy rain. It's like once a year, it gets all of its rain So you think kind of like a, you know, I don't know. You see in the movies that the deserts only get like so much rain. That's so cool. It's like it. It doesn't happen all year round and then suddenly it like floods. And that's my favorite part of moving back to Phoenix. I'm from Phoenix
So you think kind of like a, you know, I don't know. You see in the movies that the deserts only get like so much rain. That's so cool. It's like it. It doesn't happen all year round and then suddenly it like floods. And that's my favorite part of moving back to Phoenix. I'm from Phoenix I'm from Phoenix. So I've been dreading going back because it is so hot. And I think I've been told, multiple people have told me lately that it looks like Mars. And like, you know what? That is a really good explanation. I love it
I'm from Phoenix. So I've been dreading going back because it is so hot. And I think I've been told, multiple people have told me lately that it looks like Mars. And like, you know what? That is a really good explanation. I love it I love it. It was actually my friend from Germany that told me that it looks like Mars. She is from Munich. So that's a good call. Yeah, they don't really have too many in Germany that I last that I've seen. I'm trying
I love it. It was actually my friend from Germany that told me that it looks like Mars. She is from Munich. So that's a good call. Yeah, they don't really have too many in Germany that I last that I've seen. I'm trying I'm trying. I'm looking up y'all need to go follow this human who takes amazing photos of all the lightning and monsoons in Arizona. Like the real beautiful, amazing this photos. I would highly, highly suggest following them. But yeah, that is why I am moving back to Phoenix. And
I'm trying. I'm looking up y'all need to go follow this human who takes amazing photos of all the lightning and monsoons in Arizona. Like the real beautiful, amazing this photos. I would highly, highly suggest following them. But yeah, that is why I am moving back to Phoenix. And And. But this does mean I get to go to the ocean more because San Diego is not that far away. And I'm excited about that
And. But this does mean I get to go to the ocean more because San Diego is not that far away. And I'm excited about that Okay, enough of me distracting us because I'm like talking about the fun things I should I should talk about the, you know, the part that I'm excited about, but I'm like kind of like
Okay, enough of me distracting us because I'm like talking about the fun things I should I should talk about the, you know, the part that I'm excited about, but I'm like kind of like Because it's hard and I feel so silly when I do these like the more I know the sillier I feel like I should know better is kind of what happens, but y'all what up, but Kari hello, beautiful human. I haven't seen you in forever. I am going to copy and paste Josh's website
Because it's hard and I feel so silly when I do these like the more I know the sillier I feel like I should know better is kind of what happens, but y'all what up, but Kari hello, beautiful human. I haven't seen you in forever. I am going to copy and paste Josh's website Well, Josh is learning TypeScript website here. This is where you can get the book and look at all the projects and the articles and like where to get started with multiple options and my watch will try to say something to us. Watch is very excited about TypeScript. Yes, Socrates is very correct
Well, Josh is learning TypeScript website here. This is where you can get the book and look at all the projects and the articles and like where to get started with multiple options and my watch will try to say something to us. Watch is very excited about TypeScript. Yes, Socrates is very correct I know, I know I'm so excited. I'm actually doing this talk. I'm giving a talk because of Max in two weeks
I know, I know I'm so excited. I'm actually doing this talk. I'm giving a talk because of Max in two weeks Well, not because it's max, but kind of because of max because max acts the question that a lot of people have asked me and it stuck in my head on like how do you disclose neuro, like neurodivergence or mental health during the hiring process or to your manager or how do you talk about it at work
Well, not because it's max, but kind of because of max because max acts the question that a lot of people have asked me and it stuck in my head on like how do you disclose neuro, like neurodivergence or mental health during the hiring process or to your manager or how do you talk about it at work So I'm going to give talk to you. And I'm excited because I feel like it's also something that this show has taught me a lot of is how to learn in my own style, which we're lucky because Josh comes on and talks to me about all this random stuff
So I'm going to give talk to you. And I'm excited because I feel like it's also something that this show has taught me a lot of is how to learn in my own style, which we're lucky because Josh comes on and talks to me about all this random stuff All right, we're going to go to the book because I have the book on my iPad. And that I'll be sharing. And yes, this week is a race
All right, we're going to go to the book because I have the book on my iPad. And that I'll be sharing. And yes, this week is a race And I really appreciate it that Josh, I asked Josh beforehand if he could provide like a bit of information on what do we already know or what is like, is this a new concept or building a concept? And this did help a lot. I will say I still got stuck on some of it
And I really appreciate it that Josh, I asked Josh beforehand if he could provide like a bit of information on what do we already know or what is like, is this a new concept or building a concept? And this did help a lot. I will say I still got stuck on some of it But hey, we wouldn't have much to stream if it just all of a sudden clicked. I mean, I would like it to I really would. But that does that entertainment for people. Yeah. Okay. So as we said, this one is about a raise. It's chapter six and have a little pointer. Let's use the pointer. Yay
But hey, we wouldn't have much to stream if it just all of a sudden clicked. I mean, I would like it to I really would. But that does that entertainment for people. Yeah. Okay. So as we said, this one is about a raise. It's chapter six and have a little pointer. Let's use the pointer. Yay Yay. I have a pointer. This is fun. This week with declaring a raise and retrieving their members will be about declaring array types with the square brackets using parentheses to declare array functions or union types
Yay. I have a pointer. This is fun. This week with declaring a raise and retrieving their members will be about declaring array types with the square brackets using parentheses to declare array functions or union types How types grids understand array elements as type of the array working with spreads and rests, declaring. Tuffle, tuple, tuple. I don't know. I've I've I normally say tuple and I've heard people say tuple. Okay
How types grids understand array elements as type of the array working with spreads and rests, declaring. Tuffle, tuple, tuple. I don't know. I've I've I normally say tuple and I've heard people say tuple. Okay Okay. Tuffle, tuple types to present fixed size arrays and using type annotations or as const assertions to create tuple tuples
Okay. Tuffle, tuple types to present fixed size arrays and using type annotations or as const assertions to create tuple tuples What I'm curious and for those who have been watching this room for a while, feel free to tune in of what do you think? I struggled with the most this week for this this chapter or what most people struggle with. It doesn't have to be me directed, but based on the summary
What I'm curious and for those who have been watching this room for a while, feel free to tune in of what do you think? I struggled with the most this week for this this chapter or what most people struggle with. It doesn't have to be me directed, but based on the summary There are two kinds of people here that come to mind. One is folks who already have core JavaScript fundamentals down like really down and they're people who are like learning this along with JavaScript. I hope both of those were kind phrasing as they were. So they are
There are two kinds of people here that come to mind. One is folks who already have core JavaScript fundamentals down like really down and they're people who are like learning this along with JavaScript. I hope both of those were kind phrasing as they were. So they are So they are. I just make me think I'll I learned from blasterings. Last two. I think for folks who don't yet have JavaScript down pat like the dot dot dot spreads and rests. I have found to be a little like confusing or hard to go around with. I personally struggled with them when I first went in
So they are. I just make me think I'll I learned from blasterings. Last two. I think for folks who don't yet have JavaScript down pat like the dot dot dot spreads and rests. I have found to be a little like confusing or hard to go around with. I personally struggled with them when I first went in And then for both tuple types are like a mind meld. Like unless you're someone like Max very nice who knows tuples from another language, like the concept of a fixed size array in the type system. It's just like a lot of things at once for for some people. Again, myself included
And then for both tuple types are like a mind meld. Like unless you're someone like Max very nice who knows tuples from another language, like the concept of a fixed size array in the type system. It's just like a lot of things at once for for some people. Again, myself included I think I'm just projecting here the stuff that I personally found more difficult to learn at first. But you know, I I love these concepts now and after having worked with them a bit, I came to like really appreciate them and understand why they're useful. So I hope that's you as well. Okay
I think I'm just projecting here the stuff that I personally found more difficult to learn at first. But you know, I I love these concepts now and after having worked with them a bit, I came to like really appreciate them and understand why they're useful. So I hope that's you as well. Okay Okay. So we were saying working on spreads and rests and basically the last three. And I feel like I was 2.5 understood the top three. And then there was like the very last part of that that I was just like. I don't know if I get it. I don't know if I get it. Oh, that's right
Okay. So we were saying working on spreads and rests and basically the last three. And I feel like I was 2.5 understood the top three. And then there was like the very last part of that that I was just like. I don't know if I get it. I don't know if I get it. Oh, that's right Oh, that's right. Because it's like the whole interaction with like union types. And if it's like multiple possible things, it's a union of all them. Union types tend to trip people up when like there's let me refresh. Union types are something that keeps showing up
Oh, that's right. Because it's like the whole interaction with like union types. And if it's like multiple possible things, it's a union of all them. Union types tend to trip people up when like there's let me refresh. Union types are something that keeps showing up So it's one of the concepts that you in particular like aren't clicking as well with compared to others. It can, you know, keep not clicking
So it's one of the concepts that you in particular like aren't clicking as well with compared to others. It can, you know, keep not clicking But one of the nice things about it is that because it comes up so often, you don't realize a lot of people don't realize by the time they get to the end of the book. Even if they're like only two thirds caught up, they have now gotten like two thirds of a book worth of union types
But one of the nice things about it is that because it comes up so often, you don't realize a lot of people don't realize by the time they get to the end of the book. Even if they're like only two thirds caught up, they have now gotten like two thirds of a book worth of union types So going back to the beginning, it's like amazing and obvious and clear. Or right? Yes. And Max just asked is there's something like array comprehension in type script and JavaScript? I thought I like the Python thing like array equals four X in other blah, blah, blah
So going back to the beginning, it's like amazing and obvious and clear. Or right? Yes. And Max just asked is there's something like array comprehension in type script and JavaScript? I thought I like the Python thing like array equals four X in other blah, blah, blah Oh, it's been a while since I've done Python, but I remember there being some really cool stuff
Oh, it's been a while since I've done Python, but I remember there being some really cool stuff I gave up my Python streams because I had to kind of just like narrow down on a language and then narrow down on like, you know, does your work and that and databases like just are absolutely fascinating to me. And then like having a day as like extra as. Yeah, array equals list or not. Yeah
I gave up my Python streams because I had to kind of just like narrow down on a language and then narrow down on like, you know, does your work and that and databases like just are absolutely fascinating to me. And then like having a day as like extra as. Yeah, array equals list or not. Yeah Yeah. So I'm Python. They call it lists and JavaScript and type. If we call it arrays. Yeah. So we don't have like a built in syntax for these awesome comprehentions
Yeah. So I'm Python. They call it lists and JavaScript and type. If we call it arrays. Yeah. So we don't have like a built in syntax for these awesome comprehentions The way Python does, but we do have a lot of nice comprehension, E or functional, E methods like dot map, dot reduce, dot, now we have newer ones like dot flat map. So you can get a lot of the way there, but it's not as beautiful and clean as this Python. Unfortunately
The way Python does, but we do have a lot of nice comprehension, E or functional, E methods like dot map, dot reduce, dot, now we have newer ones like dot flat map. So you can get a lot of the way there, but it's not as beautiful and clean as this Python. Unfortunately Unfortunately. And what would you call those again? Would you just say they're array types? No, because we go through array types like a rate, like list, comprehentions is the Python feature, which doesn't really exist in JavaScript. So like there's no equivalent term. Okay. Okay. That's fine
Unfortunately. And what would you call those again? Would you just say they're array types? No, because we go through array types like a rate, like list, comprehentions is the Python feature, which doesn't really exist in JavaScript. So like there's no equivalent term. Okay. Okay. That's fine Okay. That's fine. That's fair. Um, so these ones didn't have a lot of examples. I just highlighted some things that if I needed to look back into this that I thought was helpful, which was TypeScript, TypeScript respects the best practice of keeping to one data
Okay. That's fine. That's fair. Um, so these ones didn't have a lot of examples. I just highlighted some things that if I needed to look back into this that I thought was helpful, which was TypeScript, TypeScript respects the best practice of keeping to one data Type per array by remembering what data type initially was inside the array and only allowing the rate, real array to operate, not kind of data. Wow
Type per array by remembering what data type initially was inside the array and only allowing the rate, real array to operate, not kind of data. Wow Wow. You know, the fact that you're tripping up on that is reinforcement for my personal opinion, that that's not a very good sentence that I should have split it into like two or three sentences from just like an editorial point of view
Wow. You know, the fact that you're tripping up on that is reinforcement for my personal opinion, that that's not a very good sentence that I should have split it into like two or three sentences from just like an editorial point of view Well, for me, it's I get TypeScript and respects and then data and then array, like their words that I just kind of like, ooh, but I also stumble on my words, what to. And I really liked during this and we went over this example showcases that we used the array that had two strings
Well, for me, it's I get TypeScript and respects and then data and then array, like their words that I just kind of like, ooh, but I also stumble on my words, what to. And I really liked during this and we went over this example showcases that we used the array that had two strings So it wasn't going to let us use a bullion to do it because that bullion wasn't put as a string. If it was true in parentheses, it would have worked, but since it wasn't, it's not. Well, I feel, y'all, I feel very excited because like two chapters ago, I would not have gotten that
So it wasn't going to let us use a bullion to do it because that bullion wasn't put as a string. If it was true in parentheses, it would have worked, but since it wasn't, it's not. Well, I feel, y'all, I feel very excited because like two chapters ago, I would not have gotten that And yes, this was just again just saying that it tries to guess what you're going to do and make sure that it understands what you previously did to help you with that. And that made sense to me. Array and function types array types
And yes, this was just again just saying that it tries to guess what you're going to do and make sure that it understands what you previously did to help you with that. And that made sense to me. Array and function types array types And that's why I was like, oh, wait, we didn't really, it wouldn't be the same as the comprehension array comprehension because we do go through array types. And it's with the, I'm not seeing them
And that's why I was like, oh, wait, we didn't really, it wouldn't be the same as the comprehension array comprehension because we do go through array types. And it's with the, I'm not seeing them Oh, um, what's the big difference here? I guess I should ask that as a way to maybe have you explain it for the parentheses types. In general, there's parentheses, you're tied by the array and function types just to confirm. Yes. In general, this is just us telling the syntax things the right way
Oh, um, what's the big difference here? I guess I should ask that as a way to maybe have you explain it for the parentheses types. In general, there's parentheses, you're tied by the array and function types just to confirm. Yes. In general, this is just us telling the syntax things the right way The first one of those two things is a function that returns string array. The second is an array of things where each of those things is a function that returns string
The first one of those two things is a function that returns string array. The second is an array of things where each of those things is a function that returns string We're using parentheses to indicate like to change what it means because if we didn't use parentheses, we might be telling it the wrong thing, which shows up in code a lot, right? Like having to use parentheses or like a semicolon or something to indicate when it's not very clear what it could be
We're using parentheses to indicate like to change what it means because if we didn't use parentheses, we might be telling it the wrong thing, which shows up in code a lot, right? Like having to use parentheses or like a semicolon or something to indicate when it's not very clear what it could be Yeah. Okay. That made a lot more sense. Thank you. Um, union types, I mean, uh, arrays, this actually started making sense. And I was excited about that
Yeah. Okay. That made a lot more sense. Thank you. Um, union types, I mean, uh, arrays, this actually started making sense. And I was excited about that Um, and I still go back to the original way of saying it, but it makes so much more sense on being able to take two different types and make them friends. That's how I've been explaining a union. Cool. Yeah. And making the friends. Making the friends
Um, and I still go back to the original way of saying it, but it makes so much more sense on being able to take two different types and make them friends. That's how I've been explaining a union. Cool. Yeah. And making the friends. Making the friends Making the friends. And then I figured out how to put an emoji on this. And I was really excited. But I was like evolving in any array. And I'm like, why is this not clicking? Like I get when you would use any. And because you don't know what you would actually actually do
Making the friends. And then I figured out how to put an emoji on this. And I was really excited. But I was like evolving in any array. And I'm like, why is this not clicking? Like I get when you would use any. And because you don't know what you would actually actually do And then normally you would go back and change it, but I don't necessarily get how it evolves. And from here, I kind of just, it wasn't. It wasn't sticking. That's fine
And then normally you would go back and change it, but I don't necessarily get how it evolves. And from here, I kind of just, it wasn't. It wasn't sticking. That's fine That's fine. Do you remember how evolving enemies work with variables, many kids? The answer will dictate like which of two potential things I used to explain approaches
That's fine. Do you remember how evolving enemies work with variables, many kids? The answer will dictate like which of two potential things I used to explain approaches Um, yes, because if you did an any with a string, then the next any, and you try to pull in, it wouldn't like that one because you previously used a string. Sort of. Can I show my screen to walk through? Yes. Yes. He's. Futs around with the Zing settings. Window. Type your playground. OK
Um, yes, because if you did an any with a string, then the next any, and you try to pull in, it wouldn't like that one because you previously used a string. Sort of. Can I show my screen to walk through? Yes. Yes. He's. Futs around with the Zing settings. Window. Type your playground. OK OK. So let's say we have a variable, let value, and we say value equals hello. Mine three and onwards, we know that values type. But I'm looking at using this little two slash comment, just like a nice little editor utility and it's like, we know that it's a string after this point
OK. So let's say we have a variable, let value, and we say value equals hello. Mine three and onwards, we know that values type. But I'm looking at using this little two slash comment, just like a nice little editor utility and it's like, we know that it's a string after this point Does it make sense why TypeScript things value as a string here? Yes, because it was value equals hello, which is a string. Yes. But before we said value equals hello, we don't know what type value is
Does it make sense why TypeScript things value as a string here? Yes, because it was value equals hello, which is a string. Yes. But before we said value equals hello, we don't know what type value is So TypeScript is like, well, underfiring or like, this is something called an evolving any, where you're allowed to put whatever value you. You want in it. Because you never actually set originally what that value is going to be
So TypeScript is like, well, underfiring or like, this is something called an evolving any, where you're allowed to put whatever value you. You want in it. Because you never actually set originally what that value is going to be But this is like totally OK to first give it a string and then give it a number. Does it make sense? Like why TypeScript allows that? Yes. I guess. I it's almost like a and hello. It's almost like I feel like it's contradictory because if it's. Oh, going to allow you to do any
But this is like totally OK to first give it a string and then give it a number. Does it make sense? Like why TypeScript allows that? Yes. I guess. I it's almost like a and hello. It's almost like I feel like it's contradictory because if it's. Oh, going to allow you to do any Then or like let it do be evolving. Then you can. How is it going to learn if you can continue doing it multiple? You've bring up a good point also in the chat. Sometimes people put in different things in a variable like that. Sometimes you can do that in JavaScript
Then or like let it do be evolving. Then you can. How is it going to learn if you can continue doing it multiple? You've bring up a good point also in the chat. Sometimes people put in different things in a variable like that. Sometimes you can do that in JavaScript But like this is not good practice, I would say. Depending on the situation, like in general, you probably want to like put an explicit like. I banitation on something so that later on if you change its type to something different than TypeScript will yell at you. But if you don't give it a type
But like this is not good practice, I would say. Depending on the situation, like in general, you probably want to like put an explicit like. I banitation on something so that later on if you change its type to something different than TypeScript will yell at you. But if you don't give it a type TypeScript is just like I whatever you say goes it's I'll just change it to whatever you say. So again, I'm not saying do this. I'm saying this is a feature of the language for the case when you don't add a type annotation or default initial value. Okay. Does that make sense? Yes. Yeah. Cool
TypeScript is just like I whatever you say goes it's I'll just change it to whatever you say. So again, I'm not saying do this. I'm saying this is a feature of the language for the case when you don't add a type annotation or default initial value. Okay. Does that make sense? Yes. Yeah. Cool Yeah. Cool. Let's let's look at a race. So like let's say we have values equals empty array. We do like values. Push hello. And then we look at the type of values. Now it's a string array. It's the same idea value started off as I'm even know is this never or something. Okay. Complicit any
Yeah. Cool. Let's let's look at a race. So like let's say we have values equals empty array. We do like values. Push hello. And then we look at the type of values. Now it's a string array. It's the same idea value started off as I'm even know is this never or something. Okay. Complicit any Complicit any. Let me turn that off. There we go. So typeScript actually has some options to complain in cases like this. But yeah, so this is an evolving any array. I forget actually what's called. But here we start off with an empty array and TypeScript has no idea what's in the array
Complicit any. Let me turn that off. There we go. So typeScript actually has some options to complain in cases like this. But yeah, so this is an evolving any array. I forget actually what's called. But here we start off with an empty array and TypeScript has no idea what's in the array So it says like never or any or like some default type. And then as soon as you add something to. In theory, it should not be yelling at us and practice it is. Um, no, what? My book might be out of date. Maybe it's wrong
So it says like never or any or like some default type. And then as soon as you add something to. In theory, it should not be yelling at us and practice it is. Um, no, what? My book might be out of date. Maybe it's wrong Maybe it's wrong. What's, uh, what's, what's, what's find out? You're now watching me relearn this stuff in real time. But page. Rion. We are on page 77. 77. And my browser is freezing. This is, this is not. We're on or 103 in the PDF. So page 77. Come on browser. Here we go. So, right
Maybe it's wrong. What's, uh, what's, what's, what's find out? You're now watching me relearn this stuff in real time. But page. Rion. We are on page 77. 77. And my browser is freezing. This is, this is not. We're on or 103 in the PDF. So page 77. Come on browser. Here we go. So, right So, right. So when we start off, okay. Yes. Yes. When we start off with this empty array, TypeScript doesn't know what goes in it. I was supposed to be seeing more on your screen. Yes, we are. Sorry. I'm sharing the wrong thing. Chromans reason. Love to see it. There we go. Okay. Hi
So, right. So when we start off, okay. Yes. Yes. When we start off with this empty array, TypeScript doesn't know what goes in it. I was supposed to be seeing more on your screen. Yes, we are. Sorry. I'm sharing the wrong thing. Chromans reason. Love to see it. There we go. Okay. Hi Okay. Hi. Do one, oh, do 103. Outed. Here we go. So, um, type any, when we start off an empty array, TypeScript doesn't know what's in it. Mm hmm. But if you add something to the array, we push string. TypeScript knows, okay, this is a string now
Okay. Hi. Do one, oh, do 103. Outed. Here we go. So, um, type any, when we start off an empty array, TypeScript doesn't know what's in it. Mm hmm. But if you add something to the array, we push string. TypeScript knows, okay, this is a string now And then later on, if we assign something else to the string to the array, if we like set values of zero equals zero or dot push zero, TypeScript will evolve its understanding of the array. It knows that no longer is it just strings. It's also numbers in there. So number or string
And then later on, if we assign something else to the string to the array, if we like set values of zero equals zero or dot push zero, TypeScript will evolve its understanding of the array. It knows that no longer is it just strings. It's also numbers in there. So number or string And that, but those make sense. It's so it learned that by doing two, but. So would it keep learning if you did let values equal empty array and then values dot push equal hello, then values in the square brackets equals zero
And that, but those make sense. It's so it learned that by doing two, but. So would it keep learning if you did let values equal empty array and then values dot push equal hello, then values in the square brackets equals zero And then like if I say values dot, I don't know, Josh equals true, then it would add a Boolean into the array
And then like if I say values dot, I don't know, Josh equals true, then it would add a Boolean into the array If you did like values of one equals true, then yeah, yeah, it would add a Boolean to the type because it would know that, okay, in addition to previously knowing that this can contain number or string, it can now also ultimately contain Boolean, which is not again, this similar to evolving any variables
If you did like values of one equals true, then yeah, yeah, it would add a Boolean to the type because it would know that, okay, in addition to previously knowing that this can contain number or string, it can now also ultimately contain Boolean, which is not again, this similar to evolving any variables This is not something you want. Like this is weird behavior. And I honestly debated whether even put it in the book because you should like never do this, but it's interesting if you end up in the situation, I think. Okay
This is not something you want. Like this is weird behavior. And I honestly debated whether even put it in the book because you should like never do this, but it's interesting if you end up in the situation, I think. Okay Okay. Anyone else have questions for that? I'm going to switch the share screens just in the meantime, because this is the part that we were at of and I'm going to work on summarizing it. E, no, okay. Okay. Hold. There we go. Go away
Okay. Anyone else have questions for that? I'm going to switch the share screens just in the meantime, because this is the part that we were at of and I'm going to work on summarizing it. E, no, okay. Okay. Hold. There we go. Go away Go away. I'm also finding that when I try to set up the text to play ground, it's like not actually working anymore. So either they updated something or my book is inaccurate. Either way, I don't think this is very important to information. I'm just going to say, yeah, meh, we'll just do meh
Go away. I'm also finding that when I try to set up the text to play ground, it's like not actually working anymore. So either they updated something or my book is inaccurate. Either way, I don't think this is very important to information. I'm just going to say, yeah, meh, we'll just do meh But so that way I remember is when we added a string, it became okay. It makes more sense. Now, I guess I don't really need notes. It just made more sense actually going through it than just looking at it. So thank you. Cool
But so that way I remember is when we added a string, it became okay. It makes more sense. Now, I guess I don't really need notes. It just made more sense actually going through it than just looking at it. So thank you. Cool So thank you. Cool. But yes, you are accurate that as soon as we went into the new stuff at the very beginning
So thank you. Cool. But yes, you are accurate that as soon as we went into the new stuff at the very beginning So, okay, first off, I don't feel as bad about not understanding any arrays now because well, they seem kind of complicated and yes, they are referred to earlier on, but it doesn't seem as like out of like, I don't know. I was like, why don't I get it? We've gone over it, but it also makes sense
So, okay, first off, I don't feel as bad about not understanding any arrays now because well, they seem kind of complicated and yes, they are referred to earlier on, but it doesn't seem as like out of like, I don't know. I was like, why don't I get it? We've gone over it, but it also makes sense Yeah, then we go to multi-dimensional arrays and I'm like, I don't necessarily know where to start or kind of, could you tell us more about this section and more detailed please? Sure. So, there's no new theory introduced here. It's just showing using the same thing twice
Yeah, then we go to multi-dimensional arrays and I'm like, I don't necessarily know where to start or kind of, could you tell us more about this section and more detailed please? Sure. So, there's no new theory introduced here. It's just showing using the same thing twice What it's showing twice is indicating that there is some type with the array brackets next to it. Twice. So, we have a number array, so an array of numbers and then we have an array of that. We have an array of arrays of numbers. Bots. Also, high-tech, no, we death also. Yes, I live again
What it's showing twice is indicating that there is some type with the array brackets next to it. Twice. So, we have a number array, so an array of numbers and then we have an array of that. We have an array of arrays of numbers. Bots. Also, high-tech, no, we death also. Yes, I live again Yes, I live again. Max has a question for you, Josh. I'll let you two discuss that while I like stare at this for a second. No idea. So, this does make sense
Yes, I live again. Max has a question for you, Josh. I'll let you two discuss that while I like stare at this for a second. No idea. So, this does make sense I think where I'm at for it, though, I'm going to have to say, I'm going to have to say, I'm going to have to say, I'm going to have to say, I'm going to have to say, This does make sense. I think where I'm at for it, though, is here. Let me move that over and
I think where I'm at for it, though, I'm going to have to say, I'm going to have to say, I'm going to have to say, I'm going to have to say, I'm going to have to say, This does make sense. I think where I'm at for it, though, is here. Let me move that over and Oh, hey, this is how I should do it every time. We're streaming. Look at this. This is great promotion for the book. Okay. Would this be almost expanded on the evolving one because the first one that we have right here is just having it in the brackets and then this one is having it written out
Oh, hey, this is how I should do it every time. We're streaming. Look at this. This is great promotion for the book. Okay. Would this be almost expanded on the evolving one because the first one that we have right here is just having it in the brackets and then this one is having it written out So could you repeat that a match right parsed it
So could you repeat that a match right parsed it So and I think it's because we just talked about the any or the evolving ones that I'm best this is another reason I'm a little stuck is like so we have let a ray of arrays of numbers be number in the two brackets and then array of arrays numbers equals
So and I think it's because we just talked about the any or the evolving ones that I'm best this is another reason I'm a little stuck is like so we have let a ray of arrays of numbers be number in the two brackets and then array of arrays numbers equals So it's because the first one is empty so it can be anything but the second one actually is set up. So totally separate things the concept of evolving is when you don't fully fill out the type and there's these very specific situations where types group will allow the type to change over time
So it's because the first one is empty so it can be anything but the second one actually is set up. So totally separate things the concept of evolving is when you don't fully fill out the type and there's these very specific situations where types group will allow the type to change over time This is a type that's known ahead of time and never changes and the type just so happens to be an array of arrays. Okay, it's starting to make sense just to verify of if it were. And going I'm pretty sure is like if it had a let's say a 4d array it would still be we've got the 2d array
This is a type that's known ahead of time and never changes and the type just so happens to be an array of arrays. Okay, it's starting to make sense just to verify of if it were. And going I'm pretty sure is like if it had a let's say a 4d array it would still be we've got the 2d array This is a 2d array you could have a 4d array you could have like a 100d array in theory. Just arrays of arrays of arrays dot at that. And would they all be within each other or would they be next to each other
This is a 2d array you could have a 4d array you could have like a 100d array in theory. Just arrays of arrays of arrays dot at that. And would they all be within each other or would they be next to each other It would be number a right bracket a right bracket a right bracket a right bracket a right bracket a right bracket and so on and so forth. Okay. It makes enough sense that when I get to it later on I can go back and mess around with it more because this is connecting a bit more now
It would be number a right bracket a right bracket a right bracket a right bracket a right bracket a right bracket and so on and so forth. Okay. It makes enough sense that when I get to it later on I can go back and mess around with it more because this is connecting a bit more now I think I did get stuck trying to put it like the previous one. Yes, they are different different sections, but yes, can you put arrays into arrays into arrays
I think I did get stuck trying to put it like the previous one. Yes, they are different different sections, but yes, can you put arrays into arrays into arrays You can you could have a race option you'll dog I heard you like arrays whatever meme slash internet reference you like for for deep things within each other. Yep. But that one wouldn't be called a 2d array because the 2d is just next to each other
You can you could have a race option you'll dog I heard you like arrays whatever meme slash internet reference you like for for deep things within each other. Yep. But that one wouldn't be called a 2d array because the 2d is just next to each other So it was and the 40 are next to each other because if it was like a 40 it would just be number and then bracket. My really bad. Each array has a dimensionality that's like a way to think of it like most of the time you're doing 1d arrays. It's just an array of stuff
So it was and the 40 are next to each other because if it was like a 40 it would just be number and then bracket. My really bad. Each array has a dimensionality that's like a way to think of it like most of the time you're doing 1d arrays. It's just an array of stuff When we call it 2d or 2 dimensional it's referring to the idea that it is an array of things that have that dimensionality minus 1. So like a 2d array is an array of 1d arrays
When we call it 2d or 2 dimensional it's referring to the idea that it is an array of things that have that dimensionality minus 1. So like a 2d array is an array of 1d arrays So yeah, in theory you could have a 90001d array which is an array of 9000 d arrays which are each arrays of so on and so forth. So yeah, nesting is a good plus one right nesting is another way that we call this like this is a nested array of numbers. So that term works well for others
So yeah, in theory you could have a 90001d array which is an array of 9000 d arrays which are each arrays of so on and so forth. So yeah, nesting is a good plus one right nesting is another way that we call this like this is a nested array of numbers. So that term works well for others Thank you Ryan. It's evil though. Okay, but this that did help that did help. Thank you nested for some reason made more to my in my head made more sense in my head. But okay, and then we go to array members and say what? Yeah, this actually I regret a little bit
Thank you Ryan. It's evil though. Okay, but this that did help that did help. Thank you nested for some reason made more to my in my head made more sense in my head. But okay, and then we go to array members and say what? Yeah, this actually I regret a little bit I remember going over the fence of whether to call things array elements or members. I think I switched to element over time. Let's kept something as members. So you have an array of things. So an array is like a big list of stuff of some size 0, 150, 9 million and one, whatever
I remember going over the fence of whether to call things array elements or members. I think I switched to element over time. Let's kept something as members. So you have an array of things. So an array is like a big list of stuff of some size 0, 150, 9 million and one, whatever Each of the elements of those arrays. Oh, sorry, each of the elements of that array is a thing of that arrays type. For example, if you have a string array, each element of the string is sorry each element of the array is a string
Each of the elements of those arrays. Oh, sorry, each of the elements of that array is a thing of that arrays type. For example, if you have a string array, each element of the string is sorry each element of the array is a string It's like defenders equal couple of strings defenders of zero is type string. Before we move on to unions, is that makes sense and sound reasonable? Yes, because that did make sense of why it would be I think elements make sense a bit more
It's like defenders equal couple of strings defenders of zero is type string. Before we move on to unions, is that makes sense and sound reasonable? Yes, because that did make sense of why it would be I think elements make sense a bit more I sometimes end for if anybody's curious, I love hate that you can have different names for everything because especially like an argument. He's not the same as it is in the English language. It means something completely different. And it's like wait, let me have a similar word
I sometimes end for if anybody's curious, I love hate that you can have different names for everything because especially like an argument. He's not the same as it is in the English language. It means something completely different. And it's like wait, let me have a similar word So it doesn't associate in my head. Yes, yes. Okay, yes. Yeah, because this is totally making sense. And Max said is then indexing. Then as frustrating as Python when it's a nested array. Yeah, I would suggest so yes, it is equally confusing
So it doesn't associate in my head. Yes, yes. Okay, yes. Yeah, because this is totally making sense. And Max said is then indexing. Then as frustrating as Python when it's a nested array. Yeah, I would suggest so yes, it is equally confusing It's really confusing a JavaScript and Python and C sharpage of it all languages to have like a nested or a multidimensional array. Fortunately, TypeScript does not add to that confusion
It's really confusing a JavaScript and Python and C sharpage of it all languages to have like a nested or a multidimensional array. Fortunately, TypeScript does not add to that confusion In fact, I would say that it makes it easier because TypeScript will let you know if you've like gone to be important not to be with your shenanigans. I really like that. I really like that. And that's something that I think I'm running into. I'm making. I've been working on the
In fact, I would say that it makes it easier because TypeScript will let you know if you've like gone to be important not to be with your shenanigans. I really like that. I really like that. And that's something that I think I'm running into. I'm making. I've been working on the Theos t3 app, t3 stack app, that thing. And I think, yeah, I think I ended up nesting something a bit much. And now I have to figure out where I put the error. And TypeScript is telling me, well, yeah, it tells me there's an error. I can't
Theos t3 app, t3 stack app, that thing. And I think, yeah, I think I ended up nesting something a bit much. And now I have to figure out where I put the error. And TypeScript is telling me, well, yeah, it tells me there's an error. I can't I can't. This is some of the fun of learning things is you don't always understand is this a CSS layer or an actual TypeScripter. It's fun. It's learning y'all. It's learning. All right. Cavia. I'm going to unsound. I'm going to put elements
I can't. This is some of the fun of learning things is you don't always understand is this a CSS layer or an actual TypeScripter. It's fun. It's learning y'all. It's learning. All right. Cavia. I'm going to unsound. I'm going to put elements Because for some reason that word makes more sense to me. So if I put that in there, it's like saying. This code gives no complaints with the default compiler settings. Because this is a string. Elements is a string with the brackets. So therefore it's saying whatever you want to stream
Because for some reason that word makes more sense to me. So if I put that in there, it's like saying. This code gives no complaints with the default compiler settings. Because this is a string. Elements is a string with the brackets. So therefore it's saying whatever you want to stream Can you go into a bit more detail here? Please. So let's talk about the concept of a type system. A type system is supposed to let you know when you access something that doesn't exist. Like let's say I say like a creative object, which has the members, I don't know, first name last name
Can you go into a bit more detail here? Please. So let's talk about the concept of a type system. A type system is supposed to let you know when you access something that doesn't exist. Like let's say I say like a creative object, which has the members, I don't know, first name last name And then I asked for object dot middle name. TypeScript's type system would then yell at me saying, ah, you never said there's a middle name. Yes. That's the reason. Cool. So let's let's let's let's talk about arrays then. Arrays you access some arbitrary number to access the elements or numbers
And then I asked for object dot middle name. TypeScript's type system would then yell at me saying, ah, you never said there's a middle name. Yes. That's the reason. Cool. So let's let's let's let's talk about arrays then. Arrays you access some arbitrary number to access the elements or numbers Like you can say elements of zero to get the first one. Now we have a problem because what happens if you just say it's an array of whatever size. Let's say string array. You don't even know what size it is. And then you ask for the element at position 9,001
Like you can say elements of zero to get the first one. Now we have a problem because what happens if you just say it's an array of whatever size. Let's say string array. You don't even know what size it is. And then you ask for the element at position 9,001 TypeScript has no way of knowing whether there are 9,001 elements to get you whether there are 9,002 elements in the way or more. So this is a flaw in the model
TypeScript has no way of knowing whether there are 9,001 elements to get you whether there are 9,002 elements in the way or more. So this is a flaw in the model Either TypeScript is overly pessimistic and yells at you saying, ah, you never said there's 9,001, which would be a real pain in the butt. Or TypeScript is just like, ah, it's fine. I assume that that element exists
Either TypeScript is overly pessimistic and yells at you saying, ah, you never said there's 9,001, which would be a real pain in the butt. Or TypeScript is just like, ah, it's fine. I assume that that element exists And then there's a problem because as we see in this little code snippet, the four lines of code, we're providing an element by an array as a argument that only has two elements. And then we're asking for elements of 9,001.length, which doesn't exist. That's going to throw an error
And then there's a problem because as we see in this little code snippet, the four lines of code, we're providing an element by an array as a argument that only has two elements. And then we're asking for elements of 9,001.length, which doesn't exist. That's going to throw an error Is it, although is it seeing that 9,001, it's like unable to do the length because yes, it doesn't know if it's actually a thing. But is it because it was said to be a string and not a number. Does that have anything to do with that? It doesn't
Is it, although is it seeing that 9,001, it's like unable to do the length because yes, it doesn't know if it's actually a thing. But is it because it was said to be a string and not a number. Does that have anything to do with that? It doesn't All we're saying is that we want the 9,001 element of the array. And TypeScript is not going to yell at us because TypeScript doesn't know whether there are 9,001 elements in the array
All we're saying is that we want the 9,001 element of the array. And TypeScript is not going to yell at us because TypeScript doesn't know whether there are 9,001 elements in the array So even though this code TypeTech's just fine, it will crash at one time, which kind of is upsetting because TypeScript is supposed to prevent that. Let's see if I can actually get it to copy. Copy. Copy. I'm going to say TypeScript doesn't know. Paste. Yay. That's fun. Yeah
So even though this code TypeTech's just fine, it will crash at one time, which kind of is upsetting because TypeScript is supposed to prevent that. Let's see if I can actually get it to copy. Copy. Copy. I'm going to say TypeScript doesn't know. Paste. Yay. That's fun. Yeah That's fun. Yeah. Do you do you do you? Yes, we're taking a drawing moment. Drawing moment. Yay. Okay. Cool. Spreads and rests. Spreads and rests. Spreads and rests. Okay. I should know TypeScript does have a compiler option that makes it more strict around element accesses. It's no unchecked
That's fun. Yeah. Do you do you do you? Yes, we're taking a drawing moment. Drawing moment. Yay. Okay. Cool. Spreads and rests. Spreads and rests. Spreads and rests. Okay. I should know TypeScript does have a compiler option that makes it more strict around element accesses. It's no unchecked It's no unchecked. I never use it because it's real annoying to work with. It's just looking up no unchecked indexed access. It will make sure that if you asked for an element of an array at a particular index, you did something to make sure that index exists
It's no unchecked. I never use it because it's real annoying to work with. It's just looking up no unchecked indexed access. It will make sure that if you asked for an element of an array at a particular index, you did something to make sure that index exists I'm checking if the elements length is greater than 90001. Almost no one uses this because it's real annoying. This is just like a flaw in the type system we all live with and hope for the best. I'll paste it a link in the chat. Cool. Thank you. Cool. Okay. All right. Move it on
I'm checking if the elements length is greater than 90001. Almost no one uses this because it's real annoying. This is just like a flaw in the type system we all live with and hope for the best. I'll paste it a link in the chat. Cool. Thank you. Cool. Okay. All right. Move it on Move it on. Anyway, spread the rest. This is like very much a JavaScript thing, not a TypeScript thing, but TypeScript does recognize these things. Okay. Remember, Rest and Parameter functions from chapter five, Rest and Parameters, and arrays writing both operator and key and rack. Oh
Move it on. Anyway, spread the rest. This is like very much a JavaScript thing, not a TypeScript thing, but TypeScript does recognize these things. Okay. Remember, Rest and Parameter functions from chapter five, Rest and Parameters, and arrays writing both operator and key and rack. Oh Oh. So, summarizing spreads, is it just saying what you can create the arrays with an input? Yeah, it's in JavaScript, you can spread or mix and match arrays together. So, like, if you have an array of strings and you join it with an array of numbers, the result isn't array of string or number
Oh. So, summarizing spreads, is it just saying what you can create the arrays with an input? Yeah, it's in JavaScript, you can spread or mix and match arrays together. So, like, if you have an array of strings and you join it with an array of numbers, the result isn't array of string or number Gua la. Okay. Why is that not a union? It isn't union. It is an array where each element is union string or number. You're right. Okay. But it's like, I guess it's weird because it's another term for it. But yeah, there's no new term here. TypeScript
Gua la. Okay. Why is that not a union? It isn't union. It is an array where each element is union string or number. You're right. Okay. But it's like, I guess it's weird because it's another term for it. But yeah, there's no new term here. TypeScript TypeScript. So, there's the JavaScript terms of spreads, let's say we're looking at, and then there's the existing TypeScript terms of array elements and union types. And this is just matching those all together. Ah. Okay
TypeScript. So, there's the JavaScript terms of spreads, let's say we're looking at, and then there's the existing TypeScript terms of array elements and union types. And this is just matching those all together. Ah. Okay Ah. Okay. Apparently, if anybody ever does read my notes from your book, they're going to be like, why is everything making friends with each other? Like, is that like the new thing in Cody and like making friends? Yes. It's going to be my answer. Okay
Ah. Okay. Apparently, if anybody ever does read my notes from your book, they're going to be like, why is everything making friends with each other? Like, is that like the new thing in Cody and like making friends? Yes. It's going to be my answer. Okay Okay. So, spreading rest parameters, I'm going to reread it now with that context because with spreading. And. And you're right. I think it is because I'm not used to the terminology in JavaScript either. Yet. Yet. Spreading an array of types, string, but is lab, but not number is not
Okay. So, spreading rest parameters, I'm going to reread it now with that context because with spreading. And. And you're right. I think it is because I'm not used to the terminology in JavaScript either. Yet. Yet. Spreading an array of types, string, but is lab, but not number is not So, is it saying spreading rest parameters because it's saying that we can do it with strings, but we cannot do it mixing the two? Yeah, it's not specific to strings or numbers. It's just in general, the log warriors function says that the names must all be strings
So, is it saying spreading rest parameters because it's saying that we can do it with strings, but we cannot do it mixing the two? Yeah, it's not specific to strings or numbers. It's just in general, the log warriors function says that the names must all be strings But then we're providing numbers. So that's a tight mismatch. Same as if it was just the one arguments. Let's say greeting is the parameter, say string, and we've tried to provide a number for it. So it's like the opposite of spreads
But then we're providing numbers. So that's a tight mismatch. Same as if it was just the one arguments. Let's say greeting is the parameter, say string, and we've tried to provide a number for it. So it's like the opposite of spreads Because spreads let us spread, let us combine the two putting numbers and strings together where this one's like no bro, you can't do numbers in our strings. Yeah, so you said spread, but I think you meant spreads like this is the. Oh, sorry. Yes. Yeah. Yes. Yes. Cool. Yeah
Because spreads let us spread, let us combine the two putting numbers and strings together where this one's like no bro, you can't do numbers in our strings. Yeah, so you said spread, but I think you meant spreads like this is the. Oh, sorry. Yes. Yeah. Yes. Yes. Cool. Yeah Yes. Cool. Yeah. I like, I personally like to think of spreads and rest in that way agreed plus one that it's like the opposite. Like spreading joins in together and rest or way of like getting that joint. Right, but like why is spreading like putting them together like that
Yes. Cool. Yeah. I like, I personally like to think of spreads and rest in that way agreed plus one that it's like the opposite. Like spreading joins in together and rest or way of like getting that joint. Right, but like why is spreading like putting them together like that That's language me, me and languages, not me and disagree with you as language language. We're taking an imprecise medium, the human languages and then trying to map it to a precise format programming. It's never going to work well. Yeah. The police
That's language me, me and languages, not me and disagree with you as language language. We're taking an imprecise medium, the human languages and then trying to map it to a precise format programming. It's never going to work well. Yeah. The police Yeah. The police. There's, by the way, there's a cool language project called Esperanza where people tried to make a language hasn't caught on worldwide, but eventually maybe
Yeah. The police. There's, by the way, there's a cool language project called Esperanza where people tried to make a language hasn't caught on worldwide, but eventually maybe Wait, they're trying to make a language what? This is like totally random and tangent and probably harmful to the stream to bring up to distract you with, but there's a cool project called Esperanto, which is a language that people made. It's like it's called a constructed language
Wait, they're trying to make a language what? This is like totally random and tangent and probably harmful to the stream to bring up to distract you with, but there's a cool project called Esperanto, which is a language that people made. It's like it's called a constructed language The idea is all languages suck. Why don't we make a better one? The problem is no one, no one like grew up like there are no one's ancestors spoke Esperanto. Oh. Oh, it was banned. Oh, yeah, it's, it was like Jewish. Band of World War II by Hitler
The idea is all languages suck. Why don't we make a better one? The problem is no one, no one like grew up like there are no one's ancestors spoke Esperanto. Oh. Oh, it was banned. Oh, yeah, it's, it was like Jewish. Band of World War II by Hitler So like not the most modern, you know, okay, discuss. Yeah. Don't worry. Oh, there's a beginner's guide, but it's from like 2000. Oh, this one's from 2023. This one's from 2003. But let's go with Britannica. I didn't realize Britannica was still a thing until like two weeks ago
So like not the most modern, you know, okay, discuss. Yeah. Don't worry. Oh, there's a beginner's guide, but it's from like 2000. Oh, this one's from 2023. This one's from 2003. But let's go with Britannica. I didn't realize Britannica was still a thing until like two weeks ago Y'all, I want to make friends with Britannica again, because they also just have the play button right here. And it's like, okay, cool. I'm going to share this link because it's Britannica. And I want to go look into this link, which later on. Oh, how cool
Y'all, I want to make friends with Britannica again, because they also just have the play button right here. And it's like, okay, cool. I'm going to share this link because it's Britannica. And I want to go look into this link, which later on. Oh, how cool Oh, how cool. Relatively, it's where it's our drive from. Huh. Huh. Okay. I will look into that more. For the word we can't say. Touples, tuples, wapples. I'm still confused by these aren't like just different ways of seeing unions
Oh, how cool. Relatively, it's where it's our drive from. Huh. Huh. Okay. I will look into that more. For the word we can't say. Touples, tuples, wapples. I'm still confused by these aren't like just different ways of seeing unions Because now that I'm finally starting to get unions, I'm like, but, but it's putting two together. Forget unions. In theory, we can like mix and match the two concepts like you can have a union and tuple. But for now, just forget them. Touples are like on their own very separate. I'm good. Yes
Because now that I'm finally starting to get unions, I'm like, but, but it's putting two together. Forget unions. In theory, we can like mix and match the two concepts like you can have a union and tuple. But for now, just forget them. Touples are like on their own very separate. I'm good. Yes I'm good. Yes. In that context, could you go through. Please. Everything in an array is general. Like in the race, we've looked at this at the same time. Like we said that's like an array of strings. So all the elements or members are strings
I'm good. Yes. In that context, could you go through. Please. Everything in an array is general. Like in the race, we've looked at this at the same time. Like we said that's like an array of strings. So all the elements or members are strings Does that make sense so far? In a lot of a lot of modern frameworks and libraries, that's not the case. Like in React, it's very common to to call a function that returns something that. It's like an array of size two where the first thing is like some value
Does that make sense so far? In a lot of a lot of modern frameworks and libraries, that's not the case. Like in React, it's very common to to call a function that returns something that. It's like an array of size two where the first thing is like some value And the second thing is like a function that takes it in that value or something like that. I forget. Have you have you played with hooks react at all? No, not yet. Okay. Not. I played with some web hooks, but I don't think those are the same hooks you're talking about. Yeah. Not the same
And the second thing is like a function that takes it in that value or something like that. I forget. Have you have you played with hooks react at all? No, not yet. Okay. Not. I played with some web hooks, but I don't think those are the same hooks you're talking about. Yeah. Not the same Yeah. Not the same. Same same group concept of like hooking into something, but yeah, I'm just saying. So if you don't mind, I'm going to share. Yeah. Good. Okay. So let's say we have a fun. That's like get count and update or. And like we have like let count people zero
Yeah. Not the same. Same same group concept of like hooking into something, but yeah, I'm just saying. So if you don't mind, I'm going to share. Yeah. Good. Okay. So let's say we have a fun. That's like get count and update or. And like we have like let count people zero And every time someone calls us, we return. Counts and a value of function that increments counts. So like. And we have a constant count. Here we go. Let's say. I'm like trying to construct a good example here. Okay. So like function. Main whatever. So let's say. Hit in counts. There we go
And every time someone calls us, we return. Counts and a value of function that increments counts. So like. And we have a constant count. Here we go. Let's say. I'm like trying to construct a good example here. Okay. So like function. Main whatever. So let's say. Hit in counts. There we go There we go. I'm writing some code that has no type of type annotations intentionally because like this is just job is good. Counts. Increment. Counts. Equals get count and update. Log. Count. Then increment counts. And then we again, console block log
There we go. I'm writing some code that has no type of type annotations intentionally because like this is just job is good. Counts. Increment. Counts. Equals get count and update. Log. Count. Then increment counts. And then we again, console block log And you know what? Let's just pretend that that's not yelling at us because text. So if we run this code, we get. I think it's like a got to call me in. I don't know how to code. We run it. We. Updated counts. We can't update our. Here we go. All right. I'm last time. I'll just run it in clear
And you know what? Let's just pretend that that's not yelling at us because text. So if we run this code, we get. I think it's like a got to call me in. I don't know how to code. We run it. We. Updated counts. We can't update our. Here we go. All right. I'm last time. I'll just run it in clear Okay. So this function returns two things. They contain two things to elements. The first thing is a number. The second is a function. So far up till now prior to troubles, we have not had a way to represent this well in the type system
Okay. So this function returns two things. They contain two things to elements. The first thing is a number. The second is a function. So far up till now prior to troubles, we have not had a way to represent this well in the type system Because right now, typescript thinks that this is a function that returns like a union type of number or function that returns number. As the array elements. But that's not actually right. This is returning. It should return number and function. Is that makes sense? Yes
Because right now, typescript thinks that this is a function that returns like a union type of number or function that returns number. As the array elements. But that's not actually right. This is returning. It should return number and function. Is that makes sense? Yes Like why typescript is wrong here? Yes. Cool. Actually, you know what? I'm sorry. I just realized there's a better way of explaining this. Let's. Let's say. I'm called. And. I'm not the random happy or sad. So let's like. And. A motion. Here we go. So first counts. And first emotion. Sorry
Like why typescript is wrong here? Yes. Cool. Actually, you know what? I'm sorry. I just realized there's a better way of explaining this. Let's. Let's say. I'm called. And. I'm not the random happy or sad. So let's like. And. A motion. Here we go. So first counts. And first emotion. Sorry Sorry. I don't really try not to take this long to get to the point, but I just realized my point wasn't well made. So. Here we go. The reason why I like this more is because we're not messing around with functions. We're. We're now. Talking about. And. I don't like having to. We're getting. Okay
Sorry. I don't really try not to take this long to get to the point, but I just realized my point wasn't well made. So. Here we go. The reason why I like this more is because we're not messing around with functions. We're. We're now. Talking about. And. I don't like having to. We're getting. Okay Okay. So. It's not that this thing returns. This function returns a array of string or number. What we want to know is that it's returning an array where the first element is a number. And the second element is a string. Is. I want to be able to do dot to upper case on my emotions
Okay. So. It's not that this thing returns. This function returns a array of string or number. What we want to know is that it's returning an array where the first element is a number. And the second element is a string. Is. I want to be able to do dot to upper case on my emotions Because I have very strong emotions. I don't know about you. And type. It's. Let me do this. Because even though we humans can read this and know that. The job of script is valid. Tattoops like, ah, but what a first emotion is a number. So. That's why type. It is wrong. So far
Because I have very strong emotions. I don't know about you. And type. It's. Let me do this. Because even though we humans can read this and know that. The job of script is valid. Tattoops like, ah, but what a first emotion is a number. So. That's why type. It is wrong. So far So far. Does that make sense? Yes. Yes. In the fact that I'm going to have to noodle on it. Like it. It's making it enough sense. But if I were to try to say it back to you, I'm not there yet. Okay. So. We run now. We see that the counts actually. Okay
So far. Does that make sense? Yes. Yes. In the fact that I'm going to have to noodle on it. Like it. It's making it enough sense. But if I were to try to say it back to you, I'm not there yet. Okay. So. We run now. We see that the counts actually. Okay Okay. So the problem is that when type script sees an array, it infers the array's type to be a union of all the possible things in that array. So this is inferred type is string for number array because
Okay. So the problem is that when type script sees an array, it infers the array's type to be a union of all the possible things in that array. So this is inferred type is string for number array because I'm just going to call it number or string because I like how practical order and that's the actual order. This is a number. This is a string. Mm-hmm. That's poopy. What we actually want is to know that it's. Oh, that's not good
I'm just going to call it number or string because I like how practical order and that's the actual order. This is a number. This is a string. Mm-hmm. That's poopy. What we actually want is to know that it's. Oh, that's not good What we actually want is to know that it's like actually an array that has two elements in it. And the first one is a number. And the second one is a string. And if we were to use that as the return type, then times you would know that first emotion is a string and thus has two uppercase
What we actually want is to know that it's like actually an array that has two elements in it. And the first one is a number. And the second one is a string. And if we were to use that as the return type, then times you would know that first emotion is a string and thus has two uppercase And thus we see the concept of a tuple or two pull, which is more specific than array
And thus we see the concept of a tuple or two pull, which is more specific than array Similar to how like literals and more specific and primitives, this is an array that contains not just generally numbers or strings, but specifically the first element is a number and the second element is a string, which makes types good. Much like my emotions apparently happy. Okay
Similar to how like literals and more specific and primitives, this is an array that contains not just generally numbers or strings, but specifically the first element is a number and the second element is a string, which makes types good. Much like my emotions apparently happy. Okay Okay. Really, please. I don't know if that little emotion did get the end. I am too. I like it. I like it. I'm looking at it now. This is making enough sense. I will say it like that
Okay. Really, please. I don't know if that little emotion did get the end. I am too. I like it. I like it. I'm looking at it now. This is making enough sense. I will say it like that But also with your explanation of it, it makes more sense why it's called tuples or tuples or however you're supposed to say it, it makes more sense why it's called it. It comes from the math like in math, a tuple is like a list of things
But also with your explanation of it, it makes more sense why it's called tuples or tuples or however you're supposed to say it, it makes more sense why it's called it. It comes from the math like in math, a tuple is like a list of things So here it's a list of things with like a specific ordering. But it would always be two things, right? It can be any number of things technically in an empty array. Like you could have a couple that is just nothing in it
So here it's a list of things with like a specific ordering. But it would always be two things, right? It can be any number of things technically in an empty array. Like you could have a couple that is just nothing in it Or you could have like number string number, Boolean string array, three or four. Like you, it's like any array, like you could pull whatever you want. Okay. It's just your specifying what's in it. Okay. Okay. Okay
Or you could have like number string number, Boolean string array, three or four. Like you, it's like any array, like you could pull whatever you want. Okay. It's just your specifying what's in it. Okay. Okay. Okay Okay. Okay. Okay. As I said, I think it's going to be a noodle on thing, but it's making enough sense. Cool. So then that leads into what you were saying on it could be a multiple things, but you would have to assign what when they're going to be like you did in your executive
Okay. Okay. Okay. As I said, I think it's going to be a noodle on thing, but it's making enough sense. Cool. So then that leads into what you were saying on it could be a multiple things, but you would have to assign what when they're going to be like you did in your executive Like you did in your example, since it's tuple assignability, you need to tell it if it's going to be. Parallel is having Boolean a number. Okay. I think this makes sense that it was just going into that we need to tell it what they are going to be
Like you did in your example, since it's tuple assignability, you need to tell it if it's going to be. Parallel is having Boolean a number. Okay. I think this makes sense that it was just going into that we need to tell it what they are going to be Like what you were just saying on, like right here. We just need to tell it that it's going to be a Boolean number and string or it could be a number number string, right? It could be whatever you want. So your favorite data types in there. Okay. And then
Like what you were just saying on, like right here. We just need to tell it that it's going to be a Boolean number and string or it could be a number number string, right? It could be whatever you want. So your favorite data types in there. Okay. And then Okay. And then. Tapples as rest parameters and this means that there are no friends because they have to be. A specific thing. That's that's what I got from one we did rest parameters earlier. It means they're not going to be friends. No, but said. No, it's it's TypeScript
Okay. And then. Tapples as rest parameters and this means that there are no friends because they have to be. A specific thing. That's that's what I got from one we did rest parameters earlier. It means they're not going to be friends. No, but said. No, it's it's TypeScript So this is this looks in my mind like the like looking back at this. The code syntax here looks more complex than the theory behind it is to me. Okay. TypeScript is letting us know if we might be wrong
So this is this looks in my mind like the like looking back at this. The code syntax here looks more complex than the theory behind it is to me. Okay. TypeScript is letting us know if we might be wrong When we spread the pair array into log pair, typeScript is yelling at us because pair array is inferred to be an array of. Number or string. It does. TypeScript doesn't know that it is specifically the first thing is string. The second thing is number
When we spread the pair array into log pair, typeScript is yelling at us because pair array is inferred to be an array of. Number or string. It does. TypeScript doesn't know that it is specifically the first thing is string. The second thing is number So that's why it's yelling because we might have like modified the array between creating a calling log pair. And I also by the way, I want to reiterate there isn't. The similar mental model in understanding the differences between literals and primitives. As there is the difference between
So that's why it's yelling because we might have like modified the array between creating a calling log pair. And I also by the way, I want to reiterate there isn't. The similar mental model in understanding the differences between literals and primitives. As there is the difference between Tapples and arrays. I think of literals as more specific primitives. I think of tuples as more specific arrays
Tapples and arrays. I think of literals as more specific primitives. I think of tuples as more specific arrays So if you like mess around with them, if you like try to pass the less specific thing in a place that needs a more specific thing, TypeScript might be upset about you not being specific enough. Okay. Okay. And that's making sense. Cool enough. Um. Okay. Couple. Inferences. Hmm. Okay
So if you like mess around with them, if you like try to pass the less specific thing in a place that needs a more specific thing, TypeScript might be upset about you not being specific enough. Okay. Okay. And that's making sense. Cool enough. Um. Okay. Couple. Inferences. Hmm. Okay Hmm. Okay. Could you go into this one a little bit more? Sure. Cause I'm going up here like starting with like. TypeScript dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. Dr. dr. dr. dr. The input is string. So therefore it doesn't know that it needs can do. another input of a number of rate
Hmm. Okay. Could you go into this one a little bit more? Sure. Cause I'm going up here like starting with like. TypeScript dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. dr. Dr. dr. dr. dr. The input is string. So therefore it doesn't know that it needs can do. another input of a number of rate I think I lost you somewhere in there, but I believe the gist is correct. That the by default typescript won't infer that something returns a tuple, it'll infer the more general array type because it doesn't know whether you want to later modify that array
I think I lost you somewhere in there, but I believe the gist is correct. That the by default typescript won't infer that something returns a tuple, it'll infer the more general array type because it doesn't know whether you want to later modify that array That's why the example we were looking at on my share earlier was a set because typescript assumed it was string or number array, not like a tuple with string comma number. So like typescript's inference is kind of vague and not very precise intentionally. Does that click nicely? It will, it will
That's why the example we were looking at on my share earlier was a set because typescript assumed it was string or number array, not like a tuple with string comma number. So like typescript's inference is kind of vague and not very precise intentionally. Does that click nicely? It will, it will This is one thing that I like, I wish it did, but you know, the fact that I got like the first half of the chapter pretty well is something I didn't think would happen for a while. What up, Graham? Graham. And I feel like that goes into explicit as well
This is one thing that I like, I wish it did, but you know, the fact that I got like the first half of the chapter pretty well is something I didn't think would happen for a while. What up, Graham? Graham. And I feel like that goes into explicit as well Yeah, so you can, what we did, what I showed and what you are now seeing is yeah, you can give an explicit tuple type. You can tell typescript, I know you think this is the more general array, but no, it's specifically the tuple with whatever's inside. Telling it to be more smart
Yeah, so you can, what we did, what I showed and what you are now seeing is yeah, you can give an explicit tuple type. You can tell typescript, I know you think this is the more general array, but no, it's specifically the tuple with whatever's inside. Telling it to be more smart Similar to how sometimes you have to tell typescript, don't give me the general primitive string, let's say, give me the actual literal like, whoa, hello or whatever it is. Okay. And then const asserted tuples. I still don't know. It's such a weird word
Similar to how sometimes you have to tell typescript, don't give me the general primitive string, let's say, give me the actual literal like, whoa, hello or whatever it is. Okay. And then const asserted tuples. I still don't know. It's such a weird word I don't know why tuples is weird, so weird to me. Language apparently, it's just weird to me and I'm excited to look up another language. Graham and Ryan, anybody's still hanging out with us
I don't know why tuples is weird, so weird to me. Language apparently, it's just weird to me and I'm excited to look up another language. Graham and Ryan, anybody's still hanging out with us Would you say tuple or tuple or something else? I'm looking forward to people saying to you PLE is the pronunciation in the chat just to mess with us. Yeah, yes, yes, yes. I've been answered GIF. Tuple. Tuple. Tuple. Yeah. We've got a tuple. Tuple tuple. The more like fancy sounding. Tuple
Would you say tuple or tuple or something else? I'm looking forward to people saying to you PLE is the pronunciation in the chat just to mess with us. Yeah, yes, yes, yes. I've been answered GIF. Tuple. Tuple. Tuple. Yeah. We've got a tuple. Tuple tuple. The more like fancy sounding. Tuple Tuple. Okay, so. Type in noun. Tuple, tuple. Oh, I like Ryan's. Tuple. Tuple. Tuple, that's like a slight variation. A twist. Can be a pain for the same reasons, typing out any explicit type annotations. It's extra syntax
Tuple. Okay, so. Type in noun. Tuple, tuple. Oh, I like Ryan's. Tuple. Tuple. Tuple, that's like a slight variation. A twist. Can be a pain for the same reasons, typing out any explicit type annotations. It's extra syntax It's extra syntax. By the way, this chapter is one of the ones that really solidified my opinion that given enough time, the optimal strategy for learning TypeScript for many, even most people is to learn JavaScript first
It's extra syntax. By the way, this chapter is one of the ones that really solidified my opinion that given enough time, the optimal strategy for learning TypeScript for many, even most people is to learn JavaScript first Now, obviously, if you don't have the time or if you just want to dive in, fine. But like this chapter is a lot easier in my experience for people who already have like a really good solid like JavaScript's spreads and arrests understanding
Now, obviously, if you don't have the time or if you just want to dive in, fine. But like this chapter is a lot easier in my experience for people who already have like a really good solid like JavaScript's spreads and arrests understanding So that I think is why all these new terms are finally gone all of a sudden. I mean, that's very nice. I, you do have like going through it. More homework to do
So that I think is why all these new terms are finally gone all of a sudden. I mean, that's very nice. I, you do have like going through it. More homework to do And it's definitely something that as I've been working on different projects that it's definitely without realizing it, it's starting to make sense
And it's definitely something that as I've been working on different projects that it's definitely without realizing it, it's starting to make sense So it's something that I'm really enjoying because instead of actually going and doing like, you know, a boot camp and learning in order, I'm just randomly going off and being like, yeah, I'm just going to try to build this app because that looks cool. Cool. Yeah. And I'm going the harder route
So it's something that I'm really enjoying because instead of actually going and doing like, you know, a boot camp and learning in order, I'm just randomly going off and being like, yeah, I'm just going to try to build this app because that looks cool. Cool. Yeah. And I'm going the harder route I know this, I know this. It's, I wouldn't suggest it for anybody, but it does make it a lot more fun. This is definitely more fun. I think a lot of people get hung up on trying to do stuff the right way
I know this, I know this. It's, I wouldn't suggest it for anybody, but it does make it a lot more fun. This is definitely more fun. I think a lot of people get hung up on trying to do stuff the right way What's the perfect way to learn whatever open source, get types of whatever, just going in, having a hard time and learning stuff. That's like a totally valid, even great way to learn the stuff
What's the perfect way to learn whatever open source, get types of whatever, just going in, having a hard time and learning stuff. That's like a totally valid, even great way to learn the stuff I break a lot of shit and I will have to give a huge shout out to Ramon and Jacob and Anthony and Roy and all these amazing humans because I literally go, hey, what am I trying to Google? Like, I don't want the answer. I just want to know what to Google
I break a lot of shit and I will have to give a huge shout out to Ramon and Jacob and Anthony and Roy and all these amazing humans because I literally go, hey, what am I trying to Google? Like, I don't want the answer. I just want to know what to Google Please and thank you, which also, Jacob has been really great about telling me that I was like on the right track for something, but I like miss something minor. So I just kept going. It's like I missed my turn and I'm like, oh, I'll just keep going. It'll be fun
Please and thank you, which also, Jacob has been really great about telling me that I was like on the right track for something, but I like miss something minor. So I just kept going. It's like I missed my turn and I'm like, oh, I'll just keep going. It'll be fun It'll be fun. Like in the bad part of town, all of a sudden, like this is not what I wanted to be. Yeah. Yeah. And this is making an sense to me. It's just doing it as a cons, so that way it already knows it. Hey, yay. Hey. And I always love these
It'll be fun. Like in the bad part of town, all of a sudden, like this is not what I wanted to be. Yeah. Yeah. And this is making an sense to me. It's just doing it as a cons, so that way it already knows it. Hey, yay. Hey. And I always love these They're the best part in every, every single chapter for anybody that's curious. This is the best part. What's the pirate, pirate's favorite data structure? All right. Yes. Honor, I'm gonna, we're gonna have to beat this out later today because that is a great one. But it's okay
They're the best part in every, every single chapter for anybody that's curious. This is the best part. What's the pirate, pirate's favorite data structure? All right. Yes. Honor, I'm gonna, we're gonna have to beat this out later today because that is a great one. But it's okay But it's okay. We talked about declaring array types, got it. Using parentheses to declare arrays of function or union types. That one made sense because if we put the parentheses in different areas, it means different things
But it's okay. We talked about declaring array types, got it. Using parentheses to declare arrays of function or union types. That one made sense because if we put the parentheses in different areas, it means different things How types of understand array elements as the type of array? This is where I got mixed up from members and elements. And, but it makes more sense in elements, working with spreads and rests. Now understanding that more, tuples are going to take me a while, but it makes enough sense
How types of understand array elements as the type of array? This is where I got mixed up from members and elements. And, but it makes more sense in elements, working with spreads and rests. Now understanding that more, tuples are going to take me a while, but it makes enough sense And type annotations or assertions to create tuples. It makes more sense than the tuples themselves, but still need to learn tuples. All right. What do you think we should, if is there anything that you think we should have spent more time on in this chapter? I think we're fine
And type annotations or assertions to create tuples. It makes more sense than the tuples themselves, but still need to learn tuples. All right. What do you think we should, if is there anything that you think we should have spent more time on in this chapter? I think we're fine Arrays and types, you have to really are a reflection of how they work in JavaScript. Like this is, I like what we went over. This was fun. This was good. Cool. Cool. Well, yay. That means we did it
Arrays and types, you have to really are a reflection of how they work in JavaScript. Like this is, I like what we went over. This was fun. This was good. Cool. Cool. Well, yay. That means we did it Anybody in the audience have any questions? Because we'll go into them, because we have a little extra time. But, and then also, let me grab all your information. So that way we can share it. Yay. Yay. And everyone go follow. Gosh. Almost set array. I just want to leave you know that. Follow array
Anybody in the audience have any questions? Because we'll go into them, because we have a little extra time. But, and then also, let me grab all your information. So that way we can share it. Yay. Yay. And everyone go follow. Gosh. Almost set array. I just want to leave you know that. Follow array Follow array. I don't want to. I don't want to. What? What's your. Try, try one question. We'll see if we can answer the one question. We'll try one. But yes, Josh normally is here every other Friday, but I moved Fridays and I am working on doing things more consistently. We're working on it
Follow array. I don't want to. I don't want to. What? What's your. Try, try one question. We'll see if we can answer the one question. We'll try one. But yes, Josh normally is here every other Friday, but I moved Fridays and I am working on doing things more consistently. We're working on it We're by me saying myself multiple times of where. It's okay. I will say like something as a random thing if Graham is writing out any questions. I will just randomly shout this out to everybody. I am looking for. When shouldn't you use. When shouldn't you use a tuple then
We're by me saying myself multiple times of where. It's okay. I will say like something as a random thing if Graham is writing out any questions. I will just randomly shout this out to everybody. I am looking for. When shouldn't you use. When shouldn't you use a tuple then But you wouldn't necessarily use the tuple if you need more than one thing and not to define it as closely as you would array because an array is more. More options than a tuple is. A tuple is more precise. Did I get it? Exactly. Yeah. Awesome. See, this is what I mean
But you wouldn't necessarily use the tuple if you need more than one thing and not to define it as closely as you would array because an array is more. More options than a tuple is. A tuple is more precise. Did I get it? Exactly. Yeah. Awesome. See, this is what I mean Like you might like no one gets all the like little trivia immediately like we're discussing the points in our school. But for you, I think you nailed like absolutely got the core conscious
Like you might like no one gets all the like little trivia immediately like we're discussing the points in our school. But for you, I think you nailed like absolutely got the core conscious Like yeah, tuple is a fixed size array or at least like a more specific array normally fixed size and then a raise or like yeah, whatever it's a list of things. Sometimes you don't want it to be more specific. And Keona is good. Keona is asleep right next to me on the couch. Chair
Like yeah, tuple is a fixed size array or at least like a more specific array normally fixed size and then a raise or like yeah, whatever it's a list of things. Sometimes you don't want it to be more specific. And Keona is good. Keona is asleep right next to me on the couch. Chair Chair. You shape the question. Yes. There he is. Great. Let me just see if I can. Oh, I've disturbed him. You see half of him, I think that's his butt. There you go. I can show you guys what I'm doing after this because my office has turned into scary
Chair. You shape the question. Yes. There he is. Great. Let me just see if I can. Oh, I've disturbed him. You see half of him, I think that's his butt. There you go. I can show you guys what I'm doing after this because my office has turned into scary But also Keona on the way and then you guys can see scary. I don't know. Maybe. I'm not sure he was fun. Dago, Dago, Dago. And scary by these are all like clothes I'm going to keep. But I need to put them in the vacuum sealed bags. So they're just taking up my entire office
But also Keona on the way and then you guys can see scary. I don't know. Maybe. I'm not sure he was fun. Dago, Dago, Dago. And scary by these are all like clothes I'm going to keep. But I need to put them in the vacuum sealed bags. So they're just taking up my entire office But hey, like at least my camera doesn't show that really. That is that is the good thing. Can't answer the question in the chat. I passed a gen. Is this a valid couple? I'm going back on the book really quick. Just because they can do more than one. It can do as many. Yeah, because well, yes
But hey, like at least my camera doesn't show that really. That is that is the good thing. Can't answer the question in the chat. I passed a gen. Is this a valid couple? I'm going back on the book really quick. Just because they can do more than one. It can do as many. Yeah, because well, yes But you would have to have the assignability before it with the const. No. I'm answering myself before. Well, yes. Yes. I think so. We're going with I think so with the const. Sorry for putting you on the spot. But yes, you're absolutely completely right. Both of you. That is a very valid tuple
But you would have to have the assignability before it with the const. No. I'm answering myself before. Well, yes. Yes. I think so. We're going with I think so with the const. Sorry for putting you on the spot. But yes, you're absolutely completely right. Both of you. That is a very valid tuple It's a tuple just to recap. So we're saying that that variable names tuple is something that is an array where we know the first elements of number, the second elements of string, the third element is a Boolean. And then yep, assigning 25 yo false to it would in fact be fine
It's a tuple just to recap. So we're saying that that variable names tuple is something that is an array where we know the first elements of number, the second elements of string, the third element is a Boolean. And then yep, assigning 25 yo false to it would in fact be fine TypeScript would be very happy with you. Yes. Yes. Yay. Graham, I'm glad we were at the same spot. I think so. I think so. And this is it's definitely something that I would say. I think these I always get really nervous about these because like as you said earlier, Josh about what Socrates said
TypeScript would be very happy with you. Yes. Yes. Yay. Graham, I'm glad we were at the same spot. I think so. I think so. And this is it's definitely something that I would say. I think these I always get really nervous about these because like as you said earlier, Josh about what Socrates said Let's see if I can, I can't. Is it going to let me scroll up enough? Let's see. The more I know the more I realize I know nothing, that is how I feel
Let's see if I can, I can't. Is it going to let me scroll up enough? Let's see. The more I know the more I realize I know nothing, that is how I feel Is almost really finding me that you quoted that directly like without even like you almost said the exact like the, what did I forget what you said was very similar to this. Yeah. Yes. Yes. And I am getting there. I am getting there
Is almost really finding me that you quoted that directly like without even like you almost said the exact like the, what did I forget what you said was very similar to this. Yeah. Yes. Yes. And I am getting there. I am getting there I am getting there. And thank you, thank you, thank you everyone for coming to hang out, make sure you like. And if you fill up to it, subscribe. I need to come up with like cool ideas for subscriptions and stuff. What do you do on your channel, Josh? Nothing
I am getting there. And thank you, thank you, thank you everyone for coming to hang out, make sure you like. And if you fill up to it, subscribe. I need to come up with like cool ideas for subscriptions and stuff. What do you do on your channel, Josh? Nothing People keep telling me I could do more with Twitch and I should and I don't have anything. I like bear, I once have had a like a countdown. And that's it. I'm there. There. Someone tell me what to do. Yeah. Yeah, I could up my Twitch game
People keep telling me I could do more with Twitch and I should and I don't have anything. I like bear, I once have had a like a countdown. And that's it. I'm there. There. Someone tell me what to do. Yeah. Yeah, I could up my Twitch game I, but I also enjoyed the way it is because I'm like, it's just so nice. Yes, yes, there are so many options
I, but I also enjoyed the way it is because I'm like, it's just so nice. Yes, yes, there are so many options I will say something cool that Anthony is working on if he's still working on it is looking into something for the whisper AI, which I'm really excited about because it, I guess it transcribes videos and audio for free. But you have to create an app for it. And I'm like, this could be cool
I will say something cool that Anthony is working on if he's still working on it is looking into something for the whisper AI, which I'm really excited about because it, I guess it transcribes videos and audio for free. But you have to create an app for it. And I'm like, this could be cool This could be really cool. It could be a step of many of auto-median the system. And tomorrow I will be streaming about Postgres. And setting up my website more. Maybe. I'm going to be doing database design. So I don't know if I'm going to be setting it up yet, but I'll be doing something
This could be really cool. It could be a step of many of auto-median the system. And tomorrow I will be streaming about Postgres. And setting up my website more. Maybe. I'm going to be doing database design. So I don't know if I'm going to be setting it up yet, but I'll be doing something And Josh, anything you want every, when's your next stream? Do you know? Oh, yeah. Thank you for asking. My next stream, I have my normal times this week. So that's 2.30 Eastern on Tuesday. And then tentatively 10.30 AM on Thursday. But I might push it back to 11. We'll see. Noise. Noise
And Josh, anything you want every, when's your next stream? Do you know? Oh, yeah. Thank you for asking. My next stream, I have my normal times this week. So that's 2.30 Eastern on Tuesday. And then tentatively 10.30 AM on Thursday. But I might push it back to 11. We'll see. Noise. Noise Noise. Noise. Well, amazing. And let's see where we're going to go. Raid today, y'all. Raid, raid, raid, raid, raid. Ooh. Coding garden or crisp riffing. I really like Chris. I mean, I like both of them, but let's go with Chris. Let's go with Chris. All right, y'all. You're going raiding
Noise. Noise. Well, amazing. And let's see where we're going to go. Raid today, y'all. Raid, raid, raid, raid, raid. Ooh. Coding garden or crisp riffing. I really like Chris. I mean, I like both of them, but let's go with Chris. Let's go with Chris. All right, y'all. You're going raiding Raiding, raiding. I don't know why it has a countdown. It always makes it really weird. Why does it have a countdown? I get excited about raiding, and then it takes some seconds. OK, bye. And you're stuck. Bye.
Raiding, raiding. I don't know why it has a countdown. It always makes it really weird. Why does it have a countdown? I get excited about raiding, and then it takes some seconds. OK, bye. And you're stuck. Bye.